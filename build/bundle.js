/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(35);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _slate = __webpack_require__(173);

	var _cantonese = __webpack_require__(402);

	var _cantoneseDictionary = __webpack_require__(403);

	var cantonese_dictionary = _interopRequireWildcard(_cantoneseDictionary);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var cantoDict = new _cantonese.CantoDict(cantonese_dictionary.CANTO_DICT);

	var initialState = _slate.Raw.deserialize({
	  nodes: [{
	    kind: 'block',
	    type: 'paragraph',
	    nodes: [{
	      kind: 'text',
	      text: '一个字 A line of text in a paragraph.'
	    }]
	  }]
	}, { terse: true });

	/**
	 * Define a decorator for blocks.
	 *
	 * @param {Text} text
	 * @param {Block} block
	 */

	function paragraphBlockDecorator(text, block) {
	  var characters = text.characters.asMutable();
	  var string = text.text;
	  for (var i = 0; i < string.length; i++) {
	    var char = characters.get(i);
	    var _char = char;
	    var marks = _char.marks;

	    var in_str = string.slice(i - 1, i + 3) || "";
	    // console.log(string[i], in_str)
	    var notedChar = cantoDict.getNotedChar(string[i], in_str);
	    // console.log(notedChar)
	    if (notedChar) {
	      var type = 'tone_' + notedChar.jyutping.tone;
	      marks = marks.add(_slate.Mark.create({ type: type }));
	      char = char.merge({ marks: marks });
	      characters = characters.set(i, char);
	    }
	  }
	  return characters.asImmutable();
	}

	var App = function (_React$Component) {
	  _inherits(App, _React$Component);

	  function App() {
	    var _Object$getPrototypeO;

	    var _temp, _this, _ret;

	    _classCallCheck(this, App);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(App)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	      state: initialState,
	      schema: {
	        nodes: {
	          paragraph: {
	            render: function render(props) {
	              return _react2.default.createElement(
	                'div',
	                { className: 'board' },
	                props.children
	              );
	            },
	            decorate: paragraphBlockDecorator
	          }
	        },
	        marks: {
	          tone_1: function tone_1(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-1' },
	              props.children
	            );
	          },
	          tone_2: function tone_2(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-2' },
	              props.children
	            );
	          },
	          tone_3: function tone_3(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-3' },
	              props.children
	            );
	          },
	          tone_4: function tone_4(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-4' },
	              props.children
	            );
	          },
	          tone_5: function tone_5(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-5' },
	              props.children
	            );
	          },
	          tone_6: function tone_6(props) {
	            return _react2.default.createElement(
	              'span',
	              { className: 'tone-6' },
	              props.children
	            );
	          }
	        }
	      }
	    }, _this.onChange = function (state) {
	      _this.setState({ state: state });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(App, [{
	    key: 'onKeyDown',
	    value: function onKeyDown(event, data, state) {
	      if (!event.metaKey) return;

	      switch (event.which) {
	        case 66:
	          {
	            return state.transform().toggleMark('tone_1').apply();
	          }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return _react2.default.createElement(_slate.Editor, {
	        schema: this.state.schema,
	        state: this.state.state,
	        onChange: this.onChange,
	        onKeyDown: function onKeyDown(e, data, state) {
	          return _this2.onKeyDown(e, data, state);
	        }
	      });
	    }
	  }]);

	  return App;
	}(_react2.default.Component);

	;

	_reactDom2.default.render(_react2.default.createElement(App, null), document.getElementById('test1'));

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactChildren = __webpack_require__(6);
	var ReactComponent = __webpack_require__(18);
	var ReactPureComponent = __webpack_require__(21);
	var ReactClass = __webpack_require__(22);
	var ReactDOMFactories = __webpack_require__(27);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypes = __webpack_require__(32);
	var ReactVersion = __webpack_require__(33);

	var onlyChild = __webpack_require__(34);
	var warning = __webpack_require__(12);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 4 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	    try {
	        cachedSetTimeout = setTimeout;
	    } catch (e) {
	        cachedSetTimeout = function () {
	            throw new Error('setTimeout is not defined');
	        }
	    }
	    try {
	        cachedClearTimeout = clearTimeout;
	    } catch (e) {
	        cachedClearTimeout = function () {
	            throw new Error('clearTimeout is not defined');
	        }
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(7);
	var ReactElement = __webpack_require__(10);

	var emptyFunction = __webpack_require__(13);
	var traverseAllChildren = __webpack_require__(15);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 8 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactCurrentOwner = __webpack_require__(11);

	var warning = __webpack_require__(12);
	var canDefineProperty = __webpack_require__(14);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 11 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(13);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);

	var getIteratorFn = __webpack_require__(16);
	var invariant = __webpack_require__(9);
	var KeyEscapeUtils = __webpack_require__(17);
	var warning = __webpack_require__(12);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactNoopUpdateQueue = __webpack_require__(19);

	var canDefineProperty = __webpack_require__(14);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(12);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactComponent = __webpack_require__(18);
	var ReactNoopUpdateQueue = __webpack_require__(19);

	var emptyObject = __webpack_require__(20);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactComponent = __webpack_require__(18);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(23);
	var ReactPropTypeLocationNames = __webpack_require__(25);
	var ReactNoopUpdateQueue = __webpack_require__(19);

	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var keyMirror = __webpack_require__(24);
	var keyOf = __webpack_require__(26);
	var warning = __webpack_require__(12);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(24);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(9);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 26 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactComponentTreeHook = __webpack_require__(29);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(23);

	var checkReactTypeSpec = __webpack_require__(30);

	var canDefineProperty = __webpack_require__(14);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(12);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var itemMap;
	var rootIDSet;

	var itemByKey;
	var rootByKey;

	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}

	var unmountedIDs = [];

	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}

	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}

	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}

	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };

	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}

	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}

	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}

	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}

	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}

	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },


	  getRegisteredIDs: getRegisteredIDs,

	  getRootIDs: getRootIDs
	};

	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactPropTypeLocationNames = __webpack_require__(25);
	var ReactPropTypesSecret = __webpack_require__(31);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(29);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 31 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocationNames = __webpack_require__(25);
	var ReactPropTypesSecret = __webpack_require__(31);

	var emptyFunction = __webpack_require__(13);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(12);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 33 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.1';

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(9);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(36);


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDefaultInjection = __webpack_require__(40);
	var ReactMount = __webpack_require__(163);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdates = __webpack_require__(57);
	var ReactVersion = __webpack_require__(33);

	var findDOMNode = __webpack_require__(168);
	var getHostComponentFromComposite = __webpack_require__(169);
	var renderSubtreeIntoContainer = __webpack_require__(170);
	var warning = __webpack_require__(12);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(50);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(63);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(171);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(172);

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}

	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMProperty = __webpack_require__(38);
	var ReactDOMComponentFlags = __webpack_require__(39);

	var invariant = __webpack_require__(9);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(41);
	var ChangeEventPlugin = __webpack_require__(56);
	var DefaultEventPluginOrder = __webpack_require__(74);
	var EnterLeaveEventPlugin = __webpack_require__(75);
	var HTMLDOMPropertyConfig = __webpack_require__(80);
	var ReactComponentBrowserEnvironment = __webpack_require__(81);
	var ReactDOMComponent = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMEmptyComponent = __webpack_require__(134);
	var ReactDOMTreeTraversal = __webpack_require__(135);
	var ReactDOMTextComponent = __webpack_require__(136);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactEventListener = __webpack_require__(138);
	var ReactInjection = __webpack_require__(141);
	var ReactReconcileTransaction = __webpack_require__(142);
	var SVGDOMPropertyConfig = __webpack_require__(150);
	var SelectEventPlugin = __webpack_require__(151);
	var SimpleEventPlugin = __webpack_require__(152);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var FallbackCompositionState = __webpack_require__(51);
	var SyntheticCompositionEvent = __webpack_require__(53);
	var SyntheticInputEvent = __webpack_require__(55);

	var keyOf = __webpack_require__(26);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(24);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(46);

	var accumulateInto = __webpack_require__(48);
	var forEachAccumulated = __webpack_require__(49);
	var warning = __webpack_require__(12);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventPluginRegistry = __webpack_require__(45);
	var EventPluginUtils = __webpack_require__(46);
	var ReactErrorUtils = __webpack_require__(47);

	var accumulateInto = __webpack_require__(48);
	var forEachAccumulated = __webpack_require__(49);
	var invariant = __webpack_require__(9);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventConstants = __webpack_require__(42);
	var ReactErrorUtils = __webpack_require__(47);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 50 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);
	var SyntheticEvent = __webpack_require__(54);

	var getEventTarget = __webpack_require__(71);
	var isEventSupported = __webpack_require__(72);
	var isTextInputElement = __webpack_require__(73);
	var keyOf = __webpack_require__(26);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(7);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactReconciler = __webpack_require__(60);
	var Transaction = __webpack_require__(70);

	var invariant = __webpack_require__(9);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var invariant = __webpack_require__(9);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 59 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(63);

	var warning = __webpack_require__(12);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(62);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(64);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ReactInvalidSetStateWarningHook = __webpack_require__(65);
	var ReactHostOperationHistoryHook = __webpack_require__(66);
	var ReactComponentTreeHook = __webpack_require__(29);
	var ReactChildrenMutationWarningHook = __webpack_require__(67);
	var ExecutionEnvironment = __webpack_require__(50);

	var performanceNow = __webpack_require__(68);
	var warning = __webpack_require__(12);

	var hooks = [];
	var didHookThrowForEvent = {};

	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}

	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}

	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }

	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }

	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onError: function (debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	ReactDebugTool.addHook(ReactChildrenMutationWarningHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningHook
	 */

	'use strict';

	var warning = __webpack_require__(12);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 66 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryHook
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningHook
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(29);

	var warning = __webpack_require__(12);

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  if (!Array.isArray(element._shadowChildren) || isMutated) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Component\'s children should not be mutated.%s', ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}

	var ReactChildrenMutationWarningHook = {
	  onMountComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  },
	  onUpdateComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  }
	};

	module.exports = ReactChildrenMutationWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(69);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 71 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 73 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(26);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticMouseEvent = __webpack_require__(76);

	var keyOf = __webpack_require__(26);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);
	var ViewportMetrics = __webpack_require__(78);

	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	var getEventTarget = __webpack_require__(71);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(82);
	var ReactDOMIDOperations = __webpack_require__(94);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(83);
	var Danger = __webpack_require__(89);
	var ReactMultiChildUpdateTypes = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(63);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);
	var setInnerHTML = __webpack_require__(85);
	var setTextContent = __webpack_require__(87);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(84);
	var setInnerHTML = __webpack_require__(85);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);
	var setTextContent = __webpack_require__(87);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);
	var DOMNamespaces = __webpack_require__(84);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);
	var escapeTextContentForBrowser = __webpack_require__(88);
	var setInnerHTML = __webpack_require__(85);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 88 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMLazyTree = __webpack_require__(83);
	var ExecutionEnvironment = __webpack_require__(50);

	var createNodesFromMarkup = __webpack_require__(90);
	var emptyFunction = __webpack_require__(13);
	var invariant = __webpack_require__(9);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(50);

	var createArrayFromMixed = __webpack_require__(91);
	var getMarkupWrap = __webpack_require__(92);
	var invariant = __webpack_require__(9);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(9);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(50);

	var invariant = __webpack_require__(9);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(24);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(37);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var AutoFocusUtils = __webpack_require__(96);
	var CSSPropertyOperations = __webpack_require__(98);
	var DOMLazyTree = __webpack_require__(83);
	var DOMNamespaces = __webpack_require__(84);
	var DOMProperty = __webpack_require__(38);
	var DOMPropertyOperations = __webpack_require__(106);
	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactDOMButton = __webpack_require__(111);
	var ReactDOMComponentFlags = __webpack_require__(39);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMInput = __webpack_require__(113);
	var ReactDOMOption = __webpack_require__(115);
	var ReactDOMSelect = __webpack_require__(116);
	var ReactDOMTextarea = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMultiChild = __webpack_require__(118);
	var ReactServerRenderingTransaction = __webpack_require__(130);

	var emptyFunction = __webpack_require__(13);
	var escapeTextContentForBrowser = __webpack_require__(88);
	var invariant = __webpack_require__(9);
	var isEventSupported = __webpack_require__(72);
	var keyOf = __webpack_require__(26);
	var shallowEqual = __webpack_require__(125);
	var validateDOMNesting = __webpack_require__(133);
	var warning = __webpack_require__(12);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(37);

	var focusNode = __webpack_require__(97);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(99);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactInstrumentation = __webpack_require__(63);

	var camelizeStyleName = __webpack_require__(100);
	var dangerousStyleValue = __webpack_require__(102);
	var hyphenateStyleName = __webpack_require__(103);
	var memoizeStringOnly = __webpack_require__(105);
	var warning = __webpack_require__(12);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(101);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 101 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(99);
	var warning = __webpack_require__(12);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(104);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 104 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 105 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(63);

	var quoteAttributeValueForBrowser = __webpack_require__(107);
	var warning = __webpack_require__(12);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(88);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventConstants = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactEventEmitterMixin = __webpack_require__(109);
	var ViewportMetrics = __webpack_require__(78);

	var getVendorPrefixedEventName = __webpack_require__(110);
	var isEventSupported = __webpack_require__(72);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(44);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(112);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 112 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(112);
	var DOMPropertyOperations = __webpack_require__(106);
	var LinkedValueUtils = __webpack_require__(114);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactPropTypes = __webpack_require__(32);
	var ReactPropTypeLocations = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(31);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactChildren = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMSelect = __webpack_require__(116);

	var warning = __webpack_require__(12);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(112);
	var LinkedValueUtils = __webpack_require__(114);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(112);
	var LinkedValueUtils = __webpack_require__(114);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactComponentEnvironment = __webpack_require__(119);
	var ReactInstanceMap = __webpack_require__(120);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMultiChildUpdateTypes = __webpack_require__(93);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactReconciler = __webpack_require__(60);
	var ReactChildReconciler = __webpack_require__(121);

	var emptyFunction = __webpack_require__(13);
	var flattenChildren = __webpack_require__(129);
	var invariant = __webpack_require__(9);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 120 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(60);

	var instantiateReactComponent = __webpack_require__(122);
	var KeyEscapeUtils = __webpack_require__(17);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(29);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactCompositeComponent = __webpack_require__(123);
	var ReactEmptyComponent = __webpack_require__(127);
	var ReactHostComponent = __webpack_require__(128);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactComponentEnvironment = __webpack_require__(119);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(47);
	var ReactInstanceMap = __webpack_require__(120);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactNodeTypes = __webpack_require__(124);
	var ReactPropTypeLocations = __webpack_require__(23);
	var ReactReconciler = __webpack_require__(60);

	var checkReactTypeSpec = __webpack_require__(30);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var shallowEqual = __webpack_require__(125);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var warning = __webpack_require__(12);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var selfDebugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      selfDebugID = this._debugID;
	    }
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), selfDebugID);

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = this._debugID;
	      }
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), selfDebugID);

	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(9);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 126 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var invariant = __webpack_require__(9);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(17);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(29);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);
	var Transaction = __webpack_require__(70);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactServerUpdateQueue = __webpack_require__(131);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(132);
	var Transaction = __webpack_require__(70);
	var warning = __webpack_require__(12);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactInstanceMap = __webpack_require__(120);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DOMLazyTree = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(37);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DOMChildrenOperations = __webpack_require__(82);
	var DOMLazyTree = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(37);

	var escapeTextContentForBrowser = __webpack_require__(88);
	var invariant = __webpack_require__(9);
	var validateDOMNesting = __webpack_require__(133);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactUpdates = __webpack_require__(57);
	var Transaction = __webpack_require__(70);

	var emptyFunction = __webpack_require__(13);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventListener = __webpack_require__(139);
	var ExecutionEnvironment = __webpack_require__(50);
	var PooledClass = __webpack_require__(7);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var getEventTarget = __webpack_require__(71);
	var getUnboundedScrollPosition = __webpack_require__(140);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(13);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 140 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(46);
	var ReactComponentEnvironment = __webpack_require__(119);
	var ReactClass = __webpack_require__(22);
	var ReactEmptyComponent = __webpack_require__(127);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactHostComponent = __webpack_require__(128);
	var ReactUpdates = __webpack_require__(57);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(7);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactInputSelection = __webpack_require__(143);
	var ReactInstrumentation = __webpack_require__(63);
	var Transaction = __webpack_require__(70);
	var ReactUpdateQueue = __webpack_require__(132);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(144);

	var containsNode = __webpack_require__(146);
	var focusNode = __webpack_require__(97);
	var getActiveElement = __webpack_require__(149);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var getNodeForCharacterOffset = __webpack_require__(145);
	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 145 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(147);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(148);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 148 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 149 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInputSelection = __webpack_require__(143);
	var SyntheticEvent = __webpack_require__(54);

	var getActiveElement = __webpack_require__(149);
	var isTextInputElement = __webpack_require__(73);
	var keyOf = __webpack_require__(26);
	var shallowEqual = __webpack_require__(125);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventConstants = __webpack_require__(42);
	var EventListener = __webpack_require__(139);
	var EventPropagators = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticAnimationEvent = __webpack_require__(153);
	var SyntheticClipboardEvent = __webpack_require__(154);
	var SyntheticEvent = __webpack_require__(54);
	var SyntheticFocusEvent = __webpack_require__(155);
	var SyntheticKeyboardEvent = __webpack_require__(156);
	var SyntheticMouseEvent = __webpack_require__(76);
	var SyntheticDragEvent = __webpack_require__(159);
	var SyntheticTouchEvent = __webpack_require__(160);
	var SyntheticTransitionEvent = __webpack_require__(161);
	var SyntheticUIEvent = __webpack_require__(77);
	var SyntheticWheelEvent = __webpack_require__(162);

	var emptyFunction = __webpack_require__(13);
	var getEventCharCode = __webpack_require__(157);
	var invariant = __webpack_require__(9);
	var keyOf = __webpack_require__(26);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	var getEventCharCode = __webpack_require__(157);
	var getEventKey = __webpack_require__(158);
	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(157);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(76);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(76);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMLazyTree = __webpack_require__(83);
	var DOMProperty = __webpack_require__(38);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDOMFeatureFlags = __webpack_require__(165);
	var ReactElement = __webpack_require__(10);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactInstanceMap = __webpack_require__(120);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdateQueue = __webpack_require__(132);
	var ReactUpdates = __webpack_require__(57);

	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(122);
	var invariant = __webpack_require__(9);
	var setInnerHTML = __webpack_require__(85);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var warning = __webpack_require__(12);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(133);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 165 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(167);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstanceMap = __webpack_require__(120);

	var getHostComponentFromComposite = __webpack_require__(169);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(124);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(163);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyHook
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactComponentTreeHook = __webpack_require__(29);

	var warning = __webpack_require__(12);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropHook
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(29);

	var warning = __webpack_require__(12);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.findDOMNode = exports.Text = exports.State = exports.Selection = exports.Schema = exports.Raw = exports.Plain = exports.Placeholder = exports.Mark = exports.Inline = exports.Html = exports.Editor = exports.Document = exports.Data = exports.Character = exports.Block = undefined;

	var _editor = __webpack_require__(174);

	var _editor2 = _interopRequireDefault(_editor);

	var _placeholder = __webpack_require__(297);

	var _placeholder2 = _interopRequireDefault(_placeholder);

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _schema = __webpack_require__(301);

	var _schema2 = _interopRequireDefault(_schema);

	var _selection = __webpack_require__(187);

	var _selection2 = _interopRequireDefault(_selection);

	var _state = __webpack_require__(222);

	var _state2 = _interopRequireDefault(_state);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _html = __webpack_require__(303);

	var _html2 = _interopRequireDefault(_html);

	var _plain = __webpack_require__(400);

	var _plain2 = _interopRequireDefault(_plain);

	var _raw = __webpack_require__(177);

	var _raw2 = _interopRequireDefault(_raw);

	var _findDomNode = __webpack_require__(401);

	var _findDomNode2 = _interopRequireDefault(_findDomNode);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Export.
	 */

	/**
	 * Serializers.
	 */

	/**
	 * Models.
	 */

	/**
	 * Components.
	 */

	exports.Block = _block2.default;
	exports.Character = _character2.default;
	exports.Data = _data2.default;
	exports.Document = _document2.default;
	exports.Editor = _editor2.default;
	exports.Html = _html2.default;
	exports.Inline = _inline2.default;
	exports.Mark = _mark2.default;
	exports.Placeholder = _placeholder2.default;
	exports.Plain = _plain2.default;
	exports.Raw = _raw2.default;
	exports.Schema = _schema2.default;
	exports.Selection = _selection2.default;
	exports.State = _state2.default;
	exports.Text = _text2.default;
	exports.findDOMNode = _findDomNode2.default;

	/**
	 * Utils.
	 */

	exports.default = {
	  Block: _block2.default,
	  Character: _character2.default,
	  Data: _data2.default,
	  Document: _document2.default,
	  Editor: _editor2.default,
	  Html: _html2.default,
	  Inline: _inline2.default,
	  Mark: _mark2.default,
	  Placeholder: _placeholder2.default,
	  Plain: _plain2.default,
	  Raw: _raw2.default,
	  Schema: _schema2.default,
	  Selection: _selection2.default,
	  State: _state2.default,
	  Text: _text2.default,
	  findDOMNode: _findDomNode2.default
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _content = __webpack_require__(175);

	var _content2 = _interopRequireDefault(_content);

	var _core = __webpack_require__(296);

	var _core2 = _interopRequireDefault(_core);

	var _debug = __webpack_require__(277);

	var _debug2 = _interopRequireDefault(_debug);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _schema3 = __webpack_require__(301);

	var _schema4 = _interopRequireDefault(_schema3);

	var _state = __webpack_require__(222);

	var _state2 = _interopRequireDefault(_state);

	var _isReactComponent = __webpack_require__(302);

	var _isReactComponent2 = _interopRequireDefault(_isReactComponent);

	var _typeOf = __webpack_require__(220);

	var _typeOf2 = _interopRequireDefault(_typeOf);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Debug.
	 */

	var debug = (0, _debug2.default)('slate:editor');

	/**
	 * Noop.
	 *
	 * @type {Function}
	 */

	function noop() {}

	/**
	 * Event handlers to mix in to the editor.
	 *
	 * @type {Array}
	 */

	var EVENT_HANDLERS = ['onBeforeInput', 'onBlur', 'onCopy', 'onCut', 'onDrop', 'onKeyDown', 'onPaste', 'onSelect'];

	/**
	 * Editor.
	 *
	 * @type {Component}
	 */

	var Editor = function (_React$Component) {
	  _inherits(Editor, _React$Component);

	  /**
	   * When created, compute the plugins from `props`.
	   *
	   * @param {Object} props
	   */

	  /**
	   * Properties.
	   */

	  function Editor(props) {
	    _classCallCheck(this, Editor);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Editor).call(this, props));

	    _initialiseProps.call(_this);

	    _this.tmp = {};
	    _this.state = {};
	    _this.state.plugins = _this.resolvePlugins(props);
	    _this.state.schema = _this.resolveSchema(_this.state.plugins);
	    _this.state.state = _this.onBeforeChange(props.state);

	    // Mix in the event handlers.
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      var _loop = function _loop() {
	        var method = _step.value;

	        _this[method] = function () {
	          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	          }

	          _this.onEvent.apply(_this, [method].concat(args));
	        };
	      };

	      for (var _iterator = EVENT_HANDLERS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        _loop();
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return _this;
	  }

	  /**
	   * When the `props` are updated, recompute the state and plugins.
	   *
	   * @param {Object} props
	   */

	  /**
	   * Default properties.
	   */

	  /**
	   * Programmatically blur the editor.
	   */

	  /**
	   * Programmatically focus the editor.
	   */

	  /**
	   * Get the editor's current `schema`.
	   *
	   * @return {Schema}
	   */

	  /**
	   * Get the editor's current `state`.
	   *
	   * @return {State}
	   */

	  /**
	   * When the editor receives a new 'state'
	   *
	   * @param {State} state
	   * @return {State} newState
	   */

	  /**
	   * When the `state` changes, pass through plugins, then bubble up.
	   *
	   * @param {State} state
	   */

	  /**
	   * When an event by `name` fires, pass it through the plugins, and update the
	   * state if one of them chooses to.
	   *
	   * @param {String} name
	   * @param {Mixed} ...args
	   */

	  /**
	   * Render the editor.
	   *
	   * @return {Element}
	   */

	  /**
	   * Resolve the editor's current plugins from `props` when they change.
	   *
	   * Add a plugin made from the editor's own `props` at the beginning of the
	   * stack. That way, you can add a `onKeyDown` handler to the editor itself,
	   * and it will override all of the existing plugins.
	   *
	   * Also add the "core" functionality plugin that handles the most basic events
	   * for the editor, like delete characters and such.
	   *
	   * @param {Object} props
	   * @return {Array}
	   */

	  /**
	   * Resolve the editor's schema from a set of `plugins`.
	   *
	   * @param {Array} plugins
	   * @return {Schema}
	   */

	  return Editor;
	}(_react2.default.Component);

	/**
	 * Mix in the property types for the event handlers.
	 */

	Editor.propTypes = {
	  className: _react2.default.PropTypes.string,
	  onBeforeChange: _react2.default.PropTypes.func,
	  onChange: _react2.default.PropTypes.func,
	  onDocumentChange: _react2.default.PropTypes.func,
	  onSelectionChange: _react2.default.PropTypes.func,
	  placeholder: _react2.default.PropTypes.any,
	  placeholderClassName: _react2.default.PropTypes.string,
	  placeholderStyle: _react2.default.PropTypes.object,
	  plugins: _react2.default.PropTypes.array,
	  readOnly: _react2.default.PropTypes.bool,
	  schema: _react2.default.PropTypes.object,
	  spellCheck: _react2.default.PropTypes.bool,
	  state: _react2.default.PropTypes.object.isRequired,
	  style: _react2.default.PropTypes.object
	};
	Editor.defaultProps = {
	  onChange: noop,
	  onDocumentChange: noop,
	  onSelectionChange: noop,
	  plugins: [],
	  readOnly: false,
	  schema: {},
	  spellCheck: true
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;

	  this.componentWillReceiveProps = function (props) {
	    if (props.plugins != _this2.props.plugins) {
	      var plugins = _this2.resolvePlugins(props);
	      var schema = _this2.resolveSchema(plugins);
	      _this2.setState({ plugins: plugins, schema: schema });
	    } else if (props.schema != _this2.props.schema) {
	      var _schema = _this2.resolveSchema(_this2.state.plugins);
	      _this2.setState({ schema: _schema });
	    }

	    _this2.setState({
	      state: _this2.onBeforeChange(props.state)
	    });
	  };

	  this.blur = function () {
	    var state = _this2.state.state.transform().blur().apply();

	    _this2.onChange(state);
	  };

	  this.focus = function () {
	    var state = _this2.state.state.transform().focus().apply();

	    _this2.onChange(state);
	  };

	  this.getSchema = function () {
	    return _this2.state.schema;
	  };

	  this.getState = function () {
	    return _this2.state.state;
	  };

	  this.onBeforeChange = function (state) {
	    if (state == _this2.state.state) return state;

	    var _iteratorNormalCompletion3 = true;
	    var _didIteratorError3 = false;
	    var _iteratorError3 = undefined;

	    try {
	      for (var _iterator3 = _this2.state.plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	        var plugin = _step3.value;

	        if (!plugin.onBeforeChange) continue;
	        var newState = plugin.onBeforeChange(state, _this2);
	        if (newState == null) continue;
	        state = newState;
	      }
	    } catch (err) {
	      _didIteratorError3 = true;
	      _iteratorError3 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion3 && _iterator3.return) {
	          _iterator3.return();
	        }
	      } finally {
	        if (_didIteratorError3) {
	          throw _iteratorError3;
	        }
	      }
	    }

	    return state;
	  };

	  this.onChange = function (state) {
	    if (state == _this2.state.state) return;

	    state = _this2.onBeforeChange(state);

	    var _iteratorNormalCompletion4 = true;
	    var _didIteratorError4 = false;
	    var _iteratorError4 = undefined;

	    try {
	      for (var _iterator4 = _this2.state.plugins[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	        var plugin = _step4.value;

	        if (!plugin.onChange) continue;
	        var newState = plugin.onChange(state, _this2);
	        if (newState == null) continue;
	        state = newState;
	      }
	    } catch (err) {
	      _didIteratorError4 = true;
	      _iteratorError4 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion4 && _iterator4.return) {
	          _iterator4.return();
	        }
	      } finally {
	        if (_didIteratorError4) {
	          throw _iteratorError4;
	        }
	      }
	    }

	    _this2.props.onChange(state);

	    if (state.document != _this2.tmp.document) {
	      _this2.props.onDocumentChange(state.document, state);
	      _this2.tmp.document = state.document;
	    }

	    if (state.selection != _this2.tmp.selection) {
	      _this2.props.onSelectionChange(state.selection, state);
	      _this2.tmp.selection = state.selection;
	    }
	  };

	  this.onEvent = function (name) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      args[_key2 - 1] = arguments[_key2];
	    }

	    var _iteratorNormalCompletion5 = true;
	    var _didIteratorError5 = false;
	    var _iteratorError5 = undefined;

	    try {
	      for (var _iterator5 = _this2.state.plugins[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	        var plugin = _step5.value;

	        if (!plugin[name]) continue;
	        var newState = plugin[name].apply(plugin, args.concat([_this2.state.state, _this2]));
	        if (!newState) continue;
	        _this2.onChange(newState);
	        break;
	      }
	    } catch (err) {
	      _didIteratorError5 = true;
	      _iteratorError5 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion5 && _iterator5.return) {
	          _iterator5.return();
	        }
	      } finally {
	        if (_didIteratorError5) {
	          throw _iteratorError5;
	        }
	      }
	    }
	  };

	  this.render = function () {
	    debug('render');

	    var handlers = {};

	    var _iteratorNormalCompletion6 = true;
	    var _didIteratorError6 = false;
	    var _iteratorError6 = undefined;

	    try {
	      for (var _iterator6 = EVENT_HANDLERS[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
	        var property = _step6.value;

	        handlers[property] = _this2[property];
	      }
	    } catch (err) {
	      _didIteratorError6 = true;
	      _iteratorError6 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion6 && _iterator6.return) {
	          _iterator6.return();
	        }
	      } finally {
	        if (_didIteratorError6) {
	          throw _iteratorError6;
	        }
	      }
	    }

	    return _react2.default.createElement(_content2.default, _extends({}, handlers, {
	      className: _this2.props.className,
	      editor: _this2,
	      onChange: _this2.onChange,
	      readOnly: _this2.props.readOnly,
	      schema: _this2.state.schema,
	      spellCheck: _this2.props.spellCheck,
	      state: _this2.state.state,
	      style: _this2.props.style
	    }));
	  };

	  this.resolvePlugins = function (props) {
	    var onChange = props.onChange;
	    var plugins = props.plugins;

	    var editorPlugin = _objectWithoutProperties(props, ['onChange', 'plugins']);

	    var corePlugin = (0, _core2.default)(props);
	    return [editorPlugin].concat(_toConsumableArray(plugins), [corePlugin]);
	  };

	  this.resolveSchema = function (plugins) {
	    var rules = [];

	    var _iteratorNormalCompletion7 = true;
	    var _didIteratorError7 = false;
	    var _iteratorError7 = undefined;

	    try {
	      for (var _iterator7 = plugins[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
	        var plugin = _step7.value;

	        if (!plugin.schema) continue;
	        var _schema2 = _schema4.default.create(plugin.schema);
	        rules = rules.concat(_schema2.rules);
	      }
	    } catch (err) {
	      _didIteratorError7 = true;
	      _iteratorError7 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion7 && _iterator7.return) {
	          _iterator7.return();
	        }
	      } finally {
	        if (_didIteratorError7) {
	          throw _iteratorError7;
	        }
	      }
	    }

	    var schema = _schema4.default.create({ rules: rules });
	    return schema;
	  };
	};

	var _iteratorNormalCompletion2 = true;
	var _didIteratorError2 = false;
	var _iteratorError2 = undefined;

	try {
	  for (var _iterator2 = EVENT_HANDLERS[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	    var property = _step2.value;

	    Editor.propTypes[property] = _react2.default.PropTypes.func;
	  }

	  /**
	   * Export.
	   */
	} catch (err) {
	  _didIteratorError2 = true;
	  _iteratorError2 = err;
	} finally {
	  try {
	    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	      _iterator2.return();
	    }
	  } finally {
	    if (_didIteratorError2) {
	      throw _iteratorError2;
	    }
	  }
	}

	exports.default = Editor;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _base = __webpack_require__(176);

	var _base2 = _interopRequireDefault(_base);

	var _debug = __webpack_require__(277);

	var _debug2 = _interopRequireDefault(_debug);

	var _node = __webpack_require__(280);

	var _node2 = _interopRequireDefault(_node);

	var _offsetKey = __webpack_require__(283);

	var _offsetKey2 = _interopRequireDefault(_offsetKey);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _selection = __webpack_require__(187);

	var _selection2 = _interopRequireDefault(_selection);

	var _transfer = __webpack_require__(295);

	var _transfer2 = _interopRequireDefault(_transfer);

	var _types = __webpack_require__(281);

	var _types2 = _interopRequireDefault(_types);

	var _getWindow = __webpack_require__(284);

	var _getWindow2 = _interopRequireDefault(_getWindow);

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	var _keycode = __webpack_require__(288);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _environment = __webpack_require__(289);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Debug.
	 *
	 * @type {Function}
	 */

	var debug = (0, _debug2.default)('slate:content');

	/**
	 * Noop.
	 *
	 * @type {Function}
	 */

	function noop() {}

	/**
	 * Content.
	 *
	 * @type {Component}
	 */

	var Content = function (_React$Component) {
	  _inherits(Content, _React$Component);

	  /**
	   * Constructor.
	   *
	   * @param {Object} props
	   */

	  /**
	   * Property types.
	   *
	   * @type {Object}
	   */

	  function Content(props) {
	    _classCallCheck(this, Content);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Content).call(this, props));

	    _initialiseProps.call(_this);

	    _this.tmp = {};
	    _this.tmp.compositions = 0;
	    _this.forces = 0;
	    return _this;
	  }

	  /**
	   * Should the component update?
	   *
	   * @param {Object} props
	   * @param {Object} state
	   * @return {Boolean} shouldUpdate
	   */

	  /**
	   * Default properties.
	   *
	   * @type {Object}
	   */

	  /**
	   * While rendering, set the `isRendering` flag.
	   *
	   * @param {Object} props
	   * @param {Object} state
	   */

	  /**
	   * When finished rendering, move the `isRendering` flag on next tick.
	   *
	   * @param {Object} props
	   * @param {Object} state
	   */

	  _createClass(Content, [{
	    key: 'getPoint',


	    /**
	     * Get a point from a native selection's DOM `element` and `offset`.
	     *
	     * @param {Element} element
	     * @param {Number} offset
	     * @return {Object}
	     */

	    value: function getPoint(element, offset) {
	      var _props = this.props;
	      var state = _props.state;
	      var editor = _props.editor;
	      var document = state.document;

	      var schema = editor.getSchema();
	      var offsetKey = _offsetKey2.default.findKey(element, offset);
	      var key = offsetKey.key;

	      var node = document.getDescendant(key);
	      var decorators = document.getDescendantDecorators(key, schema);
	      var ranges = node.getRanges(decorators);
	      var point = _offsetKey2.default.findPoint(offsetKey, ranges);
	      return point;
	    }

	    /**
	     * On before input, bubble up.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On blur, update the selection to be not focused.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On change, bubble up.
	     *
	     * @param {State} state
	     */

	    /**
	     * On composition start, set the `isComposing` flag.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On composition end, remove the `isComposing` flag on the next tick. Also
	     * increment the `forces` key, which will force the contenteditable element
	     * to completely re-render, since IME puts React in an unreconcilable state.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On copy, defer to `onCutCopy`, then bubble up.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On cut, defer to `onCutCopy`, then bubble up.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On drag end, unset the `isDragging` flag.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On drag over, set the `isDragging` flag and the `isInternalDrag` flag.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On drag start, set the `isDragging` flag and the `isInternalDrag` flag.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On drop.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On input, handle spellcheck and other similar edits that don't go trigger
	     * the `onBeforeInput` and instead update the DOM directly.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On key down, prevent the default behavior of certain commands that will
	     * leave the editor in an out-of-sync state, then bubble up.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On paste, determine the type and bubble up.
	     *
	     * @param {Event} e
	     */

	    /**
	     * On select, update the current state's selection.
	     *
	     * @param {Event} e
	     */

	    /**
	     * Render the editor content.
	     *
	     * @return {Element} element
	     */

	    /**
	     * Render a `node`.
	     *
	     * @param {Node} node
	     * @return {Element} element
	     */

	  }]);

	  return Content;
	}(_react2.default.Component);

	/**
	 * Check if an `event` is being fired from inside a non-contentediable child
	 * element, in which case we'll want to ignore it.
	 *
	 * @param {Event} event
	 * @return {Boolean}
	 */

	Content.propTypes = {
	  className: _react2.default.PropTypes.string,
	  editor: _react2.default.PropTypes.object.isRequired,
	  onBeforeInput: _react2.default.PropTypes.func.isRequired,
	  onBlur: _react2.default.PropTypes.func.isRequired,
	  onChange: _react2.default.PropTypes.func.isRequired,
	  onCopy: _react2.default.PropTypes.func.isRequired,
	  onCut: _react2.default.PropTypes.func.isRequired,
	  onDrop: _react2.default.PropTypes.func.isRequired,
	  onKeyDown: _react2.default.PropTypes.func.isRequired,
	  onPaste: _react2.default.PropTypes.func.isRequired,
	  onSelect: _react2.default.PropTypes.func.isRequired,
	  readOnly: _react2.default.PropTypes.bool.isRequired,
	  schema: _react2.default.PropTypes.object,
	  spellCheck: _react2.default.PropTypes.bool.isRequired,
	  state: _react2.default.PropTypes.object.isRequired,
	  style: _react2.default.PropTypes.object
	};
	Content.defaultProps = {
	  style: {}
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;

	  this.shouldComponentUpdate = function (props, state) {
	    // If the state has been transformed natively, never re-render, or else we
	    // will end up duplicating content.
	    if (props.state.isNative) return false;

	    return props.className != _this2.props.className || props.readOnly != _this2.props.readOnly || props.schema != _this2.props.schema || props.spellCheck != _this2.props.spellCheck || props.state != _this2.props.state || props.style != _this2.props.style;
	  };

	  this.componentWillUpdate = function (props, state) {
	    _this2.tmp.isRendering = true;
	  };

	  this.componentDidUpdate = function (props, state) {
	    setTimeout(function () {
	      _this2.tmp.isRendering = false;
	    }, 1);
	  };

	  this.onBeforeInput = function (e) {
	    if (_this2.props.readOnly) return;
	    if (isNonEditable(e)) return;

	    var data = {};

	    debug('onBeforeInput', data);
	    _this2.props.onBeforeInput(e, data);
	  };

	  this.onBlur = function (e) {
	    if (_this2.props.readOnly) return;
	    if (_this2.tmp.isCopying) return;
	    if (isNonEditable(e)) return;

	    var data = {};

	    debug('onBlur', data);
	    _this2.props.onBlur(e, data);
	  };

	  this.onChange = function (state) {
	    debug('onChange', state);
	    _this2.props.onChange(state);
	  };

	  this.onCompositionStart = function (e) {
	    if (isNonEditable(e)) return;

	    _this2.tmp.isComposing = true;
	    _this2.tmp.compositions++;

	    debug('onCompositionStart');
	  };

	  this.onCompositionEnd = function (e) {
	    if (isNonEditable(e)) return;

	    _this2.forces++;
	    var count = _this2.tmp.compositions;

	    // The `count` check here ensures that if another composition starts
	    // before the timeout has closed out this one, we will abort unsetting the
	    // `isComposing` flag, since a composition in still in affect.
	    setTimeout(function () {
	      if (_this2.tmp.compositions > count) return;
	      _this2.tmp.isComposing = false;
	    });

	    debug('onCompositionEnd');
	  };

	  this.onCopy = function (e) {
	    if (isNonEditable(e)) return;
	    var window = (0, _getWindow2.default)(e.target);

	    _this2.tmp.isCopying = true;
	    window.requestAnimationFrame(function () {
	      _this2.tmp.isCopying = false;
	    });

	    var state = _this2.props.state;

	    var data = {};
	    data.type = 'fragment';
	    data.fragment = state.fragment;

	    debug('onCopy', data);
	    _this2.props.onCopy(e, data);
	  };

	  this.onCut = function (e) {
	    if (_this2.props.readOnly) return;
	    if (isNonEditable(e)) return;
	    var window = (0, _getWindow2.default)(e.target);

	    _this2.tmp.isCopying = true;
	    window.requestAnimationFrame(function () {
	      _this2.tmp.isCopying = false;
	    });

	    var state = _this2.props.state;

	    var data = {};
	    data.type = 'fragment';
	    data.fragment = state.fragment;

	    debug('onCut', data);
	    _this2.props.onCut(e, data);
	  };

	  this.onDragEnd = function (e) {
	    if (isNonEditable(e)) return;

	    _this2.tmp.isDragging = false;
	    _this2.tmp.isInternalDrag = null;

	    debug('onDragEnd');
	  };

	  this.onDragOver = function (e) {
	    if (isNonEditable(e)) return;

	    var dataTransfer = e.nativeEvent.dataTransfer;

	    var transfer = new _transfer2.default(dataTransfer);

	    // Prevent default when nodes are dragged to allow dropping.
	    if (transfer.getType() == 'node') {
	      e.preventDefault();
	    }

	    if (_this2.tmp.isDragging) return;
	    _this2.tmp.isDragging = true;
	    _this2.tmp.isInternalDrag = false;

	    debug('onDragOver');
	  };

	  this.onDragStart = function (e) {
	    if (isNonEditable(e)) return;

	    _this2.tmp.isDragging = true;
	    _this2.tmp.isInternalDrag = true;
	    var dataTransfer = e.nativeEvent.dataTransfer;

	    var transfer = new _transfer2.default(dataTransfer);

	    // If it's a node being dragged, the data type is already set.
	    if (transfer.getType() == 'node') return;

	    var state = _this2.props.state;
	    var fragment = state.fragment;

	    var encoded = _base2.default.serializeNode(fragment);
	    dataTransfer.setData(_types2.default.FRAGMENT, encoded);

	    debug('onDragStart');
	  };

	  this.onDrop = function (e) {
	    if (_this2.props.readOnly) return;
	    if (isNonEditable(e)) return;

	    e.preventDefault();

	    var window = (0, _getWindow2.default)(e.target);
	    var state = _this2.props.state;
	    var selection = state.selection;
	    var _e$nativeEvent = e.nativeEvent;
	    var dataTransfer = _e$nativeEvent.dataTransfer;
	    var x = _e$nativeEvent.x;
	    var y = _e$nativeEvent.y;

	    var transfer = new _transfer2.default(dataTransfer);
	    var data = transfer.getData();

	    // Resolve the point where the drop occured.
	    var range = void 0;

	    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)
	    if (window.document.caretRangeFromPoint) {
	      range = window.document.caretRangeFromPoint(x, y);
	    } else {
	      range = window.document.createRange();
	      range.setStart(e.nativeEvent.rangeParent, e.nativeEvent.rangeOffset);
	    }

	    var startNode = range.startContainer;
	    var startOffset = range.startOffset;
	    var point = _this2.getPoint(startNode, startOffset);
	    var target = _selection2.default.create({
	      anchorKey: point.key,
	      anchorOffset: point.offset,
	      focusKey: point.key,
	      focusOffset: point.offset,
	      isFocused: true
	    });

	    // If the target is inside a void node, abort.
	    if (state.document.hasVoidParent(point.key)) return;

	    // Add drop-specific information to the data.
	    data.target = target;
	    data.effect = dataTransfer.dropEffect;

	    if (data.type == 'fragment' || data.type == 'node') {
	      data.isInternal = _this2.tmp.isInternalDrag;
	    }

	    debug('onDrop', data);
	    _this2.props.onDrop(e, data);
	  };

	  this.onInput = function (e) {
	    if (_this2.tmp.isRendering) return;
	    if (_this2.tmp.isComposing) return;
	    if (isNonEditable(e)) return;
	    debug('onInput');

	    var window = (0, _getWindow2.default)(e.target);

	    // Get the selection point.
	    var native = window.getSelection();
	    var anchorNode = native.anchorNode;
	    var anchorOffset = native.anchorOffset;
	    var focusOffset = native.focusOffset;

	    var point = _this2.getPoint(anchorNode, anchorOffset);
	    var key = point.key;
	    var index = point.index;
	    var start = point.start;
	    var end = point.end;

	    // Get the range in question.

	    var _props2 = _this2.props;
	    var state = _props2.state;
	    var editor = _props2.editor;
	    var document = state.document;
	    var selection = state.selection;

	    var schema = editor.getSchema();
	    var decorators = document.getDescendantDecorators(key, schema);
	    var node = document.getDescendant(key);
	    var ranges = node.getRanges(decorators);
	    var range = ranges.get(index);

	    // Get the text information.
	    var isLast = index == ranges.size - 1;
	    var text = range.text;
	    var marks = range.marks;
	    var textContent = anchorNode.textContent;

	    var lastChar = textContent.charAt(textContent.length - 1);

	    // If we're dealing with the last leaf, and the DOM text ends in a new line,
	    // we will have added another new line in <Leaf>'s render method to account
	    // for browsers collapsing a single trailing new lines, so remove it.
	    if (isLast && lastChar == '\n') {
	      textContent = textContent.slice(0, -1);
	    }

	    // If the text is no different, abort.
	    if (textContent == text) return;

	    // Determine what the selection should be after changing the text.
	    var delta = textContent.length - text.length;
	    var after = selection.collapseToEnd().moveForward(delta);

	    // Create an updated state with the text replaced.
	    var next = state.transform().moveTo({
	      anchorKey: key,
	      anchorOffset: start,
	      focusKey: key,
	      focusOffset: end
	    }).delete().insertText(textContent, marks).moveTo(after).apply();

	    // Change the current state.
	    _this2.onChange(next);
	  };

	  this.onKeyDown = function (e) {
	    if (_this2.props.readOnly) return;
	    if (isNonEditable(e)) return;

	    var key = (0, _keycode2.default)(e.which);
	    var data = {};

	    // When composing, these characters commit the composition but also move the
	    // selection before we're able to handle it, so prevent their default,
	    // selection-moving behavior.
	    if (_this2.tmp.isComposing && (key == 'left' || key == 'right' || key == 'up' || key == 'down')) {
	      e.preventDefault();
	      return;
	    }

	    // Add helpful properties for handling hotkeys to the data object.
	    data.code = e.which;
	    data.key = key;
	    data.isAlt = e.altKey;
	    data.isCmd = _environment.IS_MAC ? e.metaKey && !e.altKey : false;
	    data.isCtrl = e.ctrlKey && !e.altKey;
	    data.isLine = _environment.IS_MAC ? e.metaKey : false;
	    data.isMeta = e.metaKey;
	    data.isMod = _environment.IS_MAC ? e.metaKey && !e.altKey : e.ctrlKey && !e.altKey;
	    data.isModAlt = _environment.IS_MAC ? e.metaKey && e.altKey : e.ctrlKey && e.altKey;
	    data.isShift = e.shiftKey;
	    data.isWord = _environment.IS_MAC ? e.altKey : e.ctrlKey;

	    // These key commands have native behavior in contenteditable elements which
	    // will cause our state to be out of sync, so prevent them.
	    if (key == 'enter' || key == 'backspace' || key == 'delete' || key == 'b' && data.isMod || key == 'i' && data.isMod || key == 'y' && data.isMod || key == 'z' && data.isMod) {
	      e.preventDefault();
	    }

	    debug('onKeyDown', data);
	    _this2.props.onKeyDown(e, data);
	  };

	  this.onPaste = function (e) {
	    if (_this2.props.readOnly) return;
	    if (isNonEditable(e)) return;

	    e.preventDefault();
	    var transfer = new _transfer2.default(e.clipboardData);
	    var data = transfer.getData();

	    debug('onPaste', data);
	    _this2.props.onPaste(e, data);
	  };

	  this.onSelect = function (e) {
	    if (_this2.props.readOnly) return;
	    if (_this2.tmp.isRendering) return;
	    if (_this2.tmp.isCopying) return;
	    if (_this2.tmp.isComposing) return;
	    if (isNonEditable(e)) return;

	    var window = (0, _getWindow2.default)(e.target);
	    var state = _this2.props.state;
	    var document = state.document;
	    var selection = state.selection;

	    var native = window.getSelection();
	    var data = {};

	    // If there are no ranges, the editor was blurred natively.
	    if (!native.rangeCount) {
	      data.selection = selection.merge({ isFocused: false });
	      data.isNative = true;
	    }

	    // Otherwise, determine the Slate selection from the native one.
	    else {
	        var anchorNode = native.anchorNode;
	        var anchorOffset = native.anchorOffset;
	        var focusNode = native.focusNode;
	        var focusOffset = native.focusOffset;

	        var anchor = _this2.getPoint(anchorNode, anchorOffset);
	        var focus = _this2.getPoint(focusNode, focusOffset);

	        // There are valid situations where a select event will fire when we're
	        // already at that position (for example when entering a character), since
	        // our `insertText` transform already updates the selection. In those
	        // cases we can safely ignore the event.
	        if (anchor.key == selection.anchorKey && anchor.offset == selection.anchorOffset && focus.key == selection.focusKey && focus.offset == selection.focusOffset && selection.isFocused) {
	          return;
	        }

	        var properties = {
	          anchorKey: anchor.key,
	          anchorOffset: anchor.offset,
	          focusKey: focus.key,
	          focusOffset: focus.offset,
	          isFocused: true,
	          isBackward: null
	        };

	        data.selection = selection.merge(properties).normalize(document);
	      }

	    debug('onSelect', { data: data, selection: data.selection.toJS() });
	    _this2.props.onSelect(e, data);
	  };

	  this.render = function () {
	    debug('render');

	    var _props3 = _this2.props;
	    var className = _props3.className;
	    var readOnly = _props3.readOnly;
	    var state = _props3.state;
	    var document = state.document;

	    var children = document.nodes.map(function (node) {
	      return _this2.renderNode(node);
	    }).toArray();

	    var style = _extends({
	      // Prevent the default outline styles.
	      outline: 'none',
	      // Preserve adjacent whitespace and new lines.
	      whiteSpace: 'pre-wrap',
	      // Allow words to break if they are too long.
	      wordWrap: 'break-word'
	    }, readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }, _this2.props.style);

	    // COMPAT: In Firefox, spellchecking can remove entire wrapping elements
	    // including inline ones like `<a>`, which is jarring for the user but also
	    // causes the DOM to get into an irreconilable state.
	    var spellCheck = _environment.IS_FIREFOX ? false : _this2.props.spellCheck;

	    return _react2.default.createElement(
	      'div',
	      {
	        key: _this2.forces,
	        contentEditable: !readOnly,
	        suppressContentEditableWarning: true,
	        className: className,
	        onBeforeInput: _this2.onBeforeInput,
	        onBlur: _this2.onBlur,
	        onCompositionEnd: _this2.onCompositionEnd,
	        onCompositionStart: _this2.onCompositionStart,
	        onCopy: _this2.onCopy,
	        onCut: _this2.onCut,
	        onDragEnd: _this2.onDragEnd,
	        onDragOver: _this2.onDragOver,
	        onDragStart: _this2.onDragStart,
	        onDrop: _this2.onDrop,
	        onInput: _this2.onInput,
	        onKeyDown: _this2.onKeyDown,
	        onKeyUp: noop,
	        onPaste: _this2.onPaste,
	        onSelect: _this2.onSelect,
	        spellCheck: spellCheck,
	        style: style
	      },
	      children
	    );
	  };

	  this.renderNode = function (node) {
	    var _props4 = _this2.props;
	    var editor = _props4.editor;
	    var schema = _props4.schema;
	    var state = _props4.state;


	    return _react2.default.createElement(_node2.default, {
	      key: node.key,
	      node: node,
	      schema: schema,
	      state: state,
	      editor: editor
	    });
	  };
	};

	function isNonEditable(event) {
	  var target = event.target;
	  var currentTarget = event.currentTarget;

	  var nonEditable = target.closest('[contenteditable="false"]');
	  var isContained = currentTarget.contains(nonEditable);
	  return isContained;
	}

	/**
	 * Export.
	 */

	exports.default = Content;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _raw = __webpack_require__(177);

	var _raw2 = _interopRequireDefault(_raw);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Encode a JSON `object` as base-64 `string`.
	 *
	 * @param {Object} object
	 * @return {String} encoded
	 */

	function encode(object) {
	  var string = JSON.stringify(object);
	  var encoded = window.btoa(window.encodeURIComponent(string));
	  return encoded;
	}

	/**
	 * Decode a base-64 `string` to a JSON `object`.
	 *
	 * @param {String} string
	 * @return {Object} object
	 */

	function decode(string) {
	  var decoded = window.decodeURIComponent(window.atob(string));
	  var object = JSON.parse(decoded);
	  return object;
	}

	/**
	 * Deserialize a State `string`.
	 *
	 * @param {String} string
	 * @return {State} state
	 */

	function deserialize(string) {
	  var raw = decode(string);
	  var state = _raw2.default.deserialize(raw);
	  return state;
	}

	/**
	 * Deserialize a Node `string`.
	 *
	 * @param {String} string
	 * @return {Node} node
	 */

	function deserializeNode(string) {
	  var raw = decode(string);
	  var node = _raw2.default.deserializeNode(raw);
	  return node;
	}

	/**
	 * Serialize a `state`.
	 *
	 * @param {State} state
	 * @return {String} encoded
	 */

	function serialize(state) {
	  var raw = _raw2.default.serialize(state);
	  var encoded = encode(raw);
	  return encoded;
	}

	/**
	 * Serialize a `node`.
	 *
	 * @param {Node} node
	 * @return {String} encoded
	 */

	function serializeNode(node) {
	  var raw = _raw2.default.serializeNode(node);
	  var encoded = encode(raw);
	  return encoded;
	}

	/**
	 * Export.
	 */

	exports.default = {
	  deserialize: deserialize,
	  deserializeNode: deserializeNode,
	  serialize: serialize,
	  serializeNode: serializeNode
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _state = __webpack_require__(222);

	var _state2 = _interopRequireDefault(_state);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _isEmpty = __webpack_require__(276);

	var _isEmpty2 = _interopRequireDefault(_isEmpty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Raw.
	 *
	 * @type {Object}
	 */

	var Raw = {

	  /**
	   * Deserialize a JSON `object`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Block}
	   */

	  deserialize: function deserialize(object, options) {
	    return Raw.deserializeState(object, options);
	  },


	  /**
	   * Deserialize a JSON `object` representing a `Block`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Block}
	   */

	  deserializeBlock: function deserializeBlock(object) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (options.terse) object = Raw.untersifyBlock(object);

	    return _block2.default.create({
	      key: object.key,
	      type: object.type,
	      data: object.data,
	      isVoid: object.isVoid,
	      nodes: _block2.default.createList(object.nodes.map(function (node) {
	        return Raw.deserializeNode(node, options);
	      }))
	    });
	  },


	  /**
	   * Deserialize a JSON `object` representing a `Document`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Document}
	   */

	  deserializeDocument: function deserializeDocument(object, options) {
	    return _document2.default.create({
	      nodes: _block2.default.createList(object.nodes.map(function (node) {
	        return Raw.deserializeNode(node, options);
	      }))
	    });
	  },


	  /**
	   * Deserialize a JSON `object` representing an `Inline`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Inline}
	   */

	  deserializeInline: function deserializeInline(object) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (options.terse) object = Raw.untersifyInline(object);

	    return _inline2.default.create({
	      key: object.key,
	      type: object.type,
	      data: object.data,
	      isVoid: object.isVoid,
	      nodes: _inline2.default.createList(object.nodes.map(function (node) {
	        return Raw.deserializeNode(node, options);
	      }))
	    });
	  },


	  /**
	   * Deserialize a JSON `object` representing a `Mark`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Mark} mark
	   */

	  deserializeMark: function deserializeMark(object, options) {
	    return _mark2.default.create(object);
	  },


	  /**
	   * Deserialize a JSON object representing a `Node`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Text}
	   */

	  deserializeNode: function deserializeNode(object, options) {
	    switch (object.kind) {
	      case 'block':
	        return Raw.deserializeBlock(object, options);
	      case 'document':
	        return Raw.deserializeDocument(object, options);
	      case 'inline':
	        return Raw.deserializeInline(object, options);
	      case 'text':
	        return Raw.deserializeText(object, options);
	      default:
	        {
	          throw new Error('Unrecognized node kind "' + object.kind + '".');
	        }
	    }
	  },


	  /**
	   * Deserialize a JSON `object` representing a `Range`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {List}
	   */

	  deserializeRange: function deserializeRange(object) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (options.terse) object = Raw.untersifyRange(object);

	    return _character2.default.createList(object.text.split('').map(function (char) {
	      return _character2.default.create({
	        text: char,
	        marks: _mark2.default.createSet(object.marks.map(function (mark) {
	          return Raw.deserializeMark(mark, options);
	        }))
	      });
	    }));
	  },


	  /**
	   * Deserialize a JSON `object` representing a `State`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {State}
	   */

	  deserializeState: function deserializeState(object) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (options.terse) object = Raw.untersifyState(object);

	    return _state2.default.create({
	      document: Raw.deserializeDocument(object.document, options)
	    });
	  },


	  /**
	   * Deserialize a JSON `object` representing a `Text`.
	   *
	   * @param {Object} object
	   * @param {Object} options (optional)
	   * @return {Text}
	   */

	  deserializeText: function deserializeText(object) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (options.terse) object = Raw.untersifyText(object);

	    return _text2.default.create({
	      key: object.key,
	      characters: object.ranges.reduce(function (characters, range) {
	        return characters.concat(Raw.deserializeRange(range, options));
	      }, _character2.default.createList())
	    });
	  },


	  /**
	   * Serialize a `model`.
	   *
	   * @param {Mixed} model
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serialize: function serialize(model, options) {
	    return Raw.serializeState(model, options);
	  },


	  /**
	   * Serialize a `block` node.
	   *
	   * @param {Block} block
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeBlock: function serializeBlock(block) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      data: block.data.toJSON(),
	      key: block.key,
	      kind: block.kind,
	      isVoid: block.isVoid,
	      type: block.type,
	      nodes: block.nodes.toArray().map(function (node) {
	        return Raw.serializeNode(node, options);
	      })
	    };

	    return options.terse ? Raw.tersifyBlock(object) : object;
	  },


	  /**
	   * Serialize a `document`.
	   *
	   * @param {Document} document
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeDocument: function serializeDocument(document) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      kind: document.kind,
	      nodes: document.nodes.toArray().map(function (node) {
	        return Raw.serializeNode(node, options);
	      })
	    };

	    return options.terse ? Raw.tersifyDocument(object) : object;
	  },


	  /**
	   * Serialize an `inline` node.
	   *
	   * @param {Inline} inline
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeInline: function serializeInline(inline) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      data: inline.data.toJSON(),
	      key: inline.key,
	      kind: inline.kind,
	      isVoid: inline.isVoid,
	      type: inline.type,
	      nodes: inline.nodes.toArray().map(function (node) {
	        return Raw.serializeNode(node, options);
	      })
	    };

	    return options.terse ? Raw.tersifyInline(object) : object;
	  },


	  /**
	   * Serialize a `mark`.
	   *
	   * @param {Mark} mark
	   * @param {Object} options (optional)
	   * @return {Object} Object
	   */

	  serializeMark: function serializeMark(mark) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      data: mark.data.toJSON(),
	      kind: mark.kind,
	      type: mark.type
	    };

	    return options.terse ? Raw.tersifyMark(object) : object;
	  },


	  /**
	   * Serialize a `node`.
	   *
	   * @param {Node} node
	   * @param {Object} options (optional)
	   * @return {Object} object
	   */

	  serializeNode: function serializeNode(node, options) {
	    switch (node.kind) {
	      case 'block':
	        return Raw.serializeBlock(node, options);
	      case 'document':
	        return Raw.serializeDocument(node, options);
	      case 'inline':
	        return Raw.serializeInline(node, options);
	      case 'text':
	        return Raw.serializeText(node, options);
	      default:
	        {
	          throw new Error('Unrecognized node kind "' + node.kind + '".');
	        }
	    }
	  },


	  /**
	   * Serialize a `range`.
	   *
	   * @param {Range} range
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeRange: function serializeRange(range) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      kind: range.kind,
	      text: range.text,
	      marks: range.marks.toArray().map(function (mark) {
	        return Raw.serializeMark(mark, options);
	      })
	    };

	    return options.terse ? Raw.tersifyRange(object) : object;
	  },


	  /**
	   * Serialize a `state`.
	   *
	   * @param {State} state
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeState: function serializeState(state) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      document: Raw.serializeDocument(state.document, options),
	      kind: state.kind
	    };

	    return options.terse ? Raw.tersifyState(object) : object;
	  },


	  /**
	   * Serialize a `text` node.
	   *
	   * @param {Text} text
	   * @param {Object} options (optional)
	   * @return {Object}
	   */

	  serializeText: function serializeText(text) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var object = {
	      key: text.key,
	      kind: text.kind,
	      ranges: text.getRanges().toArray().map(function (range) {
	        return Raw.serializeRange(range, options);
	      })
	    };

	    return options.terse ? Raw.tersifyText(object) : object;
	  },


	  /**
	   * Create a terse representation of a block `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyBlock: function tersifyBlock(object) {
	    var ret = {};
	    ret.kind = object.kind;
	    ret.type = object.type;
	    if (!object.isVoid) ret.nodes = object.nodes;
	    if (object.isVoid) ret.isVoid = object.isVoid;
	    if (!(0, _isEmpty2.default)(object.data)) ret.data = object.data;
	    return ret;
	  },


	  /**
	   * Create a terse representation of a document `object.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyDocument: function tersifyDocument(object) {
	    return {
	      nodes: object.nodes
	    };
	  },


	  /**
	   * Create a terse representation of a inline `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyInline: function tersifyInline(object) {
	    var ret = {};
	    ret.kind = object.kind;
	    ret.type = object.type;
	    if (!object.isVoid) ret.nodes = object.nodes;
	    if (object.isVoid) ret.isVoid = object.isVoid;
	    if (!(0, _isEmpty2.default)(object.data)) ret.data = object.data;
	    return ret;
	  },


	  /**
	   * Create a terse representation of a mark `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyMark: function tersifyMark(object) {
	    var ret = {};
	    ret.type = object.type;
	    if (!(0, _isEmpty2.default)(object.data)) ret.data = object.data;
	    return ret;
	  },


	  /**
	   * Create a terse representation of a range `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyRange: function tersifyRange(object) {
	    var ret = {};
	    ret.text = object.text;
	    if (!(0, _isEmpty2.default)(object.marks)) ret.marks = object.marks;
	    return ret;
	  },


	  /**
	   * Create a terse representation of a state `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyState: function tersifyState(object) {
	    return object.document;
	  },


	  /**
	   * Create a terse representation of a text `object`.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  tersifyText: function tersifyText(object) {
	    if (object.ranges.length == 1 && object.ranges[0].marks == null) {
	      return {
	        kind: object.kind,
	        text: object.ranges[0].text
	      };
	    }

	    return {
	      kind: object.kind,
	      ranges: object.ranges
	    };
	  },


	  /**
	   * Convert a terse representation of a block `object` into a non-terse one.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  untersifyBlock: function untersifyBlock(object) {
	    if (object.isVoid || !object.nodes || !object.nodes.length) {
	      return {
	        data: object.data,
	        kind: object.kind,
	        type: object.type,
	        isVoid: object.isVoid,
	        nodes: [{
	          kind: 'text',
	          text: ''
	        }]
	      };
	    }

	    return object;
	  },


	  /**
	   * Convert a terse representation of a inline `object` into a non-terse one.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  untersifyInline: function untersifyInline(object) {
	    if (object.isVoid || !object.nodes || !object.nodes.length) {
	      return {
	        data: object.data,
	        kind: object.kind,
	        type: object.type,
	        isVoid: object.isVoid,
	        nodes: [{
	          kind: 'text',
	          text: ''
	        }]
	      };
	    }

	    return object;
	  },


	  /**
	   * Convert a terse representation of a range `object` into a non-terse one.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  untersifyRange: function untersifyRange(object) {
	    return {
	      kind: 'range',
	      text: object.text,
	      marks: object.marks || []
	    };
	  },


	  /**
	   * Convert a terse representation of a state `object` into a non-terse one.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  untersifyState: function untersifyState(object) {
	    return {
	      kind: 'state',
	      document: {
	        kind: 'document',
	        nodes: object.nodes
	      }
	    };
	  },


	  /**
	   * Convert a terse representation of a text `object` into a non-terse one.
	   *
	   * @param {Object} object
	   * @return {Object}
	   */

	  untersifyText: function untersifyText(object) {
	    if (object.ranges) return object;

	    return {
	      kind: object.kind,
	      ranges: [{
	        text: object.text,
	        marks: object.marks || []
	      }]
	    };
	  }
	};

	/**
	 * Export.
	 */

	exports.default = Raw;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(179);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _node = __webpack_require__(183);

	var _node2 = _interopRequireDefault(_node);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/**
	 * Prevent circuit.
	 */

	/**
	 * Dependencies.
	 */

	/**
	 * Default properties.
	 */

	var DEFAULTS = {
	  data: new _immutable.Map(),
	  isVoid: false,
	  key: null,
	  nodes: new _immutable.List(),
	  type: null
	};

	/**
	 * Block.
	 */

	var Block = function (_ref) {
	  _inherits(Block, _ref);

	  function Block() {
	    _classCallCheck(this, Block);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Block).apply(this, arguments));
	  }

	  _createClass(Block, [{
	    key: 'kind',


	    /**
	     * Get the node's kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'block';
	    }

	    /**
	     * Is the node empty?
	     *
	     * @return {Boolean} isEmpty
	     */

	  }, {
	    key: 'isEmpty',
	    get: function get() {
	      return this.text == '';
	    }

	    /**
	     * Get the length of the concatenated text of the node.
	     *
	     * @return {Number} length
	     */

	  }, {
	    key: 'length',
	    get: function get() {
	      return this.text.length;
	    }

	    /**
	     * Get the concatenated text `string` of all child nodes.
	     *
	     * @return {String} text
	     */

	  }, {
	    key: 'text',
	    get: function get() {
	      return this.nodes.map(function (node) {
	        return node.text;
	      }).join('');
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Block` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Block} element
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Block) return properties;
	      if (properties instanceof _inline2.default) return properties;
	      if (properties instanceof _text2.default) return properties;
	      if (!properties.type) throw new Error('You must pass a block `type`.');

	      properties.key = properties.key || (0, _uid2.default)(4);
	      properties.data = _data2.default.create(properties.data);
	      properties.isVoid = !!properties.isVoid;
	      properties.nodes = Block.createList(properties.nodes);

	      return new Block(properties).normalize();
	    }

	    /**
	     * Create a list of `Blocks` from an array.
	     *
	     * @param {Array} elements
	     * @return {List} list
	     */

	  }, {
	    key: 'createList',
	    value: function createList() {
	      var elements = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      if (_immutable.List.isList(elements)) return elements;
	      return new _immutable.List(elements.map(Block.create));
	    }
	  }]);

	  return Block;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Mix in `Node` methods.
	 */

	for (var method in _node2.default) {
	  Block.prototype[method] = _node2.default[method];
	}

	/**
	 * Export.
	 */

	exports.default = Block;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	__webpack_require__(180);

	var _node = __webpack_require__(183);

	var _node2 = _interopRequireDefault(_node);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/**
	 * Prevent circuit.
	 */

	/**
	 * Dependencies.
	 */

	/**
	 * Defaults.
	 */

	var DEFAULTS = {
	  nodes: new _immutable.OrderedMap()
	};

	/**
	 * Document.
	 */

	var Document = function (_ref) {
	  _inherits(Document, _ref);

	  function Document() {
	    _classCallCheck(this, Document);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Document).apply(this, arguments));
	  }

	  _createClass(Document, [{
	    key: 'kind',


	    /**
	     * Get the node's kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'document';
	    }

	    /**
	     * Is the document empty?
	     *
	     * @return {Boolean} isEmpty
	     */

	  }, {
	    key: 'isEmpty',
	    get: function get() {
	      return this.text == '';
	    }

	    /**
	     * Get the length of the concatenated text of the document.
	     *
	     * @return {Number} length
	     */

	  }, {
	    key: 'length',
	    get: function get() {
	      return this.text.length;
	    }

	    /**
	     * Get the concatenated text `string` of all child nodes.
	     *
	     * @return {String} text
	     */

	  }, {
	    key: 'text',
	    get: function get() {
	      return this.nodes.map(function (node) {
	        return node.text;
	      }).join('');
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Document` with `properties`.
	     *
	     * @param {Objetc} properties
	     * @return {Document} document
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Document) return properties;
	      properties.nodes = _block2.default.createList(properties.nodes);
	      return new Document(properties).normalize();
	    }
	  }]);

	  return Document;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Mix in `Node` methods.
	 */

	for (var method in _node2.default) {
	  Document.prototype[method] = _node2.default[method];
	}

	/**
	 * Export.
	 */

	exports.default = Document;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	__webpack_require__(179);

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _node = __webpack_require__(183);

	var _node2 = _interopRequireDefault(_node);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/**
	 * Prevent circuit.
	 */

	/**
	 * Dependencies.
	 */

	/**
	 * Record.
	 */

	var DEFAULTS = {
	  data: new _immutable.Map(),
	  isVoid: false,
	  key: null,
	  nodes: new _immutable.List(),
	  type: null
	};

	/**
	 * Inline.
	 */

	var Inline = function (_ref) {
	  _inherits(Inline, _ref);

	  function Inline() {
	    _classCallCheck(this, Inline);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Inline).apply(this, arguments));
	  }

	  _createClass(Inline, [{
	    key: 'kind',


	    /**
	     * Get the node's kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'inline';
	    }

	    /**
	     * Is the node empty?
	     *
	     * @return {Boolean} isEmpty
	     */

	  }, {
	    key: 'isEmpty',
	    get: function get() {
	      return this.text == '';
	    }

	    /**
	     * Get the length of the concatenated text of the node.
	     *
	     * @return {Number} length
	     */

	  }, {
	    key: 'length',
	    get: function get() {
	      return this.text.length;
	    }

	    /**
	     * Get the concatenated text `string` of all child nodes.
	     *
	     * @return {String} text
	     */

	  }, {
	    key: 'text',
	    get: function get() {
	      return this.nodes.map(function (node) {
	        return node.text;
	      }).join('');
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Inline` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Inline} element
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof _block2.default) return properties;
	      if (properties instanceof Inline) return properties;
	      if (properties instanceof _text2.default) return properties;
	      if (!properties.type) throw new Error('You must pass an inline `type`.');

	      properties.key = properties.key || (0, _uid2.default)(4);
	      properties.data = _data2.default.create(properties.data);
	      properties.isVoid = !!properties.isVoid;
	      properties.nodes = Inline.createList(properties.nodes);

	      return new Inline(properties).normalize();
	    }

	    /**
	     * Create a list of `Inlines` from an array.
	     *
	     * @param {Array} elements
	     * @return {List} map
	     */

	  }, {
	    key: 'createList',
	    value: function createList() {
	      var elements = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      if (_immutable.List.isList(elements)) return elements;
	      return new _immutable.List(elements.map(Inline.create));
	    }
	  }]);

	  return Inline;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Mix in `Node` methods.
	 */

	for (var method in _node2.default) {
	  Inline.prototype[method] = _node2.default[method];
	}

	/**
	 * Export.
	 */

	exports.default = Inline;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _immutable = __webpack_require__(182);

	/**
	 * Data.
	 *
	 * This isn't an immutable record, it's just a thin wrapper around `Map` so that
	 * we can allow for more convenient creation.
	 */

	var Data = {

	  /**
	   * Create a new `Data` with `properties`.
	   *
	   * @param {Object} properties
	   * @return {Data} data
	   */

	  create: function create() {
	    var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    return _immutable.Map.isMap(properties) ? properties : new _immutable.Map(properties);
	  }
	};

	/**
	 * Export.
	 */

	exports.default = Data;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _selection = __webpack_require__(187);

	var _selection2 = _interopRequireDefault(_selection);

	var _transforms = __webpack_require__(216);

	var _transforms2 = _interopRequireDefault(_transforms);

	var _text2 = __webpack_require__(217);

	var _text3 = _interopRequireDefault(_text2);

	var _direction = __webpack_require__(221);

	var _direction2 = _interopRequireDefault(_direction);

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	var _memoize = __webpack_require__(186);

	var _memoize2 = _interopRequireDefault(_memoize);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Node.
	 *
	 * And interface that `Document`, `Block` and `Inline` all implement, to make
	 * working with the recursive node tree easier.
	 */

	var Node = {

	  /**
	   * Assert that a node has a child by `key` and return it.
	   *
	   * @param {String or Node} key
	   * @return {Node}
	   */

	  assertChild: function assertChild(key) {
	    var child = this.getChild(key);

	    if (!child) {
	      key = normalizeKey(key);
	      throw new Error('Could not find a child node with key "' + key + '".');
	    }

	    return child;
	  },


	  /**
	   * Assert that a node has a descendant by `key` and return it.
	   *
	   * @param {String or Node} key
	   * @return {Node}
	   */

	  assertDescendant: function assertDescendant(key) {
	    var descendant = this.getDescendant(key);

	    if (!descendant) {
	      key = normalizeKey(key);
	      throw new Error('Could not find a descendant node with key "' + key + '".');
	    }

	    return descendant;
	  },


	  /**
	   * Concat children `nodes` on to the end of the node.
	   *
	   * @param {List} nodes
	   * @return {Node} node
	   */

	  concatChildren: function concatChildren(nodes) {
	    nodes = this.nodes.concat(nodes);
	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Decorate all of the text nodes with a `decorator` function.
	   *
	   * @param {Function} decorator
	   * @return {Node} node
	   */

	  decorateTexts: function decorateTexts(decorator) {
	    return this.mapDescendants(function (child) {
	      return child.kind == 'text' ? child.decorateCharacters(decorator) : child;
	    });
	  },


	  /**
	   * Recursively find all ancestor nodes by `iterator`.
	   *
	   * @param {Function} iterator
	   * @return {Node} node
	   */

	  findDescendant: function findDescendant(iterator) {
	    return this.nodes.find(iterator) || this.nodes.map(function (node) {
	      return node.kind == 'text' ? null : node.findDescendant(iterator);
	    }).find(function (exists) {
	      return exists;
	    });
	  },


	  /**
	   * Recursively filter all ancestor nodes with `iterator`.
	   *
	   * @param {Function} iterator
	   * @return {List} nodes
	   */

	  filterDescendants: function filterDescendants(iterator) {
	    return this.nodes.reduce(function (matches, child, i, nodes) {
	      if (iterator(child, i, nodes)) matches = matches.push(child);
	      if (child.kind != 'text') matches = matches.concat(child.filterDescendants(iterator));
	      return matches;
	    }, _block2.default.createList());
	  },


	  /**
	   * Recursively filter all ancestor nodes with `iterator`, depth-first.
	   *
	   * @param {Function} iterator
	   * @return {List} nodes
	   */

	  filterDescendantsDeep: function filterDescendantsDeep(iterator) {
	    return this.nodes.reduce(function (matches, child, i, nodes) {
	      if (child.kind != 'text') matches = matches.concat(child.filterDescendantsDeep(iterator));
	      if (iterator(child, i, nodes)) matches = matches.push(child);
	      return matches;
	    }, _block2.default.createList());
	  },


	  /**
	   * Get the closest block nodes for each text node in the node.
	   *
	   * @return {List} nodes
	   */

	  getBlocks: function getBlocks() {
	    var _this = this;

	    return this.getTexts().map(function (text) {
	      return _this.getClosestBlock(text);
	    }).toSet().toList();
	  },


	  /**
	   * Get the closest block nodes for each text node in a `range`.
	   *
	   * @param {Selection} range
	   * @return {List} nodes
	   */

	  getBlocksAtRange: function getBlocksAtRange(range) {
	    var _this2 = this;

	    return this.getTextsAtRange(range).map(function (text) {
	      return _this2.getClosestBlock(text);
	    });
	  },


	  /**
	   * Get a list of the characters in a `range`.
	   *
	   * @param {Selection} range
	   * @return {List} characters
	   */

	  getCharactersAtRange: function getCharactersAtRange(range) {
	    return this.getTextsAtRange(range).reduce(function (characters, text) {
	      var chars = text.characters.filter(function (char, i) {
	        return isInRange(i, text, range);
	      });
	      return characters.concat(chars);
	    }, _character2.default.createList());
	  },


	  /**
	   * Get children after a child by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  getChildrenAfter: function getChildrenAfter(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    return this.nodes.slice(index + 1);
	  },


	  /**
	   * Get children after a child by `key`, including the child.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  getChildrenAfterIncluding: function getChildrenAfterIncluding(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    return this.nodes.slice(index);
	  },


	  /**
	   * Get children before a child by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  getChildrenBefore: function getChildrenBefore(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    return this.nodes.slice(0, index);
	  },


	  /**
	   * Get children before a child by `key`, including the child.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  getChildrenBeforeIncluding: function getChildrenBeforeIncluding(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    return this.nodes.slice(0, index + 1);
	  },


	  /**
	   * Get children between two child keys.
	   *
	   * @param {String or Node} start
	   * @param {String or Node} end
	   * @return {Node} node
	   */

	  getChildrenBetween: function getChildrenBetween(start, end) {
	    start = this.assertChild(start);
	    start = this.nodes.indexOf(start);
	    end = this.assertChild(end);
	    end = this.nodes.indexOf(end);
	    return this.nodes.slice(start + 1, end);
	  },


	  /**
	   * Get children between two child keys, including the two children.
	   *
	   * @param {String or Node} start
	   * @param {String or Node} end
	   * @return {Node} node
	   */

	  getChildrenBetweenIncluding: function getChildrenBetweenIncluding(start, end) {
	    start = this.assertChild(start);
	    start = this.nodes.indexOf(start);
	    end = this.assertChild(end);
	    end = this.nodes.indexOf(end);
	    return this.nodes.slice(start, end + 1);
	  },


	  /**
	   * Get closest parent of node by `key` that matches `iterator`.
	   *
	   * @param {String or Node} key
	   * @param {Function} iterator
	   * @return {Node or Null} node
	   */

	  getClosest: function getClosest(key, iterator) {
	    var node = this.assertDescendant(key);

	    while (node = this.getParent(node)) {
	      if (node == this) return null;
	      if (iterator(node)) return node;
	    }

	    return null;
	  },


	  /**
	   * Get the closest block parent of a `node`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getClosestBlock: function getClosestBlock(key) {
	    return this.getClosest(key, function (parent) {
	      return parent.kind == 'block';
	    });
	  },


	  /**
	   * Get the closest inline parent of a `node`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getClosestInline: function getClosestInline(key) {
	    return this.getClosest(key, function (parent) {
	      return parent.kind == 'inline';
	    });
	  },


	  /**
	   * Get a child node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getChild: function getChild(key) {
	    key = normalizeKey(key);
	    return this.nodes.find(function (node) {
	      return node.key == key;
	    });
	  },


	  /**
	   * Get the common ancestor of nodes `one` and `two` by keys.
	   *
	   * @param {String or Node} one
	   * @param {String or Node} two
	   * @return {Node}
	   */

	  getCommonAncestor: function getCommonAncestor(one, two) {
	    this.assertDescendant(one);
	    this.assertDescendant(two);
	    var ancestors = new _immutable.List();
	    var oneParent = this.getParent(one);
	    var twoParent = this.getParent(two);

	    while (oneParent) {
	      ancestors = ancestors.push(oneParent);
	      oneParent = this.getParent(oneParent);
	    }

	    while (twoParent) {
	      if (ancestors.includes(twoParent)) return twoParent;
	      twoParent = this.getParent(twoParent);
	    }
	  },


	  /**
	   * Get the component for the node from a `schema`.
	   *
	   * @param {Schema} schema
	   * @return {Component || Void}
	   */

	  getComponent: function getComponent(schema) {
	    return schema.__getComponent(this);
	  },


	  /**
	   * Get the decorations for the node from a `schema`.
	   *
	   * @param {Schema} schema
	   * @return {Array}
	   */

	  getDecorators: function getDecorators(schema) {
	    return schema.__getDecorators(this);
	  },


	  /**
	   * Get the decorations for a descendant by `key` given a `schema`.
	   *
	   * @param {String} key
	   * @param {Schema} schema
	   * @return {Array}
	   */

	  getDescendantDecorators: function getDescendantDecorators(key, schema) {
	    var descendant = this.assertDescendant(key);
	    var child = this.getHighestChild(key);
	    var decorators = [];

	    while (child != descendant) {
	      decorators = decorators.concat(child.getDecorators(schema));
	      child = child.getHighestChild(key);
	    }

	    decorators = decorators.concat(descendant.getDecorators(schema));
	    return decorators;
	  },


	  /**
	   * Get a descendant node by `key`.
	   *
	   * @param {String} key
	   * @return {Node or Null} node
	   */

	  getDescendant: function getDescendant(key) {
	    key = normalizeKey(key);

	    var child = this.getChild(key);
	    if (child) return child;

	    this.nodes.find(function (node) {
	      if (node.kind == 'text') return false;
	      child = node.getDescendant(key);
	      return child;
	    });

	    return child;
	  },


	  /**
	   * Get the depth of a child node by `key`, with optional `startAt`.
	   *
	   * @param {String or Node} key
	   * @param {Number} startAt (optional)
	   * @return {Number} depth
	   */

	  getDepth: function getDepth(key) {
	    var startAt = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];

	    this.assertDescendant(key);
	    return this.hasChild(key) ? startAt : this.getHighestChild(key).getDepth(key, startAt + 1);
	  },


	  /**
	   * Get a fragment of the node at a `range`.
	   *
	   * @param {Selection} range
	   * @return {List} nodes
	   */

	  getFragmentAtRange: function getFragmentAtRange(range) {
	    var node = this;
	    var nodes = _block2.default.createList();

	    // If the range is collapsed, there's nothing to do.
	    if (range.isCollapsed) return _document2.default.create({ nodes: nodes });

	    // Make sure the children exist.
	    var startKey = range.startKey;
	    var startOffset = range.startOffset;
	    var endKey = range.endKey;
	    var endOffset = range.endOffset;

	    node.assertDescendant(startKey);
	    node.assertDescendant(endKey);

	    // Split at the start and end.
	    var start = range.collapseToStart();
	    node = node.splitBlockAtRange(start, Infinity);

	    var next = node.getNextText(startKey);
	    var end = startKey == endKey ? range.collapseToStartOf(next).moveForward(endOffset - startOffset) : range.collapseToEnd();
	    node = node.splitBlockAtRange(end, Infinity);

	    // Get the start and end nodes.
	    var startNode = node.getNextSibling(node.getHighestChild(startKey));
	    var endNode = startKey == endKey ? node.getHighestChild(next) : node.getHighestChild(endKey);

	    nodes = node.getChildrenBetweenIncluding(startNode, endNode);

	    // Return a new document fragment.
	    return _document2.default.create({ nodes: nodes });
	  },


	  /**
	   * Get the furthest parent of a node by `key` that matches an `iterator`.
	   *
	   * @param {String or Node} key
	   * @param {Function} iterator
	   * @return {Node or Null}
	   */

	  getFurthest: function getFurthest(key, iterator) {
	    var node = this.assertDescendant(key);
	    var furthest = null;

	    while (node = this.getClosest(node, iterator)) {
	      furthest = node;
	    }

	    return furthest;
	  },


	  /**
	   * Get the furthest block parent of a node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getFurthestBlock: function getFurthestBlock(key) {
	    return this.getFurthest(key, function (node) {
	      return node.kind == 'block';
	    });
	  },


	  /**
	   * Get the furthest inline parent of a node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getFurthestInline: function getFurthestInline(key) {
	    return this.getFurthest(key, function (node) {
	      return node.kind == 'inline';
	    });
	  },


	  /**
	   * Get the highest child ancestor of a node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getHighestChild: function getHighestChild(key) {
	    key = normalizeKey(key);
	    return this.nodes.find(function (node) {
	      if (node.key == key) return true;
	      if (node.kind == 'text') return false;
	      return node.hasDescendant(key);
	    });
	  },


	  /**
	   * Get the highest parent of a node by `key` which has an only child.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null}
	   */

	  getHighestOnlyChildParent: function getHighestOnlyChildParent(key) {
	    var child = this.assertDescendant(key);
	    var match = null;
	    var parent = void 0;

	    while (parent = this.getParent(child)) {
	      if (parent == null || parent.nodes.size > 1) return match;
	      match = parent;
	      child = parent;
	    }
	  },


	  /**
	   * Get the furthest inline nodes for each text node in the node.
	   *
	   * @return {List} nodes
	   */

	  getInlines: function getInlines() {
	    var _this3 = this;

	    return this.getTexts().map(function (text) {
	      return _this3.getFurthestInline(text);
	    }).filter(function (exists) {
	      return exists;
	    }).toSet().toList();
	  },


	  /**
	   * Get the closest inline nodes for each text node in a `range`.
	   *
	   * @param {Selection} range
	   * @return {List} nodes
	   */

	  getInlinesAtRange: function getInlinesAtRange(range) {
	    var _this4 = this;

	    return this.getTextsAtRange(range).map(function (text) {
	      return _this4.getClosestInline(text);
	    }).filter(function (exists) {
	      return exists;
	    }).toSet().toList();
	  },


	  /**
	   * Get a set of the marks in a `range`.
	   *
	   * @param {Selection} range
	   * @return {Set} marks
	   */

	  getMarksAtRange: function getMarksAtRange(range) {
	    range = range.normalize(this);
	    var _range = range;
	    var startKey = _range.startKey;
	    var startOffset = _range.startOffset;

	    var marks = _mark2.default.createSet();

	    // If the range is collapsed at the start of the node, check the previous.
	    if (range.isCollapsed && startOffset == 0) {
	      var text = this.getDescendant(startKey);
	      var previous = this.getPreviousText(startKey);
	      if (!previous || !previous.length) return marks;
	      var char = previous.characters.get(previous.length - 1);
	      return char.marks;
	    }

	    // If the range is collapsed, check the character before the start.
	    if (range.isCollapsed) {
	      var _text = this.getDescendant(startKey);
	      var _char = _text.characters.get(range.startOffset - 1);
	      return _char.marks;
	    }

	    // Otherwise, get a set of the marks for each character in the range.
	    return this.getCharactersAtRange(range).reduce(function (memo, char) {
	      return memo.union(char.marks);
	    }, new _immutable.Set());
	  },


	  /**
	   * Get the block node before a descendant text node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getNextBlock: function getNextBlock(key) {
	    var child = this.assertDescendant(key);
	    var last = void 0;

	    if (child.kind == 'block') {
	      last = child.getTexts().last();
	    } else {
	      var block = this.getClosestBlock(key);
	      last = block.getTexts().last();
	    }

	    var next = this.getNextText(last);
	    if (!next) return null;

	    return this.getClosestBlock(next);
	  },


	  /**
	   * Get the node after a descendant by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getNextSibling: function getNextSibling(key) {
	    var node = this.assertDescendant(key);
	    return this.getParent(node).nodes.skipUntil(function (child) {
	      return child == node;
	    }).get(1);
	  },


	  /**
	   * Get the text node after a descendant text node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getNextText: function getNextText(key) {
	    key = normalizeKey(key);
	    return this.getTexts().skipUntil(function (text) {
	      return text.key == key;
	    }).get(1);
	  },


	  /**
	   * Get the offset for a descendant text node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Number} offset
	   */

	  getOffset: function getOffset(key) {
	    this.assertDescendant(key);

	    // Calculate the offset of the nodes before the highest child.
	    var child = this.getHighestChild(key);
	    var offset = this.nodes.takeUntil(function (n) {
	      return n == child;
	    }).reduce(function (memo, n) {
	      return memo + n.length;
	    }, 0);

	    // Recurse if need be.
	    return this.hasChild(key) ? offset : offset + child.getOffset(key);
	  },


	  /**
	   * Get the offset from a `range`.
	   *
	   * @param {Selection} range
	   * @return {Number} offset
	   */

	  getOffsetAtRange: function getOffsetAtRange(range) {
	    range = range.normalize(this);

	    if (range.isExpanded) {
	      throw new Error('The range must be collapsed to calculcate its offset.');
	    }

	    var _range2 = range;
	    var startKey = _range2.startKey;
	    var startOffset = _range2.startOffset;

	    return this.getOffset(startKey) + startOffset;
	  },


	  /**
	   * Get the parent of a child node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getParent: function getParent(key) {
	    if (this.hasChild(key)) return this;

	    var node = null;

	    this.nodes.forEach(function (child) {
	      if (child.kind == 'text') return;
	      var match = child.getParent(key);
	      if (match) node = match;
	    });

	    return node;
	  },


	  /**
	   * Get the node before a descendant node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getPreviousSibling: function getPreviousSibling(key) {
	    var node = this.assertDescendant(key);
	    return this.getParent(node).nodes.takeUntil(function (child) {
	      return child == node;
	    }).last();
	  },


	  /**
	   * Get the text node before a descendant text node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getPreviousText: function getPreviousText(key) {
	    key = normalizeKey(key);
	    return this.getTexts().takeUntil(function (text) {
	      return text.key == key;
	    }).last();
	  },


	  /**
	   * Get the block node before a descendant text node by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node or Null} node
	   */

	  getPreviousBlock: function getPreviousBlock(key) {
	    var child = this.assertDescendant(key);
	    var first = void 0;

	    if (child.kind == 'block') {
	      first = child.getTexts().first();
	    } else {
	      var block = this.getClosestBlock(key);
	      first = block.getTexts().first();
	    }

	    var previous = this.getPreviousText(first);
	    if (!previous) return null;

	    return this.getClosestBlock(previous);
	  },


	  /**
	   * Get the descendent text node at an `offset`.
	   *
	   * @param {String} offset
	   * @return {Node or Null} node
	   */

	  getTextAtOffset: function getTextAtOffset(offset) {
	    var length = 0;
	    return this.getTexts().find(function (text) {
	      length += text.length;
	      return length >= offset;
	    });
	  },


	  /**
	   * Get the direction of the node's text.
	   *
	   * @return {String} direction
	   */

	  getTextDirection: function getTextDirection() {
	    var text = this.text;
	    var dir = (0, _direction2.default)(text);
	    return dir == 'neutral' ? undefined : dir;
	  },


	  /**
	   * Recursively get all of the child text nodes in order of appearance.
	   *
	   * @return {List} nodes
	   */

	  getTexts: function getTexts() {
	    return this.nodes.reduce(function (texts, node) {
	      return node.kind == 'text' ? texts.push(node) : texts.concat(node.getTexts());
	    }, _block2.default.createList());
	  },


	  /**
	   * Get all of the text nodes in a `range`.
	   *
	   * @param {Selection} range
	   * @return {List} nodes
	   */

	  getTextsAtRange: function getTextsAtRange(range) {
	    range = range.normalize(this);
	    var _range3 = range;
	    var startKey = _range3.startKey;
	    var endKey = _range3.endKey;

	    var texts = this.getTexts();
	    var startText = this.getDescendant(startKey);
	    var endText = this.getDescendant(endKey);
	    var start = texts.indexOf(startText);
	    var end = texts.indexOf(endText);
	    return texts.slice(start, end + 1);
	  },


	  /**
	   * Check if a child node exists by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Boolean} exists
	   */

	  hasChild: function hasChild(key) {
	    return !!this.getChild(key);
	  },


	  /**
	   * Recursively check if a child node exists by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Boolean} exists
	   */

	  hasDescendant: function hasDescendant(key) {
	    return !!this.getDescendant(key);
	  },


	  /**
	   * Check if a node has a void parent by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Boolean}
	   */

	  hasVoidParent: function hasVoidParent(key) {
	    return !!this.getClosest(key, function (parent) {
	      return parent.isVoid;
	    });
	  },


	  /**
	   * Insert child `nodes` after child by `key`.
	   *
	   * @param {String or Node} key
	   * @param {List} nodes
	   * @return {Node} node
	   */

	  insertChildrenAfter: function insertChildrenAfter(key, nodes) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);

	    nodes = this.nodes.slice(0, index + 1).concat(nodes).concat(this.nodes.slice(index + 1));

	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Insert child `nodes` before child by `key`.
	   *
	   * @param {String or Node} key
	   * @param {List} nodes
	   * @return {Node} node
	   */

	  insertChildrenBefore: function insertChildrenBefore(key, nodes) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);

	    nodes = this.nodes.slice(0, index).concat(nodes).concat(this.nodes.slice(index));

	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Check if the inline nodes are split at a `range`.
	   *
	   * @param {Selection} range
	   * @return {Boolean} isSplit
	   */

	  isInlineSplitAtRange: function isInlineSplitAtRange(range) {
	    range = range.normalize(this);
	    if (range.isExpanded) throw new Error();

	    var _range4 = range;
	    var startKey = _range4.startKey;

	    var start = this.getFurthestInline(startKey) || this.getDescendant(startKey);
	    return range.isAtStartOf(start) || range.isAtEndOf(start);
	  },


	  /**
	   * Map all child nodes, updating them in their parents. This method is
	   * optimized to not return a new node if no changes are made.
	   *
	   * @param {Function} iterator
	   * @return {Node} node
	   */

	  mapChildren: function mapChildren(iterator) {
	    var _this5 = this;

	    var nodes = this.nodes;

	    nodes.forEach(function (node, i) {
	      var ret = iterator(node, i, _this5.nodes);
	      if (ret != node) nodes = nodes.set(ret.key, ret);
	    });

	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Map all descendant nodes, updating them in their parents. This method is
	   * optimized to not return a new node if no changes are made.
	   *
	   * @param {Function} iterator
	   * @return {Node} node
	   */

	  mapDescendants: function mapDescendants(iterator) {
	    var _this6 = this;

	    var nodes = this.nodes;

	    nodes.forEach(function (node, i) {
	      var ret = node;
	      if (ret.kind != 'text') ret = ret.mapDescendants(iterator);
	      ret = iterator(ret, i, _this6.nodes);
	      if (ret == node) return;

	      var index = nodes.indexOf(node);
	      nodes = nodes.set(index, ret);
	    });

	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Normalize the node by joining any two adjacent text child nodes.
	   *
	   * @return {Node} node
	   */

	  normalize: function normalize() {
	    var node = this;
	    var keys = new _immutable.Set();
	    var removals = new _immutable.Set();

	    // Map this node's descendants, ensuring...
	    node = node.mapDescendants(function (desc) {
	      if (removals.has(desc.key)) return desc;

	      // ...that there are no duplicate keys.
	      if (keys.has(desc.key)) desc = desc.set('key', (0, _uid2.default)());
	      keys = keys.add(desc.key);

	      // ...that void nodes contain a single space of content.
	      if (desc.isVoid && desc.text != ' ') {
	        desc = desc.merge({
	          nodes: _text3.default.createList([{
	            characters: _character2.default.createList([{ text: ' ' }])
	          }])
	        });
	      }

	      // ...that no block or inline has no text node inside it.
	      if (desc.kind != 'text' && desc.nodes.size == 0) {
	        var text = _text3.default.create();
	        var nodes = desc.nodes.push(text);
	        desc = desc.merge({ nodes: nodes });
	      }

	      // ...that no inline node is empty.
	      if (desc.kind == 'inline' && desc.text == '') {
	        removals = removals.add(desc.key);
	      }

	      return desc;
	    });

	    // Remove any nodes marked for removal.
	    removals.forEach(function (key) {
	      node = node.removeDescendant(key);
	    });

	    removals = removals.clear();

	    // And, ensuring...
	    node = node.mapDescendants(function (desc) {
	      if (desc.kind == 'text') {
	        var next = node.getNextSibling(desc);

	        // ...that there are no adjacent text nodes.
	        if (next && next.kind == 'text') {
	          while (next && next.kind == 'text') {
	            var characters = desc.characters.concat(next.characters);
	            desc = desc.merge({ characters: characters });
	            removals = removals.add(next.key);
	            next = node.getNextSibling(next);
	          }
	        }

	        // ...that there are no extra empty text nodes.
	        else if (desc.length == 0) {
	            var parent = node.getParent(desc);
	            if (!removals.has(parent.key) && parent.nodes.size > 1) {
	              removals = removals.add(desc.key);
	            }
	          }
	      }

	      return desc;
	    });

	    // Remove any nodes marked for removal.
	    removals.forEach(function (key) {
	      node = node.removeDescendant(key);
	    });

	    return node;
	  },


	  /**
	   * Remove children after a child by `key`.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  removeChildrenAfter: function removeChildrenAfter(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    var nodes = this.nodes.slice(0, index + 1);
	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Remove children after a child by `key`, including the child.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  removeChildrenAfterIncluding: function removeChildrenAfterIncluding(key) {
	    var child = this.assertChild(key);
	    var index = this.nodes.indexOf(child);
	    var nodes = this.nodes.slice(0, index);
	    return this.merge({ nodes: nodes });
	  },


	  /**
	   * Remove a `node` from the children node map.
	   *
	   * @param {String or Node} key
	   * @return {Node} node
	   */

	  removeDescendant: function removeDescendant(key) {
	    var node = this;
	    var desc = node.assertDescendant(key);
	    var parent = node.getParent(desc);
	    var index = parent.nodes.indexOf(desc);
	    var isParent = node == parent;
	    var nodes = parent.nodes.splice(index, 1);

	    parent = parent.merge({ nodes: nodes });
	    node = isParent ? parent : node.updateDescendant(parent);

	    return node;
	  },


	  /**
	   * Set a new value for a child node by `key`.
	   *
	   * @param {Node} node
	   * @return {Node} node
	   */

	  updateDescendant: function updateDescendant(node) {
	    this.assertDescendant(node);
	    return this.mapDescendants(function (d) {
	      return d.key == node.key ? node : d;
	    });
	  },


	  /**
	   * Validate the node against a `schema`.
	   *
	   * @param {Schema} schema
	   * @return {Object || Void}
	   */

	  validate: function validate(schema) {
	    return schema.__validate(this);
	  }
	};

	/**
	 * Memoize read methods.
	 */

	(0, _memoize2.default)(Node, ['assertChild', 'assertDescendant', 'filterDescendants', 'filterDescendantsDeep', 'findDescendant', 'getBlocks', 'getBlocksAtRange', 'getCharactersAtRange', 'getChild', 'getChildrenAfter', 'getChildrenAfterIncluding', 'getChildrenBefore', 'getChildrenBeforeIncluding', 'getChildrenBetween', 'getChildrenBetweenIncluding', 'getClosest', 'getClosestBlock', 'getClosestInline', 'getComponent', 'getDecorators', 'getDepth', 'getDescendant', 'getDescendantDecorators', 'getFragmentAtRange', 'getFurthest', 'getFurthestBlock', 'getFurthestInline', 'getHighestChild', 'getHighestOnlyChildParent', 'getInlinesAtRange', 'getMarksAtRange', 'getNextBlock', 'getNextSibling', 'getNextText', 'getOffset', 'getOffsetAtRange', 'getParent', 'getPreviousBlock', 'getPreviousSibling', 'getPreviousText', 'getTextAtOffset', 'getTextDirection', 'getTexts', 'getTextsAtRange', 'hasChild', 'hasDescendant', 'hasVoidParent', 'isInlineSplitAtRange', 'validate']);

	/**
	 * Normalize a `key`, from a key string or a node.
	 *
	 * @param {String or Node} key
	 * @return {String} key
	 */

	function normalizeKey(key) {
	  if (typeof key == 'string') return key;
	  return key.key;
	}

	/**
	 * Check if an `index` of a `text` node is in a `range`.
	 *
	 * @param {Number} index
	 * @param {Text} text
	 * @param {Selection} range
	 * @return {Set} characters
	 */

	function isInRange(index, text, range) {
	  var startKey = range.startKey;
	  var startOffset = range.startOffset;
	  var endKey = range.endKey;
	  var endOffset = range.endOffset;

	  var matcher = void 0;

	  if (text.key == startKey && text.key == endKey) {
	    return startOffset <= index && index < endOffset;
	  } else if (text.key == startKey) {
	    return startOffset <= index;
	  } else if (text.key == endKey) {
	    return index < endOffset;
	  } else {
	    return true;
	  }
	}

	/**
	 * Transforms.
	 */

	for (var key in _transforms2.default) {
	  Node[key] = _transforms2.default[key];
	}

	/**
	 * Export.
	 */

	exports.default = Node;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Record.
	 */

	var CharacterRecord = new _immutable.Record({
	  marks: new _immutable.Set(),
	  text: ''
	});

	/**
	 * Character.
	 */

	var Character = function (_CharacterRecord) {
	  _inherits(Character, _CharacterRecord);

	  function Character() {
	    _classCallCheck(this, Character);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Character).apply(this, arguments));
	  }

	  _createClass(Character, [{
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'character';
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a character record with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Character} character
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Character) return properties;
	      properties.marks = _mark2.default.createSet(properties.marks);
	      return new Character(properties);
	    }

	    /**
	     * Create a characters list from an array of characters.
	     *
	     * @param {Array} array
	     * @return {List} characters
	     */

	  }, {
	    key: 'createList',
	    value: function createList() {
	      var array = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      if (_immutable.List.isList(array)) return array;
	      return new _immutable.List(array.map(Character.create));
	    }
	  }]);

	  return Character;
	}(CharacterRecord);

	/**
	 * Export.
	 */

	exports.default = Character;

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _memoize = __webpack_require__(186);

	var _memoize2 = _interopRequireDefault(_memoize);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Record.
	 */

	var DEFAULTS = {
	  data: new _immutable.Map(),
	  type: null
	};

	/**
	 * Mark.
	 */

	var Mark = function (_ref) {
	  _inherits(Mark, _ref);

	  function Mark() {
	    _classCallCheck(this, Mark);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Mark).apply(this, arguments));
	  }

	  _createClass(Mark, [{
	    key: 'getComponent',


	    /**
	     * Get the component for the node from a `schema`.
	     *
	     * @param {Schema} schema
	     * @return {Component || Void}
	     */

	    value: function getComponent(schema) {
	      return schema.__getComponent(this);
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'mark';
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Mark` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Mark} mark
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Mark) return properties;
	      if (!properties.type) throw new Error('You must provide a `type` for the mark.');
	      properties.data = _data2.default.create(properties.data);
	      return new Mark(properties);
	    }

	    /**
	     * Create a marks set from an array of marks.
	     *
	     * @param {Array} array
	     * @return {Set} marks
	     */

	  }, {
	    key: 'createSet',
	    value: function createSet() {
	      var array = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      if (_immutable.Set.isSet(array)) return array;
	      return new _immutable.Set(array.map(Mark.create));
	    }
	  }]);

	  return Mark;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Memoize read methods.
	 */

	(0, _memoize2.default)(Mark.prototype, ['getComponent']);

	/**
	 * Export.
	 */

	exports.default = Mark;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _immutable = __webpack_require__(182);

	/**
	 * The leaf node of a cache tree.
	 *
	 * An object, so that immutable maps will key it by reference.
	 *
	 * @type {Object}
	 */

	var LEAF = {};

	/**
	 * Memoize all of the `properties` on a `object`.
	 *
	 * @param {Object} object
	 * @param {Array} properties
	 * @return {Record}
	 */

	function memoize(object, properties) {
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    var _loop = function _loop() {
	      var property = _step.value;

	      var original = object[property];

	      if (!original) {
	        throw new Error('Object does not have a property named "' + property + '".');
	      }

	      object[property] = function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }

	        var keys = [property].concat(args, [LEAF]);
	        var cache = this.__cache = this.__cache || new _immutable.Map();

	        if (cache.hasIn(keys)) return cache.getIn(keys);

	        var value = original.apply(this, args);
	        this.__cache = cache.setIn(keys, value);
	        return value;
	      };
	    };

	    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      _loop();
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	}

	/**
	 * Export.
	 */

	exports.default = memoize;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	var _memoize = __webpack_require__(186);

	var _memoize2 = _interopRequireDefault(_memoize);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Start-and-end convenience methods to auto-generate.
	 */

	var START_END_METHODS = ['collapseTo%'];

	/**
	 * Start-end-and-edge convenience methods to auto-generate.
	 */

	var EDGE_METHODS = ['has%AtStartOf', 'has%AtEndOf', 'has%Between', 'has%In'];

	/**
	 * Default properties.
	 */

	var DEFAULTS = {
	  anchorKey: null,
	  anchorOffset: 0,
	  focusKey: null,
	  focusOffset: 0,
	  isBackward: null,
	  isFocused: false
	};

	/**
	 * Selection.
	 */

	var Selection = function (_ref) {
	  _inherits(Selection, _ref);

	  function Selection() {
	    _classCallCheck(this, Selection);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Selection).apply(this, arguments));
	  }

	  _createClass(Selection, [{
	    key: 'hasAnchorAtStartOf',


	    /**
	     * Check whether anchor point of the selection is at the start of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	    value: function hasAnchorAtStartOf(node) {
	      if (this.anchorOffset != 0) return false;
	      var first = node.kind == 'text' ? node : node.getTexts().first();
	      return this.anchorKey == first.key;
	    }

	    /**
	     * Check whether anchor point of the selection is at the end of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasAnchorAtEndOf',
	    value: function hasAnchorAtEndOf(node) {
	      var last = node.kind == 'text' ? node : node.getTexts().last();
	      return this.anchorKey == last.key && this.anchorOffset == last.length;
	    }

	    /**
	     * Check whether the anchor edge of a selection is in a `node` and at an
	     * offset between `start` and `end`.
	     *
	     * @param {Node} node
	     * @param {Number} start
	     * @param {Number} end
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasAnchorBetween',
	    value: function hasAnchorBetween(node, start, end) {
	      return this.anchorOffset <= end && start <= this.anchorOffset && this.hasAnchorIn(node);
	    }

	    /**
	     * Check whether the anchor edge of a selection is in a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasAnchorIn',
	    value: function hasAnchorIn(node) {
	      var _this2 = this;

	      var nodes = node.kind == 'text' ? [node] : node.getTexts();
	      return nodes.some(function (n) {
	        return n.key == _this2.anchorKey;
	      });
	    }

	    /**
	     * Check whether focus point of the selection is at the end of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFocusAtEndOf',
	    value: function hasFocusAtEndOf(node) {
	      var last = node.kind == 'text' ? node : node.getTexts().last();
	      return this.focusKey == last.key && this.focusOffset == last.length;
	    }

	    /**
	     * Check whether focus point of the selection is at the start of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFocusAtStartOf',
	    value: function hasFocusAtStartOf(node) {
	      if (this.focusOffset != 0) return false;
	      var first = node.kind == 'text' ? node : node.getTexts().first();
	      return this.focusKey == first.key;
	    }

	    /**
	     * Check whether the focus edge of a selection is in a `node` and at an
	     * offset between `start` and `end`.
	     *
	     * @param {Node} node
	     * @param {Number} start
	     * @param {Number} end
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFocusBetween',
	    value: function hasFocusBetween(node, start, end) {
	      return start <= this.focusOffset && this.focusOffset <= end && this.hasFocusIn(node);
	    }

	    /**
	     * Check whether the focus edge of a selection is in a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFocusIn',
	    value: function hasFocusIn(node) {
	      var _this3 = this;

	      var nodes = node.kind == 'text' ? [node] : node.getTexts();
	      return nodes.some(function (n) {
	        return n.key == _this3.focusKey;
	      });
	    }

	    /**
	     * Check whether the selection is at the start of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean} isAtStart
	     */

	  }, {
	    key: 'isAtStartOf',
	    value: function isAtStartOf(node) {
	      var isExpanded = this.isExpanded;
	      var startKey = this.startKey;
	      var startOffset = this.startOffset;

	      if (isExpanded) return false;
	      if (startOffset != 0) return false;
	      var first = node.kind == 'text' ? node : node.getTexts().first();
	      return startKey == first.key;
	    }

	    /**
	     * Check whether the selection is at the end of a `node`.
	     *
	     * @param {Node} node
	     * @return {Boolean} isAtEnd
	     */

	  }, {
	    key: 'isAtEndOf',
	    value: function isAtEndOf(node) {
	      var endKey = this.endKey;
	      var endOffset = this.endOffset;
	      var isExpanded = this.isExpanded;

	      if (isExpanded) return false;
	      var last = node.kind == 'text' ? node : node.getTexts().last();
	      return endKey == last.key && endOffset == last.length;
	    }

	    /**
	     * Normalize the selection, relative to a `node`, ensuring that the anchor
	     * and focus nodes of the selection always refer to leaf text nodes.
	     *
	     * @param {Node} node
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'normalize',
	    value: function normalize(node) {
	      var selection = this;
	      var isCollapsed = selection.isCollapsed;
	      var anchorKey = selection.anchorKey;
	      var anchorOffset = selection.anchorOffset;
	      var focusKey = selection.focusKey;
	      var focusOffset = selection.focusOffset;
	      var isBackward = selection.isBackward;

	      // If the selection isn't formed yet or is malformed, set it to the
	      // beginning of the node.

	      if (anchorKey == null || focusKey == null || !node.hasDescendant(anchorKey) || !node.hasDescendant(focusKey)) {
	        var first = node.getTexts().first();
	        return selection.merge({
	          anchorKey: first.key,
	          anchorOffset: 0,
	          focusKey: first.key,
	          focusOffset: 0,
	          isBackward: false
	        });
	      }

	      // Get the anchor and focus nodes.
	      var anchorNode = node.getDescendant(anchorKey);
	      var focusNode = node.getDescendant(focusKey);

	      // If the anchor node isn't a text node, match it to one.
	      if (anchorNode.kind != 'text') {
	        var anchorText = anchorNode.getTextAtOffset(anchorOffset);
	        var offset = anchorNode.getOffset(anchorText);
	        anchorOffset = anchorOffset - offset;
	        anchorNode = anchorText;
	      }

	      // If the focus node isn't a text node, match it to one.
	      if (focusNode.kind != 'text') {
	        var focusText = focusNode.getTextAtOffset(focusOffset);
	        var _offset = focusNode.getOffset(focusText);
	        focusOffset = focusOffset - _offset;
	        focusNode = focusText;
	      }

	      // If `isBackward` is not set, derive it.
	      if (isBackward == null) {
	        var texts = node.getTexts();
	        var anchorIndex = texts.indexOf(anchorNode);
	        var focusIndex = texts.indexOf(focusNode);
	        isBackward = anchorIndex == focusIndex ? anchorOffset > focusOffset : anchorIndex > focusIndex;
	      }

	      // Merge in any updated properties.
	      return selection.merge({
	        anchorKey: anchorNode.key,
	        anchorOffset: anchorOffset,
	        focusKey: focusNode.key,
	        focusOffset: focusOffset,
	        isBackward: isBackward
	      });
	    }

	    /**
	     * Focus the selection.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'focus',
	    value: function focus() {
	      return this.merge({
	        isFocused: true
	      });
	    }

	    /**
	     * Blur the selection.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'blur',
	    value: function blur() {
	      return this.merge({
	        isFocused: false
	      });
	    }

	    /**
	     * Move the focus point to the anchor point.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'collapseToAnchor',
	    value: function collapseToAnchor() {
	      return this.merge({
	        focusKey: this.anchorKey,
	        focusOffset: this.anchorOffset,
	        isBackward: false
	      });
	    }

	    /**
	     * Move the anchor point to the focus point.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'collapseToFocus',
	    value: function collapseToFocus() {
	      return this.merge({
	        anchorKey: this.focusKey,
	        anchorOffset: this.focusOffset,
	        isBackward: false
	      });
	    }

	    /**
	     * Move to the start of a `node`.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'collapseToStartOf',
	    value: function collapseToStartOf(node) {
	      return this.merge({
	        anchorKey: node.key,
	        anchorOffset: 0,
	        focusKey: node.key,
	        focusOffset: 0,
	        isBackward: false
	      });
	    }

	    /**
	     * Move to the end of a `node`.
	     *
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'collapseToEndOf',
	    value: function collapseToEndOf(node) {
	      return this.merge({
	        anchorKey: node.key,
	        anchorOffset: node.length,
	        focusKey: node.key,
	        focusOffset: node.length,
	        isBackward: false
	      });
	    }

	    /**
	     * Move to the entire range of `start` and `end` nodes.
	     *
	     * @param {Node} start
	     * @param {Node} end (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'moveToRangeOf',
	    value: function moveToRangeOf(start) {
	      var end = arguments.length <= 1 || arguments[1] === undefined ? start : arguments[1];

	      return this.merge({
	        anchorKey: start.key,
	        anchorOffset: 0,
	        focusKey: end.key,
	        focusOffset: end.length,
	        isBackward: start == end ? false : null
	      });
	    }

	    /**
	     * Move the selection forward `n` characters.
	     *
	     * @param {Number} n (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'moveForward',
	    value: function moveForward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      return this.merge({
	        anchorOffset: this.anchorOffset + n,
	        focusOffset: this.focusOffset + n
	      });
	    }

	    /**
	     * Move the selection backward `n` characters.
	     *
	     * @param {Number} n (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'moveBackward',
	    value: function moveBackward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      return this.merge({
	        anchorOffset: this.anchorOffset - n,
	        focusOffset: this.focusOffset - n
	      });
	    }

	    /**
	     * Move the selection to `anchor` and `focus` offsets.
	     *
	     * @param {Number} anchor
	     * @param {Number} focus (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'moveToOffsets',
	    value: function moveToOffsets(anchor) {
	      var focus = arguments.length <= 1 || arguments[1] === undefined ? anchor : arguments[1];

	      return this.merge({
	        anchorOffset: anchor,
	        focusOffset: focus,
	        isBackward: null
	      });
	    }

	    /**
	     * Extend the focus point forward `n` characters.
	     *
	     * @param {Number} n (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'extendForward',
	    value: function extendForward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      return this.merge({
	        focusOffset: this.focusOffset + n,
	        isBackward: null
	      });
	    }

	    /**
	     * Extend the focus point backward `n` characters.
	     *
	     * @param {Number} n (optional)
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'extendBackward',
	    value: function extendBackward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      return this.merge({
	        focusOffset: this.focusOffset - n,
	        isBackward: null
	      });
	    }

	    /**
	     * Extend the focus point to the start of a `node`.
	     *
	     * @param {Node} node
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'extendToStartOf',
	    value: function extendToStartOf(node) {
	      return this.merge({
	        focusKey: node.key,
	        focusOffset: 0,
	        isBackward: null
	      });
	    }

	    /**
	     * Extend the focus point to the end of a `node`.
	     *
	     * @param {Node} node
	     * @return {Selection} selection
	     */

	  }, {
	    key: 'extendToEndOf',
	    value: function extendToEndOf(node) {
	      return this.merge({
	        focusKey: node.key,
	        focusOffset: node.length,
	        isBackward: null
	      });
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'selection';
	    }

	    /**
	     * Get whether the selection is blurred.
	     *
	     * @return {Boolean} isBlurred
	     */

	  }, {
	    key: 'isBlurred',
	    get: function get() {
	      return !this.isFocused;
	    }

	    /**
	     * Get whether the selection is collapsed.
	     *
	     * @return {Boolean} isCollapsed
	     */

	  }, {
	    key: 'isCollapsed',
	    get: function get() {
	      return this.anchorKey == this.focusKey && this.anchorOffset == this.focusOffset;
	    }

	    /**
	     * Get whether the selection is expanded.
	     *
	     * @return {Boolean} isExpanded
	     */

	  }, {
	    key: 'isExpanded',
	    get: function get() {
	      return !this.isCollapsed;
	    }

	    /**
	     * Get whether the selection is forward.
	     *
	     * @return {Boolean} isForward
	     */

	  }, {
	    key: 'isForward',
	    get: function get() {
	      return this.isBackward == null ? null : !this.isBackward;
	    }

	    /**
	     * Get the start key.
	     *
	     * @return {String} startKey
	     */

	  }, {
	    key: 'startKey',
	    get: function get() {
	      return this.isBackward ? this.focusKey : this.anchorKey;
	    }
	  }, {
	    key: 'startOffset',
	    get: function get() {
	      return this.isBackward ? this.focusOffset : this.anchorOffset;
	    }
	  }, {
	    key: 'endKey',
	    get: function get() {
	      return this.isBackward ? this.anchorKey : this.focusKey;
	    }
	  }, {
	    key: 'endOffset',
	    get: function get() {
	      return this.isBackward ? this.anchorOffset : this.focusOffset;
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Selection` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Selection} selection
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Selection) return properties;
	      return new Selection(properties);
	    }
	  }]);

	  return Selection;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Add start, end and edge convenience methods.
	 */

	START_END_METHODS.concat(EDGE_METHODS).forEach(function (pattern) {
	  var _pattern$split = pattern.split('%');

	  var _pattern$split2 = _slicedToArray(_pattern$split, 2);

	  var p = _pattern$split2[0];
	  var s = _pattern$split2[1];

	  var anchor = p + 'Anchor' + s;
	  var edge = p + 'Edge' + s;
	  var end = p + 'End' + s;
	  var focus = p + 'Focus' + s;
	  var start = p + 'Start' + s;

	  Selection.prototype[start] = function () {
	    return this.isBackward ? this[focus].apply(this, arguments) : this[anchor].apply(this, arguments);
	  };

	  Selection.prototype[end] = function () {
	    return this.isBackward ? this[anchor].apply(this, arguments) : this[focus].apply(this, arguments);
	  };

	  if (!(0, _includes2.default)(EDGE_METHODS, pattern)) return;

	  Selection.prototype[edge] = function () {
	    return this[anchor].apply(this, arguments) || this[focus].apply(this, arguments);
	  };
	});

	/**
	 * Memoize read methods.
	 */

	(0, _memoize2.default)(Selection.prototype, ['hasAnchorAtStartOf', 'hasAnchorAtEndOf', 'hasAnchorBetween', 'hasAnchorIn', 'hasFocusAtEndOf', 'hasFocusAtStartOf', 'hasFocusBetween', 'hasFocusIn', 'isAtStartOf', 'isAtEndOf']);

	/**
	 * Export.
	 */

	exports.default = Selection;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(189),
	    isArrayLike = __webpack_require__(192),
	    isString = __webpack_require__(196),
	    toInteger = __webpack_require__(199),
	    values = __webpack_require__(203);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Checks if `value` is in `collection`. If `collection` is a string, it's
	 * checked for a substring of `value`, otherwise
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'a': 1, 'b': 2 }, 1);
	 * // => true
	 *
	 * _.includes('abcd', 'bc');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}

	module.exports = includes;


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(190),
	    baseIsNaN = __webpack_require__(191);

	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return baseFindIndex(array, baseIsNaN, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;

	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseIndexOf;


/***/ },
/* 190 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);

	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseFindIndex;


/***/ },
/* 191 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}

	module.exports = baseIsNaN;


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(193),
	    isLength = __webpack_require__(195);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(194);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	module.exports = isFunction;


/***/ },
/* 194 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 195 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(197),
	    isObjectLike = __webpack_require__(198);

	/** `Object#toString` result references. */
	var stringTag = '[object String]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}

	module.exports = isString;


/***/ },
/* 197 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 198 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(200);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(201);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	module.exports = toFinite;


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(194),
	    isSymbol = __webpack_require__(202);

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(198);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(204),
	    keys = __webpack_require__(206);

	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object ? baseValues(object, keys(object)) : [];
	}

	module.exports = values;


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(205);

	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}

	module.exports = baseValues;


/***/ },
/* 205 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(207),
	    baseKeys = __webpack_require__(212),
	    isArrayLike = __webpack_require__(192);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(208),
	    isArguments = __webpack_require__(209),
	    isArray = __webpack_require__(197),
	    isIndex = __webpack_require__(211);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];

	  var length = result.length,
	      skipIndexes = !!length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ },
/* 208 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(210);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	module.exports = isArguments;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(192),
	    isObjectLike = __webpack_require__(198);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ },
/* 211 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(213),
	    nativeKeys = __webpack_require__(214);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeys;


/***/ },
/* 213 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(215);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);

	module.exports = nativeKeys;


/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _data = __webpack_require__(181);

	var _data2 = _interopRequireDefault(_data);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _selection = __webpack_require__(187);

	var _selection2 = _interopRequireDefault(_selection);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _typeOf = __webpack_require__(220);

	var _typeOf2 = _interopRequireDefault(_typeOf);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Transforms.
	 *
	 * These are pulled out into their own file because they can get complex.
	 */

	var Transforms = {

	  /**
	   * Add a new `mark` to the characters at `range`.
	   *
	   * @param {Selection} range
	   * @param {Mark or String or Object} mark
	   * @return {Node} node
	   */

	  addMarkAtRange: function addMarkAtRange(range, mark) {
	    mark = normalizeMark(mark);
	    var node = this;

	    // When the range is collapsed, do nothing.
	    if (range.isCollapsed) return node;

	    // Otherwise, find each of the text nodes within the range.
	    var startKey = range.startKey;
	    var startOffset = range.startOffset;
	    var endKey = range.endKey;
	    var endOffset = range.endOffset;

	    var texts = node.getTextsAtRange(range);

	    // Apply the mark to each of the text nodes's matching characters.
	    texts = texts.map(function (text) {
	      var characters = text.characters.map(function (char, i) {
	        if (!isInRange(i, text, range)) return char;
	        var marks = char.marks;

	        marks = marks.add(mark);
	        return char.merge({ marks: marks });
	      });

	      return text.merge({ characters: characters });
	    });

	    // Update each of the text nodes.
	    texts.forEach(function (text) {
	      node = node.updateDescendant(text);
	    });

	    return node;
	  },


	  /**
	   * Delete everything in a `range`.
	   *
	   * @param {Selection} range
	   * @return {Node} node
	   */

	  deleteAtRange: function deleteAtRange(range) {
	    if (range.isCollapsed) return this;

	    var node = this;

	    // Make sure the children exist.
	    var startKey = range.startKey;
	    var startOffset = range.startOffset;
	    var endKey = range.endKey;
	    var endOffset = range.endOffset;

	    node.assertDescendant(startKey);
	    node.assertDescendant(endKey);

	    // If the start and end nodes are the same, just remove characters.
	    if (startKey == endKey) {
	      var text = node.getDescendant(startKey);
	      text = text.removeCharacters(startOffset, endOffset);
	      node = node.updateDescendant(text);
	      return node.normalize();
	    }

	    // Split the blocks and determine the edge boundaries.
	    var start = range.collapseToStart();
	    var end = range.collapseToEnd();
	    var ancestor = node.getCommonAncestor(startKey, endKey);
	    var isAncestor = ancestor == node;

	    ancestor = ancestor.splitBlockAtRange(start, Infinity);
	    ancestor = ancestor.splitBlockAtRange(end, Infinity);

	    var startText = ancestor.getDescendant(startKey);
	    var startEdgeText = ancestor.getNextText(startKey);

	    var endText = ancestor.getNextText(endKey);
	    var endEdgeText = ancestor.getDescendant(endKey);

	    // Remove the new blocks inside the edges.
	    var startEdgeBlock = ancestor.getFurthestBlock(startEdgeText);
	    var endEdgeBlock = ancestor.getFurthestBlock(endEdgeText);

	    var nodes = ancestor.nodes.takeUntil(function (n) {
	      return n == startEdgeBlock;
	    }).concat(ancestor.nodes.skipUntil(function (n) {
	      return n == endEdgeBlock;
	    }).rest());

	    ancestor = ancestor.merge({ nodes: nodes });

	    // Take the end edge's inline nodes and move them to the start edge.
	    var startBlock = ancestor.getClosestBlock(startText);
	    var endBlock = ancestor.getClosestBlock(endText);

	    var startNodes = startBlock.nodes.concat(endBlock.nodes);
	    startBlock = startBlock.merge({ nodes: startNodes });
	    ancestor = ancestor.updateDescendant(startBlock);

	    // While the end child is an only child, remove the block it's in.
	    var endParent = ancestor.getClosestBlock(endBlock);

	    while (endParent && endParent.nodes.size == 1) {
	      endBlock = endParent;
	      endParent = ancestor.getClosestBlock(endParent);
	    }

	    ancestor = ancestor.removeDescendant(endBlock);

	    // Update the node.
	    node = isAncestor ? ancestor : node.updateDescendant(ancestor);

	    // Normalize the adjacent text nodes.
	    return node.normalize();
	  },


	  /**
	   * Delete backward `n` characters at a `range`.
	   *
	   * @param {Selection} range
	   * @param {Number} n (optional)
	   * @return {Node} node
	   */

	  deleteBackwardAtRange: function deleteBackwardAtRange(range) {
	    var n = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];

	    var node = this;
	    var _range = range;
	    var startKey = _range.startKey;
	    var startOffset = _range.startOffset;

	    // When the range is still expanded, just do a regular delete.

	    if (range.isExpanded) return node.deleteAtRange(range);

	    // When collapsed at the start of the node, there's nothing to do.
	    if (range.isAtStartOf(node)) return node;

	    // When collapsed in a void node, remove that node.
	    var block = node.getClosestBlock(startKey);
	    if (block && block.isVoid) return node.removeDescendant(block);

	    var inline = node.getClosestInline(startKey);
	    if (inline && inline.isVoid) return node.removeDescendant(inline);

	    // When at start of a text node, merge forwards into the next text node.
	    var startNode = node.getDescendant(startKey);

	    if (range.isAtStartOf(startNode)) {
	      var previous = node.getPreviousText(startNode);

	      // If the previous descendant is void, remove it.
	      var prevBlock = node.getClosestBlock(previous);
	      if (prevBlock && prevBlock.isVoid) return node.removeDescendant(prevBlock);

	      var prevInline = node.getClosestInline(previous);
	      if (prevInline && prevInline.isVoid) return node.removeDescendant(prevInline);

	      range = range.extendToEndOf(previous);
	      range = range.normalize(node);
	      return node.deleteAtRange(range);
	    }

	    // Otherwise, remove `n` characters behind of the cursor.
	    range = range.extendBackward(n);
	    range = range.normalize(node);
	    return node.deleteAtRange(range);
	  },


	  /**
	   * Delete forward `n` characters at a `range`.
	   *
	   * @param {Selection} range
	   * @param {Number} n (optional)
	   * @return {Node} node
	   */

	  deleteForwardAtRange: function deleteForwardAtRange(range) {
	    var n = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];

	    var node = this;
	    var _range2 = range;
	    var startKey = _range2.startKey;

	    // When the range is still expanded, just do a regular delete.

	    if (range.isExpanded) return node.deleteAtRange(range);

	    // When collapsed at the end of the node, there's nothing to do.
	    if (range.isAtEndOf(node)) return node;

	    // When collapsed in a void node, remove that node.
	    var block = node.getClosestBlock(startKey);
	    if (block && block.isVoid) return node.removeDescendant(block);

	    var inline = node.getClosestInline(startKey);
	    if (inline && inline.isVoid) return node.removeDescendant(inline);

	    // When at end of a text node, merge forwards into the next text node.
	    var startNode = node.getDescendant(startKey);
	    if (range.isAtEndOf(startNode)) {
	      var next = node.getNextText(startNode);
	      range = range.extendToStartOf(next);
	      range = range.normalize(node);
	      return node.deleteAtRange(range);
	    }

	    // Otherwise, remove `n` characters ahead of the cursor.
	    range = range.extendForward(n);
	    range = range.normalize(node);
	    return node.deleteAtRange(range);
	  },


	  /**
	   * Insert a `block` node at `range`.
	   *
	   * @param {Selection} range
	   * @param {Block or String or Object} block
	   * @return {Node} node
	   */

	  insertBlockAtRange: function insertBlockAtRange(range, block) {
	    block = normalizeBlock(block);
	    var node = this;

	    // If expanded, delete the range first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    var _range3 = range;
	    var startKey = _range3.startKey;
	    var startOffset = _range3.startOffset;

	    var startBlock = node.getClosestBlock(startKey);
	    var parent = node.getParent(startBlock);
	    var nodes = _block2.default.createList([block]);
	    var isParent = parent == node;

	    // If the start block is void, insert after it.
	    if (startBlock.isVoid) {
	      parent = parent.insertChildrenAfter(startBlock, nodes);
	    }

	    // If the block is empty, replace it.
	    else if (startBlock.isEmpty) {
	        parent = parent.insertChildrenAfter(startBlock, nodes);
	        parent = parent.removeDescendant(startBlock);
	      }

	      // If the range is at the start of the block, insert before.
	      else if (range.isAtStartOf(startBlock)) {
	          parent = parent.insertChildrenBefore(startBlock, nodes);
	        }

	        // If the range is at the end of the block, insert after.
	        else if (range.isAtEndOf(startBlock)) {
	            parent = parent.insertChildrenAfter(startBlock, nodes);
	          }

	          // Otherwise, split the block and insert between.
	          else {
	              node = node.splitBlockAtRange(range);
	              parent = node.getParent(startBlock);
	              startBlock = node.getClosestBlock(startKey);
	              nodes = parent.nodes.takeUntil(function (n) {
	                return n == startBlock;
	              }).push(startBlock).push(block).concat(parent.nodes.skipUntil(function (n) {
	                return n == startBlock;
	              }).rest());
	              parent = parent.merge({ nodes: nodes });
	            }

	    node = isParent ? parent : node.updateDescendant(parent);

	    return node.normalize();
	  },


	  /**
	   * Insert a `fragment` at a `range`.
	   *
	   * @param {Selection} range
	   * @param {Document} fragment
	   * @return {Node} node
	   */

	  insertFragmentAtRange: function insertFragmentAtRange(range, fragment) {
	    range = range.normalize(this);
	    var node = this;

	    // If the range is expanded, delete first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    // If the fragment is empty, do nothing.
	    if (!fragment.length) return node;

	    // Make sure each node in the fragment has a unique key.
	    fragment = fragment.mapDescendants(function (child) {
	      return child.set('key', (0, _uid2.default)());
	    });

	    // Split the inlines if need be.
	    if (!node.isInlineSplitAtRange(range)) {
	      node = node.splitInlineAtRange(range);
	    }

	    // Determine the start and next children to insert into.
	    var _range4 = range;
	    var startKey = _range4.startKey;
	    var endKey = _range4.endKey;

	    var block = node.getClosestBlock(startKey);
	    var start = node.getDescendant(startKey);
	    var startChild = void 0;
	    var nextChild = void 0;

	    if (range.isAtStartOf(node)) {
	      nextChild = node.getClosestBlock(node.getTexts().first());
	    }

	    if (range.isAtStartOf(block)) {
	      nextChild = block.getHighestChild(block.getTexts().first());
	    } else if (range.isAtStartOf(start)) {
	      startChild = block.getHighestChild(block.getPreviousText(start));
	      nextChild = block.getNextSibling(startChild);
	    } else {
	      startChild = block.getHighestChild(start);
	      nextChild = block.getNextSibling(startChild);
	    }

	    // Get the first and last block of the fragment.
	    var blocks = fragment.getBlocks();
	    var firstBlock = blocks.first();
	    var lastBlock = blocks.last();

	    // If the block is empty, merge in the first block's type and data.
	    if (block.length == 0) {
	      block = block.merge({
	        type: firstBlock.type,
	        data: firstBlock.data
	      });
	    }

	    // Insert the first blocks nodes into the starting block.
	    if (startChild) {
	      block = block.insertChildrenAfter(startChild, firstBlock.nodes);
	    } else {
	      block = block.insertChildrenBefore(nextChild, firstBlock.nodes);
	    }

	    node = node.updateDescendant(block);

	    // If there are no other siblings, that's it.
	    if (firstBlock == lastBlock) return node.normalize();

	    // Otherwise, remove the fragment's first block's highest solo parent...
	    var highestParent = fragment.getHighestOnlyChildParent(firstBlock);
	    fragment = fragment.removeDescendant(highestParent || firstBlock);

	    // Then, add the inlines after the cursor from the current block to the
	    // start of the last block in the fragment.
	    if (nextChild) {
	      lastBlock = lastBlock.concatChildren(block.getChildrenAfterIncluding(nextChild));
	      fragment = fragment.updateDescendant(lastBlock);

	      block = block.removeChildrenAfterIncluding(nextChild);
	      node = node.updateDescendant(block);
	    }

	    // Finally, add the fragment's children after the block.
	    node = node.insertChildrenAfter(block, fragment.nodes);
	    return node.normalize();
	  },


	  /**
	   * Insert an `inline` node at `range`.
	   *
	   * @param {Selection} range
	   * @param {Inline or String or Object} inline
	   * @return {Node} node
	   */

	  insertInlineAtRange: function insertInlineAtRange(range, inline) {
	    inline = normalizeInline(inline);
	    var node = this;

	    // If expanded, delete the range first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    var _range5 = range;
	    var startKey = _range5.startKey;
	    var endKey = _range5.endKey;
	    var startOffset = _range5.startOffset;
	    var endOffset = _range5.endOffset;

	    // If the range is inside a void, abort.

	    var startBlock = node.getClosestBlock(startKey);
	    if (startBlock && startBlock.isVoid) return node;

	    var startInline = node.getClosestInline(startKey);
	    if (startInline && startInline.isVoid) return node;

	    // Split the text nodes at the cursor.
	    node = node.splitTextAtRange(range);

	    // Insert the inline between the split text nodes.
	    var startText = node.getDescendant(startKey);
	    var parent = node.getParent(startKey);
	    var nodes = parent.nodes.takeUntil(function (n) {
	      return n == startText;
	    }).push(startText).push(inline).concat(parent.nodes.skipUntil(function (n) {
	      return n == startText;
	    }).rest());

	    parent = parent.merge({ nodes: nodes });
	    node = node.updateDescendant(parent);
	    return node.normalize();
	  },


	  /**
	   * Insert text `string` at a `range`, with optional `marks`.
	   *
	   * @param {Selection} range
	   * @param {String} string
	   * @param {Set} marks (optional)
	   * @return {Node} node
	   */

	  insertTextAtRange: function insertTextAtRange(range, string, marks) {
	    var node = this;

	    // If inside a void node, do nothing.
	    var _range6 = range;
	    var startKey = _range6.startKey;
	    var startOffset = _range6.startOffset;

	    var isVoid = node.hasVoidParent(startKey);
	    if (isVoid) return node;

	    // When still expanded, remove the current range first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    // Insert text at the range's offset.
	    var text = node.getDescendant(startKey);
	    text = text.insertText(startOffset, string, marks);
	    node = node.updateDescendant(text);

	    return node;
	  },


	  /**
	   * Remove an existing `mark` to the characters at `range`.
	   *
	   * @param {Selection} range
	   * @param {Mark or String} mark (optional)
	   * @return {Node} node
	   */

	  removeMarkAtRange: function removeMarkAtRange(range, mark) {
	    mark = normalizeMark(mark);
	    var node = this;

	    // When the range is collapsed, do nothing.
	    if (range.isCollapsed) return node;

	    // Otherwise, find each of the text nodes within the range.
	    var texts = node.getTextsAtRange(range);

	    // Apply the mark to each of the text nodes's matching characters.
	    texts = texts.map(function (text) {
	      var characters = text.characters.map(function (char, i) {
	        if (!isInRange(i, text, range)) return char;
	        var marks = char.marks;

	        marks = mark ? marks.remove(mark) : marks.clear();
	        return char.merge({ marks: marks });
	      });

	      return text.merge({ characters: characters });
	    });

	    // Update each of the text nodes.
	    texts.forEach(function (text) {
	      node = node.updateDescendant(text);
	    });

	    return node;
	  },


	  /**
	   * Remove a node by `key`.
	   *
	   * @param {String} key
	   * @return {Node} node
	   */

	  removeNodeByKey: function removeNodeByKey(key) {
	    return this.removeDescendant(key).normalize();
	  },


	  /**
	   * Set the `properties` of block nodes in a `range`.
	   *
	   * @param {Selection} range
	   * @param {Object or String} properties
	   * @return {Node} node
	   */

	  setBlockAtRange: function setBlockAtRange(range) {
	    var properties = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    properties = normalizeProperties(properties);
	    var node = this;
	    var blocks = node.getBlocksAtRange(range);

	    blocks.forEach(function (block) {
	      block = block.merge(properties);
	      node = node.updateDescendant(block);
	    });

	    return node.normalize();
	  },


	  /**
	   * Set the `properties` of inline nodes in a `range`.
	   *
	   * @param {Selection} range
	   * @param {Object or String} properties
	   * @return {Node} node
	   */

	  setInlineAtRange: function setInlineAtRange(range) {
	    var properties = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    properties = normalizeProperties(properties);
	    var node = this;
	    var inlines = node.getInlinesAtRange(range);

	    inlines.forEach(function (inline) {
	      inline = inline.merge(properties);
	      node = node.updateDescendant(inline);
	    });

	    return node.normalize();
	  },


	  /**
	   * Set `properties` on a node by `key`.
	   *
	   * @param {String} key
	   * @param {Object or String} properties
	   * @return {Node} node
	   */

	  setNodeByKey: function setNodeByKey(key, properties) {
	    properties = normalizeProperties(properties);
	    var node = this;
	    var descendant = node.assertDescendant(key);
	    descendant = descendant.merge(properties);
	    node = node.updateDescendant(descendant);
	    return node;
	  },


	  /**
	   * Split the block nodes at a `range`, to optional `depth`.
	   *
	   * @param {Selection} range
	   * @param {Number} depth (optional)
	   * @return {Node} node
	   */

	  splitBlockAtRange: function splitBlockAtRange(range) {
	    var depth = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];

	    var node = this;

	    // If the range is expanded, remove it first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    // Split the inline nodes at the range.
	    node = node.splitInlineAtRange(range);

	    // Find the highest inline elements that were split.
	    var _range7 = range;
	    var startKey = _range7.startKey;

	    var firstText = node.getDescendant(startKey);
	    var secondText = node.getNextText(startKey);
	    var firstChild = node.getFurthestInline(firstText) || firstText;
	    var secondChild = node.getFurthestInline(secondText) || secondText;
	    var parent = node.getClosestBlock(firstChild);
	    var firstChildren = void 0;
	    var secondChildren = void 0;
	    var d = 0;

	    // While the parent is a block, split the block nodes.
	    while (parent && d < depth) {
	      firstChildren = parent.nodes.takeUntil(function (n) {
	        return n == firstChild;
	      }).push(firstChild);
	      secondChildren = parent.nodes.skipUntil(function (n) {
	        return n == secondChild;
	      });
	      firstChild = parent.merge({ nodes: firstChildren });
	      secondChild = _block2.default.create({
	        nodes: secondChildren,
	        type: parent.type,
	        data: parent.data
	      });

	      // Add the new children.
	      var grandparent = node.getParent(parent);
	      var nodes = grandparent.nodes.takeUntil(function (n) {
	        return n.key == firstChild.key;
	      }).push(firstChild).push(secondChild).concat(grandparent.nodes.skipUntil(function (n) {
	        return n.key == firstChild.key;
	      }).rest());

	      // Update the grandparent.
	      node = grandparent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(grandparent.merge({ nodes: nodes }));

	      d++;
	      parent = node.getClosestBlock(firstChild);
	    }

	    return node;
	  },


	  /**
	   * Split the inline nodes at a `range`, to optional `depth`.
	   *
	   * @param {Selection} range
	   * @param {Number} depth (optiona)
	   * @return {Node} node
	   */

	  splitInlineAtRange: function splitInlineAtRange(range) {
	    var depth = arguments.length <= 1 || arguments[1] === undefined ? Infinity : arguments[1];

	    var node = this;

	    // If the range is expanded, remove it first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    // First split the text nodes.
	    node = node.splitTextAtRange(range);

	    // Find the children that were split.
	    var _range8 = range;
	    var startKey = _range8.startKey;

	    var firstChild = node.getDescendant(startKey);
	    var secondChild = node.getNextText(firstChild);
	    var parent = node.getClosestInline(firstChild);
	    var d = 0;

	    // While the parent is an inline parent, split the inline nodes.
	    while (parent && d < depth) {
	      firstChild = parent.merge({ nodes: _inline2.default.createList([firstChild]) });
	      secondChild = _inline2.default.create({
	        nodes: [secondChild],
	        type: parent.type,
	        data: parent.data
	      });

	      // Split the children.
	      var grandparent = node.getParent(parent);
	      var nodes = grandparent.nodes.takeUntil(function (n) {
	        return n.key == firstChild.key;
	      }).push(firstChild).push(secondChild).concat(grandparent.nodes.skipUntil(function (n) {
	        return n.key == firstChild.key;
	      }).rest());

	      // Update the grandparent.
	      node = grandparent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(grandparent.merge({ nodes: nodes }));

	      d++;
	      parent = node.getClosestInline(firstChild);
	    }

	    return node;
	  },


	  /**
	   * Split the text nodes at a `range`.
	   *
	   * @param {Selection} range
	   * @return {Node} node
	   */

	  splitTextAtRange: function splitTextAtRange(range) {
	    var node = this;

	    // If the range is expanded, remove it first.
	    if (range.isExpanded) {
	      node = node.deleteAtRange(range);
	      range = range.collapseToStart();
	    }

	    // Split the text node's characters.
	    var _range9 = range;
	    var startKey = _range9.startKey;
	    var startOffset = _range9.startOffset;

	    var text = node.getDescendant(startKey);
	    var characters = text.characters;

	    var firstChars = characters.take(startOffset);
	    var secondChars = characters.skip(startOffset);
	    var firstChild = text.merge({ characters: firstChars });
	    var secondChild = _text2.default.create({ characters: secondChars });

	    // Split the text nodes.
	    var parent = node.getParent(text);
	    var nodes = parent.nodes.takeUntil(function (c) {
	      return c.key == firstChild.key;
	    }).push(firstChild).push(secondChild).concat(parent.nodes.skipUntil(function (n) {
	      return n.key == firstChild.key;
	    }).rest());

	    // Update the nodes.
	    parent = parent.merge({ nodes: nodes });
	    node = node.updateDescendant(parent);
	    return node;
	  },


	  /**
	   * Add or remove a `mark` from the characters at `range`, depending on whether
	   * it's already there.
	   *
	   * @param {Selection} range
	   * @param {Mark or String} mark (optional)
	   * @return {Node} node
	   */

	  toggleMarkAtRange: function toggleMarkAtRange(range, mark) {
	    mark = normalizeMark(mark);
	    var node = this;

	    // When the range is collapsed, do nothing.
	    if (range.isCollapsed) return node;

	    // Check if the mark exists in the range already.
	    var marks = node.getMarksAtRange(range);
	    var exists = marks.some(function (m) {
	      return m.equals(mark);
	    });

	    return exists ? node.removeMarkAtRange(range, mark) : node.addMarkAtRange(range, mark);
	  },


	  /**
	   * Unwrap all of the block nodes in a `range` from a block with `properties`.
	   *
	   * @param {Selection} range
	   * @param {String or Object} properties
	   * @return {Node} node
	   */

	  unwrapBlockAtRange: function unwrapBlockAtRange(range, properties) {
	    properties = normalizeProperties(properties);
	    var node = this;

	    // Get the deepest blocks in the range.
	    var blocks = node.getBlocksAtRange(range);

	    // Get the matching wrapper blocks.
	    var wrappers = blocks.reduce(function (memo, text) {
	      var match = node.getClosest(text, function (parent) {
	        if (parent.kind != 'block') return false;
	        if (properties.type && parent.type != properties.type) return false;
	        if (properties.data && !parent.data.isSuperset(properties.data)) return false;
	        return true;
	      });

	      if (match) memo = memo.add(match);
	      return memo;
	    }, new _immutable.Set());

	    // For each of the wrapper blocks...
	    wrappers.forEach(function (wrapper) {
	      var first = wrapper.nodes.first();
	      var last = wrapper.nodes.last();
	      var parent = node.getParent(wrapper);

	      // Get the wrapped direct children.
	      var children = wrapper.nodes.filter(function (child) {
	        return blocks.some(function (block) {
	          return child == block || child.hasDescendant(block);
	        });
	      });

	      // Determine what the new nodes should be...
	      var firstMatch = children.first();
	      var lastMatch = children.last();
	      var nodes = void 0;

	      // If the first and last both match, remove the wrapper completely.
	      if (first == firstMatch && last == lastMatch) {
	        nodes = parent.nodes.takeUntil(function (n) {
	          return n == wrapper;
	        }).concat(wrapper.nodes).concat(parent.nodes.skipUntil(function (n) {
	          return n == wrapper;
	        }).rest());
	      }

	      // If only the last child matches, move the last nodes.
	      else if (last == lastMatch) {
	          var remain = wrapper.nodes.takeUntil(function (n) {
	            return n == firstMatch;
	          });
	          var updated = wrapper.merge({ nodes: remain });
	          nodes = parent.nodes.takeUntil(function (n) {
	            return n == wrapper;
	          }).push(updated).concat(children).concat(parent.nodes.skipUntil(function (n) {
	            return n == wrapper;
	          }).rest());
	        }

	        // If only the first child matches, move the first ones.
	        else if (first == firstMatch) {
	            var _remain = wrapper.nodes.skipUntil(function (n) {
	              return n == lastMatch;
	            }).rest();
	            var _updated = wrapper.merge({ nodes: _remain });
	            nodes = parent.nodes.takeUntil(function (n) {
	              return n == wrapper;
	            }).concat(children).push(_updated).concat(parent.nodes.skipUntil(function (n) {
	              return n == wrapper;
	            }).rest());
	          }

	          // Otherwise, move the middle ones.
	          else {
	              var firsts = wrapper.nodes.takeUntil(function (n) {
	                return n == firstMatch;
	              });
	              var lasts = wrapper.nodes.skipUntil(function (n) {
	                return n == lastMatch;
	              }).rest();
	              var updatedFirst = wrapper.merge({ nodes: firsts });
	              var updatedLast = wrapper.merge({ nodes: lasts });
	              nodes = parent.nodes.takeUntil(function (n) {
	                return n == wrapper;
	              }).push(updatedFirst).concat(children).push(updatedLast).concat(parent.nodes.skipUntil(function (n) {
	                return n == wrapper;
	              }).rest());
	            }

	      node = parent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(parent.merge({ nodes: nodes }));
	    });

	    return node.normalize();
	  },


	  /**
	   * Unwrap the inline nodes in a `range` from an inline with `properties`.
	   *
	   * @param {Selection} range
	   * @param {String or Object} properties
	   * @return {Node} node
	   */

	  unwrapInlineAtRange: function unwrapInlineAtRange(range, properties) {
	    properties = normalizeProperties(properties);
	    var node = this;
	    var blocks = node.getInlinesAtRange(range);

	    // Find the closest matching inline wrappers of each text node.
	    var texts = this.getTexts();
	    var wrappers = texts.reduce(function (memo, text) {
	      var match = node.getClosest(text, function (parent) {
	        if (parent.kind != 'inline') return false;
	        if (properties.type && parent.type != properties.type) return false;
	        if (properties.data && !parent.data.isSuperset(properties.data)) return false;
	        return true;
	      });

	      if (match) memo = memo.add(match);
	      return memo;
	    }, new _immutable.Set());

	    // Replace each of the wrappers with their child nodes.
	    wrappers.forEach(function (wrapper) {
	      var parent = node.getParent(wrapper);

	      // Replace the wrapper in the parent's nodes with the block.
	      var nodes = parent.nodes.takeUntil(function (n) {
	        return n == wrapper;
	      }).concat(wrapper.nodes).concat(parent.nodes.skipUntil(function (n) {
	        return n == wrapper;
	      }).rest());

	      // Update the parent.
	      node = parent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(parent.merge({ nodes: nodes }));
	    });

	    return node.normalize();
	  },


	  /**
	   * Wrap all of the blocks in a `range` in a new block with `properties`.
	   *
	   * @param {Selection} range
	   * @param {String or Object} properties
	   * @return {Node} node
	   */

	  wrapBlockAtRange: function wrapBlockAtRange(range, properties) {
	    properties = normalizeProperties(properties);
	    var node = this;

	    // Get the block nodes, sorted by depth.
	    var blocks = node.getBlocksAtRange(range);
	    var sorted = blocks.sort(function (a, b) {
	      var da = node.getDepth(a);
	      var db = node.getDepth(b);
	      if (da == db) return 0;else if (da > db) return -1;else return 1;
	    });

	    // Get the lowest common siblings, relative to the highest block.
	    var highest = sorted.first();
	    var depth = node.getDepth(highest);
	    var siblings = blocks.reduce(function (memo, block) {
	      var sibling = node.getDepth(block) == depth ? block : node.getClosest(block, function (p) {
	        return node.getDepth(p) == depth;
	      });
	      memo = memo.push(sibling);
	      return memo;
	    }, _block2.default.createList());

	    // Wrap the siblings in a new block.
	    var wrapper = _block2.default.create({
	      nodes: siblings,
	      type: properties.type,
	      data: properties.data
	    });

	    // Replace the siblings with the wrapper.
	    var first = siblings.first();
	    var last = siblings.last();
	    var parent = node.getParent(highest);
	    var nodes = parent.nodes.takeUntil(function (n) {
	      return n == first;
	    }).push(wrapper).concat(parent.nodes.skipUntil(function (n) {
	      return n == last;
	    }).rest());

	    // Update the parent.
	    node = parent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(parent.merge({ nodes: nodes }));

	    return node;
	  },


	  /**
	   * Wrap the text and inlines in a `range` in a new inline with `properties`.
	   *
	   * @param {Selection} range
	   * @param {String or Object} properties
	   * @return {Node} node
	   */

	  wrapInlineAtRange: function wrapInlineAtRange(range, properties) {
	    properties = normalizeProperties(properties);
	    var node = this;

	    // If collapsed, there's nothing to wrap.
	    if (range.isCollapsed) return node;

	    // Split at the start of the range.
	    var start = range.collapseToStart();
	    node = node.splitInlineAtRange(start);

	    // Determine the new end of the range, and split there.
	    var _range10 = range;
	    var startKey = _range10.startKey;
	    var startOffset = _range10.startOffset;
	    var endKey = _range10.endKey;
	    var endOffset = _range10.endOffset;

	    var firstNode = node.getDescendant(startKey);
	    var nextNode = node.getNextText(startKey);
	    var end = startKey != endKey ? range.collapseToEnd() : _selection2.default.create({
	      anchorKey: nextNode.key,
	      anchorOffset: endOffset - startOffset,
	      focusKey: nextNode.key,
	      focusOffset: endOffset - startOffset
	    });

	    node = node.splitInlineAtRange(end);

	    // Calculate the new range to wrap around.
	    var endNode = node.getDescendant(end.anchorKey);
	    range = _selection2.default.create({
	      anchorKey: nextNode.key,
	      anchorOffset: 0,
	      focusKey: endNode.key,
	      focusOffset: endNode.length
	    });

	    // Get the furthest inline nodes in the range.
	    var texts = node.getTextsAtRange(range);
	    var children = texts.map(function (text) {
	      return node.getFurthestInline(text) || text;
	    });

	    // Iterate each of the child nodes, wrapping them.
	    children.forEach(function (child) {
	      var wrapper = _inline2.default.create({
	        nodes: [child],
	        type: properties.type,
	        data: properties.data
	      });

	      // Replace the child in it's parent with the wrapper.
	      var parent = node.getParent(child);
	      var nodes = parent.nodes.takeUntil(function (n) {
	        return n == child;
	      }).push(wrapper).concat(parent.nodes.skipUntil(function (n) {
	        return n == child;
	      }).rest());

	      // Update the parent.
	      node = parent == node ? node.merge({ nodes: nodes }) : node.updateDescendant(parent.merge({ nodes: nodes }));
	    });

	    return node.normalize();
	  },


	  /**
	   * Wrap the text in a `range` in a prefix/suffix.
	   *
	   * @param {Selection} range
	   * @param {String} prefix
	   * @param {String} suffix
	   * @return {Node} node
	   */

	  wrapTextAtRange: function wrapTextAtRange(range, prefix) {
	    var suffix = arguments.length <= 2 || arguments[2] === undefined ? prefix : arguments[2];

	    var node = this;

	    // Insert text at the starting edge.
	    var startKey = range.startKey;
	    var endKey = range.endKey;

	    var start = range.collapseToStart();
	    node = node.insertTextAtRange(start, prefix);

	    // Determine the new ending edge, and insert text there.
	    var end = range.collapseToEnd();
	    if (startKey == endKey) end = end.moveForward(prefix.length);
	    node = node.insertTextAtRange(end, suffix);

	    return node;
	  }
	};

	/**
	 * Check if an `index` of a `text` node is in a `range`.
	 *
	 * @param {Number} index
	 * @param {Text} text
	 * @param {Selection} range
	 * @return {Set} characters
	 */

	function isInRange(index, text, range) {
	  var startKey = range.startKey;
	  var startOffset = range.startOffset;
	  var endKey = range.endKey;
	  var endOffset = range.endOffset;

	  var matcher = void 0;

	  if (text.key == startKey && text.key == endKey) {
	    return startOffset <= index && index < endOffset;
	  } else if (text.key == startKey) {
	    return startOffset <= index;
	  } else if (text.key == endKey) {
	    return index < endOffset;
	  } else {
	    return true;
	  }
	}

	/**
	 * Normalize a `mark` argument, which can be a string or plain object too.
	 *
	 * @param {Mark or String or Object} mark
	 * @return {Mark}
	 */

	function normalizeMark(mark) {
	  if (mark instanceof _mark2.default) return mark;

	  var type = (0, _typeOf2.default)(mark);

	  switch (type) {
	    case 'string':
	    case 'object':
	      {
	        return _mark2.default.create(normalizeProperties(mark));
	      }
	    default:
	      {
	        throw new Error('A `mark` argument must be a mark, an object or a string, but you passed: "' + type + '".');
	      }
	  }
	}

	/**
	 * Normalize a `block` argument, which can be a string or plain object too.
	 *
	 * @param {Block or String or Object} block
	 * @return {Block}
	 */

	function normalizeBlock(block) {
	  if (block instanceof _block2.default) return block;

	  var type = (0, _typeOf2.default)(block);

	  switch (type) {
	    case 'string':
	    case 'object':
	      {
	        return _block2.default.create(normalizeProperties(block));
	      }
	    default:
	      {
	        throw new Error('A `block` argument must be a block, an object or a string, but you passed: "' + type + '".');
	      }
	  }
	}

	/**
	 * Normalize an `inline` argument, which can be a string or plain object too.
	 *
	 * @param {Inline or String or Object} inline
	 * @return {Inline}
	 */

	function normalizeInline(inline) {
	  if (inline instanceof _inline2.default) return inline;

	  var type = (0, _typeOf2.default)(inline);

	  switch (type) {
	    case 'string':
	    case 'object':
	      {
	        return _inline2.default.create(normalizeProperties(inline));
	      }
	    default:
	      {
	        throw new Error('An `inline` argument must be an inline, an object or a string, but you passed: "' + type + '".');
	      }
	  }
	}

	/**
	 * Normalize the `properties` of a node or mark, which can be either a type
	 * string or a dictionary of properties. If it's a dictionary, `data` is
	 * optional and shouldn't be set if null or undefined.
	 *
	 * @param {String or Object} properties
	 * @return {Object}
	 */

	function normalizeProperties() {
	  var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  var ret = {};
	  var type = (0, _typeOf2.default)(properties);

	  switch (type) {
	    case 'string':
	      {
	        ret.type = properties;
	        break;
	      }
	    case 'object':
	      {
	        for (var key in properties) {
	          if (key == 'data') {
	            if (properties[key] != null) ret[key] = _data2.default.create(properties[key]);
	          } else {
	            ret[key] = properties[key];
	          }
	        }
	        break;
	      }
	    default:
	      {
	        throw new Error('A `properties` argument must be an object or a string, but you passed: "' + type + '".');
	      }
	  }

	  return ret;
	}

	/**
	 * Export.
	 */

	exports.default = Transforms;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _memoize = __webpack_require__(186);

	var _memoize2 = _interopRequireDefault(_memoize);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Range.
	 */

	var Range = new _immutable.Record({
	  kind: 'range',
	  marks: new _immutable.Set(),
	  text: ''
	});

	/**
	 * Default properties.
	 */

	var DEFAULTS = {
	  characters: new _immutable.List(),
	  key: null
	};

	/**
	 * Text.
	 */

	var Text = function (_ref) {
	  _inherits(Text, _ref);

	  function Text() {
	    _classCallCheck(this, Text);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Text).apply(this, arguments));
	  }

	  _createClass(Text, [{
	    key: 'getDecorations',


	    /**
	     * Derive a set of decorated characters with `decorators`.
	     *
	     * @param {Array} decorators
	     * @return {List}
	     */

	    value: function getDecorations(decorators) {
	      var node = this;
	      var characters = node.characters;

	      if (characters.size == 0) return characters;

	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = decorators[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var decorator = _step.value;

	          var decorateds = decorator(node);
	          characters = characters.merge(decorateds);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      return characters;
	    }

	    /**
	     * Get the decorations for the node from a `schema`.
	     *
	     * @param {Schema} schema
	     * @return {Array}
	     */

	  }, {
	    key: 'getDecorators',
	    value: function getDecorators(schema) {
	      return schema.__getDecorators(this);
	    }

	    /**
	     * Derive the ranges for a list of `characters`.
	     *
	     * @param {Array || Void} decorators (optional)
	     * @return {List}
	     */

	  }, {
	    key: 'getRanges',
	    value: function getRanges() {
	      var decorators = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      var node = this;
	      var list = new _immutable.List();
	      var characters = this.getDecorations(decorators);

	      // If there are no characters, return one empty range.
	      if (characters.size == 0) {
	        return list.push(new Range());
	      }

	      // Convert the now-decorated characters into ranges.
	      var ranges = characters.reduce(function (memo, char, i) {
	        var marks = char.marks;
	        var text = char.text;

	        // The first one can always just be created.

	        if (i == 0) {
	          return memo.push(new Range({ text: text, marks: marks }));
	        }

	        // Otherwise, compare to the previous and see if a new range should be
	        // created, or whether the text should be added to the previous range.
	        var previous = characters.get(i - 1);
	        var prevMarks = previous.marks;
	        var added = marks.filterNot(function (mark) {
	          return prevMarks.includes(mark);
	        });
	        var removed = prevMarks.filterNot(function (mark) {
	          return marks.includes(mark);
	        });
	        var isSame = !added.size && !removed.size;

	        // If the marks are the same, add the text to the previous range.
	        if (isSame) {
	          var index = memo.size - 1;
	          var prevRange = memo.get(index);
	          var prevText = prevRange.get('text');
	          prevRange = prevRange.set('text', prevText += text);
	          return memo.set(index, prevRange);
	        }

	        // Otherwise, create a new range.
	        return memo.push(new Range({ text: text, marks: marks }));
	      }, list);

	      // Return the ranges.
	      return ranges;
	    }

	    /**
	     * Remove characters from the text node from `start` to `end`.
	     *
	     * @param {Number} start
	     * @param {Number} end
	     * @return {Text} text
	     */

	  }, {
	    key: 'removeCharacters',
	    value: function removeCharacters(start, end) {
	      var characters = this.characters;


	      characters = characters.filterNot(function (char, i) {
	        return start <= i && i < end;
	      });

	      return this.merge({ characters: characters });
	    }

	    /**
	     * Insert text `string` at `index`.
	     *
	     * @param {Numbder} index
	     * @param {String} string
	     * @param {String} marks (optional)
	     * @return {Text} text
	     */

	  }, {
	    key: 'insertText',
	    value: function insertText(index, string, marks) {
	      var characters = this.characters;


	      if (!marks) {
	        var prev = index ? characters.get(index - 1) : null;
	        marks = prev ? prev.marks : _mark2.default.createSet();
	      }

	      var chars = _character2.default.createList(string.split('').map(function (char) {
	        return {
	          text: char,
	          marks: marks
	        };
	      }));

	      characters = characters.slice(0, index).concat(chars).concat(characters.slice(index));

	      return this.merge({ characters: characters });
	    }

	    /**
	     * Validate the node against a `schema`.
	     *
	     * @param {Schema} schema
	     * @return {Object || Void}
	     */

	  }, {
	    key: 'validate',
	    value: function validate(schema) {
	      return schema.__validate(this);
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the node's kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'text';
	    }

	    /**
	     * Is the node empty?
	     *
	     * @return {Boolean} isEmpty
	     */

	  }, {
	    key: 'isEmpty',
	    get: function get() {
	      return this.text == '';
	    }

	    /**
	     * Get the length of the concatenated text of the node.
	     *
	     * @return {Number} length
	     */

	  }, {
	    key: 'length',
	    get: function get() {
	      return this.text.length;
	    }

	    /**
	     * Get the concatenated text of the node.
	     *
	     * @return {String} text
	     */

	  }, {
	    key: 'text',
	    get: function get() {
	      return this.characters.map(function (char) {
	        return char.text;
	      }).join('');
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Text` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Text} text
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Text) return properties;
	      properties.key = properties.key || (0, _uid2.default)(4);
	      properties.characters = _character2.default.createList(properties.characters);
	      return new Text(properties);
	    }

	    /**
	     * Create a list of `Texts` from an array.
	     *
	     * @param {Array} elements
	     * @return {List} map
	     */

	  }, {
	    key: 'createList',
	    value: function createList() {
	      var elements = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	      if (_immutable.List.isList(elements)) return elements;
	      return new _immutable.List(elements.map(Text.create));
	    }
	  }]);

	  return Text;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Memoize read methods.
	 */

	(0, _memoize2.default)(Text.prototype, ['getDecorations', 'getDecorators', 'getRanges', 'validate']);

	/**
	 * Export.
	 */

	exports.default = Text;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _uid = __webpack_require__(219);

	var _uid2 = _interopRequireDefault(_uid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a unique identifier.
	 *
	 * @return {String} uid
	 */

	function uid() {
	  return (0, _uid2.default)(4);
	}

	/**
	 * Export.
	 */

	exports.default = uid;

/***/ },
/* 219 */
/***/ function(module, exports) {

	/**
	 * Export `uid`
	 */

	module.exports = uid;

	/**
	 * Create a `uid`
	 *
	 * @param {String} len
	 * @return {String} uid
	 */

	function uid(len) {
	  len = len || 7;
	  return Math.random().toString(35).substr(2, len);
	}


/***/ },
/* 220 */
/***/ function(module, exports) {

	var toString = Object.prototype.toString

	module.exports = function(val){
	  switch (toString.call(val)) {
	    case '[object Function]': return 'function'
	    case '[object Date]': return 'date'
	    case '[object RegExp]': return 'regexp'
	    case '[object Arguments]': return 'arguments'
	    case '[object Array]': return 'array'
	    case '[object String]': return 'string'
	  }

	  if (typeof val == 'object' && val && typeof val.length == 'number') {
	    try {
	      if (typeof val.callee == 'function') return 'arguments';
	    } catch (ex) {
	      if (ex instanceof TypeError) {
	        return 'arguments';
	      }
	    }
	  }

	  if (val === null) return 'null'
	  if (val === undefined) return 'undefined'
	  if (val && val.nodeType === 1) return 'element'
	  if (val === Object(val)) return 'object'

	  return typeof val
	}


/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';

	var GROUP_LEFT_TO_RIGHT,
	    GROUP_RIGHT_TO_LEFT,
	    EXPRESSION_LEFT_TO_RIGHT,
	    EXPRESSION_RIGHT_TO_LEFT;

	/*
	 * Character ranges of left-to-right characters.
	 */

	GROUP_LEFT_TO_RIGHT = 'A-Za-z\u00C0-\u00D6\u00D8-\u00F6' +
	    '\u00F8-\u02B8\u0300-\u0590\u0800-\u1FFF\u200E\u2C00-\uFB1C' +
	    '\uFE00-\uFE6F\uFEFD-\uFFFF';

	/*
	 * Character ranges of right-to-left characters.
	 */

	GROUP_RIGHT_TO_LEFT = '\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC';

	/*
	 * Expression to match a left-to-right string.
	 *
	 * Matches the start of a string, followed by zero or
	 * more non-right-to-left characters, followed by a
	 * left-to-right character.
	 */

	EXPRESSION_LEFT_TO_RIGHT = new RegExp(
	    '^[^' + GROUP_RIGHT_TO_LEFT + ']*[' + GROUP_LEFT_TO_RIGHT + ']'
	);

	/*
	 * Expression to match a right-to-left string.
	 *
	 * Matches the start of a string, followed by zero or
	 * more non-left-to-right characters, followed by a
	 * right-to-left character.
	 */

	EXPRESSION_RIGHT_TO_LEFT = new RegExp(
	    '^[^' + GROUP_LEFT_TO_RIGHT + ']*[' + GROUP_RIGHT_TO_LEFT + ']'
	);

	/**
	 * Detect the direction of text.
	 *
	 * @param {string} value - value to stringify and check.
	 * @return {string} - One of `"rtl"`, `"ltr"`, or
	 *   `"neutral"`.
	 */
	function direction(value) {
	    value = value.toString();

	    if (EXPRESSION_RIGHT_TO_LEFT.test(value)) {
	        return 'rtl';
	    }

	    if (EXPRESSION_LEFT_TO_RIGHT.test(value)) {
	        return 'ltr';
	    }

	    return 'neutral';
	}

	/*
	 * Expose `direction`.
	 */

	module.exports = direction;


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _selection8 = __webpack_require__(187);

	var _selection9 = _interopRequireDefault(_selection8);

	var _transform = __webpack_require__(223);

	var _transform2 = _interopRequireDefault(_transform);

	var _uid = __webpack_require__(218);

	var _uid2 = _interopRequireDefault(_uid);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * History.
	 */

	var History = new _immutable.Record({
	  undos: new _immutable.Stack(),
	  redos: new _immutable.Stack()
	});

	/**
	 * Default properties.
	 */

	var DEFAULTS = {
	  cursorMarks: null,
	  document: new _document2.default(),
	  selection: new _selection9.default(),
	  history: new History(),
	  isNative: false
	};

	/**
	 * State.
	 */

	var State = function (_ref) {
	  _inherits(State, _ref);

	  function State() {
	    _classCallCheck(this, State);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(State).apply(this, arguments));
	  }

	  _createClass(State, [{
	    key: 'normalize',


	    /**
	     * Normalize a state against a `schema`.
	     *
	     * @param {Schema} schema
	     * @return {State}
	     */

	    value: function normalize(schema) {
	      var state = this;
	      var document = this.document;
	      var selection = this.selection;

	      var transform = this.transform();
	      var failure = void 0;

	      document.filterDescendantsDeep(function (node) {
	        if (failure = node.validate(schema)) {
	          var _failure = failure;
	          var value = _failure.value;
	          var rule = _failure.rule;

	          transform = rule.normalize(transform, node, value);
	        }
	      });

	      if (failure = document.validate(schema)) {
	        var _failure2 = failure;
	        var value = _failure2.value;
	        var rule = _failure2.rule;

	        transform = rule.normalize(transform, document, value);
	      }

	      return transform.steps.size ? transform.apply({ snapshot: false }) : state;
	    }

	    /**
	     * Return a new `Transform` with the current state as a starting point.
	     *
	     * @return {Transform} transform
	     */

	  }, {
	    key: 'transform',
	    value: function transform() {
	      var state = this;
	      return new _transform2.default({ state: state });
	    }

	    /**
	     * Add a `mark` to the characters in the current selection.
	     *
	     * @param {Mark} mark
	     * @return {State} state
	     */

	  }, {
	    key: 'addMark',
	    value: function addMark(mark) {
	      mark = normalizeMark(mark);
	      var state = this;
	      var _state = state;
	      var cursorMarks = _state.cursorMarks;
	      var document = _state.document;
	      var selection = _state.selection;

	      // If the selection is collapsed, add the mark to the cursor instead.

	      if (selection.isCollapsed) {
	        var marks = document.getMarksAtRange(selection);
	        state = state.merge({ cursorMarks: marks.add(mark) });
	        return state;
	      }

	      document = document.addMarkAtRange(selection, mark);
	      state = state.merge({ document: document });
	      return state;
	    }

	    /**
	     * Move the selection to the start of the previous block.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToStartOfPreviousBlock',
	    value: function collapseToStartOfPreviousBlock() {
	      var state = this;
	      var _state2 = state;
	      var document = _state2.document;
	      var selection = _state2.selection;

	      var blocks = document.getBlocksAtRange(selection);
	      var block = blocks.first();
	      if (!block) return state;

	      var previous = document.getPreviousBlock(block);
	      if (!previous) return state;

	      selection = selection.collapseToStartOf(previous);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the end of the previous block.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToEndOfPreviousBlock',
	    value: function collapseToEndOfPreviousBlock() {
	      var state = this;
	      var _state3 = state;
	      var document = _state3.document;
	      var selection = _state3.selection;

	      var blocks = document.getBlocksAtRange(selection);
	      var block = blocks.first();
	      if (!block) return state;

	      var previous = document.getPreviousBlock(block);
	      if (!previous) return state;

	      selection = selection.collapseToEndOf(previous);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the start of the next block.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToStartOfNextBlock',
	    value: function collapseToStartOfNextBlock() {
	      var state = this;
	      var _state4 = state;
	      var document = _state4.document;
	      var selection = _state4.selection;

	      var blocks = document.getBlocksAtRange(selection);
	      var block = blocks.last();
	      if (!block) return state;

	      var next = document.getNextBlock(block);
	      if (!next) return state;

	      selection = selection.collapseToStartOf(next);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the end of the next block.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToEndOfNextBlock',
	    value: function collapseToEndOfNextBlock() {
	      var state = this;
	      var _state5 = state;
	      var document = _state5.document;
	      var selection = _state5.selection;

	      var blocks = document.getBlocksAtRange(selection);
	      var block = blocks.last();
	      if (!block) return state;

	      var next = document.getNextBlock(block);
	      if (!next) return state;

	      selection = selection.collapseToEndOf(next);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the start of the previous text.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToStartOfPreviousText',
	    value: function collapseToStartOfPreviousText() {
	      var state = this;
	      var _state6 = state;
	      var document = _state6.document;
	      var selection = _state6.selection;

	      var texts = document.getTextsAtRange(selection);
	      var text = texts.first();
	      if (!text) return state;

	      var previous = document.getPreviousText(text);
	      if (!previous) return state;

	      selection = selection.collapseToStartOf(previous);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the end of the previous text.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToEndOfPreviousText',
	    value: function collapseToEndOfPreviousText() {
	      var state = this;
	      var _state7 = state;
	      var document = _state7.document;
	      var selection = _state7.selection;

	      var texts = document.getTextsAtRange(selection);
	      var text = texts.first();
	      if (!text) return state;

	      var previous = document.getPreviousText(text);
	      if (!previous) return state;

	      selection = selection.collapseToEndOf(previous);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the start of the next text.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToStartOfNextText',
	    value: function collapseToStartOfNextText() {
	      var state = this;
	      var _state8 = state;
	      var document = _state8.document;
	      var selection = _state8.selection;

	      var texts = document.getTextsAtRange(selection);
	      var text = texts.last();
	      if (!text) return state;

	      var next = document.getNextText(text);
	      if (!next) return state;

	      selection = selection.collapseToStartOf(next);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to the end of the next text.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'collapseToEndOfNextText',
	    value: function collapseToEndOfNextText() {
	      var state = this;
	      var _state9 = state;
	      var document = _state9.document;
	      var selection = _state9.selection;

	      var texts = document.getTextsAtRange(selection);
	      var text = texts.last();
	      if (!text) return state;

	      var next = document.getNextText(text);
	      if (!next) return state;

	      selection = selection.collapseToEndOf(next);
	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Delete at the current selection.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'delete',
	    value: function _delete() {
	      var state = this;
	      var _state10 = state;
	      var document = _state10.document;
	      var selection = _state10.selection;

	      var after = void 0;

	      // When collapsed, there's nothing to do.
	      if (selection.isCollapsed) return state;

	      // Determine what the selection will be after deleting.
	      var startText = this.startText;
	      var _selection = selection;
	      var startKey = _selection.startKey;
	      var startOffset = _selection.startOffset;
	      var endKey = _selection.endKey;
	      var endOffset = _selection.endOffset;

	      var block = document.getClosestBlock(startText);
	      var highest = block.getHighestChild(startText);
	      var previous = block.getPreviousSibling(highest);
	      var next = block.getNextSibling(highest);

	      if (previous && startOffset == 0 && (endKey != startKey || endOffset == startText.length)) {
	        if (previous.kind == 'text') {
	          if (next && next.kind == 'text') {
	            after = selection.merge({
	              anchorKey: previous.key,
	              anchorOffset: previous.length,
	              focusKey: previous.key,
	              focusOffset: previous.length
	            });
	          } else {
	            after = selection.collapseToEndOf(previous);
	          }
	        } else {
	          var last = previous.getTexts().last();
	          after = selection.collapseToEndOf(last);
	        }
	      } else {
	        after = selection.collapseToStart();
	      }

	      // Delete and update the selection.
	      document = document.deleteAtRange(selection);
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Delete backward `n` characters at the current selection.
	     *
	     * @param {Number} n (optional)
	     * @return {State} state
	     */

	  }, {
	    key: 'deleteBackward',
	    value: function deleteBackward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      var state = this;
	      var _state11 = state;
	      var document = _state11.document;
	      var selection = _state11.selection;

	      var after = selection;

	      // Determine what the selection should be after deleting.
	      var _selection2 = selection;
	      var startKey = _selection2.startKey;

	      var startNode = document.getDescendant(startKey);

	      if (selection.isExpanded) {
	        after = selection.collapseToStart();
	      } else if (selection.isAtStartOf(document)) {
	        after = selection;
	      } else if (selection.isAtStartOf(startNode)) {
	        var previous = document.getPreviousText(startNode);
	        var prevBlock = document.getClosestBlock(previous);
	        var prevInline = document.getClosestInline(previous);

	        if (prevBlock && prevBlock.isVoid) {
	          after = selection;
	        } else if (prevInline && prevInline.isVoid) {
	          after = selection;
	        } else {
	          after = selection.collapseToEndOf(previous);
	        }
	      } else if (selection.isAtEndOf(startNode) && startNode.length == 1) {
	        var block = document.getClosestBlock(startKey);
	        var highest = block.getHighestChild(startKey);
	        var _previous = block.getPreviousSibling(highest);
	        var next = block.getNextSibling(highest);

	        if (_previous) {
	          if (_previous.kind == 'text') {
	            if (next && next.kind == 'text') {
	              after = selection.merge({
	                anchorKey: _previous.key,
	                anchorOffset: _previous.length,
	                focusKey: _previous.key,
	                focusOffset: _previous.length
	              });
	            } else {
	              after = selection.collapseToEndOf(_previous);
	            }
	          } else {
	            var last = _previous.getTexts().last();
	            after = selection.collapseToEndOf(last);
	          }
	        } else {
	          after = selection.moveBackward(n);
	        }
	      } else {
	        after = selection.moveBackward(n);
	      }

	      // Delete backward and then update the selection.
	      document = document.deleteBackwardAtRange(selection, n);
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Delete forward `n` characters at the current selection.
	     *
	     * @param {Number} n (optional)
	     * @return {State} state
	     */

	  }, {
	    key: 'deleteForward',
	    value: function deleteForward() {
	      var n = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      var state = this;
	      var _state12 = state;
	      var document = _state12.document;
	      var selection = _state12.selection;
	      var startText = _state12.startText;
	      var _selection3 = selection;
	      var startKey = _selection3.startKey;
	      var startOffset = _selection3.startOffset;

	      var after = selection;

	      // Determine what the selection should be after deleting.
	      var block = document.getClosestBlock(startKey);
	      var inline = document.getClosestInline(startKey);
	      var highest = block.getHighestChild(startKey);
	      var previous = block.getPreviousSibling(highest);
	      var next = block.getNextSibling(highest);

	      if (selection.isExpanded) {
	        after = selection.collapseToStart();
	      } else if (block && block.isVoid || inline && inline.isVoid) {
	        var nextText = document.getNextText(startKey);
	        var prevText = document.getPreviousText(startKey);
	        after = next ? selection.collapseToStartOf(nextText) : selection.collapseToEndOf(prevText);
	      } else if (previous && startOffset == 0 && startText.length == 1) {
	        if (previous.kind == 'text') {
	          if (next && next.kind == 'text') {
	            after = selection.merge({
	              anchorKey: previous.key,
	              anchorOffset: previous.length,
	              focusKey: previous.key,
	              focusOffset: previous.length
	            });
	          } else {
	            after = selection.collapseToEndOf(previous);
	          }
	        } else {
	          var last = previous.getTexts().last();
	          after = selection.collapseToEndOf(last);
	        }
	      }

	      // Delete forward and then update the selection.
	      document = document.deleteForwardAtRange(selection, n);
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Insert a `block` at the current selection.
	     *
	     * @param {String || Object || Block} block
	     * @return {State} state
	     */

	  }, {
	    key: 'insertBlock',
	    value: function insertBlock(block) {
	      var state = this;
	      var _state13 = state;
	      var document = _state13.document;
	      var selection = _state13.selection;

	      var after = selection;

	      // Insert the block
	      document = document.insertBlockAtRange(selection, block);

	      // Determine what the selection should be after inserting.
	      var keys = state.document.getTexts().map(function (text) {
	        return text.key;
	      });
	      var text = document.getTexts().find(function (n) {
	        return !keys.includes(n.key);
	      });
	      selection = selection.collapseToEndOf(text);

	      // Update the document and selection.
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Insert a `fragment` at the current selection.
	     *
	     * @param {Document} fragment
	     * @return {State} state
	     */

	  }, {
	    key: 'insertFragment',
	    value: function insertFragment(fragment) {
	      var state = this;
	      var _state14 = state;
	      var document = _state14.document;
	      var selection = _state14.selection;

	      var after = selection;

	      // If there's nothing in the fragment, do nothing.
	      if (!fragment.length) return state;

	      // Lookup some nodes for determining the selection next.
	      var lastText = fragment.getTexts().last();
	      var lastInline = fragment.getClosestInline(lastText);
	      var beforeTexts = document.getTexts();

	      // Insert the fragment.
	      document = document.insertFragmentAtRange(selection, fragment);

	      // Determine what the selection should be after inserting.
	      var keys = beforeTexts.map(function (text) {
	        return text.key;
	      });
	      var text = document.getTexts().findLast(function (n) {
	        return !keys.includes(n.key);
	      });
	      var previousText = text ? document.getPreviousText(text) : null;

	      if (text && lastInline && previousText) {
	        after = selection.collapseToEndOf(previousText);
	      } else if (text && lastInline) {
	        after = selection.collapseToStart();
	      } else if (text) {
	        after = selection.collapseToStartOf(text).moveForward(lastText.length);
	      } else {
	        after = selection.collapseToStart().moveForward(lastText.length);
	      }

	      // Update the document and selection.
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Insert a `inline` at the current selection.
	     *
	     * @param {String || Object || Block} inline
	     * @return {State} state
	     */

	  }, {
	    key: 'insertInline',
	    value: function insertInline(inline) {
	      var state = this;
	      var _state15 = state;
	      var document = _state15.document;
	      var selection = _state15.selection;
	      var startText = _state15.startText;

	      var after = selection;
	      var hasVoid = document.hasVoidParent(startText);

	      // Insert the inline
	      document = document.insertInlineAtRange(selection, inline);

	      // Determine what the selection should be after inserting.
	      if (hasVoid) {
	        selection = selection;
	      } else {
	        (function () {
	          var keys = state.document.getTexts().map(function (text) {
	            return text.key;
	          });
	          var text = document.getTexts().find(function (n) {
	            return !keys.includes(n.key);
	          });
	          selection = selection.collapseToEndOf(text);
	        })();
	      }

	      // Update the document and selection.
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Insert a `text` string at the current selection.
	     *
	     * @param {String} text
	     * @param {Set} marks (optional)
	     * @return {State} state
	     */

	  }, {
	    key: 'insertText',
	    value: function insertText(text, marks) {
	      var state = this;
	      var _state16 = state;
	      var cursorMarks = _state16.cursorMarks;
	      var document = _state16.document;
	      var selection = _state16.selection;

	      var after = void 0;
	      var isVoid = document.hasVoidParent(state.startText);

	      // Determine what the selection should be after inserting.
	      if (isVoid) {
	        after = selection;
	      } else if (selection.isExpanded) {
	        after = selection.collapseToStart().moveForward(text.length);
	      } else {
	        after = selection.moveForward(text.length);
	      }

	      // Insert the text and update the selection.
	      document = document.insertTextAtRange(selection, text, marks || cursorMarks);
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Move the selection to a specific anchor and focus point.
	     *
	     * @param {Object} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'moveTo',
	    value: function moveTo(properties) {
	      var state = this;
	      var _state17 = state;
	      var document = _state17.document;
	      var selection = _state17.selection;

	      // Allow for passing a `Selection` object.

	      if (properties instanceof _selection9.default) {
	        properties = {
	          anchorKey: properties.anchorKey,
	          anchorOffset: properties.anchorOffset,
	          focusKey: properties.focusKey,
	          focusOffset: properties.focusOffset,
	          isFocused: properties.isFocused
	        };
	      }

	      // Pass in properties, and force `isBackward` to be re-resolved.
	      selection = selection.merge(_extends({}, properties, {
	        isBackward: null
	      }));

	      selection = selection.normalize(document);
	      state = state.merge({ selection: selection });
	      return state;
	    }

	    /**
	     * Set `properties` of the block nodes in the current selection.
	     *
	     * @param {Object} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'setBlock',
	    value: function setBlock(properties) {
	      var state = this;
	      var _state18 = state;
	      var document = _state18.document;
	      var selection = _state18.selection;

	      document = document.setBlockAtRange(selection, properties);
	      state = state.merge({ document: document });
	      return state;
	    }

	    /**
	     * Set `properties` of the inline nodes in the current selection.
	     *
	     * @param {Object} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'setInline',
	    value: function setInline(properties) {
	      var state = this;
	      var _state19 = state;
	      var document = _state19.document;
	      var selection = _state19.selection;

	      document = document.setInlineAtRange(selection, properties);
	      state = state.merge({ document: document });
	      return state;
	    }

	    /**
	     * Split the block node at the current selection, to optional `depth`.
	     *
	     * @param {Number} depth (optional)
	     * @return {State} state
	     */

	  }, {
	    key: 'splitBlock',
	    value: function splitBlock() {
	      var depth = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];

	      var state = this;
	      var _state20 = state;
	      var document = _state20.document;
	      var selection = _state20.selection;

	      // Split the document.

	      document = document.splitBlockAtRange(selection, depth);

	      // Determine what the selection should be after splitting.
	      var _selection4 = selection;
	      var startKey = _selection4.startKey;

	      var startNode = document.getDescendant(startKey);
	      var nextNode = document.getNextText(startNode);
	      selection = selection.collapseToStartOf(nextNode);

	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Split the inline nodes at the current selection, to optional `depth`.
	     *
	     * @param {Number} depth (optional)
	     * @return {State} state
	     */

	  }, {
	    key: 'splitInline',
	    value: function splitInline() {
	      var depth = arguments.length <= 0 || arguments[0] === undefined ? Infinity : arguments[0];

	      var state = this;
	      var _state21 = state;
	      var document = _state21.document;
	      var selection = _state21.selection;

	      // Split the document.

	      document = document.splitInlineAtRange(selection, depth);

	      // Determine what the selection should be after splitting.
	      var _selection5 = selection;
	      var startKey = _selection5.startKey;

	      var inlineParent = document.getClosestInline(startKey);

	      if (inlineParent) {
	        var startNode = document.getDescendant(startKey);
	        var nextNode = document.getNextText(startNode);
	        selection = selection.collapseToStartOf(nextNode);
	      }

	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Remove a `mark` from the characters in the current selection.
	     *
	     * @param {Mark} mark
	     * @return {State} state
	     */

	  }, {
	    key: 'removeMark',
	    value: function removeMark(mark) {
	      mark = normalizeMark(mark);
	      var state = this;
	      var _state22 = state;
	      var cursorMarks = _state22.cursorMarks;
	      var document = _state22.document;
	      var selection = _state22.selection;

	      // If the selection is collapsed, remove the mark from the cursor instead.

	      if (selection.isCollapsed) {
	        var marks = document.getMarksAtRange(selection);
	        state = state.merge({ cursorMarks: marks.remove(mark) });
	        return state;
	      }

	      document = document.removeMarkAtRange(selection, mark);
	      state = state.merge({ document: document });
	      return state;
	    }

	    /**
	     * Add or remove a `mark` from the characters in the current selection,
	     * depending on whether it's already there.
	     *
	     * @param {Mark} mark
	     * @return {State} state
	     */

	  }, {
	    key: 'toggleMark',
	    value: function toggleMark(mark) {
	      mark = normalizeMark(mark);
	      var state = this;
	      var marks = state.marks;
	      var document = state.document;
	      var selection = state.selection;

	      var exists = marks.some(function (m) {
	        return m.equals(mark);
	      });
	      return exists ? state.removeMark(mark) : state.addMark(mark);
	    }

	    /**
	     * Wrap the block nodes in the current selection with a new block node with
	     * `properties`.
	     *
	     * @param {Object or String} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'wrapBlock',
	    value: function wrapBlock(properties) {
	      var state = this;
	      var _state23 = state;
	      var document = _state23.document;
	      var selection = _state23.selection;

	      document = document.wrapBlockAtRange(selection, properties);
	      state = state.merge({ document: document });
	      return state;
	    }

	    /**
	     * Unwrap the current selection from a block parent with `properties`.
	     *
	     * @param {Object or String} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'unwrapBlock',
	    value: function unwrapBlock(properties) {
	      var state = this;
	      var _state24 = state;
	      var document = _state24.document;
	      var selection = _state24.selection;

	      document = document.unwrapBlockAtRange(selection, properties);
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Wrap the current selection in new inline nodes with `properties`.
	     *
	     * @param {Object or String} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'wrapInline',
	    value: function wrapInline(properties) {
	      var state = this;
	      var _state25 = state;
	      var document = _state25.document;
	      var selection = _state25.selection;
	      var _selection6 = selection;
	      var startKey = _selection6.startKey;

	      var previous = document.getPreviousText(startKey);

	      document = document.wrapInlineAtRange(selection, properties);

	      // Determine what the selection should be after wrapping.
	      if (selection.isCollapsed) {
	        selection = selection;
	      } else if (selection.startOffset == 0) {
	        var text = previous ? document.getNextText(previous) : document.getTexts().first();
	        selection = selection.moveToRangeOf(text);
	      } else if (selection.startKey == selection.endKey) {
	        var _text = document.getNextText(selection.startKey);
	        selection = selection.moveToRangeOf(_text);
	      } else {
	        var anchor = document.getNextText(selection.anchorKey);
	        var focus = document.getDescendant(selection.focusKey);
	        selection = selection.merge({
	          anchorKey: anchor.key,
	          anchorOffset: 0,
	          focusKey: focus.key,
	          focusOffset: selection.focusOffset
	        });
	      }

	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Wrap the current selection with prefix/suffix.
	     *
	     * @param {String} prefix
	     * @param {String} suffix
	     * @return {State} state
	     */

	  }, {
	    key: 'wrapText',
	    value: function wrapText(prefix) {
	      var suffix = arguments.length <= 1 || arguments[1] === undefined ? prefix : arguments[1];

	      var state = this;
	      var _state26 = state;
	      var document = _state26.document;
	      var selection = _state26.selection;
	      var _selection7 = selection;
	      var anchorOffset = _selection7.anchorOffset;
	      var anchorKey = _selection7.anchorKey;
	      var focusOffset = _selection7.focusOffset;
	      var focusKey = _selection7.focusKey;
	      var isBackward = _selection7.isBackward;

	      var after = void 0;

	      // Determine what the selection should be after wrapping.
	      if (anchorKey == focusKey) {
	        after = selection.moveForward(prefix.length);
	      } else {
	        after = selection.merge({
	          anchorOffset: isBackward ? anchorOffset : anchorOffset + prefix.length,
	          focusOffset: isBackward ? focusOffset + prefix.length : focusOffset
	        });
	      }

	      // Wrap the text and update the state.
	      document = document.wrapTextAtRange(selection, prefix, suffix);
	      selection = after;
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }

	    /**
	     * Unwrap the current selection from an inline parent with `properties`.
	     *
	     * @param {Object or String} properties
	     * @return {State} state
	     */

	  }, {
	    key: 'unwrapInline',
	    value: function unwrapInline(properties) {
	      var state = this;
	      var _state27 = state;
	      var document = _state27.document;
	      var selection = _state27.selection;

	      document = document.unwrapInlineAtRange(selection, properties);
	      state = state.merge({ document: document, selection: selection });
	      return state;
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'state';
	    }

	    /**
	     * Are there undoable events?
	     *
	     * @return {Boolean} hasUndos
	     */

	  }, {
	    key: 'hasUndos',
	    get: function get() {
	      return this.history.undos.size > 0;
	    }

	    /**
	     * Are there redoable events?
	     *
	     * @return {Boolean} hasRedos
	     */

	  }, {
	    key: 'hasRedos',
	    get: function get() {
	      return this.history.redos.size > 0;
	    }

	    /**
	     * Is the current selection blurred?
	     *
	     * @return {Boolean} isBlurred
	     */

	  }, {
	    key: 'isBlurred',
	    get: function get() {
	      return this.selection.isBlurred;
	    }

	    /**
	     * Is the current selection focused?
	     *
	     * @return {Boolean} isFocused
	     */

	  }, {
	    key: 'isFocused',
	    get: function get() {
	      return this.selection.isFocused;
	    }

	    /**
	     * Is the current selection collapsed?
	     *
	     * @return {Boolean} isCollapsed
	     */

	  }, {
	    key: 'isCollapsed',
	    get: function get() {
	      return this.selection.isCollapsed;
	    }

	    /**
	     * Is the current selection expanded?
	     *
	     * @return {Boolean} isExpanded
	     */

	  }, {
	    key: 'isExpanded',
	    get: function get() {
	      return this.selection.isExpanded;
	    }

	    /**
	     * Is the current selection backward?
	     *
	     * @return {Boolean} isBackward
	     */

	  }, {
	    key: 'isBackward',
	    get: function get() {
	      return this.selection.isBackward;
	    }

	    /**
	     * Is the current selection forward?
	     *
	     * @return {Boolean} isForward
	     */

	  }, {
	    key: 'isForward',
	    get: function get() {
	      return this.selection.isForward;
	    }

	    /**
	     * Get the current start key.
	     *
	     * @return {String} startKey
	     */

	  }, {
	    key: 'startKey',
	    get: function get() {
	      return this.selection.startKey;
	    }

	    /**
	     * Get the current end key.
	     *
	     * @return {String} endKey
	     */

	  }, {
	    key: 'endKey',
	    get: function get() {
	      return this.selection.endKey;
	    }

	    /**
	     * Get the current start offset.
	     *
	     * @return {String} startOffset
	     */

	  }, {
	    key: 'startOffset',
	    get: function get() {
	      return this.selection.startOffset;
	    }

	    /**
	     * Get the current end offset.
	     *
	     * @return {String} endOffset
	     */

	  }, {
	    key: 'endOffset',
	    get: function get() {
	      return this.selection.endOffset;
	    }

	    /**
	     * Get the current anchor key.
	     *
	     * @return {String} anchorKey
	     */

	  }, {
	    key: 'anchorKey',
	    get: function get() {
	      return this.selection.anchorKey;
	    }

	    /**
	     * Get the current focus key.
	     *
	     * @return {String} focusKey
	     */

	  }, {
	    key: 'focusKey',
	    get: function get() {
	      return this.selection.focusKey;
	    }

	    /**
	     * Get the current anchor offset.
	     *
	     * @return {String} anchorOffset
	     */

	  }, {
	    key: 'anchorOffset',
	    get: function get() {
	      return this.selection.anchorOffset;
	    }

	    /**
	     * Get the current focus offset.
	     *
	     * @return {String} focusOffset
	     */

	  }, {
	    key: 'focusOffset',
	    get: function get() {
	      return this.selection.focusOffset;
	    }

	    /**
	     * Get the current start text node.
	     *
	     * @return {Text} text
	     */

	  }, {
	    key: 'startText',
	    get: function get() {
	      return this.document.getDescendant(this.selection.startKey);
	    }

	    /**
	     * Get the current end node.
	     *
	     * @return {Text} text
	     */

	  }, {
	    key: 'endText',
	    get: function get() {
	      return this.document.getDescendant(this.selection.endKey);
	    }

	    /**
	     * Get the current anchor node.
	     *
	     * @return {Text} text
	     */

	  }, {
	    key: 'anchorText',
	    get: function get() {
	      return this.document.getDescendant(this.selection.anchorKey);
	    }

	    /**
	     * Get the current focus node.
	     *
	     * @return {Text} text
	     */

	  }, {
	    key: 'focusText',
	    get: function get() {
	      return this.document.getDescendant(this.selection.focusKey);
	    }

	    /**
	     * Get the current start text node's closest block parent.
	     *
	     * @return {Block} block
	     */

	  }, {
	    key: 'startBlock',
	    get: function get() {
	      return this.document.getClosestBlock(this.selection.startKey);
	    }

	    /**
	     * Get the current end text node's closest block parent.
	     *
	     * @return {Block} block
	     */

	  }, {
	    key: 'endBlock',
	    get: function get() {
	      return this.document.getClosestBlock(this.selection.endKey);
	    }

	    /**
	     * Get the current anchor text node's closest block parent.
	     *
	     * @return {Block} block
	     */

	  }, {
	    key: 'anchorBlock',
	    get: function get() {
	      return this.document.getClosestBlock(this.selection.anchorKey);
	    }

	    /**
	     * Get the current focus text node's closest block parent.
	     *
	     * @return {Block} block
	     */

	  }, {
	    key: 'focusBlock',
	    get: function get() {
	      return this.document.getClosestBlock(this.selection.focusKey);
	    }

	    /**
	     * Get the characters in the current selection.
	     *
	     * @return {List} characters
	     */

	  }, {
	    key: 'characters',
	    get: function get() {
	      return this.document.getCharactersAtRange(this.selection);
	    }

	    /**
	     * Get the marks of the current selection.
	     *
	     * @return {Set} marks
	     */

	  }, {
	    key: 'marks',
	    get: function get() {
	      return this.cursorMarks || this.document.getMarksAtRange(this.selection);
	    }

	    /**
	     * Get the block nodes in the current selection.
	     *
	     * @return {List} nodes
	     */

	  }, {
	    key: 'blocks',
	    get: function get() {
	      return this.document.getBlocksAtRange(this.selection);
	    }

	    /**
	     * Get the fragment of the current selection.
	     *
	     * @return {List} nodes
	     */

	  }, {
	    key: 'fragment',
	    get: function get() {
	      return this.document.getFragmentAtRange(this.selection);
	    }

	    /**
	     * Get the inline nodes in the current selection.
	     *
	     * @return {List} nodes
	     */

	  }, {
	    key: 'inlines',
	    get: function get() {
	      return this.document.getInlinesAtRange(this.selection);
	    }

	    /**
	     * Get the text nodes in the current selection.
	     *
	     * @return {List} nodes
	     */

	  }, {
	    key: 'texts',
	    get: function get() {
	      return this.document.getTextsAtRange(this.selection);
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `State` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {State} state
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof State) return properties;
	      properties.document = _document2.default.create(properties.document);
	      properties.selection = _selection9.default.create(properties.selection).normalize(properties.document);
	      return new State(properties);
	    }
	  }]);

	  return State;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Normalize a `mark` argument, which can be a string or plain object too.
	 *
	 * @param {Mark or String or Object} mark
	 * @return {Mark}
	 */

	function normalizeMark(mark) {
	  if (typeof mark == 'string') {
	    return _mark2.default.create({ type: mark });
	  } else {
	    return _mark2.default.create(mark);
	  }
	}

	/**
	 * Export.
	 */

	exports.default = State;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	var _xor = __webpack_require__(224);

	var _xor2 = _interopRequireDefault(_xor);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Snapshot, with a state-like shape.
	 */

	var Snapshot = new _immutable.Record({
	  document: null,
	  selection: null,
	  steps: new _immutable.List()
	});

	/**
	 * Step.
	 */

	var Step = new _immutable.Record({
	  type: null,
	  args: null
	});

	/**
	 * Document range transforms.
	 */

	var DOCUMENT_RANGE_TRANSFORMS = ['deleteAtRange', 'deleteBackwardAtRange', 'deleteForwardAtRange', 'insertBlockAtRange', 'insertFragmentAtRange', 'insertInlineAtRange', 'insertTextAtRange', 'addMarkAtRange', 'setBlockAtRange', 'setInlineAtRange', 'splitBlockAtRange', 'splitInlineAtRange', 'removeMarkAtRange', 'toggleMarkAtRange', 'unwrapBlockAtRange', 'unwrapInlineAtRange', 'wrapBlockAtRange', 'wrapInlineAtRange', 'wrapTextAtRange'];

	/**
	 * Document node transforms.
	 */

	var DOCUMENT_NODE_TRANSFORMS = ['removeNodeByKey', 'setNodeByKey'];

	/**
	 * Selection transforms.
	 */

	var SELECTION_TRANSFORMS = ['blur', 'collapseToAnchor', 'collapseToEnd', 'collapseToEndOf', 'collapseToFocus', 'collapseToStart', 'collapseToStartOf', 'extendBackward', 'extendForward', 'extendToEndOf', 'extendToStartOf', 'focus', 'moveBackward', 'moveForward', 'moveToOffsets', 'moveToRangeOf'];

	/**
	 * State-level document transforms.
	 */

	var STATE_DOCUMENT_TRANSFORMS = ['delete', 'deleteBackward', 'deleteForward', 'insertBlock', 'insertFragment', 'insertInline', 'insertText', 'addMark', 'setBlock', 'setInline', 'splitBlock', 'splitInline', 'removeMark', 'toggleMark', 'unwrapBlock', 'unwrapInline', 'wrapBlock', 'wrapInline', 'wrapText'];

	/**
	 * State selection transforms.
	 */

	var STATE_SELECTION_TRANSFORMS = ['collapseToEndOfNextBlock', 'collapseToEndOfNextText', 'collapseToEndOfPreviousBlock', 'collapseToEndOfPreviousText', 'collapseToStartOfNextBlock', 'collapseToStartOfNextText', 'collapseToStartOfPreviousBlock', 'collapseToStartOfPreviousText', 'moveTo'];

	/**
	 * All state-level transforms.
	 */

	var STATE_TRANSFORMS = [].concat(STATE_DOCUMENT_TRANSFORMS).concat(STATE_SELECTION_TRANSFORMS);

	/**
	 * All transforms.
	 */

	var TRANSFORMS = [].concat(DOCUMENT_RANGE_TRANSFORMS).concat(DOCUMENT_NODE_TRANSFORMS).concat(SELECTION_TRANSFORMS).concat(STATE_TRANSFORMS);

	/**
	 * Defaults.
	 */

	var DEFAULT_PROPERTIES = {
	  state: null,
	  steps: new _immutable.List()
	};

	/**
	 * Transform.
	 */

	var Transform = function (_ref) {
	  _inherits(Transform, _ref);

	  function Transform() {
	    _classCallCheck(this, Transform);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Transform).apply(this, arguments));
	  }

	  _createClass(Transform, [{
	    key: 'apply',


	    /**
	     * Apply the transform and return the new state.
	     *
	     * @param {Object} options
	     *   @property {Boolean} isNative
	     *   @property {Boolean} snapshot
	     * @return {State} state
	     */

	    value: function apply() {
	      var _this2 = this;

	      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      var transform = this;
	      var state = transform.state;
	      var steps = transform.steps;
	      var _state = state;
	      var cursorMarks = _state.cursorMarks;
	      var history = _state.history;
	      var selection = _state.selection;
	      var _history = history;
	      var undos = _history.undos;
	      var redos = _history.redos;

	      // Determine whether we need to create a new snapshot.

	      var shouldSnapshot = options.snapshot == null ? this.shouldSnapshot() : options.snapshot;

	      // If we should, save a snapshot into the history before transforming.
	      if (shouldSnapshot) {
	        var snapshot = transform.snapshot();
	        undos = undos.push(snapshot);
	        if (undos.size > 100) undos = undos.take(100);
	        redos = redos.clear();
	        history = history.merge({ undos: undos, redos: redos });
	        state = state.merge({ history: history });
	      }

	      // Apply each of the steps in the transform, arriving at a new state.
	      state = steps.reduce(function (memo, step) {
	        return _this2.applyStep(memo, step);
	      }, state);

	      // If there are cursor marks and they haven't changed, remove them.
	      if (state.cursorMarks && state.cursorMarks == cursorMarks) {
	        state = state.merge({
	          cursorMarks: null
	        });
	      }

	      // Apply the "isNative" flag, which is used to allow for natively-handled
	      // content changes to skip rerendering the editor for performance.
	      state = state.merge({
	        isNative: !!options.isNative
	      });

	      return state;
	    }

	    /**
	     * Apply a single `step` to a `state`, differentiating between types.
	     *
	     * @param {State} state
	     * @param {Step} step
	     * @return {State} state
	     */

	  }, {
	    key: 'applyStep',
	    value: function applyStep(state, step) {
	      var type = step.type;
	      var args = step.args;


	      if ((0, _includes2.default)(DOCUMENT_RANGE_TRANSFORMS, type)) {
	        var _document;

	        var _state2 = state;
	        var document = _state2.document;
	        var selection = _state2.selection;

	        var _args = _toArray(args);

	        var range = _args[0];

	        var rest = _args.slice(1);

	        range = range.normalize(document);
	        document = (_document = document)[type].apply(_document, [range].concat(_toConsumableArray(rest)));
	        selection = selection.normalize(document);
	        state = state.merge({ document: document, selection: selection });
	        return state;
	      } else if ((0, _includes2.default)(DOCUMENT_NODE_TRANSFORMS, type)) {
	        var _document3;

	        var _state3 = state;
	        var _document2 = _state3.document;
	        var _selection = _state3.selection;

	        _document2 = (_document3 = _document2)[type].apply(_document3, _toConsumableArray(args));
	        _selection = _selection.normalize(_document2);
	        state = state.merge({ document: _document2, selection: _selection });
	        return state;
	      } else if ((0, _includes2.default)(SELECTION_TRANSFORMS, type)) {
	        var _selection3;

	        var _state4 = state;
	        var _document4 = _state4.document;
	        var _selection2 = _state4.selection;

	        _selection2 = (_selection3 = _selection2)[type].apply(_selection3, _toConsumableArray(args));
	        _selection2 = _selection2.normalize(_document4);
	        state = state.merge({ selection: _selection2 });
	        return state;
	      } else if ((0, _includes2.default)(STATE_TRANSFORMS, type)) {
	        var _state5;

	        state = (_state5 = state)[type].apply(_state5, _toConsumableArray(args));
	        return state;
	      }
	    }

	    /**
	     * Check whether the current transform steps should create a snapshot.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'shouldSnapshot',
	    value: function shouldSnapshot() {
	      var transform = this;
	      var state = transform.state;
	      var steps = transform.steps;
	      var cursorMarks = state.cursorMarks;
	      var history = state.history;
	      var selection = state.selection;
	      var undos = history.undos;
	      var redos = history.redos;

	      var previous = undos.peek();

	      // If the only steps applied are selection transforms, don't snapshot.
	      var onlySelections = steps.every(function (step) {
	        return (0, _includes2.default)(SELECTION_TRANSFORMS, step.type) || (0, _includes2.default)(STATE_SELECTION_TRANSFORMS, step.type);
	      });

	      if (onlySelections) return false;

	      // If there isn't a previous state, snapshot.
	      if (!previous) return true;

	      // If there is a previous state but the steps are different, snapshot.
	      var types = steps.map(function (step) {
	        return step.type;
	      });
	      var prevTypes = previous.steps.map(function (step) {
	        return step.type;
	      });
	      var diff = (0, _xor2.default)(types.toArray(), prevTypes.toArray());
	      if (diff.length) return true;

	      // If the current steps aren't one of the "combinable" types, snapshot.
	      var allCombinable = steps.every(function (step) {
	        return step.type == 'insertText';
	      }) || steps.every(function (step) {
	        return step.type == 'deleteForward';
	      }) || steps.every(function (step) {
	        return step.type == 'deleteBackward';
	      });

	      if (!allCombinable) return true;

	      // Otherwise, don't snapshot.
	      return false;
	    }

	    /**
	     * Create a history-ready snapshot of the current state.
	     *
	     * @return {Snapshot} snapshot
	     */

	  }, {
	    key: 'snapshot',
	    value: function snapshot() {
	      var state = this.state;
	      var steps = this.steps;
	      var document = state.document;
	      var selection = state.selection;

	      return new Snapshot({ document: document, selection: selection, steps: steps });
	    }

	    /**
	     * Undo to the previous state in the history.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'undo',
	    value: function undo() {
	      var transform = this;
	      var state = transform.state;
	      var _state6 = state;
	      var history = _state6.history;
	      var _history2 = history;
	      var undos = _history2.undos;
	      var redos = _history2.redos;

	      // If there's no previous snapshot, return the current state.

	      var previous = undos.peek();
	      if (!previous) return state;

	      // Remove the previous snapshot from the undo stack.
	      undos = undos.pop();

	      // Snapshot the current state, and move it into the redos stack.
	      var snapshot = transform.snapshot();
	      redos = redos.push(snapshot);

	      // Return the previous state, with the updated history.
	      var document = previous.document;
	      var selection = previous.selection;

	      history = history.merge({ undos: undos, redos: redos });
	      state = state.merge({
	        document: document,
	        selection: selection,
	        history: history,
	        isNative: false
	      });

	      return state;
	    }

	    /**
	     * Redo to the next state in the history.
	     *
	     * @return {State} state
	     */

	  }, {
	    key: 'redo',
	    value: function redo() {
	      var transform = this;
	      var state = transform.state;
	      var _state7 = state;
	      var history = _state7.history;
	      var _history3 = history;
	      var undos = _history3.undos;
	      var redos = _history3.redos;

	      // If there's no next snapshot, return the current state.

	      var next = redos.peek();
	      if (!next) return state;

	      // Remove the next history from the redo stack.
	      redos = redos.pop();

	      // Snapshot the current state, and move it into the undos stack.
	      var snapshot = transform.snapshot();
	      undos = undos.push(snapshot);

	      // Return the next state, with the updated history.
	      var document = next.document;
	      var selection = next.selection;

	      history = history.merge({ undos: undos, redos: redos });
	      state = state.merge({
	        document: document,
	        selection: selection,
	        history: history,
	        isNative: false
	      });

	      return state;
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'transform';
	    }
	  }]);

	  return Transform;
	}(new _immutable.Record(DEFAULT_PROPERTIES));

	/**
	 * Add a step-creating method for each of the transforms.
	 */

	TRANSFORMS.forEach(function (type) {
	  Transform.prototype[type] = function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var transform = this;
	    var _transform = transform;
	    var steps = _transform.steps;

	    steps = steps.push(new Step({ type: type, args: args }));
	    transform = transform.merge({ steps: steps });
	    return transform;
	  };
	});

	/**
	 * Export.
	 */

	exports.default = Transform;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(225),
	    baseRest = __webpack_require__(226),
	    baseXor = __webpack_require__(228),
	    isArrayLikeObject = __webpack_require__(210);

	/**
	 * Creates an array of unique values that is the
	 * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	 * of the given arrays. The order of result values is determined by the order
	 * they occur in the arrays.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.difference, _.without
	 * @example
	 *
	 * _.xor([2, 1], [2, 3]);
	 * // => [1, 3]
	 */
	var xor = baseRest(function(arrays) {
	  return baseXor(arrayFilter(arrays, isArrayLikeObject));
	});

	module.exports = xor;


/***/ },
/* 225 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}

	module.exports = arrayFilter;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(227);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = baseRest;


/***/ },
/* 227 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(229),
	    baseDifference = __webpack_require__(230),
	    baseUniq = __webpack_require__(271);

	/**
	 * The base implementation of methods like `_.xor`, without support for
	 * iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of values.
	 */
	function baseXor(arrays, iteratee, comparator) {
	  var index = -1,
	      length = arrays.length;

	  while (++index < length) {
	    var result = result
	      ? arrayPush(
	          baseDifference(result, arrays[index], iteratee, comparator),
	          baseDifference(arrays[index], result, iteratee, comparator)
	        )
	      : arrays[index];
	  }
	  return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
	}

	module.exports = baseXor;


/***/ },
/* 229 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(231),
	    arrayIncludes = __webpack_require__(267),
	    arrayIncludesWith = __webpack_require__(268),
	    arrayMap = __webpack_require__(205),
	    baseUnary = __webpack_require__(269),
	    cacheHas = __webpack_require__(270);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;

	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseDifference;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(232),
	    setCacheAdd = __webpack_require__(265),
	    setCacheHas = __webpack_require__(266);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(233),
	    mapCacheDelete = __webpack_require__(259),
	    mapCacheGet = __webpack_require__(262),
	    mapCacheHas = __webpack_require__(263),
	    mapCacheSet = __webpack_require__(264);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(234),
	    ListCache = __webpack_require__(250),
	    Map = __webpack_require__(258);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(235),
	    hashDelete = __webpack_require__(246),
	    hashGet = __webpack_require__(247),
	    hashHas = __webpack_require__(248),
	    hashSet = __webpack_require__(249);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(236);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}

	module.exports = hashClear;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(237);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(238),
	    getValue = __webpack_require__(245);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(193),
	    isHostObject = __webpack_require__(239),
	    isMasked = __webpack_require__(240),
	    isObject = __webpack_require__(194),
	    toSource = __webpack_require__(244);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 239 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(241);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(242);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(243);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 243 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 244 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 245 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 246 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}

	module.exports = hashDelete;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(236);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(236);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(236);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(251),
	    listCacheDelete = __webpack_require__(252),
	    listCacheGet = __webpack_require__(255),
	    listCacheHas = __webpack_require__(256),
	    listCacheSet = __webpack_require__(257);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 251 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}

	module.exports = listCacheClear;


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(253);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(254);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 254 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(253);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(253);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(253);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(237),
	    root = __webpack_require__(242);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(260);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}

	module.exports = mapCacheDelete;


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(261);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 261 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(260);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(260);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(260);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 265 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ },
/* 266 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(189);

	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array ? array.length : 0;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}

	module.exports = arrayIncludes;


/***/ },
/* 268 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arrayIncludesWith;


/***/ },
/* 269 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ },
/* 270 */
/***/ function(module, exports) {

	/**
	 * Checks if a cache value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(231),
	    arrayIncludes = __webpack_require__(267),
	    arrayIncludesWith = __webpack_require__(268),
	    cacheHas = __webpack_require__(270),
	    createSet = __webpack_require__(272),
	    setToArray = __webpack_require__(275);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;

	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseUniq;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(273),
	    noop = __webpack_require__(274),
	    setToArray = __webpack_require__(275);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Creates a set object of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	  return new Set(values);
	};

	module.exports = createSet;


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(237),
	    root = __webpack_require__(242);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ },
/* 274 */
/***/ function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}

	module.exports = noop;


/***/ },
/* 275 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ },
/* 276 */
/***/ function(module, exports) {

	
	/**
	 * Expose `isEmpty`.
	 */

	module.exports = isEmpty;


	/**
	 * Has.
	 */

	var has = Object.prototype.hasOwnProperty;


	/**
	 * Test whether a value is "empty".
	 *
	 * @param {Mixed} val
	 * @return {Boolean}
	 */

	function isEmpty (val) {
	  if (null == val) return true;
	  if ('boolean' == typeof val) return false;
	  if ('number' == typeof val) return 0 === val;
	  if (undefined !== val.length) return 0 === val.length;
	  for (var key in val) if (has.call(val, key)) return false;
	  return true;
	}


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = __webpack_require__(278);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();

	/**
	 * Colors.
	 */

	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];

	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */

	function useColors() {
	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  return ('WebkitAppearance' in document.documentElement.style) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (window.console && (console.firebug || (console.exception && console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
	}

	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */

	exports.formatters.j = function(v) {
	  return JSON.stringify(v);
	};


	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */

	function formatArgs() {
	  var args = arguments;
	  var useColors = this.useColors;

	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);

	  if (!useColors) return args;

	  var c = 'color: ' + this.color;
	  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });

	  args.splice(lastC, 0, c);
	  return args;
	}

	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */

	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}

	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */

	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}

	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */

	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}
	  return r;
	}

	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */

	exports.enable(load());

	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */

	function localstorage(){
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = debug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(279);

	/**
	 * The currently active debug mode names, and names to skip.
	 */

	exports.names = [];
	exports.skips = [];

	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lowercased letter, i.e. "n".
	 */

	exports.formatters = {};

	/**
	 * Previously assigned color.
	 */

	var prevColor = 0;

	/**
	 * Previous log timestamp.
	 */

	var prevTime;

	/**
	 * Select a color.
	 *
	 * @return {Number}
	 * @api private
	 */

	function selectColor() {
	  return exports.colors[prevColor++ % exports.colors.length];
	}

	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */

	function debug(namespace) {

	  // define the `disabled` version
	  function disabled() {
	  }
	  disabled.enabled = false;

	  // define the `enabled` version
	  function enabled() {

	    var self = enabled;

	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;

	    // add the `color` if not set
	    if (null == self.useColors) self.useColors = exports.useColors();
	    if (null == self.color && self.useColors) self.color = selectColor();

	    var args = Array.prototype.slice.call(arguments);

	    args[0] = exports.coerce(args[0]);

	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %o
	      args = ['%o'].concat(args);
	    }

	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);

	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });

	    if ('function' === typeof exports.formatArgs) {
	      args = exports.formatArgs.apply(self, args);
	    }
	    var logFn = enabled.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	  enabled.enabled = true;

	  var fn = exports.enabled(namespace) ? enabled : disabled;

	  fn.namespace = namespace;

	  return fn;
	}

	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */

	function enable(namespaces) {
	  exports.save(namespaces);

	  var split = (namespaces || '').split(/[\s,]+/);
	  var len = split.length;

	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}

	/**
	 * Disable debug output.
	 *
	 * @api public
	 */

	function disable() {
	  exports.enable('');
	}

	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */

	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */

	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ },
/* 279 */
/***/ function(module, exports) {

	/**
	 * Helpers.
	 */

	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;

	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} options
	 * @return {String|Number}
	 * @api public
	 */

	module.exports = function(val, options){
	  options = options || {};
	  if ('string' == typeof val) return parse(val);
	  return options.long
	    ? long(val)
	    : short(val);
	};

	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */

	function parse(str) {
	  str = '' + str;
	  if (str.length > 10000) return;
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
	  if (!match) return;
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	  }
	}

	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function short(ms) {
	  if (ms >= d) return Math.round(ms / d) + 'd';
	  if (ms >= h) return Math.round(ms / h) + 'h';
	  if (ms >= m) return Math.round(ms / m) + 'm';
	  if (ms >= s) return Math.round(ms / s) + 's';
	  return ms + 'ms';
	}

	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function long(ms) {
	  return plural(ms, d, 'day')
	    || plural(ms, h, 'hour')
	    || plural(ms, m, 'minute')
	    || plural(ms, s, 'second')
	    || ms + ' ms';
	}

	/**
	 * Pluralization helper.
	 */

	function plural(ms, n, name) {
	  if (ms < n) return;
	  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _base = __webpack_require__(176);

	var _base2 = _interopRequireDefault(_base);

	var _debug = __webpack_require__(277);

	var _debug2 = _interopRequireDefault(_debug);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(35);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _types = __webpack_require__(281);

	var _types2 = _interopRequireDefault(_types);

	var _leaf = __webpack_require__(282);

	var _leaf2 = _interopRequireDefault(_leaf);

	var _void = __webpack_require__(287);

	var _void2 = _interopRequireDefault(_void);

	var _scrollTo = __webpack_require__(294);

	var _scrollTo2 = _interopRequireDefault(_scrollTo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Debug.
	 *
	 * @type {Function}
	 */

	var debug = (0, _debug2.default)('slate:node');

	/**
	 * Node.
	 *
	 * @type {Component}
	 */

	var Node = function (_React$Component) {
	  _inherits(Node, _React$Component);

	  /**
	   * Constructor.
	   *
	   * @param {Object} props
	   */

	  function Node(props) {
	    _classCallCheck(this, Node);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Node).call(this, props));

	    _initialiseProps.call(_this);

	    var node = props.node;
	    var schema = props.schema;

	    _this.state = {};
	    _this.state.Component = node.kind == 'text' ? null : node.getComponent(schema);
	    return _this;
	  }

	  /**
	   * Debug.
	   *
	   * @param {String} message
	   * @param {Mixed} ...args
	   */

	  /**
	   * Property types.
	   *
	   * @type {Object}
	   */

	  /**
	   * On receiving new props, update the `Component` renderer.
	   *
	   * @param {Object} props
	   */

	  /**
	   * Should the node update?
	   *
	   * @param {Object} props
	   * @param {Object} state
	   * @return {Boolean}
	   */

	  /**
	   * On mount, update the scroll position.
	   */

	  /**
	   * After update, update the scroll position if the node's content changed.
	   *
	   * @param {Object} prevProps
	   * @param {Object} prevState
	   */

	  /**
	   * Update the scroll position after a change as occured if this is a leaf
	   * block and it has the selection's ending edge. This ensures that scrolling
	   * matches native `contenteditable` behavior even for cases where the edit is
	   * not applied natively, like when enter is pressed.
	   */

	  /**
	   * On drag start, add a serialized representation of the node to the data.
	   *
	   * @param {Event} e
	   */

	  /**
	   * Render.
	   *
	   * @return {Element} element
	   */

	  /**
	   * Render a `child` node.
	   *
	   * @param {Node} child
	   * @return {Element} element
	   */

	  /**
	   * Render an element `node`.
	   *
	   * @return {Element} element
	   */

	  /**
	   * Render a text node.
	   *
	   * @return {Element} element
	   */

	  /**
	   * Render a single leaf node given a `range` and `offset`.
	   *
	   * @param {List} ranges
	   * @param {Range} range
	   * @param {Number} index
	   * @param {Number} offset
	   * @return {Element} leaf
	   */

	  return Node;
	}(_react2.default.Component);

	/**
	 * Export.
	 *
	 * @type {Component}
	 */

	Node.propTypes = {
	  editor: _react2.default.PropTypes.object.isRequired,
	  node: _react2.default.PropTypes.object.isRequired,
	  schema: _react2.default.PropTypes.object.isRequired,
	  state: _react2.default.PropTypes.object.isRequired
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;

	  this.debug = function (message) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var node = _this2.props.node;
	    var key = node.key;
	    var kind = node.kind;
	    var type = node.type;

	    var id = kind == 'text' ? key + ' (' + kind + ')' : key + ' (' + type + ')';
	    debug.apply(undefined, [message, '' + id].concat(args));
	  };

	  this.componentWillReceiveProps = function (props) {
	    if (props.node.kind == 'text') return;
	    if (props.node == _this2.props.node) return;
	    var Component = props.node.getComponent(props.schema);
	    _this2.setState({ Component: Component });
	  };

	  this.shouldComponentUpdate = function (props) {
	    var Component = _this2.state.Component;

	    // If the node is rendered with a `Component` that has enabled suppression
	    // of update checking, always return true so that it can deal with update
	    // checking itself.

	    if (Component && Component.suppressShouldComponentUpdate) {
	      return true;
	    }

	    // Otherwise, perform a peformant update check by default.
	    if (props.node != _this2.props.node || props.state.isFocused && props.state.selection.hasEdgeIn(props.node)) {
	      return true;
	    }

	    // For block and inline nodes, which can have custom renderers, we need to
	    // include another check for whether the previous selection had an edge in
	    // the node, to allow for intuitive selection-based rendering.
	    if (_this2.props.node.kind != 'text' && _this2.props.state.isFocused && _this2.props.state.selection.hasEdgeIn(_this2.props.node)) {
	      return true;
	    }

	    // For text nodes, which can have custom decorations, we need to check to
	    // see if the block has changed, which has caused the decorations to change.
	    if (props.node.kind == 'text') {
	      var node = props.node;
	      var schema = props.schema;
	      var state = props.state;
	      var document = state.document;

	      var decorators = document.getDescendantDecorators(node.key, schema);
	      var ranges = node.getRanges(decorators);

	      var prevNode = _this2.props.node;
	      var prevSchema = _this2.props.schema;
	      var prevDocument = _this2.props.state.document;
	      var prevDecorators = prevDocument.getDescendantDecorators(prevNode.key, prevSchema);
	      var prevRanges = prevNode.getRanges(prevDecorators);

	      if (!ranges.equals(prevRanges)) return true;
	    }

	    // Otherwise, don't update.
	    return false;
	  };

	  this.componentDidMount = function () {
	    _this2.updateScroll();
	  };

	  this.componentDidUpdate = function (prevProps, prevState) {
	    if (_this2.props.node != prevProps.node) _this2.updateScroll();
	  };

	  this.updateScroll = function () {
	    var _props = _this2.props;
	    var node = _props.node;
	    var state = _props.state;
	    var selection = state.selection;

	    // If this isn't a block, or it's a wrapping block, abort.

	    if (node.kind != 'block') return;
	    if (node.nodes.first().kind == 'block') return;

	    // If the selection is blurred, or this block doesn't contain it, abort.
	    if (selection.isBlurred) return;
	    if (!selection.hasEndIn(node)) return;

	    var el = _reactDom2.default.findDOMNode(_this2);
	    (0, _scrollTo2.default)(el);

	    _this2.debug('updateScroll', el);
	  };

	  this.onDragStart = function (e) {
	    var node = _this2.props.node;

	    var encoded = _base2.default.serializeNode(node);
	    var data = e.nativeEvent.dataTransfer;
	    data.setData(_types2.default.NODE, encoded);

	    _this2.debug('onDragStart', e);
	  };

	  this.render = function () {
	    _this2.debug('render');

	    var node = _this2.props.node;

	    return node.kind == 'text' ? _this2.renderText() : _this2.renderElement();
	  };

	  this.renderNode = function (child) {
	    return _react2.default.createElement(Node, {
	      key: child.key,
	      node: child,
	      editor: _this2.props.editor,
	      schema: _this2.props.schema,
	      state: _this2.props.state
	    });
	  };

	  this.renderElement = function () {
	    var _props2 = _this2.props;
	    var editor = _props2.editor;
	    var node = _props2.node;
	    var state = _props2.state;
	    var Component = _this2.state.Component;

	    var children = node.nodes.map(function (child) {
	      return _this2.renderNode(child);
	    }).toArray();

	    // Attributes that the developer must to mix into the element in their
	    // custom node renderer component.
	    var attributes = {
	      'data-key': node.key,
	      'onDragStart': _this2.onDragStart
	    };

	    // If it's a block node with inline children, add the proper `dir` attribute
	    // for text direction.
	    if (node.kind == 'block' && node.nodes.first().kind != 'block') {
	      var direction = node.getTextDirection();
	      if (direction == 'rtl') attributes.dir = 'rtl';
	    }

	    var element = _react2.default.createElement(
	      Component,
	      {
	        attributes: attributes,
	        key: node.key,
	        editor: editor,
	        node: node,
	        state: state
	      },
	      children
	    );

	    return node.isVoid ? _react2.default.createElement(
	      _void2.default,
	      _this2.props,
	      element
	    ) : element;
	  };

	  this.renderText = function () {
	    var _props3 = _this2.props;
	    var node = _props3.node;
	    var schema = _props3.schema;
	    var state = _props3.state;
	    var document = state.document;

	    var decorators = document.getDescendantDecorators(node.key, schema);
	    var ranges = node.getRanges(decorators);
	    var offset = 0;

	    var leaves = ranges.map(function (range, i, original) {
	      var leaf = _this2.renderLeaf(ranges, range, i, offset);
	      offset += range.text.length;
	      return leaf;
	    });

	    return _react2.default.createElement(
	      'span',
	      { 'data-key': node.key },
	      leaves
	    );
	  };

	  this.renderLeaf = function (ranges, range, index, offset) {
	    var _props4 = _this2.props;
	    var node = _props4.node;
	    var schema = _props4.schema;
	    var state = _props4.state;

	    var text = range.text;
	    var marks = range.marks;

	    return _react2.default.createElement(_leaf2.default, {
	      key: node.key + '-' + index,
	      index: index,
	      marks: marks,
	      node: node,
	      ranges: ranges,
	      schema: schema,
	      state: state,
	      text: text
	    });
	  };
	};

	exports.default = Node;

/***/ },
/* 281 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	/**
	 * Slate-specific data transfer types.
	 *
	 * @type {Object}
	 */

	var TYPES = {
	  FRAGMENT: 'application/x-slate-fragment',
	  NODE: 'application/x-slate-node'
	};

	/**
	 * Export.
	 */

	exports.default = TYPES;

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _debug = __webpack_require__(277);

	var _debug2 = _interopRequireDefault(_debug);

	var _offsetKey = __webpack_require__(283);

	var _offsetKey2 = _interopRequireDefault(_offsetKey);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(35);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _getWindow = __webpack_require__(284);

	var _getWindow2 = _interopRequireDefault(_getWindow);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Debugger.
	 *
	 * @type {Function}
	 */

	var debug = (0, _debug2.default)('slate:leaf');

	/**
	 * Leaf.
	 *
	 * @type {Component}
	 */

	var Leaf = function (_React$Component) {
	  _inherits(Leaf, _React$Component);

	  /**
	   * Constructor.
	   *
	   * @param {Object} props
	   */

	  /**
	   * Property types.
	   *
	   * @type {Object}
	   */

	  function Leaf(props) {
	    _classCallCheck(this, Leaf);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Leaf).call(this, props));

	    _this.debug = function (message) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      debug.apply(undefined, [message, _this.props.node.key + '-' + _this.props.index].concat(args));
	    };

	    _this.tmp = {};
	    _this.tmp.renders = 0;
	    return _this;
	  }

	  /**
	   * Debug.
	   *
	   * @param {String} message
	   * @param {Mixed} ...args
	   */

	  /**
	   * Default properties.
	   *
	   * @type {Object}
	   */

	  _createClass(Leaf, [{
	    key: 'shouldComponentUpdate',


	    /**
	     * Should component update?
	     *
	     * @param {Object} props
	     * @return {Boolean}
	     */

	    value: function shouldComponentUpdate(props) {
	      // If any of the regular properties have changed, re-render.
	      if (props.index != this.props.index || props.marks != this.props.marks || props.schema != this.props.schema || props.text != this.props.text) {
	        return true;
	      }

	      // If the DOM text does not equal the `text` property, re-render, this can
	      // happen because React gets out of sync when previously natively rendered.
	      var el = findDeepestNode(_reactDom2.default.findDOMNode(this));
	      var text = this.renderText(props);
	      if (el.textContent != text) return true;

	      // Otherwise, there aren't any content changes in this leaf, so if the
	      // selection is blurred we don't need to render to update it.
	      if (props.state.isBlurred) return false;

	      // Otherwise, if it's focused, only re-render if this leaf contains one or
	      // both of the selection's edges.
	      var index = props.index;
	      var node = props.node;
	      var state = props.state;

	      var _OffsetKey$findBounds = _offsetKey2.default.findBounds(index, props.ranges);

	      var start = _OffsetKey$findBounds.start;
	      var end = _OffsetKey$findBounds.end;

	      return state.selection.hasEdgeBetween(node, start, end);
	    }

	    /**
	     * When the DOM updates, try updating the selection.
	     */

	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateSelection();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.updateSelection();
	    }

	    /**
	     * Update the DOM selection if it's inside the leaf.
	     */

	  }, {
	    key: 'updateSelection',
	    value: function updateSelection() {
	      var _props = this.props;
	      var state = _props.state;
	      var ranges = _props.ranges;
	      var isVoid = _props.isVoid;
	      var selection = state.selection;

	      // If the selection is blurred we have nothing to do.

	      if (selection.isBlurred) return;

	      var anchorOffset = selection.anchorOffset;
	      var focusOffset = selection.focusOffset;
	      var _props2 = this.props;
	      var node = _props2.node;
	      var index = _props2.index;

	      var _OffsetKey$findBounds2 = _offsetKey2.default.findBounds(index, ranges);

	      var start = _OffsetKey$findBounds2.start;
	      var end = _OffsetKey$findBounds2.end;

	      // If neither matches, the selection doesn't start or end here, so exit.

	      var hasAnchor = selection.hasAnchorBetween(node, start, end);
	      var hasFocus = selection.hasFocusBetween(node, start, end);
	      if (!hasAnchor && !hasFocus) return;

	      // If the leaf is a void leaf, ensure that it has no width. This is due to
	      // void nodes always rendering an empty leaf, for browser compatibility.
	      if (isVoid) {
	        anchorOffset = 0;
	        focusOffset = 0;
	      }

	      // We have a selection to render, so prepare a few things...
	      var el = findDeepestNode(_reactDom2.default.findDOMNode(this));
	      var window = (0, _getWindow2.default)(el);
	      var native = window.getSelection();

	      // If both the start and end are here, set the selection all at once.
	      if (hasAnchor && hasFocus) {
	        native.removeAllRanges();
	        var range = window.document.createRange();
	        range.setStart(el, anchorOffset - start);
	        native.addRange(range);
	        native.extend(el, focusOffset - start);
	        return;
	      }

	      // If the selection is forward, we can set things in sequence. In
	      // the first leaf to render, reset the selection and set the new start. And
	      // then in the second leaf to render, extend to the new end.
	      if (selection.isForward) {
	        if (hasAnchor) {
	          native.removeAllRanges();
	          var _range = window.document.createRange();
	          _range.setStart(el, anchorOffset - start);
	          native.addRange(_range);
	        } else if (hasFocus) {
	          native.extend(el, focusOffset - start);
	        }
	      }

	      // Otherwise, if the selection is backward, we need to hack the order a bit.
	      // In the first leaf to render, set a phony start anchor to store the true
	      // end position. And then in the second leaf to render, set the start and
	      // extend the end to the stored value.
	      else {
	          if (hasFocus) {
	            native.removeAllRanges();
	            var _range2 = window.document.createRange();
	            _range2.setStart(el, focusOffset - start);
	            native.addRange(_range2);
	          } else if (hasAnchor) {
	            var endNode = native.focusNode;
	            var endOffset = native.focusOffset;
	            native.removeAllRanges();
	            var _range3 = window.document.createRange();
	            _range3.setStart(el, anchorOffset - start);
	            native.addRange(_range3);
	            native.extend(endNode, endOffset);
	          }
	        }

	      this.debug('updateSelection');
	    }

	    /**
	     * Render the leaf.
	     *
	     * @return {Element}
	     */

	  }, {
	    key: 'render',
	    value: function render() {
	      this.debug('render');

	      var props = this.props;
	      var node = props.node;
	      var index = props.index;

	      var offsetKey = _offsetKey2.default.stringify({
	        key: node.key,
	        index: index
	      });

	      // Increment the renders key, which forces a re-render whenever this
	      // component is told it should update. This is required because "native"
	      // renders where we don't update the leaves cause React's internal state to
	      // get out of sync, causing it to not realize the DOM needs updating.
	      this.tmp.renders++;

	      return _react2.default.createElement(
	        'span',
	        { key: this.tmp.renders, 'data-offset-key': offsetKey },
	        this.renderMarks(props)
	      );
	    }

	    /**
	     * Render the text content of the leaf, accounting for browsers.
	     *
	     * @param {Object} props
	     * @return {Element}
	     */

	  }, {
	    key: 'renderText',
	    value: function renderText(_ref) {
	      var text = _ref.text;
	      var index = _ref.index;
	      var ranges = _ref.ranges;

	      // If the text is empty, we need to render a <br/> to get the block to have
	      // the proper height.
	      if (text == '') return _react2.default.createElement('br', null);

	      // COMPAT: Browsers will collapse trailing new lines at the end of blocks,
	      // so we need to add an extra trailing new lines to prevent that.
	      var lastChar = text.charAt(text.length - 1);
	      var isLast = index == ranges.size - 1;
	      if (isLast && lastChar == '\n') return text + '\n';

	      // Otherwise, just return the text.
	      return text;
	    }

	    /**
	     * Render all of the leaf's mark components.
	     *
	     * @param {Object} props
	     * @return {Element}
	     */

	  }, {
	    key: 'renderMarks',
	    value: function renderMarks(props) {
	      var marks = props.marks;
	      var schema = props.schema;

	      var text = this.renderText(props);

	      return marks.reduce(function (children, mark) {
	        var Component = mark.getComponent(schema);
	        if (!Component) return children;
	        return _react2.default.createElement(
	          Component,
	          { mark: mark, marks: marks },
	          children
	        );
	      }, text);
	    }
	  }]);

	  return Leaf;
	}(_react2.default.Component);

	/**
	 * Find the deepest descendant of a DOM `element`.
	 *
	 * @param {Element} node
	 * @return {Element}
	 */

	Leaf.propTypes = {
	  index: _react2.default.PropTypes.number.isRequired,
	  isVoid: _react2.default.PropTypes.bool,
	  marks: _react2.default.PropTypes.object.isRequired,
	  node: _react2.default.PropTypes.object.isRequired,
	  ranges: _react2.default.PropTypes.object.isRequired,
	  schema: _react2.default.PropTypes.object.isRequired,
	  state: _react2.default.PropTypes.object.isRequired,
	  text: _react2.default.PropTypes.string.isRequired
	};
	Leaf.defaultProps = {
	  isVoid: false
	};
	function findDeepestNode(element) {
	  return element.firstChild ? findDeepestNode(element.firstChild) : element;
	}

	/**
	 * Export.
	 */

	exports.default = Leaf;

/***/ },
/* 283 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	/**
	 * Offset key parser regex.
	 */

	var PARSER = /^(\w+)(?:-(\d+))?$/;

	/**
	 * Offset key attribute name.
	 */

	var ATTRIBUTE = 'data-offset-key';
	var SELECTOR = '[' + ATTRIBUTE + ']';

	/**
	 * Find the start and end bounds from an `offsetKey` and `ranges`.
	 *
	 * @param {Number} index
	 * @param {List} ranges
	 * @return {Object}
	 */

	function findBounds(index, ranges) {
	  var range = ranges.get(index);
	  var start = ranges.slice(0, index).reduce(function (memo, r) {
	    return memo += r.text.length;
	  }, 0);

	  return {
	    start: start,
	    end: start + range.text.length
	  };
	}

	/**
	 * From a `element`, find the closest parent's offset key.
	 *
	 * @param {Element} element
	 * @param {Number} offset
	 * @return {Object}
	 */

	function findKey(element, offset) {
	  if (element.nodeType == 3) element = element.parentNode;

	  var parent = element.closest(SELECTOR);
	  var children = element.querySelectorAll(SELECTOR);
	  var offsetKey = void 0;

	  // Get the key from a parent if one exists.
	  if (parent) {
	    offsetKey = parent.getAttribute(ATTRIBUTE);
	  }

	  // COMPAT: In Firefox, and potentially other browsers, when performing a
	  // "select all" action, a parent element is selected instead of the text. In
	  // this case, we need to select the proper inner text nodes. (2016/07/26)
	  else if (children.length) {
	      var child = children[0];

	      if (offset != 0) {
	        child = children[children.length - 1];
	        offset = child.textContent.length;
	      }

	      offsetKey = child.getAttribute(ATTRIBUTE);
	    }

	    // Otherwise, for void node scenarios, a cousin element will be selected, and
	    // we need to select the first text node cousin we can find.
	    else {
	        while (element = element.parentNode) {
	          var cousin = element.querySelector(SELECTOR);
	          if (!cousin) continue;
	          offsetKey = cousin.getAttribute(ATTRIBUTE);
	          offset = cousin.textContent.length;
	          break;
	        }
	      }

	  // If we still didn't find an offset key, error. This is a bug.
	  if (!offsetKey) {
	    throw new Error('Unable to find offset key for ' + element + ' with offset "' + offset + '".');
	  }

	  // Parse the offset key.
	  var parsed = parse(offsetKey);

	  return {
	    key: parsed.key,
	    index: parsed.index,
	    offset: offset
	  };
	}

	/**
	 * Find the selection point from an `offsetKey` and `ranges`.
	 *
	 * @param {Object} offsetKey
	 * @param {List} ranges
	 * @return {Object}
	 */

	function findPoint(offsetKey, ranges) {
	  var key = offsetKey.key;
	  var index = offsetKey.index;
	  var offset = offsetKey.offset;

	  var _findBounds = findBounds(index, ranges);

	  var start = _findBounds.start;
	  var end = _findBounds.end;

	  // Don't let the offset be outside of the start and end bounds.

	  offset = start + offset;
	  offset = Math.max(offset, start);
	  offset = Math.min(offset, end);

	  return {
	    key: key,
	    index: index,
	    start: start,
	    end: end,
	    offset: offset
	  };
	}

	/**
	 * Parse an offset key `string`.
	 *
	 * @param {String} string
	 * @return {Object}
	 */

	function parse(string) {
	  var matches = PARSER.exec(string);
	  if (!matches) throw new Error('Invalid offset key string "' + string + '".');

	  var _matches = _slicedToArray(matches, 3);

	  var original = _matches[0];
	  var key = _matches[1];
	  var index = _matches[2];

	  return {
	    key: key,
	    index: parseInt(index, 10)
	  };
	}

	/**
	 * Stringify an offset key `object`.
	 *
	 * @param {Object} object
	 *   @property {String} key
	 *   @property {Number} index
	 * @return {String}
	 */

	function stringify(object) {
	  return object.key + '-' + object.index;
	}

	/**
	 * Export.
	 */

	exports.default = {
	  findBounds: findBounds,
	  findKey: findKey,
	  findPoint: findPoint,
	  parse: parse,
	  stringify: stringify
	};

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * Module dependencies.
	 */

	var getDocument = __webpack_require__(285);

	/**
	 * Module exports.
	 */

	module.exports = getWindow;

	var needsIEFallback = __webpack_require__(286);

	/**
	 * Returns `true` if `w` is a Window object, or `false` otherwise.
	 *
	 * @param {Mixed} w - Window object, maybe
	 * @return {Boolean}
	 * @private
	 */

	function isWindow (w) {
	  return w && w.window === w;
	}

	/**
	 * Returns the `window` object associated with the given `node`, which may be
	 * a DOM element, the Window object, a Selection, a Range. Basically any DOM
	 * object that references the Window in some way, this function will find it.
	 *
	 * @param {Mixed} node - DOM node, selection, or range in which to find the `window` object
	 * @return {Window} the `window` object associated with `node`
	 * @public
	 */

	function getWindow(node) {
	  if (isWindow(node)) {
	    return node;
	  }

	  var doc = getDocument(node);

	  if (needsIEFallback) {
	    // In IE 6-8, only the variable 'window' can be used to connect events (others
	    // may be only copies).
	    doc.parentWindow.execScript('document._parentWindow = window;', 'Javascript');
	    var win = doc._parentWindow;
	    // to prevent memory leak, unset it after use
	    // another possibility is to add an onUnload handler,
	    // (which seems overkill to @liucougar)
	    doc._parentWindow = null;
	    return win;
	  } else {
	    // standards-compliant and newer IE
	    return doc.defaultView || doc.parentWindow;
	  }
	}


/***/ },
/* 285 */
/***/ function(module, exports) {

	
	/**
	 * Module exports.
	 */

	module.exports = getDocument;

	// defined by w3c
	var DOCUMENT_NODE = 9;

	/**
	 * Returns `true` if `w` is a Document object, or `false` otherwise.
	 *
	 * @param {?} d - Document object, maybe
	 * @return {Boolean}
	 * @private
	 */

	function isDocument (d) {
	  return d && d.nodeType === DOCUMENT_NODE;
	}

	/**
	 * Returns the `document` object associated with the given `node`, which may be
	 * a DOM element, the Window object, a Selection, a Range. Basically any DOM
	 * object that references the Document in some way, this function will find it.
	 *
	 * @param {Mixed} node - DOM node, selection, or range in which to find the `document` object
	 * @return {Document} the `document` object associated with `node`
	 * @public
	 */

	function getDocument(node) {
	  if (isDocument(node)) {
	    return node;

	  } else if (isDocument(node.ownerDocument)) {
	    return node.ownerDocument;

	  } else if (isDocument(node.document)) {
	    return node.document;

	  } else if (node.parentNode) {
	    return getDocument(node.parentNode);

	  // Range support
	  } else if (node.commonAncestorContainer) {
	    return getDocument(node.commonAncestorContainer);

	  } else if (node.startContainer) {
	    return getDocument(node.startContainer);

	  // Selection support
	  } else if (node.anchorNode) {
	    return getDocument(node.anchorNode);
	  }
	}


/***/ },
/* 286 */
/***/ function(module, exports) {

	// this is a browser-only module. There is a non-browser equivalent in the same
	// directory. This is done using a `package.json` browser field.
	// old-IE fallback logic: http://stackoverflow.com/a/10260692
	module.exports =  !!document.attachEvent && window !== document.parentWindow;


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _leaf = __webpack_require__(282);

	var _leaf2 = _interopRequireDefault(_leaf);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _offsetKey = __webpack_require__(283);

	var _offsetKey2 = _interopRequireDefault(_offsetKey);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(35);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _keycode = __webpack_require__(288);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _environment = __webpack_require__(289);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Noop.
	 *
	 * @type {Function}
	 */

	function noop() {}

	/**
	 * Void.
	 *
	 * @type {Component}
	 */

	var Void = function (_React$Component) {
	  _inherits(Void, _React$Component);

	  function Void() {
	    var _Object$getPrototypeO;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Void);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Void)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.onClick = function (e) {
	      e.preventDefault();
	      var _this$props = _this.props;
	      var node = _this$props.node;
	      var editor = _this$props.editor;

	      var next = editor.getState().transform().collapseToStartOf(node).focus().apply();

	      editor.onChange(next);
	    }, _this.render = function () {
	      var _this$props2 = _this.props;
	      var children = _this$props2.children;
	      var node = _this$props2.node;

	      var Tag = node.kind == 'block' ? 'div' : 'span';

	      // Make the outer wrapper relative, so the spacer can overlay it.
	      var style = {
	        position: 'relative'
	      };

	      return _react2.default.createElement(
	        Tag,
	        { style: style, onClick: _this.onClick },
	        _this.renderSpacer(),
	        _react2.default.createElement(
	          Tag,
	          { contentEditable: false },
	          children
	        )
	      );
	    }, _this.renderSpacer = function () {
	      // COMPAT: In Firefox, if the <span> is positioned absolutely, it won't
	      // receive the cursor properly when navigating via arrow keys.
	      var style = _environment.IS_FIREFOX ? {
	        pointerEvents: 'none',
	        width: '0px',
	        height: '0px',
	        lineHeight: '0px',
	        visibility: 'hidden'
	      } : {
	        position: 'absolute',
	        top: '0px',
	        left: '-9999px',
	        textIndent: '-9999px'
	      };

	      return _react2.default.createElement(
	        'span',
	        { style: style },
	        _this.renderLeaf()
	      );
	    }, _this.renderLeaf = function () {
	      var _this$props3 = _this.props;
	      var node = _this$props3.node;
	      var schema = _this$props3.schema;
	      var state = _this$props3.state;

	      var child = node.getTexts().first();
	      var ranges = child.getRanges();
	      var text = '';
	      var marks = _mark2.default.createSet();
	      var index = 0;
	      var offsetKey = _offsetKey2.default.stringify({
	        key: child.key,
	        index: index
	      });

	      return _react2.default.createElement(_leaf2.default, {
	        isVoid: true,
	        renderMark: noop,
	        key: offsetKey,
	        schema: schema,
	        state: state,
	        node: child,
	        ranges: ranges,
	        index: index,
	        text: text,
	        marks: marks
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  /**
	   * Property types.
	   */

	  /**
	   * When one of the wrapper elements it clicked, select the void node.
	   *
	   * @param {Event} e
	   */

	  /**
	   * Render.
	   *
	   * @return {Element}
	   */

	  /**
	   * Render a fake spacer leaf, which will catch the cursor when it the void
	   * node is navigated to with the arrow keys. Having this spacer there means
	   * the browser continues to manage the selection natively, so it keeps track
	   * of the right offset when moving across the block.
	   *
	   * @return {Element}
	   */

	  /**
	   * Render a fake leaf.
	   *
	   * @return {Element}
	   */

	  return Void;
	}(_react2.default.Component);

	/**
	 * Export.
	 */

	Void.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  editor: _react2.default.PropTypes.object.isRequired,
	  node: _react2.default.PropTypes.object.isRequired,
	  schema: _react2.default.PropTypes.object.isRequired,
	  state: _react2.default.PropTypes.object.isRequired
	};
	exports.default = Void;

/***/ },
/* 288 */
/***/ function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */

	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }

	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]

	  // Everything else (cast to string)
	  var search = String(searchInput)

	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)

	  return undefined
	}

	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */

	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}

	// Helper aliases

	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}


	/*!
	 * Programatically add the following
	 */

	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i

	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111

	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */

	var names = exports.names = exports.title = {} // title for backward compat

	// Create reverse mapping
	for (i in codes) names[codes[i]] = i

	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.IS_WINDOWS = exports.IS_UBUNTU = exports.IS_SAFARI = exports.IS_MAC = exports.IS_IOS = exports.IS_IE = exports.IS_FIREFOX = exports.IS_EDGE = exports.IS_CHROME = exports.IS_ANDROID = undefined;

	var _uaParserJs = __webpack_require__(290);

	var _uaParserJs2 = _interopRequireDefault(_uaParserJs);

	var _detectBrowser = __webpack_require__(292);

	var _detectBrowser2 = _interopRequireDefault(_detectBrowser);

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Export.
	 */

	var IS_ANDROID = exports.IS_ANDROID = process.browser && _detectBrowser2.default.name == 'android';
	var IS_CHROME = exports.IS_CHROME = process.browser && _detectBrowser2.default.name == 'chrome';
	var IS_EDGE = exports.IS_EDGE = process.browser && _detectBrowser2.default.name == 'edge';
	var IS_FIREFOX = exports.IS_FIREFOX = process.browser && _detectBrowser2.default.name == 'firefox';
	var IS_IE = exports.IS_IE = process.browser && _detectBrowser2.default.name == 'ie';
	var IS_IOS = exports.IS_IOS = process.browser && _detectBrowser2.default.name == 'ios';
	var IS_MAC = exports.IS_MAC = process.browser && new _uaParserJs2.default().getOS().name == 'Mac OS';
	var IS_SAFARI = exports.IS_SAFARI = process.browser && _detectBrowser2.default.name == 'safari';
	var IS_UBUNTU = exports.IS_UBUNTU = process.browser && new _uaParserJs2.default().getOS().name == 'Ubuntu';
	var IS_WINDOWS = exports.IS_WINDOWS = process.browser && (0, _includes2.default)(new _uaParserJs2.default().getOS().name, 'Windows');

	exports.default = {
	  IS_ANDROID: IS_ANDROID,
	  IS_CHROME: IS_CHROME,
	  IS_EDGE: IS_EDGE,
	  IS_FIREFOX: IS_FIREFOX,
	  IS_IE: IS_IE,
	  IS_IOS: IS_IOS,
	  IS_MAC: IS_MAC,
	  IS_SAFARI: IS_SAFARI,
	  IS_UBUNTU: IS_UBUNTU,
	  IS_WINDOWS: IS_WINDOWS
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * UAParser.js v0.7.10
	 * Lightweight JavaScript-based User-Agent string parser
	 * https://github.com/faisalman/ua-parser-js
	 *
	 * Copyright © 2012-2015 Faisal Salman <fyzlman@gmail.com>
	 * Dual licensed under GPLv2 & MIT
	 */

	(function (window, undefined) {

	    'use strict';

	    //////////////
	    // Constants
	    /////////////


	    var LIBVERSION  = '0.7.10',
	        EMPTY       = '',
	        UNKNOWN     = '?',
	        FUNC_TYPE   = 'function',
	        UNDEF_TYPE  = 'undefined',
	        OBJ_TYPE    = 'object',
	        STR_TYPE    = 'string',
	        MAJOR       = 'major', // deprecated
	        MODEL       = 'model',
	        NAME        = 'name',
	        TYPE        = 'type',
	        VENDOR      = 'vendor',
	        VERSION     = 'version',
	        ARCHITECTURE= 'architecture',
	        CONSOLE     = 'console',
	        MOBILE      = 'mobile',
	        TABLET      = 'tablet',
	        SMARTTV     = 'smarttv',
	        WEARABLE    = 'wearable',
	        EMBEDDED    = 'embedded';


	    ///////////
	    // Helper
	    //////////


	    var util = {
	        extend : function (regexes, extensions) {
	            for (var i in extensions) {
	                if ("browser cpu device engine os".indexOf(i) !== -1 && extensions[i].length % 2 === 0) {
	                    regexes[i] = extensions[i].concat(regexes[i]);
	                }
	            }
	            return regexes;
	        },
	        has : function (str1, str2) {
	          if (typeof str1 === "string") {
	            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;
	          } else {
	            return false;
	          }
	        },
	        lowerize : function (str) {
	            return str.toLowerCase();
	        },
	        major : function (version) {
	            return typeof(version) === STR_TYPE ? version.split(".")[0] : undefined;
	        }
	    };


	    ///////////////
	    // Map helper
	    //////////////


	    var mapper = {

	        rgx : function () {

	            var result, i = 0, j, k, p, q, matches, match, args = arguments;

	            // loop through all regexes maps
	            while (i < args.length && !matches) {

	                var regex = args[i],       // even sequence (0,2,4,..)
	                    props = args[i + 1];   // odd sequence (1,3,5,..)

	                // construct object barebones
	                if (typeof result === UNDEF_TYPE) {
	                    result = {};
	                    for (p in props) {
	                        if (props.hasOwnProperty(p)){
	                            q = props[p];
	                            if (typeof q === OBJ_TYPE) {
	                                result[q[0]] = undefined;
	                            } else {
	                                result[q] = undefined;
	                            }
	                        }
	                    }
	                }

	                // try matching uastring with regexes
	                j = k = 0;
	                while (j < regex.length && !matches) {
	                    matches = regex[j++].exec(this.getUA());
	                    if (!!matches) {
	                        for (p = 0; p < props.length; p++) {
	                            match = matches[++k];
	                            q = props[p];
	                            // check if given property is actually array
	                            if (typeof q === OBJ_TYPE && q.length > 0) {
	                                if (q.length == 2) {
	                                    if (typeof q[1] == FUNC_TYPE) {
	                                        // assign modified match
	                                        result[q[0]] = q[1].call(this, match);
	                                    } else {
	                                        // assign given value, ignore regex match
	                                        result[q[0]] = q[1];
	                                    }
	                                } else if (q.length == 3) {
	                                    // check whether function or regex
	                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {
	                                        // call function (usually string mapper)
	                                        result[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;
	                                    } else {
	                                        // sanitize match using given regex
	                                        result[q[0]] = match ? match.replace(q[1], q[2]) : undefined;
	                                    }
	                                } else if (q.length == 4) {
	                                        result[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;
	                                }
	                            } else {
	                                result[q] = match ? match : undefined;
	                            }
	                        }
	                    }
	                }
	                i += 2;
	            }
	            return result;
	        },

	        str : function (str, map) {

	            for (var i in map) {
	                // check if array
	                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {
	                    for (var j = 0; j < map[i].length; j++) {
	                        if (util.has(map[i][j], str)) {
	                            return (i === UNKNOWN) ? undefined : i;
	                        }
	                    }
	                } else if (util.has(map[i], str)) {
	                    return (i === UNKNOWN) ? undefined : i;
	                }
	            }
	            return str;
	        }
	    };


	    ///////////////
	    // String map
	    //////////////


	    var maps = {

	        browser : {
	            oldsafari : {
	                version : {
	                    '1.0'   : '/8',
	                    '1.2'   : '/1',
	                    '1.3'   : '/3',
	                    '2.0'   : '/412',
	                    '2.0.2' : '/416',
	                    '2.0.3' : '/417',
	                    '2.0.4' : '/419',
	                    '?'     : '/'
	                }
	            }
	        },

	        device : {
	            amazon : {
	                model : {
	                    'Fire Phone' : ['SD', 'KF']
	                }
	            },
	            sprint : {
	                model : {
	                    'Evo Shift 4G' : '7373KT'
	                },
	                vendor : {
	                    'HTC'       : 'APA',
	                    'Sprint'    : 'Sprint'
	                }
	            }
	        },

	        os : {
	            windows : {
	                version : {
	                    'ME'        : '4.90',
	                    'NT 3.11'   : 'NT3.51',
	                    'NT 4.0'    : 'NT4.0',
	                    '2000'      : 'NT 5.0',
	                    'XP'        : ['NT 5.1', 'NT 5.2'],
	                    'Vista'     : 'NT 6.0',
	                    '7'         : 'NT 6.1',
	                    '8'         : 'NT 6.2',
	                    '8.1'       : 'NT 6.3',
	                    '10'        : ['NT 6.4', 'NT 10.0'],
	                    'RT'        : 'ARM'
	                }
	            }
	        }
	    };


	    //////////////
	    // Regex map
	    /////////////


	    var regexes = {

	        browser : [[

	            // Presto based
	            /(opera\smini)\/([\w\.-]+)/i,                                       // Opera Mini
	            /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,                      // Opera Mobi/Tablet
	            /(opera).+version\/([\w\.]+)/i,                                     // Opera > 9.80
	            /(opera)[\/\s]+([\w\.]+)/i                                          // Opera < 9.80

	            ], [NAME, VERSION], [

	            /\s(opr)\/([\w\.]+)/i                                               // Opera Webkit
	            ], [[NAME, 'Opera'], VERSION], [

	            // Mixed
	            /(kindle)\/([\w\.]+)/i,                                             // Kindle
	            /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,
	                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer

	            // Trident based
	            /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,
	                                                                                // Avant/IEMobile/SlimBrowser/Baidu
	            /(?:ms|\()(ie)\s([\w\.]+)/i,                                        // Internet Explorer

	            // Webkit/KHTML based
	            /(rekonq)\/([\w\.]+)*/i,                                            // Rekonq
	            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i
	                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS
	            ], [NAME, VERSION], [

	            /(trident).+rv[:\s]([\w\.]+).+like\sgecko/i                         // IE11
	            ], [[NAME, 'IE'], VERSION], [

	            /(edge)\/((\d+)?[\w\.]+)/i                                          // Microsoft Edge
	            ], [NAME, VERSION], [

	            /(yabrowser)\/([\w\.]+)/i                                           // Yandex
	            ], [[NAME, 'Yandex'], VERSION], [

	            /(comodo_dragon)\/([\w\.]+)/i                                       // Comodo Dragon
	            ], [[NAME, /_/g, ' '], VERSION], [

	            /(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,
	                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia
	            /(qqbrowser)[\/\s]?([\w\.]+)/i
	                                                                                // QQBrowser
	            ], [NAME, VERSION], [

	            /(uc\s?browser)[\/\s]?([\w\.]+)/i,
	            /ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,
	            /JUC.+(ucweb)[\/\s]?([\w\.]+)/i
	                                                                                // UCBrowser
	            ], [[NAME, 'UCBrowser'], VERSION], [

	            /(dolfin)\/([\w\.]+)/i                                              // Dolphin
	            ], [[NAME, 'Dolphin'], VERSION], [

	            /((?:android.+)crmo|crios)\/([\w\.]+)/i                             // Chrome for Android/iOS
	            ], [[NAME, 'Chrome'], VERSION], [

	            /XiaoMi\/MiuiBrowser\/([\w\.]+)/i                                   // MIUI Browser
	            ], [VERSION, [NAME, 'MIUI Browser']], [

	            /android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)/i         // Android Browser
	            ], [VERSION, [NAME, 'Android Browser']], [

	            /FBAV\/([\w\.]+);/i                                                 // Facebook App for iOS
	            ], [VERSION, [NAME, 'Facebook']], [

	            /fxios\/([\w\.-]+)/i                                                // Firefox for iOS
	            ], [VERSION, [NAME, 'Firefox']], [

	            /version\/([\w\.]+).+?mobile\/\w+\s(safari)/i                       // Mobile Safari
	            ], [VERSION, [NAME, 'Mobile Safari']], [

	            /version\/([\w\.]+).+?(mobile\s?safari|safari)/i                    // Safari & Safari Mobile
	            ], [VERSION, NAME], [

	            /webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i                     // Safari < 3.0
	            ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [

	            /(konqueror)\/([\w\.]+)/i,                                          // Konqueror
	            /(webkit|khtml)\/([\w\.]+)/i
	            ], [NAME, VERSION], [

	            // Gecko based
	            /(navigator|netscape)\/([\w\.-]+)/i                                 // Netscape
	            ], [[NAME, 'Netscape'], VERSION], [
	            /(swiftfox)/i,                                                      // Swiftfox
	            /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,
	                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
	            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,
	                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
	            /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,                          // Mozilla

	            // Other
	            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,
	                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir
	            /(links)\s\(([\w\.]+)/i,                                            // Links
	            /(gobrowser)\/?([\w\.]+)*/i,                                        // GoBrowser
	            /(ice\s?browser)\/v?([\w\._]+)/i,                                   // ICE Browser
	            /(mosaic)[\/\s]([\w\.]+)/i                                          // Mosaic
	            ], [NAME, VERSION]

	            /* /////////////////////
	            // Media players BEGIN
	            ////////////////////////

	            , [

	            /(apple(?:coremedia|))\/((\d+)[\w\._]+)/i,                          // Generic Apple CoreMedia
	            /(coremedia) v((\d+)[\w\._]+)/i
	            ], [NAME, VERSION], [

	            /(aqualung|lyssna|bsplayer)\/((\d+)?[\w\.-]+)/i                     // Aqualung/Lyssna/BSPlayer
	            ], [NAME, VERSION], [

	            /(ares|ossproxy)\s((\d+)[\w\.-]+)/i                                 // Ares/OSSProxy
	            ], [NAME, VERSION], [

	            /(audacious|audimusicstream|amarok|bass|core|dalvik|gnomemplayer|music on console|nsplayer|psp-internetradioplayer|videos)\/((\d+)[\w\.-]+)/i,
	                                                                                // Audacious/AudiMusicStream/Amarok/BASS/OpenCORE/Dalvik/GnomeMplayer/MoC
	                                                                                // NSPlayer/PSP-InternetRadioPlayer/Videos
	            /(clementine|music player daemon)\s((\d+)[\w\.-]+)/i,               // Clementine/MPD
	            /(lg player|nexplayer)\s((\d+)[\d\.]+)/i,
	            /player\/(nexplayer|lg player)\s((\d+)[\w\.-]+)/i                   // NexPlayer/LG Player
	            ], [NAME, VERSION], [
	            /(nexplayer)\s((\d+)[\w\.-]+)/i                                     // Nexplayer
	            ], [NAME, VERSION], [

	            /(flrp)\/((\d+)[\w\.-]+)/i                                          // Flip Player
	            ], [[NAME, 'Flip Player'], VERSION], [

	            /(fstream|nativehost|queryseekspider|ia-archiver|facebookexternalhit)/i
	                                                                                // FStream/NativeHost/QuerySeekSpider/IA Archiver/facebookexternalhit
	            ], [NAME], [

	            /(gstreamer) souphttpsrc (?:\([^\)]+\)){0,1} libsoup\/((\d+)[\w\.-]+)/i
	                                                                                // Gstreamer
	            ], [NAME, VERSION], [

	            /(htc streaming player)\s[\w_]+\s\/\s((\d+)[\d\.]+)/i,              // HTC Streaming Player
	            /(java|python-urllib|python-requests|wget|libcurl)\/((\d+)[\w\.-_]+)/i,
	                                                                                // Java/urllib/requests/wget/cURL
	            /(lavf)((\d+)[\d\.]+)/i                                             // Lavf (FFMPEG)
	            ], [NAME, VERSION], [

	            /(htc_one_s)\/((\d+)[\d\.]+)/i                                      // HTC One S
	            ], [[NAME, /_/g, ' '], VERSION], [

	            /(mplayer)(?:\s|\/)(?:(?:sherpya-){0,1}svn)(?:-|\s)(r\d+(?:-\d+[\w\.-]+){0,1})/i
	                                                                                // MPlayer SVN
	            ], [NAME, VERSION], [

	            /(mplayer)(?:\s|\/|[unkow-]+)((\d+)[\w\.-]+)/i                      // MPlayer
	            ], [NAME, VERSION], [

	            /(mplayer)/i,                                                       // MPlayer (no other info)
	            /(yourmuze)/i,                                                      // YourMuze
	            /(media player classic|nero showtime)/i                             // Media Player Classic/Nero ShowTime
	            ], [NAME], [

	            /(nero (?:home|scout))\/((\d+)[\w\.-]+)/i                           // Nero Home/Nero Scout
	            ], [NAME, VERSION], [

	            /(nokia\d+)\/((\d+)[\w\.-]+)/i                                      // Nokia
	            ], [NAME, VERSION], [

	            /\s(songbird)\/((\d+)[\w\.-]+)/i                                    // Songbird/Philips-Songbird
	            ], [NAME, VERSION], [

	            /(winamp)3 version ((\d+)[\w\.-]+)/i,                               // Winamp
	            /(winamp)\s((\d+)[\w\.-]+)/i,
	            /(winamp)mpeg\/((\d+)[\w\.-]+)/i
	            ], [NAME, VERSION], [

	            /(ocms-bot|tapinradio|tunein radio|unknown|winamp|inlight radio)/i  // OCMS-bot/tap in radio/tunein/unknown/winamp (no other info)
	                                                                                // inlight radio
	            ], [NAME], [

	            /(quicktime|rma|radioapp|radioclientapplication|soundtap|totem|stagefright|streamium)\/((\d+)[\w\.-]+)/i
	                                                                                // QuickTime/RealMedia/RadioApp/RadioClientApplication/
	                                                                                // SoundTap/Totem/Stagefright/Streamium
	            ], [NAME, VERSION], [

	            /(smp)((\d+)[\d\.]+)/i                                              // SMP
	            ], [NAME, VERSION], [

	            /(vlc) media player - version ((\d+)[\w\.]+)/i,                     // VLC Videolan
	            /(vlc)\/((\d+)[\w\.-]+)/i,
	            /(xbmc|gvfs|xine|xmms|irapp)\/((\d+)[\w\.-]+)/i,                    // XBMC/gvfs/Xine/XMMS/irapp
	            /(foobar2000)\/((\d+)[\d\.]+)/i,                                    // Foobar2000
	            /(itunes)\/((\d+)[\d\.]+)/i                                         // iTunes
	            ], [NAME, VERSION], [

	            /(wmplayer)\/((\d+)[\w\.-]+)/i,                                     // Windows Media Player
	            /(windows-media-player)\/((\d+)[\w\.-]+)/i
	            ], [[NAME, /-/g, ' '], VERSION], [

	            /windows\/((\d+)[\w\.-]+) upnp\/[\d\.]+ dlnadoc\/[\d\.]+ (home media server)/i
	                                                                                // Windows Media Server
	            ], [VERSION, [NAME, 'Windows']], [

	            /(com\.riseupradioalarm)\/((\d+)[\d\.]*)/i                          // RiseUP Radio Alarm
	            ], [NAME, VERSION], [

	            /(rad.io)\s((\d+)[\d\.]+)/i,                                        // Rad.io
	            /(radio.(?:de|at|fr))\s((\d+)[\d\.]+)/i
	            ], [[NAME, 'rad.io'], VERSION]

	            //////////////////////
	            // Media players END
	            ////////////////////*/

	        ],

	        cpu : [[

	            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i                     // AMD64
	            ], [[ARCHITECTURE, 'amd64']], [

	            /(ia32(?=;))/i                                                      // IA32 (quicktime)
	            ], [[ARCHITECTURE, util.lowerize]], [

	            /((?:i[346]|x)86)[;\)]/i                                            // IA32
	            ], [[ARCHITECTURE, 'ia32']], [

	            // PocketPC mistakenly identified as PowerPC
	            /windows\s(ce|mobile);\sppc;/i
	            ], [[ARCHITECTURE, 'arm']], [

	            /((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i                           // PowerPC
	            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [

	            /(sun4\w)[;\)]/i                                                    // SPARC
	            ], [[ARCHITECTURE, 'sparc']], [

	            /((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i
	                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
	            ], [[ARCHITECTURE, util.lowerize]]
	        ],

	        device : [[

	            /\((ipad|playbook);[\w\s\);-]+(rim|apple)/i                         // iPad/PlayBook
	            ], [MODEL, VENDOR, [TYPE, TABLET]], [

	            /applecoremedia\/[\w\.]+ \((ipad)/                                  // iPad
	            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [

	            /(apple\s{0,1}tv)/i                                                 // Apple TV
	            ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [

	            /(archos)\s(gamepad2?)/i,                                           // Archos
	            /(hp).+(touchpad)/i,                                                // HP TouchPad
	            /(kindle)\/([\w\.]+)/i,                                             // Kindle
	            /\s(nook)[\w\s]+build\/(\w+)/i,                                     // Nook
	            /(dell)\s(strea[kpr\s\d]*[\dko])/i                                  // Dell Streak
	            ], [VENDOR, MODEL, [TYPE, TABLET]], [

	            /(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i                               // Kindle Fire HD
	            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [
	            /(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i                  // Fire Phone
	            ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [

	            /\((ip[honed|\s\w*]+);.+(apple)/i                                   // iPod/iPhone
	            ], [MODEL, VENDOR, [TYPE, MOBILE]], [
	            /\((ip[honed|\s\w*]+);/i                                            // iPod/iPhone
	            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [

	            /(blackberry)[\s-]?(\w+)/i,                                         // BlackBerry
	            /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,
	                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Huawei/Meizu/Motorola/Polytron
	            /(hp)\s([\w\s]+\w)/i,                                               // HP iPAQ
	            /(asus)-?(\w+)/i                                                    // Asus
	            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
	            /\(bb10;\s(\w+)/i                                                   // BlackBerry 10
	            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [
	                                                                                // Asus Tablets
	            /android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7)/i
	            ], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [

	            /(sony)\s(tablet\s[ps])\sbuild\//i,                                  // Sony
	            /(sony)?(?:sgp.+)\sbuild\//i
	            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [
	            /(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i
	            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Phone'], [TYPE, MOBILE]], [

	            /\s(ouya)\s/i,                                                      // Ouya
	            /(nintendo)\s([wids3u]+)/i                                          // Nintendo
	            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [

	            /android.+;\s(shield)\sbuild/i                                      // Nvidia
	            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [

	            /(playstation\s[34portablevi]+)/i                                   // Playstation
	            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [

	            /(sprint\s(\w+))/i                                                  // Sprint Phones
	            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [

	            /(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i                         // Lenovo tablets
	            ], [VENDOR, MODEL, [TYPE, TABLET]], [

	            /(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,                               // HTC
	            /(zte)-(\w+)*/i,                                                    // ZTE
	            /(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i
	                                                                                // Alcatel/GeeksPhone/Huawei/Lenovo/Nexian/Panasonic/Sony
	            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [
	                
	            /(nexus\s9)/i                                                       // HTC Nexus 9
	            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [

	            /[\s\(;](xbox(?:\sone)?)[\s\);]/i                                   // Microsoft Xbox
	            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [
	            /(kin\.[onetw]{3})/i                                                // Microsoft Kin
	            ], [[MODEL, /\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [

	                                                                                // Motorola
	            /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,
	            /mot[\s-]?(\w+)*/i,
	            /(XT\d{3,4}) build\//i,
	            /(nexus\s[6])/i
	            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [
	            /android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i
	            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [

	            /android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n8000|sgh-t8[56]9|nexus 10))/i,
	            /((SM-T\w+))/i
	            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung
	            /((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-n900))/i,
	            /(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,
	            /sec-((sgh\w+))/i
	            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [
	            /(samsung);smarttv/i
	            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [

	            /\(dtv[\);].+(aquos)/i                                              // Sharp
	            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [
	            /sie-(\w+)*/i                                                       // Siemens
	            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [

	            /(maemo|nokia).*(n900|lumia\s\d+)/i,                                // Nokia
	            /(nokia)[\s_-]?([\w-]+)*/i
	            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [

	            /android\s3\.[\s\w;-]{10}(a\d{3})/i                                 // Acer
	            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [

	            /android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i                     // LG Tablet
	            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [
	            /(lg) netcast\.tv/i                                                 // LG SmartTV
	            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [
	            /(nexus\s[45])/i,                                                   // LG
	            /lg[e;\s\/-]+(\w+)*/i
	            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [

	            /android.+(ideatab[a-z0-9\-\s]+)/i                                  // Lenovo
	            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [

	            /linux;.+((jolla));/i                                               // Jolla
	            ], [VENDOR, MODEL, [TYPE, MOBILE]], [

	            /((pebble))app\/[\d\.]+\s/i                                         // Pebble
	            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [

	            /android.+;\s(glass)\s\d/i                                          // Google Glass
	            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [

	            /android.+(\w+)\s+build\/hm\1/i,                                        // Xiaomi Hongmi 'numeric' models
	            /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,                   // Xiaomi Hongmi
	            /android.+(mi[\s\-_]*(?:one|one[\s_]plus)?[\s_]*(?:\d\w)?)\s+build/i    // Xiaomi Mi
	            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [

	            /\s(tablet)[;\/\s]/i,                                               // Unidentifiable Tablet
	            /\s(mobile)[;\/\s]/i                                                // Unidentifiable Mobile
	            ], [[TYPE, util.lowerize], VENDOR, MODEL]

	            /*//////////////////////////
	            // TODO: move to string map
	            ////////////////////////////

	            /(C6603)/i                                                          // Sony Xperia Z C6603
	            ], [[MODEL, 'Xperia Z C6603'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [
	            /(C6903)/i                                                          // Sony Xperia Z 1
	            ], [[MODEL, 'Xperia Z 1'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [

	            /(SM-G900[F|H])/i                                                   // Samsung Galaxy S5
	            ], [[MODEL, 'Galaxy S5'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
	            /(SM-G7102)/i                                                       // Samsung Galaxy Grand 2
	            ], [[MODEL, 'Galaxy Grand 2'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
	            /(SM-G530H)/i                                                       // Samsung Galaxy Grand Prime
	            ], [[MODEL, 'Galaxy Grand Prime'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
	            /(SM-G313HZ)/i                                                      // Samsung Galaxy V
	            ], [[MODEL, 'Galaxy V'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
	            /(SM-T805)/i                                                        // Samsung Galaxy Tab S 10.5
	            ], [[MODEL, 'Galaxy Tab S 10.5'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [
	            /(SM-G800F)/i                                                       // Samsung Galaxy S5 Mini
	            ], [[MODEL, 'Galaxy S5 Mini'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
	            /(SM-T311)/i                                                        // Samsung Galaxy Tab 3 8.0
	            ], [[MODEL, 'Galaxy Tab 3 8.0'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [

	            /(R1001)/i                                                          // Oppo R1001
	            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [
	            /(X9006)/i                                                          // Oppo Find 7a
	            ], [[MODEL, 'Find 7a'], [VENDOR, 'Oppo'], [TYPE, MOBILE]], [
	            /(R2001)/i                                                          // Oppo YOYO R2001
	            ], [[MODEL, 'Yoyo R2001'], [VENDOR, 'Oppo'], [TYPE, MOBILE]], [
	            /(R815)/i                                                           // Oppo Clover R815
	            ], [[MODEL, 'Clover R815'], [VENDOR, 'Oppo'], [TYPE, MOBILE]], [
	             /(U707)/i                                                          // Oppo Find Way S
	            ], [[MODEL, 'Find Way S'], [VENDOR, 'Oppo'], [TYPE, MOBILE]], [

	            /(T3C)/i                                                            // Advan Vandroid T3C
	            ], [MODEL, [VENDOR, 'Advan'], [TYPE, TABLET]], [
	            /(ADVAN T1J\+)/i                                                    // Advan Vandroid T1J+
	            ], [[MODEL, 'Vandroid T1J+'], [VENDOR, 'Advan'], [TYPE, TABLET]], [
	            /(ADVAN S4A)/i                                                      // Advan Vandroid S4A
	            ], [[MODEL, 'Vandroid S4A'], [VENDOR, 'Advan'], [TYPE, MOBILE]], [

	            /(V972M)/i                                                          // ZTE V972M
	            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [

	            /(i-mobile)\s(IQ\s[\d\.]+)/i                                        // i-mobile IQ
	            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
	            /(IQ6.3)/i                                                          // i-mobile IQ IQ 6.3
	            ], [[MODEL, 'IQ 6.3'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [
	            /(i-mobile)\s(i-style\s[\d\.]+)/i                                   // i-mobile i-STYLE
	            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
	            /(i-STYLE2.1)/i                                                     // i-mobile i-STYLE 2.1
	            ], [[MODEL, 'i-STYLE 2.1'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [
	            
	            /(mobiistar touch LAI 512)/i                                        // mobiistar touch LAI 512
	            ], [[MODEL, 'Touch LAI 512'], [VENDOR, 'mobiistar'], [TYPE, MOBILE]], [

	            /////////////
	            // END TODO
	            ///////////*/

	        ],

	        engine : [[

	            /windows.+\sedge\/([\w\.]+)/i                                       // EdgeHTML
	            ], [VERSION, [NAME, 'EdgeHTML']], [

	            /(presto)\/([\w\.]+)/i,                                             // Presto
	            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,     // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m
	            /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,                          // KHTML/Tasman/Links
	            /(icab)[\/\s]([23]\.[\d\.]+)/i                                      // iCab
	            ], [NAME, VERSION], [

	            /rv\:([\w\.]+).*(gecko)/i                                           // Gecko
	            ], [VERSION, NAME]
	        ],

	        os : [[

	            // Windows based
	            /microsoft\s(windows)\s(vista|xp)/i                                 // Windows (iTunes)
	            ], [NAME, VERSION], [
	            /(windows)\snt\s6\.2;\s(arm)/i,                                     // Windows RT
	            /(windows\sphone(?:\sos)*|windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i
	            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [
	            /(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i
	            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [

	            // Mobile/Embedded OS
	            /\((bb)(10);/i                                                      // BlackBerry 10
	            ], [[NAME, 'BlackBerry'], VERSION], [
	            /(blackberry)\w*\/?([\w\.]+)*/i,                                    // Blackberry
	            /(tizen)[\/\s]([\w\.]+)/i,                                          // Tizen
	            /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,
	                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki
	            /linux;.+(sailfish);/i                                              // Sailfish OS
	            ], [NAME, VERSION], [
	            /(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i                 // Symbian
	            ], [[NAME, 'Symbian'], VERSION], [
	            /\((series40);/i                                                    // Series 40
	            ], [NAME], [
	            /mozilla.+\(mobile;.+gecko.+firefox/i                               // Firefox OS
	            ], [[NAME, 'Firefox OS'], VERSION], [

	            // Console
	            /(nintendo|playstation)\s([wids34portablevu]+)/i,                   // Nintendo/Playstation

	            // GNU/Linux based
	            /(mint)[\/\s\(]?(\w+)*/i,                                           // Mint
	            /(mageia|vectorlinux)[;\s]/i,                                       // Mageia/VectorLinux
	            /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?([\w\.-]+)*/i,
	                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware
	                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus
	            /(hurd|linux)\s?([\w\.]+)*/i,                                       // Hurd/Linux
	            /(gnu)\s?([\w\.]+)*/i                                               // GNU
	            ], [NAME, VERSION], [

	            /(cros)\s[\w]+\s([\w\.]+\w)/i                                       // Chromium OS
	            ], [[NAME, 'Chromium OS'], VERSION],[

	            // Solaris
	            /(sunos)\s?([\w\.]+\d)*/i                                           // Solaris
	            ], [[NAME, 'Solaris'], VERSION], [

	            // BSD based
	            /\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i                   // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly
	            ], [NAME, VERSION],[

	            /(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i              // iOS
	            ], [[NAME, 'iOS'], [VERSION, /_/g, '.']], [

	            /(mac\sos\sx)\s?([\w\s\.]+\w)*/i,
	            /(macintosh|mac(?=_powerpc)\s)/i                                    // Mac OS
	            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [

	            // Other
	            /((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,                            // Solaris
	            /(haiku)\s(\w+)/i,                                                  // Haiku
	            /(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,                               // AIX
	            /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,
	                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS
	            /(unix)\s?([\w\.]+)*/i                                              // UNIX
	            ], [NAME, VERSION]
	        ]
	    };


	    /////////////////
	    // Constructor
	    ////////////////


	    var UAParser = function (uastring, extensions) {

	        if (!(this instanceof UAParser)) {
	            return new UAParser(uastring, extensions).getResult();
	        }

	        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);
	        var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;

	        this.getBrowser = function () {
	            var browser = mapper.rgx.apply(this, rgxmap.browser);
	            browser.major = util.major(browser.version);
	            return browser;
	        };
	        this.getCPU = function () {
	            return mapper.rgx.apply(this, rgxmap.cpu);
	        };
	        this.getDevice = function () {
	            return mapper.rgx.apply(this, rgxmap.device);
	        };
	        this.getEngine = function () {
	            return mapper.rgx.apply(this, rgxmap.engine);
	        };
	        this.getOS = function () {
	            return mapper.rgx.apply(this, rgxmap.os);
	        };
	        this.getResult = function() {
	            return {
	                ua      : this.getUA(),
	                browser : this.getBrowser(),
	                engine  : this.getEngine(),
	                os      : this.getOS(),
	                device  : this.getDevice(),
	                cpu     : this.getCPU()
	            };
	        };
	        this.getUA = function () {
	            return ua;
	        };
	        this.setUA = function (uastring) {
	            ua = uastring;
	            return this;
	        };
	        this.setUA(ua);
	        return this;
	    };

	    UAParser.VERSION = LIBVERSION;
	    UAParser.BROWSER = {
	        NAME    : NAME,
	        MAJOR   : MAJOR, // deprecated
	        VERSION : VERSION
	    };
	    UAParser.CPU = {
	        ARCHITECTURE : ARCHITECTURE
	    };
	    UAParser.DEVICE = {
	        MODEL   : MODEL,
	        VENDOR  : VENDOR,
	        TYPE    : TYPE,
	        CONSOLE : CONSOLE,
	        MOBILE  : MOBILE,
	        SMARTTV : SMARTTV,
	        TABLET  : TABLET,
	        WEARABLE: WEARABLE,
	        EMBEDDED: EMBEDDED
	    };
	    UAParser.ENGINE = {
	        NAME    : NAME,
	        VERSION : VERSION
	    };
	    UAParser.OS = {
	        NAME    : NAME,
	        VERSION : VERSION
	    };


	    ///////////
	    // Export
	    //////////


	    // check js environment
	    if (typeof(exports) !== UNDEF_TYPE) {
	        // nodejs env
	        if (typeof module !== UNDEF_TYPE && module.exports) {
	            exports = module.exports = UAParser;
	        }
	        exports.UAParser = UAParser;
	    } else {
	        // requirejs env (optional)
	        if ("function" === FUNC_TYPE && __webpack_require__(291)) {
	            !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	                return UAParser;
	            }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	        } else {
	            // browser env
	            window.UAParser = UAParser;
	        }
	    }

	    // jQuery/Zepto specific (optional)
	    // Note: 
	    //   In AMD env the global scope should be kept clean, but jQuery is an exception.
	    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,
	    //   and we should catch that.
	    var $ = window.jQuery || window.Zepto;
	    if (typeof $ !== UNDEF_TYPE) {
	        var parser = new UAParser();
	        $.ua = parser.getResult();
	        $.ua.get = function() {
	            return parser.getUA();
	        };
	        $.ua.set = function (uastring) {
	            parser.setUA(uastring);
	            var result = parser.getResult();
	            for (var prop in result) {
	                $.ua[prop] = result[prop];
	            }
	        };
	    }

	})(typeof window === 'object' ? window : this);


/***/ },
/* 291 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var detectBrowser = __webpack_require__(293);

	module.exports = detectBrowser(navigator.userAgent);


/***/ },
/* 293 */
/***/ function(module, exports) {

	module.exports = function detectBrowser(userAgentString) {
	  var browsers = [
	    [ 'edge', /Edge\/([0-9\._]+)/ ],
	    [ 'chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/ ],
	    [ 'firefox', /Firefox\/([0-9\.]+)(?:\s|$)/ ],
	    [ 'opera', /Opera\/([0-9\.]+)(?:\s|$)/ ],
	    [ 'opera', /OPR\/([0-9\.]+)(:?\s|$)$/ ],
	    [ 'ie', /Trident\/7\.0.*rv\:([0-9\.]+)\).*Gecko$/ ],
	    [ 'ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/ ],
	    [ 'ie', /MSIE\s(7\.0)/ ],
	    [ 'bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/ ],
	    [ 'android', /Android\s([0-9\.]+)/ ],
	    [ 'ios', /iPad.*Version\/([0-9\._]+)/ ],
	    [ 'ios',  /iPhone.*Version\/([0-9\._]+)/ ],
	    [ 'safari', /Version\/([0-9\._]+).*Safari/ ]
	  ];

	  var i = 0, mapped =[];
	  for (i = 0; i < browsers.length; i++) {
	    browsers[i] = createMatch(browsers[i]);
	    if (isMatch(browsers[i])) {
	      mapped.push(browsers[i]);
	    }
	  }

	  var match = mapped[0];
	  var parts = match && match[3].split(/[._]/).slice(0,3);

	  while (parts && parts.length < 3) {
	    parts.push('0');
	  }

	  function createMatch(pair) {
	    return pair.concat(pair[1].exec(userAgentString));
	  }

	  function isMatch(pair) {
	    return !!pair[2];
	  }

	  // return the name and version
	  return {
	    name: match && match[0],
	    version: parts && parts.join('.'),
	  };
	};


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getWindow = __webpack_require__(284);

	var _getWindow2 = _interopRequireDefault(_getWindow);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function scrollWrapperElements(element, options) {
	  var window = (0, _getWindow2.default)(element);
	  var elementRect = element.getBoundingClientRect();
	  var wrapper = element.parentNode;

	  while (wrapper != window.document.body) {
	    var wrapperRect = wrapper.getBoundingClientRect();
	    var margin = options.margin;
	    var deltaX = 0;
	    var deltaY = 0;

	    if (elementRect.top < wrapperRect.top + margin) {
	      deltaY = elementRect.top - wrapperRect.top - margin;
	    } else if (elementRect.bottom > wrapperRect.bottom - margin) {
	      deltaY = elementRect.bottom - wrapperRect.bottom + margin;
	    }
	    if (elementRect.left < wrapperRect.left + margin) {
	      deltaX = elementRect.left - wrapperRect.left - margin;
	    } else if (elementRect.right > wrapperRect.right - margin) {
	      deltaX = elementRect.right - wrapperRect.right + margin;
	    }
	    wrapper.scrollTop += deltaY;
	    wrapper.scrollLeft += deltaX;
	    wrapper = wrapper.parentNode;
	  }

	  return elementRect;
	}
	/**
	 * Copied from `element-scroll-to`, but edited to account for `window` being
	 * inside of iframes.
	 *
	 * https://github.com/webmodules/element-scroll-to
	 */

	function scrollWindow(element, options, elementRect) {
	  var window = (0, _getWindow2.default)(element);
	  var margin = options.margin;
	  var deltaX = 0;
	  var deltaY = 0;

	  if (elementRect.top < 0 + margin) {
	    deltaY = elementRect.top - margin;
	  } else if (elementRect.bottom > window.innerHeight - margin) {
	    deltaY = elementRect.bottom - window.innerHeight + margin;
	  }
	  if (elementRect.left < 0 + margin) {
	    deltaX = elementRect.left - margin;
	  } else if (elementRect.right > window.innerWidth - margin) {
	    deltaX = elementRect.right - window.innerWidth + margin;
	  }

	  window.scrollBy(deltaX, deltaY);
	}

	function scrollTo(element, options) {
	  options = options || {};
	  options.margin = options.margin || 0;
	  var rect = scrollWrapperElements(element, options);
	  scrollWindow(element, options, rect);
	}

	exports.default = scrollTo;

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _base = __webpack_require__(176);

	var _base2 = _interopRequireDefault(_base);

	var _types = __webpack_require__(281);

	var _types2 = _interopRequireDefault(_types);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Fragment matching regexp for HTML nodes.
	 *
	 * @type {RegExp}
	 */

	var FRAGMENT_MATCHER = /data-slate-fragment="([^\s]+)"/;

	/**
	 * Data transfer helper.
	 *
	 * @type {Transfer}
	 */

	var Transfer = function () {

	  /**
	   * Constructor.
	   *
	   * @param {DataTransfer} data
	   */

	  function Transfer(data) {
	    _classCallCheck(this, Transfer);

	    this.data = data;
	    this.cache = {};
	  }

	  /**
	   * Get a data object representing the transfer's primary content type.
	   *
	   * @return {Object}
	   */

	  _createClass(Transfer, [{
	    key: 'getData',
	    value: function getData() {
	      var type = this.getType();
	      var data = {};
	      data.type = type;

	      switch (type) {
	        case 'files':
	          data.files = this.getFiles();
	          break;
	        case 'fragment':
	          data.fragment = this.getFragment();
	          break;
	        case 'html':
	          data.html = this.getHtml();
	          data.text = this.getText();
	          break;
	        case 'node':
	          data.node = this.getNode();
	          break;
	        case 'text':
	          data.text = this.getText();
	          break;
	      }

	      return data;
	    }

	    /**
	     * Get the Files content of the data transfer.
	     *
	     * @return {Array || Void}
	     */

	  }, {
	    key: 'getFiles',
	    value: function getFiles() {
	      if ('files' in this.cache) return this.cache.files;

	      var data = this.data;

	      var files = void 0;

	      if (data.items && data.items.length) {
	        var fileItems = Array.from(data.items).map(function (item) {
	          return item.kind == 'file' ? item.getAsFile() : null;
	        }).filter(function (exists) {
	          return exists;
	        });

	        if (fileItems.length) files = fileItems;
	      }

	      if (data.files && data.files.length) {
	        files = Array.from(data.files);
	      }

	      this.cache.files = files;
	      return files;
	    }

	    /**
	     * Get the Slate document fragment content of the data transfer.
	     *
	     * @return {Document || Void}
	     */

	  }, {
	    key: 'getFragment',
	    value: function getFragment() {
	      if ('fragment' in this.cache) return this.cache.fragment;

	      var html = this.getHtml();
	      var encoded = this.data.getData(_types2.default.FRAGMENT);
	      var fragment = void 0;

	      // If there's html content, and the html includes a `data-fragment`
	      // attribute, it's actually a Base64-serialized fragment from a cut/copy.
	      if (!encoded && html && ~html.indexOf('<span data-slate-fragment="')) {
	        var matches = FRAGMENT_MATCHER.exec(html);

	        var _matches = _slicedToArray(matches, 2);

	        var full = _matches[0];
	        var attribute = _matches[1];

	        encoded = attribute;
	      }

	      if (encoded) {
	        fragment = _base2.default.deserializeNode(encoded);
	      }

	      this.cache.fragment = fragment;
	      return fragment;
	    }

	    /**
	     * Get the HTML content of the data transfer.
	     *
	     * @return {String || Void}
	     */

	  }, {
	    key: 'getHtml',
	    value: function getHtml() {
	      if ('html' in this.cache) return this.cache.html;

	      var html = void 0;
	      var string = this.data.getData('text/html');

	      if (string != '') html = string;

	      this.cache.html = html;
	      return html;
	    }

	    /**
	     * Get the Slate node content of the data transfer.
	     *
	     * @return {Node || Void}
	     */

	  }, {
	    key: 'getNode',
	    value: function getNode() {
	      if ('node' in this.cache) return this.cache.node;

	      var encoded = this.data.getData(_types2.default.NODE);
	      var node = void 0;

	      if (encoded) {
	        node = _base2.default.deserializeNode(encoded);
	      }

	      this.cache.node = node;
	      return node;
	    }

	    /**
	     * Get the text content of the data transfer.
	     *
	     * @return {String || Void}
	     */

	  }, {
	    key: 'getText',
	    value: function getText() {
	      if ('text' in this.cache) return this.cache.text;

	      var text = void 0;
	      var string = this.data.getData('text/plain');

	      if (string != '') text = string;

	      this.cache.text = text;
	      return text;
	    }

	    /**
	     * Get the primary type of the data transfer.
	     *
	     * @return {String}
	     */

	  }, {
	    key: 'getType',
	    value: function getType() {
	      if (this.hasFragment()) return 'fragment';
	      if (this.hasNode()) return 'node';
	      if (this.hasFiles()) return 'files';
	      if (this.hasHtml()) return 'html';
	      if (this.hasText()) return 'text';
	      return 'unknown';
	    }

	    /**
	     * Check whether the data transfer has File content.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFiles',
	    value: function hasFiles() {
	      return this.getFiles() != null;
	    }

	    /**
	     * Check whether the data transfer has HTML content.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasHtml',
	    value: function hasHtml() {
	      return this.getHtml() != null;
	    }

	    /**
	     * Check whether the data transfer has text content.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasText',
	    value: function hasText() {
	      return this.getText() != null;
	    }

	    /**
	     * Check whether the data transfer has a Slate document fragment as content.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasFragment',
	    value: function hasFragment() {
	      return this.getFragment() != null;
	    }

	    /**
	     * Check whether the data transfer has a Slate node as content.
	     *
	     * @return {Boolean}
	     */

	  }, {
	    key: 'hasNode',
	    value: function hasNode() {
	      return this.getNode() != null;
	    }
	  }]);

	  return Transfer;
	}();

	/**
	 * Export.
	 */

	exports.default = Transfer;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _base = __webpack_require__(176);

	var _base2 = _interopRequireDefault(_base);

	var _character = __webpack_require__(184);

	var _character2 = _interopRequireDefault(_character);

	var _debug = __webpack_require__(277);

	var _debug2 = _interopRequireDefault(_debug);

	var _placeholder = __webpack_require__(297);

	var _placeholder2 = _interopRequireDefault(_placeholder);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _string = __webpack_require__(298);

	var _string2 = _interopRequireDefault(_string);

	var _getWindow = __webpack_require__(284);

	var _getWindow2 = _interopRequireDefault(_getWindow);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Debug.
	 *
	 * @type {Function}
	 */

	var debug = (0, _debug2.default)('slate:core');

	/**
	 * The default plugin.
	 *
	 * @param {Object} options
	 *   @property {Element} placeholder
	 *   @property {String} placeholderClassName
	 *   @property {Object} placeholderStyle
	 * @return {Object}
	 */

	function Plugin() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var placeholder = options.placeholder;
	  var placeholderClassName = options.placeholderClassName;
	  var placeholderStyle = options.placeholderStyle;

	  /**
	   * On before change, enforce the editor's schema.
	   *
	   * @param {State} state
	   * @param {Editor} schema
	   * @return {State}
	   */

	  function onBeforeChange(state, editor) {
	    if (state.isNative) return state;
	    var schema = editor.getSchema();
	    return state.normalize(schema);
	  }

	  /**
	   * On before input, see if we can let the browser continue with it's native
	   * input behavior, to avoid a re-render for performance.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @param {Editor} editor
	   * @return {State}
	   */

	  function onBeforeInput(e, data, state, editor) {
	    var document = state.document;
	    var startKey = state.startKey;
	    var startOffset = state.startOffset;
	    var startText = state.startText;

	    // Determine what the characters would be if natively inserted.

	    var schema = editor.getSchema();
	    var decorators = document.getDescendantDecorators(startKey, schema);
	    var prevChars = startText.getDecorations(decorators);
	    var prevChar = prevChars.get(startOffset - 1);
	    var char = _character2.default.create({
	      text: e.data,
	      marks: prevChar && prevChar.marks
	    });

	    var chars = prevChars.slice(0, startOffset).push(char).concat(prevChars.slice(startOffset));

	    // Determine what the characters should be, if not natively inserted.
	    var next = state.transform().insertText(e.data).apply();

	    var nextText = next.startText;
	    var nextChars = nextText.getDecorations(decorators);

	    // We do not have to re-render if the current selection is collapsed, the
	    // current node is not empty, there are no marks on the cursor, and the
	    // natively inserted characters would be the same as the non-native.
	    var isNative = state.isCollapsed && state.startText.text != '' && state.cursorMarks == null && chars.equals(nextChars);

	    // Add the `isNative` flag directly, so we don't have to re-transform.
	    if (isNative) {
	      next = next.merge({ isNative: isNative });
	    }

	    // If not native, prevent default so that the DOM remains untouched.
	    if (!isNative) e.preventDefault();

	    debug('onBeforeInput', { data: data, isNative: isNative });
	    return next;
	  }

	  /**
	   * On blur.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onBlur(e, data, state) {
	    var isNative = true;

	    debug('onBlur', { data: data, isNative: isNative });

	    return state.transform().blur().apply({ isNative: isNative });
	  }

	  /**
	   * On copy.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onCopy(e, data, state) {
	    debug('onCopy', data);
	    onCutOrCopy(e, data, state);
	  }

	  /**
	   * On cut.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @param {Editor} editor
	   * @return {State}
	   */

	  function onCut(e, data, state, editor) {
	    debug('onCut', data);
	    onCutOrCopy(e, data, state);
	    var window = (0, _getWindow2.default)(e.target);

	    // Once the fake cut content has successfully been added to the clipboard,
	    // delete the content in the current selection.
	    window.requestAnimationFrame(function () {
	      var next = editor.getState().transform().delete().apply();

	      editor.onChange(next);
	    });
	  }

	  /**
	   * On cut or copy, create a fake selection so that we can add a Base 64
	   * encoded copy of the fragment to the HTML, to decode on future pastes.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onCutOrCopy(e, data, state) {
	    var window = (0, _getWindow2.default)(e.target);
	    var native = window.getSelection();
	    if (!native.rangeCount) return;

	    var fragment = data.fragment;

	    var encoded = _base2.default.serializeNode(fragment);

	    // Wrap the first character of the selection in a span that has the encoded
	    // fragment attached as an attribute, so it will show up in the copied HTML.
	    var range = native.getRangeAt(0);
	    var contents = range.cloneContents();
	    var wrapper = window.document.createElement('span');
	    var text = contents.childNodes[0];
	    var char = text.textContent.slice(0, 1);
	    var first = window.document.createTextNode(char);
	    var rest = text.textContent.slice(1);
	    text.textContent = rest;
	    wrapper.appendChild(first);
	    wrapper.setAttribute('data-slate-fragment', encoded);
	    contents.insertBefore(wrapper, text);

	    // Add the phony content to the DOM, and select it, so it will be copied.
	    var body = window.document.querySelector('body');
	    var div = window.document.createElement('div');
	    div.setAttribute('contenteditable', true);
	    div.style.position = 'absolute';
	    div.style.left = '-9999px';
	    div.appendChild(contents);
	    body.appendChild(div);

	    // COMPAT: In Firefox, trying to use the terser `native.selectAllChildren`
	    // throws an error, so we use the older `range` equivalent. (2016/06/21)
	    var r = window.document.createRange();
	    r.selectNodeContents(div);
	    native.removeAllRanges();
	    native.addRange(r);

	    // Revert to the previous selection right after copying.
	    window.requestAnimationFrame(function () {
	      body.removeChild(div);
	      native.removeAllRanges();
	      native.addRange(range);
	    });
	  }

	  /**
	   * On drop.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onDrop(e, data, state) {
	    debug('onDrop', { data: data });

	    switch (data.type) {
	      case 'text':
	      case 'html':
	        return onDropText(e, data, state);
	      case 'fragment':
	        return onDropFragment(e, data, state);
	    }
	  }

	  /**
	   * On drop fragment.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onDropFragment(e, data, state) {
	    debug('onDropFragment', { data: data });

	    var selection = state.selection;
	    var fragment = data.fragment;
	    var target = data.target;
	    var isInternal = data.isInternal;

	    // If the drag is internal and the target is after the selection, it
	    // needs to account for the selection's content being deleted.

	    if (isInternal && selection.endKey == target.endKey && selection.endOffset < target.endOffset) {
	      target = target.moveBackward(selection.startKey == selection.endKey ? selection.endOffset - selection.startOffset : selection.endOffset);
	    }

	    var transform = state.transform();

	    if (isInternal) transform = transform.delete();

	    return transform.moveTo(target).insertFragment(fragment).apply();
	  }

	  /**
	   * On drop text, split the blocks at new lines.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onDropText(e, data, state) {
	    debug('onDropText', { data: data });

	    var text = data.text;
	    var target = data.target;

	    var transform = state.transform().moveTo(target);

	    text.split('\n').forEach(function (line, i) {
	      if (i > 0) transform = transform.splitBlock();
	      transform = transform.insertText(line);
	    });

	    return transform.apply();
	  }

	  /**
	   * On key down.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDown(e, data, state) {
	    debug('onKeyDown', { data: data });

	    switch (data.key) {
	      case 'enter':
	        return onKeyDownEnter(e, data, state);
	      case 'backspace':
	        return onKeyDownBackspace(e, data, state);
	      case 'delete':
	        return onKeyDownDelete(e, data, state);
	      case 'y':
	        return onKeyDownY(e, data, state);
	      case 'z':
	        return onKeyDownZ(e, data, state);
	    }
	  }

	  /**
	   * On `enter` key down, split the current block in half.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDownEnter(e, data, state) {
	    debug('onKeyDownEnter', { data: data });

	    var document = state.document;
	    var startKey = state.startKey;
	    var startBlock = state.startBlock;

	    // For void blocks, we don't want to split. Instead we just move to the
	    // start of the next text node if one exists.

	    if (startBlock && startBlock.isVoid) {
	      var text = document.getNextText(startKey);
	      if (!text) return;
	      return state.transform().collapseToStartOf(text).apply();
	    }

	    return state.transform().splitBlock().apply();
	  }

	  /**
	   * On `backspace` key down, delete backwards.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDownBackspace(e, data, state) {
	    debug('onKeyDownBackspace', { data: data });

	    // If expanded, delete regularly.
	    if (state.isExpanded) {
	      return state.transform().delete().apply();
	    }

	    var startOffset = state.startOffset;
	    var startBlock = state.startBlock;

	    var text = startBlock.text;
	    var n = void 0;

	    // Determine how far backwards to delete.
	    if (data.isWord) {
	      n = _string2.default.getWordOffsetBackward(text, startOffset);
	    } else if (data.isLine) {
	      n = startOffset;
	    } else {
	      n = _string2.default.getCharOffsetBackward(text, startOffset);
	    }

	    return state.transform().deleteBackward(n).apply();
	  }

	  /**
	   * On `delete` key down, delete forwards.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDownDelete(e, data, state) {
	    debug('onKeyDownDelete', { data: data });

	    // If expanded, delete regularly.
	    if (state.isExpanded) {
	      return state.transform().delete().apply();
	    }

	    var startOffset = state.startOffset;
	    var startBlock = state.startBlock;

	    var text = startBlock.text;
	    var n = void 0;

	    // Determine how far forwards to delete.
	    if (data.isWord) {
	      n = _string2.default.getWordOffsetForward(text, startOffset);
	    } else if (data.isLine) {
	      n = text.length - startOffset;
	    } else {
	      n = _string2.default.getCharOffsetForward(text, startOffset);
	    }

	    return state.transform().deleteForward(n).apply();
	  }

	  /**
	   * On `y` key down, redo.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDownY(e, data, state) {
	    if (!data.isMod) return;

	    debug('onKeyDownY', { data: data });

	    return state.transform().redo();
	  }

	  /**
	   * On `z` key down, undo or redo.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onKeyDownZ(e, data, state) {
	    if (!data.isMod) return;

	    debug('onKeyDownZ', { data: data });

	    return state.transform()[data.isShift ? 'redo' : 'undo']();
	  }

	  /**
	   * On paste.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onPaste(e, data, state) {
	    debug('onPaste', { data: data });

	    switch (data.type) {
	      case 'fragment':
	        return onPasteFragment(e, data, state);
	      case 'text':
	      case 'html':
	        return onPasteText(e, data, state);
	    }
	  }

	  /**
	   * On paste fragment.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onPasteFragment(e, data, state) {
	    debug('onPasteFragment', { data: data });

	    return state.transform().insertFragment(data.fragment).apply();
	  }

	  /**
	   * On paste text, split blocks at new lines.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onPasteText(e, data, state) {
	    debug('onPasteText', { data: data });

	    var transform = state.transform();

	    data.text.split('\n').forEach(function (line, i) {
	      if (i > 0) transform = transform.splitBlock();
	      transform = transform.insertText(line);
	    });

	    return transform.apply();
	  }

	  /**
	   * On select.
	   *
	   * @param {Event} e
	   * @param {Object} data
	   * @param {State} state
	   * @return {State}
	   */

	  function onSelect(e, data, state) {
	    var selection = data.selection;


	    debug('onSelect', { data: data, selection: selection.toJS() });

	    return state.transform().moveTo(selection).focus().apply();
	  }

	  /**
	   * A default schema rule to render block nodes.
	   *
	   * @type {Object}
	   */

	  var BLOCK_RENDER_RULE = {
	    match: function match(node) {
	      return node.kind == 'block';
	    },
	    render: function render(props) {
	      return _react2.default.createElement(
	        'div',
	        _extends({}, props.attributes, { style: { position: 'relative' } }),
	        props.children,
	        placeholder ? _react2.default.createElement(
	          _placeholder2.default,
	          {
	            className: placeholderClassName,
	            node: props.node,
	            parent: props.state.document,
	            state: props.state,
	            style: placeholderStyle
	          },
	          placeholder
	        ) : null
	      );
	    }
	  };

	  /**
	   * A default schema rule to render inline nodes.
	   *
	   * @type {Object}
	   */

	  var INLINE_RENDER_RULE = {
	    match: function match(node) {
	      return node.kind == 'inline';
	    },
	    render: function render(props) {
	      return _react2.default.createElement(
	        'span',
	        _extends({}, props.attributes, { style: { position: 'relative' } }),
	        props.children
	      );
	    }
	  };

	  /**
	   * A default schema rule to only allow block nodes in documents.
	   *
	   * @type {Object}
	   */

	  var DOCUMENT_CHILDREN_RULE = {
	    match: function match(node) {
	      return node.kind == 'document';
	    },
	    validate: function validate(document) {
	      var nodes = document.nodes;

	      var invalids = nodes.filter(function (n) {
	        return n.kind != 'block';
	      });
	      return invalids.size ? invalids : null;
	    },
	    normalize: function normalize(transform, document, invalids) {
	      return invalids.reduce(function (t, n) {
	        return t.removeNodeByKey(n.key);
	      }, transform);
	    }
	  };

	  /**
	   * A default schema rule to only allow block, inline and text nodes in blocks.
	   *
	   * @type {Object}
	   */

	  var BLOCK_CHILDREN_RULE = {
	    match: function match(node) {
	      return node.kind == 'block';
	    },
	    validate: function validate(block) {
	      var nodes = block.nodes;

	      var invalids = nodes.filter(function (n) {
	        return n.kind != 'block' && n.kind != 'inline' && n.kind != 'text';
	      });
	      return invalids.size ? invalids : null;
	    },
	    normalize: function normalize(transform, block, invalids) {
	      return invalids.reduce(function (t, n) {
	        return t.removeNodeByKey(n.key);
	      }, transform);
	    }
	  };

	  /**
	   * A default schema rule to only allow inline and text nodes in inlines.
	   *
	   * @type {Object}
	   */

	  var INLINE_CHILDREN_RULE = {
	    match: function match(object) {
	      return object.kind == 'inline';
	    },
	    validate: function validate(inline) {
	      var nodes = inline.nodes;

	      var invalids = nodes.filter(function (n) {
	        return n.kind != 'inline' && n.kind != 'text';
	      });
	      return invalids.size ? invalids : null;
	    },
	    normalize: function normalize(transform, inline, invalids) {
	      return invalids.reduce(function (t, n) {
	        return t.removeNodeByKey(n.key);
	      }, transform);
	    }
	  };

	  /**
	   * The default schema.
	   *
	   * @type {Object}
	   */

	  var schema = {
	    rules: [BLOCK_RENDER_RULE, INLINE_RENDER_RULE, DOCUMENT_CHILDREN_RULE, BLOCK_CHILDREN_RULE, INLINE_CHILDREN_RULE]
	  };

	  /**
	   * Return the core plugin.
	   */

	  return {
	    onBeforeChange: onBeforeChange,
	    onBeforeInput: onBeforeInput,
	    onBlur: onBlur,
	    onCopy: onCopy,
	    onCut: onCut,
	    onDrop: onDrop,
	    onKeyDown: onKeyDown,
	    onPaste: onPaste,
	    onSelect: onSelect,
	    schema: schema
	  };
	}

	/**
	 * Export.
	 */

	exports.default = Plugin;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Placeholder.
	 */

	var Placeholder = function (_React$Component) {
	  _inherits(Placeholder, _React$Component);

	  function Placeholder() {
	    var _Object$getPrototypeO;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Placeholder);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Placeholder)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.shouldComponentUpdate = function (props, state) {
	      return props.children != _this.props.children || props.className != _this.props.className || props.parent != _this.props.parent || props.node != _this.props.node || props.style != _this.props.style;
	    }, _this.isVisible = function () {
	      var _this$props = _this.props;
	      var node = _this$props.node;
	      var parent = _this$props.parent;

	      if (node.text) return false;
	      if (parent.nodes.size > 1) return false;

	      var isFirst = parent.nodes.first() === node;
	      if (isFirst) return true;

	      return false;
	    }, _this.render = function () {
	      var isVisible = _this.isVisible();
	      if (!isVisible) return null;

	      var _this$props2 = _this.props;
	      var children = _this$props2.children;
	      var className = _this$props2.className;
	      var style = _this.props.style;


	      if (typeof children === 'string' && style == null && className == null) {
	        style = { opacity: '0.333' };
	      } else if (style == null) {
	        style = {};
	      }

	      var styles = _extends({
	        position: 'absolute',
	        top: '0px',
	        right: '0px',
	        bottom: '0px',
	        left: '0px',
	        pointerEvents: 'none'
	      }, style);

	      return _react2.default.createElement(
	        'span',
	        { contentEditable: false, className: className, style: styles },
	        children
	      );
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  /**
	   * Properties.
	   */

	  /**
	   * Should the placeholder update?
	   *
	   * @param {Object} props
	   * @param {Object} state
	   * @return {Boolean}
	   */

	  /**
	   * Is the placeholder visible?
	   *
	   * @return {Boolean}
	   */

	  /**
	   * Render.
	   *
	   * If the placeholder is a string, and no `className` or `style` has been
	   * passed, give it a default style of lowered opacity.
	   *
	   * @return {Element} element
	   */

	  return Placeholder;
	}(_react2.default.Component);

	/**
	 * Export.
	 */

	Placeholder.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  className: _react2.default.PropTypes.string,
	  node: _react2.default.PropTypes.object.isRequired,
	  parent: _react2.default.PropTypes.object.isRequired,
	  state: _react2.default.PropTypes.object.isRequired,
	  style: _react2.default.PropTypes.object
	};
	exports.default = Placeholder;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _esrever = __webpack_require__(299);

	/**
	 * Surrogate pair start and end points.
	 *
	 * @type {Number}
	 */

	var SURROGATE_START = 0xD800;
	var SURROGATE_END = 0xDFFF;

	/**
	 * A regex to match space characters.
	 *
	 * @type {RegExp}
	 */

	var SPACE = /\s/;

	/**
	 * A regex to match chameleon characters, that count as word characters as long
	 * as they are inside of a word.
	 *
	 * @type {RegExp}
	 */

	var CHAMELEON = /['\u2018\u2019]/;

	/**
	 * A regex that matches punctuation.
	 *
	 * @type {RegExp}
	 */

	var PUNCTUATION = /[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;

	/**
	 * Is a character `code` in a surrogate character.
	 *
	 * @param {Number} code
	 * @return {Boolean}
	 */

	function isSurrogate(code) {
	  return SURROGATE_START <= code && code <= SURROGATE_END;
	}

	/**
	 * Is a character a word character? Needs the `remaining` characters too.
	 *
	 * @param {String} char
	 * @param {String || Void} remaining
	 * @return {Boolean}
	 */

	function isWord(char, remaining) {
	  if (SPACE.test(char)) return false;

	  // If it's a chameleon character, recurse to see if the next one is or not.
	  if (CHAMELEON.test(char)) {
	    var next = remaining.charAt(0);
	    var length = getCharLength(next);
	    var rest = remaining.slice(length);
	    if (isWord(next, rest)) return true;
	  }

	  if (PUNCTUATION.test(char)) return false;
	  return true;
	}

	/**
	 * Get the length of a `character`.
	 *
	 * @param {String} char
	 * @return {Number}
	 */

	function getCharLength(char) {
	  return isSurrogate(char.charCodeAt(0)) ? 2 : 1;
	}

	/**
	 * Get the offset to the end of the first character in `text`.
	 *
	 * @param {String} text
	 * @return {Number}
	 */

	function getCharOffset(text) {
	  var char = text.charAt(0);
	  return getCharLength(char);
	}

	/**
	 * Get the offset to the end of the character before an `offset` in `text`.
	 *
	 * @param {String} text
	 * @param {Number} offset
	 * @return {Number}
	 */

	function getCharOffsetBackward(text, offset) {
	  text = text.slice(0, offset);
	  text = (0, _esrever.reverse)(text);
	  return getCharOffset(text);
	}

	/**
	 * Get the offset to the end of the character after an `offset` in `text`.
	 *
	 * @param {String} text
	 * @param {Number} offset
	 * @return {Number}
	 */

	function getCharOffsetForward(text, offset) {
	  text = text.slice(offset);
	  return getCharOffset(text);
	}

	/**
	 * Get the length of a `string`.
	 *
	 * @param {String} string
	 * @return {Number}
	 */

	function getLength(string) {
	  var length = 0;

	  for (var i = 0, char = string.charAt(i); i < string.length; i += getCharLength(char)) {
	    length++;
	  }

	  return length;
	}

	/**
	 * Get the offset to the end of the first word in `text`.
	 *
	 * @param {String} text
	 * @return {Number}
	 */

	function getWordOffset(text) {
	  var length = 0;
	  var i = 0;
	  var started = false;
	  var char = void 0;

	  while (char = text.charAt(i)) {
	    var l = getCharLength(char);
	    var rest = text.slice(i + l);

	    if (isWord(char, rest)) {
	      started = true;
	      length++;
	    } else if (!started) {
	      length++;
	    } else {
	      break;
	    }

	    i += l;
	  }

	  return length;
	}

	/**
	 * Get the offset to the end of the word before an `offset` in `text`.
	 *
	 * @param {String} text
	 * @param {Number} offset
	 * @return {Number}
	 */

	function getWordOffsetBackward(text, offset) {
	  text = text.slice(0, offset);
	  text = (0, _esrever.reverse)(text);
	  return getWordOffset(text);
	}

	/**
	 * Get the offset to the end of the word after an `offset` in `text`.
	 *
	 * @param {String} text
	 * @param {Number} offset
	 * @return {Number}
	 */

	function getWordOffsetForward(text, offset) {
	  text = text.slice(offset);
	  return getWordOffset(text);
	}

	/**
	 * Export.
	 */

	exports.default = {
	  getCharOffsetForward: getCharOffsetForward,
	  getCharOffsetBackward: getCharOffsetBackward,
	  getWordOffsetBackward: getWordOffsetBackward,
	  getWordOffsetForward: getWordOffsetForward
	};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/esrever v0.2.0 by @mathias */
	;(function(root) {

		// Detect free variables `exports`
		var freeExports = typeof exports == 'object' && exports;

		// Detect free variable `module`
		var freeModule = typeof module == 'object' && module &&
			module.exports == freeExports && module;

		// Detect free variable `global`, from Node.js or Browserified code,
		// and use it as `root`
		var freeGlobal = typeof global == 'object' && global;
		if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
			root = freeGlobal;
		}

		/*--------------------------------------------------------------------------*/

		var regexSymbolWithCombiningMarks = /([\0-\u02FF\u0370-\u1AAF\u1B00-\u1DBF\u1E00-\u20CF\u2100-\uD7FF\uE000-\uFE1F\uFE30-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])([\u0300-\u036F\u1AB0-\u1AFF\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]+)/g;
		var regexSurrogatePair = /([\uD800-\uDBFF])([\uDC00-\uDFFF])/g;

		var reverse = function(string) {
			// Step 1: deal with combining marks and astral symbols (surrogate pairs)
			string = string
				// Swap symbols with their combining marks so the combining marks go first
				.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {
					// Reverse the combining marks so they will end up in the same order
					// later on (after another round of reversing)
					return reverse($2) + $1;
				})
				// Swap high and low surrogates so the low surrogates go first
				.replace(regexSurrogatePair, '$2$1');
			// Step 2: reverse the code units in the string
			var result = '';
			var index = string.length;
			while (index--) {
				result += string.charAt(index);
			}
			return result;
		};

		/*--------------------------------------------------------------------------*/

		var esrever = {
			'version': '0.2.0',
			'reverse': reverse
		};

		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return esrever;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}	else if (freeExports && !freeExports.nodeType) {
			if (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+
				freeModule.exports = esrever;
			} else { // in Narwhal or RingoJS v0.7.0-
				for (var key in esrever) {
					esrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);
				}
			}
		} else { // in Rhino or a web browser
			root.esrever = esrever;
		}

	}(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(300)(module), (function() { return this; }())))

/***/ },
/* 300 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _includes = __webpack_require__(188);

	var _includes2 = _interopRequireDefault(_includes);

	var _isReactComponent = __webpack_require__(302);

	var _isReactComponent2 = _interopRequireDefault(_isReactComponent);

	var _typeOf = __webpack_require__(220);

	var _typeOf2 = _interopRequireDefault(_typeOf);

	var _memoize = __webpack_require__(186);

	var _memoize2 = _interopRequireDefault(_memoize);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Checks that the schema can perform, ordered by performance.
	 *
	 * @type {Object}
	 */

	var CHECKS = {
	  kind: function kind(object, value) {
	    if (object.kind != value) return object.kind;
	  },
	  type: function type(object, value) {
	    if (object.type != value) return object.type;
	  },
	  isVoid: function isVoid(object, value) {
	    if (object.isVoid != value) return object.isVoid;
	  },
	  minChildren: function minChildren(object, value) {
	    if (object.nodes.size < value) return object.nodes.size;
	  },
	  maxChildren: function maxChildren(object, value) {
	    if (object.nodes.size > value) return object.nodes.size;
	  },
	  kinds: function kinds(object, value) {
	    if (!(0, _includes2.default)(value, object.kind)) return object.kind;
	  },
	  types: function types(object, value) {
	    if (!(0, _includes2.default)(value, object.type)) return object.type;
	  },
	  minLength: function minLength(object, value) {
	    var length = object.length;

	    if (length < value) return length;
	  },
	  maxLength: function maxLength(object, value) {
	    var length = object.length;

	    if (length > value) return length;
	  },
	  text: function text(object, value) {
	    var text = object.text;

	    switch ((0, _typeOf2.default)(value)) {
	      case 'function':
	        if (value(text)) return text;
	      case 'regexp':
	        if (!text.match(value)) return text;
	      default:
	        if (text != value) return text;
	    }
	  },
	  anyOf: function anyOf(object, value) {
	    var nodes = object.nodes;

	    if (!nodes) return;
	    var invalids = nodes.filterNot(function (child) {
	      return value.some(function (match) {
	        return match(child);
	      });
	    });

	    if (invalids.size) return invalids;
	  },
	  noneOf: function noneOf(object, value) {
	    var nodes = object.nodes;

	    if (!nodes) return;
	    var invalids = nodes.filterNot(function (child) {
	      return value.every(function (match) {
	        return !match(child);
	      });
	    });

	    if (invalids.size) return invalids;
	  },
	  exactlyOf: function exactlyOf(object, value) {
	    var nodes = object.nodes;

	    if (!nodes) return;
	    if (nodes.size != value.length) return nodes;

	    var invalids = nodes.filterNot(function (child, i) {
	      var match = value[i];
	      if (!match) return false;
	      return match(child);
	    });

	    if (invalids.size) return invalids;
	  }
	};

	/**
	 * Default properties.
	 *
	 * @type {Object}
	 */

	var DEFAULTS = {
	  rules: []
	};

	/**
	 * Schema.
	 *
	 * @type {Record}
	 */

	var Schema = function (_ref) {
	  _inherits(Schema, _ref);

	  function Schema() {
	    _classCallCheck(this, Schema);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Schema).apply(this, arguments));
	  }

	  _createClass(Schema, [{
	    key: '__getComponent',


	    /**
	     * Return the renderer for an `object`.
	     *
	     * This method is private, because it should always be called on one of the
	     * often-changing immutable objects instead, since it will be memoized for
	     * much better performance.
	     *
	     * @param {Mixed} object
	     * @return {Component || Void}
	     */

	    value: function __getComponent(object) {
	      var match = this.rules.find(function (rule) {
	        return rule.render && rule.match(object);
	      });
	      if (!match) return;
	      return match.render;
	    }

	    /**
	     * Return the decorators for an `object`.
	     *
	     * This method is private, because it should always be called on one of the
	     * often-changing immutable objects instead, since it will be memoized for
	     * much better performance.
	     *
	     * @param {Mixed} object
	     * @return {Array}
	     */

	  }, {
	    key: '__getDecorators',
	    value: function __getDecorators(object) {
	      return this.rules.filter(function (rule) {
	        return rule.decorate && rule.match(object);
	      }).map(function (rule) {
	        return function (text) {
	          return rule.decorate(text, object);
	        };
	      });
	    }

	    /**
	     * Validate an `object` against the schema, returning the failing rule and
	     * value if the object is invalid, or void if it's valid.
	     *
	     * This method is private, because it should always be called on one of the
	     * often-changing immutable objects instead, since it will be memoized for
	     * much better performance.
	     *
	     * @param {Mixed} object
	     * @return {Object || Void}
	     */

	  }, {
	    key: '__validate',
	    value: function __validate(object) {
	      var value = void 0;

	      var match = this.rules.find(function (rule) {
	        if (!rule.validate) return;
	        if (!rule.match(object)) return;

	        value = rule.validate(object);
	        return value;
	      });

	      if (!value) return;

	      return {
	        rule: match,
	        value: value
	      };
	    }
	  }, {
	    key: 'kind',


	    /**
	     * Get the kind.
	     *
	     * @return {String} kind
	     */

	    get: function get() {
	      return 'schema';
	    }
	  }], [{
	    key: 'create',


	    /**
	     * Create a new `Schema` with `properties`.
	     *
	     * @param {Object} properties
	     * @return {Schema} mark
	     */

	    value: function create() {
	      var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      if (properties instanceof Schema) return properties;
	      return new Schema(normalizeProperties(properties));
	    }
	  }]);

	  return Schema;
	}(new _immutable.Record(DEFAULTS));

	/**
	 * Normalize the `properties` of a schema.
	 *
	 * @param {Object} properties
	 * @return {Object}
	 */

	function normalizeProperties(properties) {
	  var _properties$rules = properties.rules;
	  var rules = _properties$rules === undefined ? [] : _properties$rules;
	  var nodes = properties.nodes;
	  var marks = properties.marks;


	  if (nodes) {
	    var array = normalizeNodes(nodes);
	    rules = rules.concat(array);
	  }

	  if (marks) {
	    var _array = normalizeMarks(marks);
	    rules = rules.concat(_array);
	  }

	  return { rules: rules };
	}

	/**
	 * Normalize a `nodes` shorthand argument.
	 *
	 * @param {Object} nodes
	 * @return {Array}
	 */

	function normalizeNodes(nodes) {
	  var rules = [];

	  var _loop = function _loop(key) {
	    var rule = nodes[key];

	    if ((0, _typeOf2.default)(rule) == 'function' || (0, _isReactComponent2.default)(rule)) {
	      rule = { render: rule };
	    }

	    rule.match = function (object) {
	      return (object.kind == 'block' || object.kind == 'inline') && object.type == key;
	    };

	    rules.push(rule);
	  };

	  for (var key in nodes) {
	    _loop(key);
	  }

	  return rules;
	}

	/**
	 * Normalize a `marks` shorthand argument.
	 *
	 * @param {Object} marks
	 * @return {Array}
	 */

	function normalizeMarks(marks) {
	  var rules = [];

	  var _loop2 = function _loop2(key) {
	    var rule = marks[key];

	    if (!rule.render && !rule.decorator && !rule.validate) {
	      rule = { render: rule };
	    }

	    rule.render = normalizeMarkComponent(rule.render);
	    rule.match = function (object) {
	      return object.kind == 'mark' && object.type == key;
	    };
	    rules.push(rule);
	  };

	  for (var key in marks) {
	    _loop2(key);
	  }

	  return rules;
	}

	/**
	 * Normalize a mark `render` property.
	 *
	 * @param {Component || Function || Object || String} render
	 * @return {Component}
	 */

	function normalizeMarkComponent(render) {
	  if ((0, _isReactComponent2.default)(render)) return render;

	  switch ((0, _typeOf2.default)(render)) {
	    case 'function':
	      return render;
	    case 'object':
	      return function (props) {
	        return _react2.default.createElement(
	          'span',
	          { style: render },
	          props.children
	        );
	      };
	    case 'string':
	      return function (props) {
	        return _react2.default.createElement(
	          'span',
	          { className: render },
	          props.children
	        );
	      };
	  }
	}

	/**
	 * Export.
	 *
	 * @type {Record}
	 */

	exports.default = Schema;

/***/ },
/* 302 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	/**
	 * Check if an `object` is a React component.
	 *
	 * @param {Object} object
	 * @return {Boolean}
	 */

	function isReactComponent(object) {
	  return object && object.prototype && object.prototype.isReactComponent;
	}

	/**
	 * Export.
	 *
	 * @type {Function}
	 */

	exports.default = isReactComponent;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _block2 = __webpack_require__(178);

	var _block3 = _interopRequireDefault(_block2);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _inline = __webpack_require__(180);

	var _inline2 = _interopRequireDefault(_inline);

	var _mark = __webpack_require__(185);

	var _mark2 = _interopRequireDefault(_mark);

	var _raw = __webpack_require__(177);

	var _raw2 = _interopRequireDefault(_raw);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _server = __webpack_require__(304);

	var _server2 = _interopRequireDefault(_server);

	var _state = __webpack_require__(222);

	var _state2 = _interopRequireDefault(_state);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	var _cheerio = __webpack_require__(308);

	var _cheerio2 = _interopRequireDefault(_cheerio);

	var _typeOf = __webpack_require__(220);

	var _typeOf2 = _interopRequireDefault(_typeOf);

	var _immutable = __webpack_require__(182);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * String.
	 */

	var String = new _immutable.Record({
	  kind: 'string',
	  text: ''
	});

	/**
	 * A rule to (de)serialize text nodes. This is automatically added to the HTML
	 * serializer so that users don't have to worry about text-level serialization.
	 *
	 * @type {Object}
	 */

	var TEXT_RULE = {
	  deserialize: function deserialize(el) {
	    if (el.tagName == 'br') {
	      return {
	        kind: 'text',
	        text: '\n'
	      };
	    }

	    if (el.type == 'text') {
	      return {
	        kind: 'text',
	        text: el.data
	      };
	    }
	  },
	  serialize: function serialize(obj, children) {
	    if (obj.kind == 'string') {
	      return children.split('\n').reduce(function (array, text, i) {
	        if (i != 0) array.push(_react2.default.createElement('br', null));
	        array.push(text);
	        return array;
	      }, []);
	    }
	  }
	};

	/**
	 * HTML serializer.
	 *
	 * @type {Html}
	 */

	var Html =

	/**
	 * Create a new serializer with `rules`.
	 *
	 * @param {Object} options
	 *   @property {Array} rules
	 * @return {Html} serializer
	 */

	function Html() {
	  var _this = this;

	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  _classCallCheck(this, Html);

	  this.deserialize = function (html) {
	    var $ = _cheerio2.default.load(html).root();
	    var children = $.children().toArray();
	    var nodes = _this.deserializeElements(children);

	    // HACK: ensure for now that all top-level inline are wrapped into a block.
	    nodes = nodes.reduce(function (memo, node, i, original) {
	      if (node.kind == 'block') {
	        memo.push(node);
	        return memo;
	      }

	      if (i > 0 && original[i - 1].kind != 'block') {
	        var _block = memo[memo.length - 1];
	        _block.nodes.push(node);
	        return memo;
	      }

	      var block = {
	        kind: 'block',
	        type: 'paragraph',
	        nodes: [node]
	      };

	      memo.push(block);
	      return memo;
	    }, []);

	    var state = _raw2.default.deserialize({ nodes: nodes }, { terse: true });
	    return state;
	  };

	  this.deserializeElements = function () {
	    var elements = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	    var nodes = [];

	    elements.forEach(function (element) {
	      var node = _this.deserializeElement(element);
	      switch ((0, _typeOf2.default)(node)) {
	        case 'array':
	          nodes = nodes.concat(node);
	          break;
	        case 'object':
	          nodes.push(node);
	          break;
	        case 'null':
	        case 'undefined':
	          return;
	        default:
	          throw new Error('A rule returned an invalid deserialized representation: "' + node + '".');
	      }
	    });

	    return nodes;
	  };

	  this.deserializeElement = function (element) {
	    var node = void 0;

	    var next = function next(elements) {
	      switch ((0, _typeOf2.default)(elements)) {
	        case 'array':
	          return _this.deserializeElements(elements);
	        case 'object':
	          return _this.deserializeElement(elements);
	        case 'null':
	        case 'undefined':
	          return;
	        default:
	          throw new Error('The `next` argument was called with invalid children: "' + elements + '".');
	      }
	    };

	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = _this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var rule = _step.value;

	        if (!rule.deserialize) continue;
	        var ret = rule.deserialize(element, next);
	        if (!ret) continue;
	        node = ret.kind == 'mark' ? _this.deserializeMark(ret) : ret;
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return node || next(element.children);
	  };

	  this.deserializeMark = function (mark) {
	    var type = mark.type;
	    var data = mark.data;


	    var applyMark = function applyMark(node) {
	      if (node.kind == 'mark') {
	        return _this.deserializeMark(node);
	      } else if (node.kind == 'text') {
	        if (!node.ranges) node.ranges = [{ text: node.text }];
	        node.ranges = node.ranges.map(function (range) {
	          range.marks = range.marks || [];
	          range.marks.push({ type: type, data: data });
	          return range;
	        });
	      } else {
	        node.nodes = node.nodes.map(applyMark);
	      }

	      return node;
	    };

	    return mark.nodes.reduce(function (nodes, node) {
	      var ret = applyMark(node);
	      if (Array.isArray(ret)) return nodes.concat(ret);
	      nodes.push(ret);
	      return nodes;
	    }, []);
	  };

	  this.serialize = function (state) {
	    var document = state.document;

	    var elements = document.nodes.map(_this.serializeNode);
	    var html = _server2.default.renderToStaticMarkup(_react2.default.createElement(
	      'body',
	      null,
	      elements
	    ));
	    var inner = html.slice(6, -7);
	    return inner;
	  };

	  this.serializeNode = function (node) {
	    if (node.kind == 'text') {
	      var ranges = node.getRanges();
	      return ranges.map(_this.serializeRange);
	    }

	    var children = node.nodes.map(_this.serializeNode);

	    var _iteratorNormalCompletion2 = true;
	    var _didIteratorError2 = false;
	    var _iteratorError2 = undefined;

	    try {
	      for (var _iterator2 = _this.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	        var rule = _step2.value;

	        if (!rule.serialize) continue;
	        var ret = rule.serialize(node, children);
	        if (ret) return addKey(ret);
	      }
	    } catch (err) {
	      _didIteratorError2 = true;
	      _iteratorError2 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion2 && _iterator2.return) {
	          _iterator2.return();
	        }
	      } finally {
	        if (_didIteratorError2) {
	          throw _iteratorError2;
	        }
	      }
	    }

	    throw new Error('No serializer defined for node of type "' + node.type + '".');
	  };

	  this.serializeRange = function (range) {
	    var string = new String({ text: range.text });
	    var text = _this.serializeString(string);

	    return range.marks.reduce(function (children, mark) {
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;

	      try {
	        for (var _iterator3 = _this.rules[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var rule = _step3.value;

	          if (!rule.serialize) continue;
	          var ret = rule.serialize(mark, children);
	          if (ret) return addKey(ret);
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }

	      throw new Error('No serializer defined for mark of type "' + mark.type + '".');
	    }, text);
	  };

	  this.serializeString = function (string) {
	    var _iteratorNormalCompletion4 = true;
	    var _didIteratorError4 = false;
	    var _iteratorError4 = undefined;

	    try {
	      for (var _iterator4 = _this.rules[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	        var rule = _step4.value;

	        if (!rule.serialize) continue;
	        var ret = rule.serialize(string, string.text);
	        if (ret) return ret;
	      }
	    } catch (err) {
	      _didIteratorError4 = true;
	      _iteratorError4 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion4 && _iterator4.return) {
	          _iterator4.return();
	        }
	      } finally {
	        if (_didIteratorError4) {
	          throw _iteratorError4;
	        }
	      }
	    }
	  };

	  this.rules = [].concat(_toConsumableArray(options.rules || []), [TEXT_RULE]);
	}

	/**
	 * Deserialize pasted HTML.
	 *
	 * @param {String} html
	 * @return {State} state
	 */

	/**
	 * Deserialize an array of Cheerio `elements`.
	 *
	 * @param {Array} elements
	 * @return {Array} nodes
	 */

	/**
	 * Deserialize a Cheerio `element`.
	 *
	 * @param {Object} element
	 * @return {Mixed} node
	 */

	/**
	 * Deserialize a `mark` object.
	 *
	 * @param {Object} mark
	 * @return {Array} nodes
	 */

	/**
	 * Serialize a `state` object into an HTML string.
	 *
	 * @param {State} state
	 * @return {String} html
	 */

	/**
	 * Serialize a `node`.
	 *
	 * @param {Node} node
	 * @return {String}
	 */

	/**
	 * Serialize a `range`.
	 *
	 * @param {Range} range
	 * @return {String}
	 */

	/**
	 * Serialize a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */

	;

	/**
	 * Add a unique key to a React `element`.
	 *
	 * @param {Element} element
	 * @return {Element}
	 */

	var key = 0;

	function addKey(element) {
	  return _react2.default.cloneElement(element, { key: key++ });
	}

	/**
	 * Export.
	 */

	exports.default = Html;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(305);


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(40);
	var ReactServerRendering = __webpack_require__(306);
	var ReactVersion = __webpack_require__(33);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactElement = __webpack_require__(10);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(60);
	var ReactServerBatchingStrategy = __webpack_require__(307);
	var ReactServerRenderingTransaction = __webpack_require__(130);
	var ReactUpdates = __webpack_require__(57);

	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(122);
	var invariant = __webpack_require__(9);

	var pendingTransactions = 0;

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToStringImpl(element, makeStaticMarkup) {
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);

	    pendingTransactions++;

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, true);
	      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */
	      );
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);
	      }
	      if (!makeStaticMarkup) {
	        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
	      }
	      return markup;
	    }, null);
	  } finally {
	    pendingTransactions--;
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    if (!pendingTransactions) {
	      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	    }
	  }
	}

	/**
	 * Render a ReactElement to its initial HTML. This should only be used on the
	 * server.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;
	  return renderToStringImpl(element, false);
	}

	/**
	 * Similar to renderToString, except this doesn't create extra DOM attributes
	 * such as data-react-id that React uses internally.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;
	  return renderToStringImpl(element, true);
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 307 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Export cheerio (with )
	 */

	exports = module.exports = __webpack_require__(309);

	/*
	  Export the version
	*/

	exports.version = __webpack_require__(399).version;


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  Module dependencies
	*/

	var parse = __webpack_require__(310),
	    isHtml = __webpack_require__(371).isHtml,
	    _ = __webpack_require__(372);

	/*
	 * The API
	 */

	var api = [
	  __webpack_require__(373),
	  __webpack_require__(395),
	  __webpack_require__(396),
	  __webpack_require__(397),
	  __webpack_require__(398)
	];

	/*
	 * Instance of cheerio
	 */

	var Cheerio = module.exports = function(selector, context, root, options) {
	  if (!(this instanceof Cheerio)) return new Cheerio(selector, context, root, options);

	  this.options = _.defaults(options || {}, this.options);

	  // $(), $(null), $(undefined), $(false)
	  if (!selector) return this;

	  if (root) {
	    if (typeof root === 'string') root = parse(root, this.options);
	    this._root = Cheerio.call(this, root);
	  }

	  // $($)
	  if (selector.cheerio) return selector;

	  // $(dom)
	  if (isNode(selector))
	    selector = [selector];

	  // $([dom])
	  if (Array.isArray(selector)) {
	    _.forEach(selector, _.bind(function(elem, idx) {
	      this[idx] = elem;
	    }, this));
	    this.length = selector.length;
	    return this;
	  }

	  // $(<html>)
	  if (typeof selector === 'string' && isHtml(selector)) {
	    return Cheerio.call(this, parse(selector, this.options).children);
	  }

	  // If we don't have a context, maybe we have a root, from loading
	  if (!context) {
	    context = this._root;
	  } else if (typeof context === 'string') {
	    if (isHtml(context)) {
	      // $('li', '<ul>...</ul>')
	      context = parse(context, this.options);
	      context = Cheerio.call(this, context);
	    } else {
	      // $('li', 'ul')
	      selector = [context, selector].join(' ');
	      context = this._root;
	    }
	  // $('li', node), $('li', [nodes])
	  } else if (!context.cheerio) {
	    context = Cheerio.call(this, context);
	  }

	  // If we still don't have a context, return
	  if (!context) return this;

	  // #id, .class, tag
	  return context.find(selector);
	};

	/**
	 * Mix in `static`
	 */

	_.extend(Cheerio, __webpack_require__(374));

	/*
	 * Set a signature of the object
	 */

	Cheerio.prototype.cheerio = '[cheerio object]';

	/*
	 * Cheerio default options
	 */

	Cheerio.prototype.options = {
	  withDomLvl1: true,
	  normalizeWhitespace: false,
	  xmlMode: false,
	  decodeEntities: true
	};

	/*
	 * Make cheerio an array-like object
	 */

	Cheerio.prototype.length = 0;
	Cheerio.prototype.splice = Array.prototype.splice;

	/*
	 * Make a cheerio object
	 *
	 * @api private
	 */

	Cheerio.prototype._make = function(dom, context) {
	  var cheerio = new this.constructor(dom, context, this._root, this.options);
	  cheerio.prevObject = this;
	  return cheerio;
	};

	/**
	 * Turn a cheerio object into an array
	 */

	Cheerio.prototype.toArray = function() {
	  return this.get();
	};

	/**
	 * Plug in the API
	 */
	api.forEach(function(mod) {
	  _.extend(Cheerio.prototype, mod);
	});

	var isNode = function(obj) {
	  return obj.name || obj.type === 'text' || obj.type === 'comment';
	};


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	  Module Dependencies
	*/
	var htmlparser = __webpack_require__(315);

	/*
	  Parser
	*/
	exports = module.exports = function(content, options) {
	  var dom = exports.evaluate(content, options),
	      // Generic root element
	      root = exports.evaluate('<root></root>', options)[0];

	  root.type = 'root';

	  // Update the dom using the root
	  exports.update(dom, root);

	  return root;
	};

	exports.evaluate = function(content, options) {
	  // options = options || $.fn.options;

	  var dom;

	  if (typeof content === 'string' || Buffer.isBuffer(content)) {
	    dom = htmlparser.parseDOM(content, options);
	  } else {
	    dom = content;
	  }

	  return dom;
	};

	/*
	  Update the dom structure, for one changed layer
	*/
	exports.update = function(arr, parent) {
	  // normalize
	  if (!Array.isArray(arr)) arr = [arr];

	  // Update parent
	  if (parent) {
	    parent.children = arr;
	  } else {
	    parent = null;
	  }

	  // Update neighbors
	  for (var i = 0; i < arr.length; i++) {
	    var node = arr[i];

	    // Cleanly remove existing nodes from their previous structures.
	    var oldParent = node.parent || node.root,
	        oldSiblings = oldParent && oldParent.children;
	    if (oldSiblings && oldSiblings !== arr) {
	      oldSiblings.splice(oldSiblings.indexOf(node), 1);
	      if (node.prev) {
	        node.prev.next = node.next;
	      }
	      if (node.next) {
	        node.next.prev = node.prev;
	      }
	    }

	    if (parent) {
	      node.prev = arr[i - 1] || null;
	      node.next = arr[i + 1] || null;
	    } else {
	      node.prev = node.next = null;
	    }

	    if (parent && parent.type === 'root') {
	      node.root = parent;
	      node.parent = null;
	    } else {
	      node.root = null;
	      node.parent = parent;
	    }
	  }

	  return parent;
	};

	// module.exports = $.extend(exports);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(311).Buffer))

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(312)
	var ieee754 = __webpack_require__(313)
	var isArray = __webpack_require__(314)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(311).Buffer, (function() { return this; }())))

/***/ },
/* 312 */
/***/ function(module, exports) {

	'use strict'

	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	function init () {
	  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	  for (var i = 0, len = code.length; i < len; ++i) {
	    lookup[i] = code[i]
	    revLookup[code.charCodeAt(i)] = i
	  }

	  revLookup['-'.charCodeAt(0)] = 62
	  revLookup['_'.charCodeAt(0)] = 63
	}

	init()

	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0

	  // base64 is 4/3 + up to two characters of the original data
	  arr = new Arr(len * 3 / 4 - placeHolders)

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len

	  var L = 0

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }

	  parts.push(output)

	  return parts.join('')
	}


/***/ },
/* 313 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 314 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	var Parser = __webpack_require__(316),
	    DomHandler = __webpack_require__(327);

	function defineProp(name, value){
		delete module.exports[name];
		module.exports[name] = value;
		return value;
	}

	module.exports = {
		Parser: Parser,
		Tokenizer: __webpack_require__(317),
		ElementType: __webpack_require__(328),
		DomHandler: DomHandler,
		get FeedHandler(){
			return defineProp("FeedHandler", __webpack_require__(331));
		},
		get Stream(){
			return defineProp("Stream", __webpack_require__(332));
		},
		get WritableStream(){
			return defineProp("WritableStream", __webpack_require__(333));
		},
		get ProxyHandler(){
			return defineProp("ProxyHandler", __webpack_require__(352));
		},
		get DomUtils(){
			return defineProp("DomUtils", __webpack_require__(353));
		},
		get CollectingHandler(){
			return defineProp("CollectingHandler", __webpack_require__(370));
		},
		// For legacy support
		DefaultHandler: DomHandler,
		get RssHandler(){
			return defineProp("RssHandler", this.FeedHandler);
		},
		//helper methods
		parseDOM: function(data, options){
			var handler = new DomHandler(options);
			new Parser(handler, options).end(data);
			return handler.dom;
		},
		parseFeed: function(feed, options){
			var handler = new module.exports.FeedHandler(options);
			new Parser(handler, options).end(feed);
			return handler.dom;
		},
		createDomStream: function(cb, options, elementCb){
			var handler = new DomHandler(cb, options, elementCb);
			return new Parser(handler, options);
		},
		// List of all events that the parser emits
		EVENTS: { /* Format: eventname: number of arguments */
			attribute: 2,
			cdatastart: 0,
			cdataend: 0,
			text: 1,
			processinginstruction: 2,
			comment: 1,
			commentend: 0,
			closetag: 1,
			opentag: 2,
			opentagname: 1,
			error: 1,
			end: 0
		}
	};


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	var Tokenizer = __webpack_require__(317);

	/*
		Options:

		xmlMode: Disables the special behavior for script/style tags (false by default)
		lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
		lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
	*/

	/*
		Callbacks:

		oncdataend,
		oncdatastart,
		onclosetag,
		oncomment,
		oncommentend,
		onerror,
		onopentag,
		onprocessinginstruction,
		onreset,
		ontext
	*/

	var formTags = {
		input: true,
		option: true,
		optgroup: true,
		select: true,
		button: true,
		datalist: true,
		textarea: true
	};

	var openImpliesClose = {
		tr      : { tr:true, th:true, td:true },
		th      : { th:true },
		td      : { thead:true, th:true, td:true },
		body    : { head:true, link:true, script:true },
		li      : { li:true },
		p       : { p:true },
		h1      : { p:true },
		h2      : { p:true },
		h3      : { p:true },
		h4      : { p:true },
		h5      : { p:true },
		h6      : { p:true },
		select  : formTags,
		input   : formTags,
		output  : formTags,
		button  : formTags,
		datalist: formTags,
		textarea: formTags,
		option  : { option:true },
		optgroup: { optgroup:true }
	};

	var voidElements = {
		__proto__: null,
		area: true,
		base: true,
		basefont: true,
		br: true,
		col: true,
		command: true,
		embed: true,
		frame: true,
		hr: true,
		img: true,
		input: true,
		isindex: true,
		keygen: true,
		link: true,
		meta: true,
		param: true,
		source: true,
		track: true,
		wbr: true,

		//common self closing svg elements
		path: true,
		circle: true,
		ellipse: true,
		line: true,
		rect: true,
		use: true,
		stop: true,
		polyline: true,
		polygon: true
	};

	var re_nameEnd = /\s|\//;

	function Parser(cbs, options){
		this._options = options || {};
		this._cbs = cbs || {};

		this._tagname = "";
		this._attribname = "";
		this._attribvalue = "";
		this._attribs = null;
		this._stack = [];

		this.startIndex = 0;
		this.endIndex = null;

		this._lowerCaseTagNames = "lowerCaseTags" in this._options ?
										!!this._options.lowerCaseTags :
										!this._options.xmlMode;
		this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options ?
										!!this._options.lowerCaseAttributeNames :
										!this._options.xmlMode;

		this._tokenizer = new Tokenizer(this._options, this);

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	}

	__webpack_require__(323).inherits(Parser, __webpack_require__(326).EventEmitter);

	Parser.prototype._updatePosition = function(initialOffset){
		if(this.endIndex === null){
			if(this._tokenizer._sectionStart <= initialOffset){
				this.startIndex = 0;
			} else {
				this.startIndex = this._tokenizer._sectionStart - initialOffset;
			}
		}
		else this.startIndex = this.endIndex + 1;
		this.endIndex = this._tokenizer.getAbsoluteIndex();
	};

	//Tokenizer event handlers
	Parser.prototype.ontext = function(data){
		this._updatePosition(1);
		this.endIndex--;

		if(this._cbs.ontext) this._cbs.ontext(data);
	};

	Parser.prototype.onopentagname = function(name){
		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		this._tagname = name;

		if(!this._options.xmlMode && name in openImpliesClose) {
			for(
				var el;
				(el = this._stack[this._stack.length - 1]) in openImpliesClose[name];
				this.onclosetag(el)
			);
		}

		if(this._options.xmlMode || !(name in voidElements)){
			this._stack.push(name);
		}

		if(this._cbs.onopentagname) this._cbs.onopentagname(name);
		if(this._cbs.onopentag) this._attribs = {};
	};

	Parser.prototype.onopentagend = function(){
		this._updatePosition(1);

		if(this._attribs){
			if(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);
			this._attribs = null;
		}

		if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
			this._cbs.onclosetag(this._tagname);
		}

		this._tagname = "";
	};

	Parser.prototype.onclosetag = function(name){
		this._updatePosition(1);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
			var pos = this._stack.lastIndexOf(name);
			if(pos !== -1){
				if(this._cbs.onclosetag){
					pos = this._stack.length - pos;
					while(pos--) this._cbs.onclosetag(this._stack.pop());
				}
				else this._stack.length = pos;
			} else if(name === "p" && !this._options.xmlMode){
				this.onopentagname(name);
				this._closeCurrentTag();
			}
		} else if(!this._options.xmlMode && (name === "br" || name === "p")){
			this.onopentagname(name);
			this._closeCurrentTag();
		}
	};

	Parser.prototype.onselfclosingtag = function(){
		if(this._options.xmlMode || this._options.recognizeSelfClosing){
			this._closeCurrentTag();
		} else {
			this.onopentagend();
		}
	};

	Parser.prototype._closeCurrentTag = function(){
		var name = this._tagname;

		this.onopentagend();

		//self-closing tags will be on the top of the stack
		//(cheaper check than in onclosetag)
		if(this._stack[this._stack.length - 1] === name){
			if(this._cbs.onclosetag){
				this._cbs.onclosetag(name);
			}
			this._stack.pop();
		}
	};

	Parser.prototype.onattribname = function(name){
		if(this._lowerCaseAttributeNames){
			name = name.toLowerCase();
		}
		this._attribname = name;
	};

	Parser.prototype.onattribdata = function(value){
		this._attribvalue += value;
	};

	Parser.prototype.onattribend = function(){
		if(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);
		if(
			this._attribs &&
			!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
		){
			this._attribs[this._attribname] = this._attribvalue;
		}
		this._attribname = "";
		this._attribvalue = "";
	};

	Parser.prototype._getInstructionName = function(value){
		var idx = value.search(re_nameEnd),
		    name = idx < 0 ? value : value.substr(0, idx);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		return name;
	};

	Parser.prototype.ondeclaration = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("!" + name, "!" + value);
		}
	};

	Parser.prototype.onprocessinginstruction = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("?" + name, "?" + value);
		}
	};

	Parser.prototype.oncomment = function(value){
		this._updatePosition(4);

		if(this._cbs.oncomment) this._cbs.oncomment(value);
		if(this._cbs.oncommentend) this._cbs.oncommentend();
	};

	Parser.prototype.oncdata = function(value){
		this._updatePosition(1);

		if(this._options.xmlMode || this._options.recognizeCDATA){
			if(this._cbs.oncdatastart) this._cbs.oncdatastart();
			if(this._cbs.ontext) this._cbs.ontext(value);
			if(this._cbs.oncdataend) this._cbs.oncdataend();
		} else {
			this.oncomment("[CDATA[" + value + "]]");
		}
	};

	Parser.prototype.onerror = function(err){
		if(this._cbs.onerror) this._cbs.onerror(err);
	};

	Parser.prototype.onend = function(){
		if(this._cbs.onclosetag){
			for(
				var i = this._stack.length;
				i > 0;
				this._cbs.onclosetag(this._stack[--i])
			);
		}
		if(this._cbs.onend) this._cbs.onend();
	};


	//Resets the parser to a blank state, ready to parse a new HTML document
	Parser.prototype.reset = function(){
		if(this._cbs.onreset) this._cbs.onreset();
		this._tokenizer.reset();

		this._tagname = "";
		this._attribname = "";
		this._attribs = null;
		this._stack = [];

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	};

	//Parses a complete HTML document and pushes it to the handler
	Parser.prototype.parseComplete = function(data){
		this.reset();
		this.end(data);
	};

	Parser.prototype.write = function(chunk){
		this._tokenizer.write(chunk);
	};

	Parser.prototype.end = function(chunk){
		this._tokenizer.end(chunk);
	};

	Parser.prototype.pause = function(){
		this._tokenizer.pause();
	};

	Parser.prototype.resume = function(){
		this._tokenizer.resume();
	};

	//alias for backwards compat
	Parser.prototype.parseChunk = Parser.prototype.write;
	Parser.prototype.done = Parser.prototype.end;

	module.exports = Parser;


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Tokenizer;

	var decodeCodePoint = __webpack_require__(318),
	    entityMap = __webpack_require__(320),
	    legacyMap = __webpack_require__(321),
	    xmlMap    = __webpack_require__(322),

	    i = 0,

	    TEXT                      = i++,
	    BEFORE_TAG_NAME           = i++, //after <
	    IN_TAG_NAME               = i++,
	    IN_SELF_CLOSING_TAG       = i++,
	    BEFORE_CLOSING_TAG_NAME   = i++,
	    IN_CLOSING_TAG_NAME       = i++,
	    AFTER_CLOSING_TAG_NAME    = i++,

	    //attributes
	    BEFORE_ATTRIBUTE_NAME     = i++,
	    IN_ATTRIBUTE_NAME         = i++,
	    AFTER_ATTRIBUTE_NAME      = i++,
	    BEFORE_ATTRIBUTE_VALUE    = i++,
	    IN_ATTRIBUTE_VALUE_DQ     = i++, // "
	    IN_ATTRIBUTE_VALUE_SQ     = i++, // '
	    IN_ATTRIBUTE_VALUE_NQ     = i++,

	    //declarations
	    BEFORE_DECLARATION        = i++, // !
	    IN_DECLARATION            = i++,

	    //processing instructions
	    IN_PROCESSING_INSTRUCTION = i++, // ?

	    //comments
	    BEFORE_COMMENT            = i++,
	    IN_COMMENT                = i++,
	    AFTER_COMMENT_1           = i++,
	    AFTER_COMMENT_2           = i++,

	    //cdata
	    BEFORE_CDATA_1            = i++, // [
	    BEFORE_CDATA_2            = i++, // C
	    BEFORE_CDATA_3            = i++, // D
	    BEFORE_CDATA_4            = i++, // A
	    BEFORE_CDATA_5            = i++, // T
	    BEFORE_CDATA_6            = i++, // A
	    IN_CDATA                  = i++, // [
	    AFTER_CDATA_1             = i++, // ]
	    AFTER_CDATA_2             = i++, // ]

	    //special tags
	    BEFORE_SPECIAL            = i++, //S
	    BEFORE_SPECIAL_END        = i++,   //S

	    BEFORE_SCRIPT_1           = i++, //C
	    BEFORE_SCRIPT_2           = i++, //R
	    BEFORE_SCRIPT_3           = i++, //I
	    BEFORE_SCRIPT_4           = i++, //P
	    BEFORE_SCRIPT_5           = i++, //T
	    AFTER_SCRIPT_1            = i++, //C
	    AFTER_SCRIPT_2            = i++, //R
	    AFTER_SCRIPT_3            = i++, //I
	    AFTER_SCRIPT_4            = i++, //P
	    AFTER_SCRIPT_5            = i++, //T

	    BEFORE_STYLE_1            = i++, //T
	    BEFORE_STYLE_2            = i++, //Y
	    BEFORE_STYLE_3            = i++, //L
	    BEFORE_STYLE_4            = i++, //E
	    AFTER_STYLE_1             = i++, //T
	    AFTER_STYLE_2             = i++, //Y
	    AFTER_STYLE_3             = i++, //L
	    AFTER_STYLE_4             = i++, //E

	    BEFORE_ENTITY             = i++, //&
	    BEFORE_NUMERIC_ENTITY     = i++, //#
	    IN_NAMED_ENTITY           = i++,
	    IN_NUMERIC_ENTITY         = i++,
	    IN_HEX_ENTITY             = i++, //X

	    j = 0,

	    SPECIAL_NONE              = j++,
	    SPECIAL_SCRIPT            = j++,
	    SPECIAL_STYLE             = j++;

	function whitespace(c){
		return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}

	function characterState(char, SUCCESS){
		return function(c){
			if(c === char) this._state = SUCCESS;
		};
	}

	function ifElseState(upper, SUCCESS, FAILURE){
		var lower = upper.toLowerCase();

		if(upper === lower){
			return function(c){
				if(c === lower){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		} else {
			return function(c){
				if(c === lower || c === upper){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		}
	}

	function consumeSpecialNameChar(upper, NEXT_STATE){
		var lower = upper.toLowerCase();

		return function(c){
			if(c === lower || c === upper){
				this._state = NEXT_STATE;
			} else {
				this._state = IN_TAG_NAME;
				this._index--; //consume the token again
			}
		};
	}

	function Tokenizer(options, cbs){
		this._state = TEXT;
		this._buffer = "";
		this._sectionStart = 0;
		this._index = 0;
		this._bufferOffset = 0; //chars removed from _buffer
		this._baseState = TEXT;
		this._special = SPECIAL_NONE;
		this._cbs = cbs;
		this._running = true;
		this._ended = false;
		this._xmlMode = !!(options && options.xmlMode);
		this._decodeEntities = !!(options && options.decodeEntities);
	}

	Tokenizer.prototype._stateText = function(c){
		if(c === "<"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._state = BEFORE_TAG_NAME;
			this._sectionStart = this._index;
		} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._baseState = TEXT;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeTagName = function(c){
		if(c === "/"){
			this._state = BEFORE_CLOSING_TAG_NAME;
		} else if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
			this._state = TEXT;
		} else if(c === "!"){
			this._state = BEFORE_DECLARATION;
			this._sectionStart = this._index + 1;
		} else if(c === "?"){
			this._state = IN_PROCESSING_INSTRUCTION;
			this._sectionStart = this._index + 1;
		} else if(c === "<"){
			this._cbs.ontext(this._getSection());
			this._sectionStart = this._index;
		} else {
			this._state = (!this._xmlMode && (c === "s" || c === "S")) ?
							BEFORE_SPECIAL : IN_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInTagName = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._emitToken("onopentagname");
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
		if(whitespace(c));
		else if(c === ">"){
			this._state = TEXT;
		} else if(this._special !== SPECIAL_NONE){
			if(c === "s" || c === "S"){
				this._state = BEFORE_SPECIAL_END;
			} else {
				this._state = TEXT;
				this._index--;
			}
		} else {
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInCloseingTagName = function(c){
		if(c === ">" || whitespace(c)){
			this._emitToken("onclosetag");
			this._state = AFTER_CLOSING_TAG_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterCloseingTagName = function(c){
		//skip everything until ">"
		if(c === ">"){
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeName = function(c){
		if(c === ">"){
			this._cbs.onopentagend();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c === "/"){
			this._state = IN_SELF_CLOSING_TAG;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInSelfClosingTag = function(c){
		if(c === ">"){
			this._cbs.onselfclosingtag();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInAttributeName = function(c){
		if(c === "=" || c === "/" || c === ">" || whitespace(c)){
			this._cbs.onattribname(this._getSection());
			this._sectionStart = -1;
			this._state = AFTER_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterAttributeName = function(c){
		if(c === "="){
			this._state = BEFORE_ATTRIBUTE_VALUE;
		} else if(c === "/" || c === ">"){
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(!whitespace(c)){
			this._cbs.onattribend();
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeValue = function(c){
		if(c === "\""){
			this._state = IN_ATTRIBUTE_VALUE_DQ;
			this._sectionStart = this._index + 1;
		} else if(c === "'"){
			this._state = IN_ATTRIBUTE_VALUE_SQ;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_VALUE_NQ;
			this._sectionStart = this._index;
			this._index--; //reconsume token
		}
	};

	Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
		if(c === "\""){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
		if(c === "'"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
		if(whitespace(c) || c === ">"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeDeclaration = function(c){
		this._state = c === "[" ? BEFORE_CDATA_1 :
						c === "-" ? BEFORE_COMMENT :
							IN_DECLARATION;
	};

	Tokenizer.prototype._stateInDeclaration = function(c){
		if(c === ">"){
			this._cbs.ondeclaration(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateInProcessingInstruction = function(c){
		if(c === ">"){
			this._cbs.onprocessinginstruction(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeComment = function(c){
		if(c === "-"){
			this._state = IN_COMMENT;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
		}
	};

	Tokenizer.prototype._stateInComment = function(c){
		if(c === "-") this._state = AFTER_COMMENT_1;
	};

	Tokenizer.prototype._stateAfterComment1 = function(c){
		if(c === "-"){
			this._state = AFTER_COMMENT_2;
		} else {
			this._state = IN_COMMENT;
		}
	};

	Tokenizer.prototype._stateAfterComment2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "-"){
			this._state = IN_COMMENT;
		}
		// else: stay in AFTER_COMMENT_2 (`--->`)
	};

	Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C", BEFORE_CDATA_2, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D", BEFORE_CDATA_3, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A", BEFORE_CDATA_4, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T", BEFORE_CDATA_5, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A", BEFORE_CDATA_6, IN_DECLARATION);

	Tokenizer.prototype._stateBeforeCdata6 = function(c){
		if(c === "["){
			this._state = IN_CDATA;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInCdata = function(c){
		if(c === "]") this._state = AFTER_CDATA_1;
	};

	Tokenizer.prototype._stateAfterCdata1 = characterState("]", AFTER_CDATA_2);

	Tokenizer.prototype._stateAfterCdata2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "]") {
			this._state = IN_CDATA;
		}
		//else: stay in AFTER_CDATA_2 (`]]]>`)
	};

	Tokenizer.prototype._stateBeforeSpecial = function(c){
		if(c === "c" || c === "C"){
			this._state = BEFORE_SCRIPT_1;
		} else if(c === "t" || c === "T"){
			this._state = BEFORE_STYLE_1;
		} else {
			this._state = IN_TAG_NAME;
			this._index--; //consume the token again
		}
	};

	Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
		if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
			this._state = AFTER_SCRIPT_1;
		} else if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
			this._state = AFTER_STYLE_1;
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R", BEFORE_SCRIPT_2);
	Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I", BEFORE_SCRIPT_3);
	Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P", BEFORE_SCRIPT_4);
	Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T", BEFORE_SCRIPT_5);

	Tokenizer.prototype._stateBeforeScript5 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_SCRIPT;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
	Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
	Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
	Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

	Tokenizer.prototype._stateAfterScript5 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 6;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y", BEFORE_STYLE_2);
	Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L", BEFORE_STYLE_3);
	Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E", BEFORE_STYLE_4);

	Tokenizer.prototype._stateBeforeStyle4 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_STYLE;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
	Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
	Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

	Tokenizer.prototype._stateAfterStyle4 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 5;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeEntity = ifElseState("#", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);
	Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);

	//for entities terminated with a semicolon
	Tokenizer.prototype._parseNamedEntityStrict = function(){
		//offset = 1
		if(this._sectionStart + 1 < this._index){
			var entity = this._buffer.substring(this._sectionStart + 1, this._index),
			    map = this._xmlMode ? xmlMap : entityMap;

			if(map.hasOwnProperty(entity)){
				this._emitPartial(map[entity]);
				this._sectionStart = this._index + 1;
			}
		}
	};


	//parses legacy entities (without trailing semicolon)
	Tokenizer.prototype._parseLegacyEntity = function(){
		var start = this._sectionStart + 1,
		    limit = this._index - start;

		if(limit > 6) limit = 6; //the max length of legacy entities is 6

		while(limit >= 2){ //the min length of legacy entities is 2
			var entity = this._buffer.substr(start, limit);

			if(legacyMap.hasOwnProperty(entity)){
				this._emitPartial(legacyMap[entity]);
				this._sectionStart += limit + 1;
				return;
			} else {
				limit--;
			}
		}
	};

	Tokenizer.prototype._stateInNamedEntity = function(c){
		if(c === ";"){
			this._parseNamedEntityStrict();
			if(this._sectionStart + 1 < this._index && !this._xmlMode){
				this._parseLegacyEntity();
			}
			this._state = this._baseState;
		} else if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
			if(this._xmlMode);
			else if(this._sectionStart + 1 === this._index);
			else if(this._baseState !== TEXT){
				if(c !== "="){
					this._parseNamedEntityStrict();
				}
			} else {
				this._parseLegacyEntity();
			}

			this._state = this._baseState;
			this._index--;
		}
	};

	Tokenizer.prototype._decodeNumericEntity = function(offset, base){
		var sectionStart = this._sectionStart + offset;

		if(sectionStart !== this._index){
			//parse entity
			var entity = this._buffer.substring(sectionStart, this._index);
			var parsed = parseInt(entity, base);

			this._emitPartial(decodeCodePoint(parsed));
			this._sectionStart = this._index;
		} else {
			this._sectionStart--;
		}

		this._state = this._baseState;
	};

	Tokenizer.prototype._stateInNumericEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(2, 10);
			this._sectionStart++;
		} else if(c < "0" || c > "9"){
			if(!this._xmlMode){
				this._decodeNumericEntity(2, 10);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._stateInHexEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(3, 16);
			this._sectionStart++;
		} else if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
			if(!this._xmlMode){
				this._decodeNumericEntity(3, 16);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._cleanup = function (){
		if(this._sectionStart < 0){
			this._buffer = "";
			this._index = 0;
			this._bufferOffset += this._index;
		} else if(this._running){
			if(this._state === TEXT){
				if(this._sectionStart !== this._index){
					this._cbs.ontext(this._buffer.substr(this._sectionStart));
				}
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else if(this._sectionStart === this._index){
				//the section just started
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else {
				//remove everything unnecessary
				this._buffer = this._buffer.substr(this._sectionStart);
				this._index -= this._sectionStart;
				this._bufferOffset += this._sectionStart;
			}

			this._sectionStart = 0;
		}
	};

	//TODO make events conditional
	Tokenizer.prototype.write = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".write() after done!"));

		this._buffer += chunk;
		this._parse();
	};

	Tokenizer.prototype._parse = function(){
		while(this._index < this._buffer.length && this._running){
			var c = this._buffer.charAt(this._index);
			if(this._state === TEXT) {
				this._stateText(c);
			} else if(this._state === BEFORE_TAG_NAME){
				this._stateBeforeTagName(c);
			} else if(this._state === IN_TAG_NAME) {
				this._stateInTagName(c);
			} else if(this._state === BEFORE_CLOSING_TAG_NAME){
				this._stateBeforeCloseingTagName(c);
			} else if(this._state === IN_CLOSING_TAG_NAME){
				this._stateInCloseingTagName(c);
			} else if(this._state === AFTER_CLOSING_TAG_NAME){
				this._stateAfterCloseingTagName(c);
			} else if(this._state === IN_SELF_CLOSING_TAG){
				this._stateInSelfClosingTag(c);
			}

			/*
			*	attributes
			*/
			else if(this._state === BEFORE_ATTRIBUTE_NAME){
				this._stateBeforeAttributeName(c);
			} else if(this._state === IN_ATTRIBUTE_NAME){
				this._stateInAttributeName(c);
			} else if(this._state === AFTER_ATTRIBUTE_NAME){
				this._stateAfterAttributeName(c);
			} else if(this._state === BEFORE_ATTRIBUTE_VALUE){
				this._stateBeforeAttributeValue(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){
				this._stateInAttributeValueDoubleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){
				this._stateInAttributeValueSingleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){
				this._stateInAttributeValueNoQuotes(c);
			}

			/*
			*	declarations
			*/
			else if(this._state === BEFORE_DECLARATION){
				this._stateBeforeDeclaration(c);
			} else if(this._state === IN_DECLARATION){
				this._stateInDeclaration(c);
			}

			/*
			*	processing instructions
			*/
			else if(this._state === IN_PROCESSING_INSTRUCTION){
				this._stateInProcessingInstruction(c);
			}

			/*
			*	comments
			*/
			else if(this._state === BEFORE_COMMENT){
				this._stateBeforeComment(c);
			} else if(this._state === IN_COMMENT){
				this._stateInComment(c);
			} else if(this._state === AFTER_COMMENT_1){
				this._stateAfterComment1(c);
			} else if(this._state === AFTER_COMMENT_2){
				this._stateAfterComment2(c);
			}

			/*
			*	cdata
			*/
			else if(this._state === BEFORE_CDATA_1){
				this._stateBeforeCdata1(c);
			} else if(this._state === BEFORE_CDATA_2){
				this._stateBeforeCdata2(c);
			} else if(this._state === BEFORE_CDATA_3){
				this._stateBeforeCdata3(c);
			} else if(this._state === BEFORE_CDATA_4){
				this._stateBeforeCdata4(c);
			} else if(this._state === BEFORE_CDATA_5){
				this._stateBeforeCdata5(c);
			} else if(this._state === BEFORE_CDATA_6){
				this._stateBeforeCdata6(c);
			} else if(this._state === IN_CDATA){
				this._stateInCdata(c);
			} else if(this._state === AFTER_CDATA_1){
				this._stateAfterCdata1(c);
			} else if(this._state === AFTER_CDATA_2){
				this._stateAfterCdata2(c);
			}

			/*
			* special tags
			*/
			else if(this._state === BEFORE_SPECIAL){
				this._stateBeforeSpecial(c);
			} else if(this._state === BEFORE_SPECIAL_END){
				this._stateBeforeSpecialEnd(c);
			}

			/*
			* script
			*/
			else if(this._state === BEFORE_SCRIPT_1){
				this._stateBeforeScript1(c);
			} else if(this._state === BEFORE_SCRIPT_2){
				this._stateBeforeScript2(c);
			} else if(this._state === BEFORE_SCRIPT_3){
				this._stateBeforeScript3(c);
			} else if(this._state === BEFORE_SCRIPT_4){
				this._stateBeforeScript4(c);
			} else if(this._state === BEFORE_SCRIPT_5){
				this._stateBeforeScript5(c);
			}

			else if(this._state === AFTER_SCRIPT_1){
				this._stateAfterScript1(c);
			} else if(this._state === AFTER_SCRIPT_2){
				this._stateAfterScript2(c);
			} else if(this._state === AFTER_SCRIPT_3){
				this._stateAfterScript3(c);
			} else if(this._state === AFTER_SCRIPT_4){
				this._stateAfterScript4(c);
			} else if(this._state === AFTER_SCRIPT_5){
				this._stateAfterScript5(c);
			}

			/*
			* style
			*/
			else if(this._state === BEFORE_STYLE_1){
				this._stateBeforeStyle1(c);
			} else if(this._state === BEFORE_STYLE_2){
				this._stateBeforeStyle2(c);
			} else if(this._state === BEFORE_STYLE_3){
				this._stateBeforeStyle3(c);
			} else if(this._state === BEFORE_STYLE_4){
				this._stateBeforeStyle4(c);
			}

			else if(this._state === AFTER_STYLE_1){
				this._stateAfterStyle1(c);
			} else if(this._state === AFTER_STYLE_2){
				this._stateAfterStyle2(c);
			} else if(this._state === AFTER_STYLE_3){
				this._stateAfterStyle3(c);
			} else if(this._state === AFTER_STYLE_4){
				this._stateAfterStyle4(c);
			}

			/*
			* entities
			*/
			else if(this._state === BEFORE_ENTITY){
				this._stateBeforeEntity(c);
			} else if(this._state === BEFORE_NUMERIC_ENTITY){
				this._stateBeforeNumericEntity(c);
			} else if(this._state === IN_NAMED_ENTITY){
				this._stateInNamedEntity(c);
			} else if(this._state === IN_NUMERIC_ENTITY){
				this._stateInNumericEntity(c);
			} else if(this._state === IN_HEX_ENTITY){
				this._stateInHexEntity(c);
			}

			else {
				this._cbs.onerror(Error("unknown _state"), this._state);
			}

			this._index++;
		}

		this._cleanup();
	};

	Tokenizer.prototype.pause = function(){
		this._running = false;
	};
	Tokenizer.prototype.resume = function(){
		this._running = true;

		if(this._index < this._buffer.length){
			this._parse();
		}
		if(this._ended){
			this._finish();
		}
	};

	Tokenizer.prototype.end = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".end() after done!"));
		if(chunk) this.write(chunk);

		this._ended = true;

		if(this._running) this._finish();
	};

	Tokenizer.prototype._finish = function(){
		//if there is remaining data, emit it in a reasonable way
		if(this._sectionStart < this._index){
			this._handleTrailingData();
		}

		this._cbs.onend();
	};

	Tokenizer.prototype._handleTrailingData = function(){
		var data = this._buffer.substr(this._sectionStart);

		if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
			this._cbs.oncdata(data);
		} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
			this._cbs.oncomment(data);
		} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
			this._parseLegacyEntity();
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(2, 10);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(3, 16);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(
			this._state !== IN_TAG_NAME &&
			this._state !== BEFORE_ATTRIBUTE_NAME &&
			this._state !== BEFORE_ATTRIBUTE_VALUE &&
			this._state !== AFTER_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_VALUE_SQ &&
			this._state !== IN_ATTRIBUTE_VALUE_DQ &&
			this._state !== IN_ATTRIBUTE_VALUE_NQ &&
			this._state !== IN_CLOSING_TAG_NAME
		){
			this._cbs.ontext(data);
		}
		//else, ignore remaining data
		//TODO add a way to remove current tag
	};

	Tokenizer.prototype.reset = function(){
		Tokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);
	};

	Tokenizer.prototype.getAbsoluteIndex = function(){
		return this._bufferOffset + this._index;
	};

	Tokenizer.prototype._getSection = function(){
		return this._buffer.substring(this._sectionStart, this._index);
	};

	Tokenizer.prototype._emitToken = function(name){
		this._cbs[name](this._getSection());
		this._sectionStart = -1;
	};

	Tokenizer.prototype._emitPartial = function(value){
		if(this._baseState !== TEXT){
			this._cbs.onattribdata(value); //TODO implement the new event
		} else {
			this._cbs.ontext(value);
		}
	};


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(319);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 319 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	};

/***/ },
/* 320 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	};

/***/ },
/* 321 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	};

/***/ },
/* 322 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	};

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(324);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(325);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4)))

/***/ },
/* 324 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 325 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 326 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events)
	    this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler))
	    return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events)
	    this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type])
	    return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);

	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0)
	      return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;

	  if (!this._events)
	    return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];

	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};

	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(328);

	var re_whitespace = /\s+/g;
	var NodePrototype = __webpack_require__(329);
	var ElementPrototype = __webpack_require__(330);

	function DomHandler(callback, options, elementCB){
		if(typeof callback === "object"){
			elementCB = options;
			options = callback;
			callback = null;
		} else if(typeof options === "function"){
			elementCB = options;
			options = defaultOpts;
		}
		this._callback = callback;
		this._options = options || defaultOpts;
		this._elementCB = elementCB;
		this.dom = [];
		this._done = false;
		this._tagStack = [];
		this._parser = this._parser || null;
	}

	//default options
	var defaultOpts = {
		normalizeWhitespace: false, //Replace all whitespace with single spaces
		withStartIndices: false, //Add startIndex properties to nodes
	};

	DomHandler.prototype.onparserinit = function(parser){
		this._parser = parser;
	};

	//Resets the handler back to starting state
	DomHandler.prototype.onreset = function(){
		DomHandler.call(this, this._callback, this._options, this._elementCB);
	};

	//Signals the handler that parsing is done
	DomHandler.prototype.onend = function(){
		if(this._done) return;
		this._done = true;
		this._parser = null;
		this._handleCallback(null);
	};

	DomHandler.prototype._handleCallback =
	DomHandler.prototype.onerror = function(error){
		if(typeof this._callback === "function"){
			this._callback(error, this.dom);
		} else {
			if(error) throw error;
		}
	};

	DomHandler.prototype.onclosetag = function(){
		//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
		var elem = this._tagStack.pop();
		if(this._elementCB) this._elementCB(elem);
	};

	DomHandler.prototype._addDomElement = function(element){
		var parent = this._tagStack[this._tagStack.length - 1];
		var siblings = parent ? parent.children : this.dom;
		var previousSibling = siblings[siblings.length - 1];

		element.next = null;

		if(this._options.withStartIndices){
			element.startIndex = this._parser.startIndex;
		}

		if (this._options.withDomLvl1) {
			element.__proto__ = element.type === "tag" ? ElementPrototype : NodePrototype;
		}

		if(previousSibling){
			element.prev = previousSibling;
			previousSibling.next = element;
		} else {
			element.prev = null;
		}

		siblings.push(element);
		element.parent = parent || null;
	};

	DomHandler.prototype.onopentag = function(name, attribs){
		var element = {
			type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
			name: name,
			attribs: attribs,
			children: []
		};

		this._addDomElement(element);

		this._tagStack.push(element);
	};

	DomHandler.prototype.ontext = function(data){
		//the ignoreWhitespace is officially dropped, but for now,
		//it's an alias for normalizeWhitespace
		var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

		var lastTag;

		if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(
				this._tagStack.length &&
				(lastTag = this._tagStack[this._tagStack.length - 1]) &&
				(lastTag = lastTag.children[lastTag.children.length - 1]) &&
				lastTag.type === ElementType.Text
			){
				if(normalize){
					lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
				} else {
					lastTag.data += data;
				}
			} else {
				if(normalize){
					data = data.replace(re_whitespace, " ");
				}

				this._addDomElement({
					data: data,
					type: ElementType.Text
				});
			}
		}
	};

	DomHandler.prototype.oncomment = function(data){
		var lastTag = this._tagStack[this._tagStack.length - 1];

		if(lastTag && lastTag.type === ElementType.Comment){
			lastTag.data += data;
			return;
		}

		var element = {
			data: data,
			type: ElementType.Comment
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncdatastart = function(){
		var element = {
			children: [{
				data: "",
				type: ElementType.Text
			}],
			type: ElementType.CDATA
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
		this._tagStack.pop();
	};

	DomHandler.prototype.onprocessinginstruction = function(name, data){
		this._addDomElement({
			name: name,
			data: data,
			type: ElementType.Directive
		});
	};

	module.exports = DomHandler;


/***/ },
/* 328 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>
		Doctype: "doctype",

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};


/***/ },
/* 329 */
/***/ function(module, exports) {

	// This object will be used as the prototype for Nodes when creating a
	// DOM-Level-1-compliant structure.
	var NodePrototype = module.exports = {
		get firstChild() {
			var children = this.children;
			return children && children[0] || null;
		},
		get lastChild() {
			var children = this.children;
			return children && children[children.length - 1] || null;
		},
		get nodeType() {
			return nodeTypes[this.type] || nodeTypes.element;
		}
	};

	var domLvl1 = {
		tagName: "name",
		childNodes: "children",
		parentNode: "parent",
		previousSibling: "prev",
		nextSibling: "next",
		nodeValue: "data"
	};

	var nodeTypes = {
		element: 1,
		text: 3,
		cdata: 4,
		comment: 8
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(NodePrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	// DOM-Level-1-compliant structure
	var NodePrototype = __webpack_require__(329);
	var ElementPrototype = module.exports = Object.create(NodePrototype);

	var domLvl1 = {
		tagName: "name"
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(ElementPrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	var index = __webpack_require__(315),
	    DomHandler = index.DomHandler,
		DomUtils = index.DomUtils;

	//TODO: make this a streamable handler
	function FeedHandler(callback, options){
		this.init(callback, options);
	}

	__webpack_require__(323).inherits(FeedHandler, DomHandler);

	FeedHandler.prototype.init = DomHandler;

	function getElements(what, where){
		return DomUtils.getElementsByTagName(what, where, true);
	}
	function getOneElement(what, where){
		return DomUtils.getElementsByTagName(what, where, true, 1)[0];
	}
	function fetch(what, where, recurse){
		return DomUtils.getText(
			DomUtils.getElementsByTagName(what, where, recurse, 1)
		).trim();
	}

	function addConditionally(obj, prop, what, where, recurse){
		var tmp = fetch(what, where, recurse);
		if(tmp) obj[prop] = tmp;
	}

	var isValidFeed = function(value){
		return value === "rss" || value === "feed" || value === "rdf:RDF";
	};

	FeedHandler.prototype.onend = function(){
		var feed = {},
			feedRoot = getOneElement(isValidFeed, this.dom),
			tmp, childs;

		if(feedRoot){
			if(feedRoot.name === "feed"){
				childs = feedRoot.children;

				feed.type = "atom";
				addConditionally(feed, "id", "id", childs);
				addConditionally(feed, "title", "title", childs);
				if((tmp = getOneElement("link", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href)) feed.link = tmp;
				addConditionally(feed, "description", "subtitle", childs);
				if((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "email", childs, true);

				feed.items = getElements("entry", childs).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "id", item);
					addConditionally(entry, "title", "title", item);
					if((tmp = getOneElement("link", item)) && (tmp = tmp.attribs) && (tmp = tmp.href)) entry.link = tmp;
					if((tmp = fetch("summary", item) || fetch("content", item))) entry.description = tmp;
					if((tmp = fetch("updated", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			} else {
				childs = getOneElement("channel", feedRoot.children).children;

				feed.type = feedRoot.name.substr(0, 3);
				feed.id = "";
				addConditionally(feed, "title", "title", childs);
				addConditionally(feed, "link", "link", childs);
				addConditionally(feed, "description", "description", childs);
				if((tmp = fetch("lastBuildDate", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "managingEditor", childs, true);

				feed.items = getElements("item", feedRoot.children).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "guid", item);
					addConditionally(entry, "title", "title", item);
					addConditionally(entry, "link", "link", item);
					addConditionally(entry, "description", "description", item);
					if((tmp = fetch("pubDate", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			}
		}
		this.dom = feed;
		DomHandler.prototype._handleCallback.call(
			this, feedRoot ? null : Error("couldn't find root of feed")
		);
	};

	module.exports = FeedHandler;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(333);

	function Stream(options){
		Parser.call(this, new Cbs(this), options);
	}

	__webpack_require__(323).inherits(Stream, Parser);

	Stream.prototype.readable = true;

	function Cbs(scope){
		this.scope = scope;
	}

	var EVENTS = __webpack_require__(315).EVENTS;

	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			Cbs.prototype["on" + name] = function(){
				this.scope.emit(name);
			};
		} else if(EVENTS[name] === 1){
			Cbs.prototype["on" + name] = function(a){
				this.scope.emit(name, a);
			};
		} else if(EVENTS[name] === 2){
			Cbs.prototype["on" + name] = function(a, b){
				this.scope.emit(name, a, b);
			};
		} else {
			throw Error("wrong number of arguments!");
		}
	});

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(316),
	    WritableStream = __webpack_require__(334).Writable || __webpack_require__(351).Writable;

	function Stream(cbs, options){
		var parser = this._parser = new Parser(cbs, options);

		WritableStream.call(this, {decodeStrings: false});

		this.once("finish", function(){
			parser.end();
		});
	}

	__webpack_require__(323).inherits(Stream, WritableStream);

	WritableStream.prototype._write = function(chunk, encoding, cb){
		this._parser.write(chunk);
		cb();
	};

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	module.exports = Stream;

	var EE = __webpack_require__(326).EventEmitter;
	var inherits = __webpack_require__(335);

	inherits(Stream, EE);
	Stream.Readable = __webpack_require__(336);
	Stream.Writable = __webpack_require__(347);
	Stream.Duplex = __webpack_require__(348);
	Stream.Transform = __webpack_require__(349);
	Stream.PassThrough = __webpack_require__(350);

	// Backwards-compat with node 0.4.x
	Stream.Stream = Stream;



	// old-style streams.  Note that the pipe method (the only relevant
	// part of this class) is overridden in the Readable class.

	function Stream() {
	  EE.call(this);
	}

	Stream.prototype.pipe = function(dest, options) {
	  var source = this;

	  function ondata(chunk) {
	    if (dest.writable) {
	      if (false === dest.write(chunk) && source.pause) {
	        source.pause();
	      }
	    }
	  }

	  source.on('data', ondata);

	  function ondrain() {
	    if (source.readable && source.resume) {
	      source.resume();
	    }
	  }

	  dest.on('drain', ondrain);

	  // If the 'end' option is not supplied, dest.end() will be called when
	  // source gets the 'end' or 'close' events.  Only dest.end() once.
	  if (!dest._isStdio && (!options || options.end !== false)) {
	    source.on('end', onend);
	    source.on('close', onclose);
	  }

	  var didOnEnd = false;
	  function onend() {
	    if (didOnEnd) return;
	    didOnEnd = true;

	    dest.end();
	  }


	  function onclose() {
	    if (didOnEnd) return;
	    didOnEnd = true;

	    if (typeof dest.destroy === 'function') dest.destroy();
	  }

	  // don't leave dangling pipes when there are errors.
	  function onerror(er) {
	    cleanup();
	    if (EE.listenerCount(this, 'error') === 0) {
	      throw er; // Unhandled stream error in pipe.
	    }
	  }

	  source.on('error', onerror);
	  dest.on('error', onerror);

	  // remove all the event listeners that were added.
	  function cleanup() {
	    source.removeListener('data', ondata);
	    dest.removeListener('drain', ondrain);

	    source.removeListener('end', onend);
	    source.removeListener('close', onclose);

	    source.removeListener('error', onerror);
	    dest.removeListener('error', onerror);

	    source.removeListener('end', cleanup);
	    source.removeListener('close', cleanup);

	    dest.removeListener('close', cleanup);
	  }

	  source.on('end', cleanup);
	  source.on('close', cleanup);

	  dest.on('close', cleanup);

	  dest.emit('pipe', source);

	  // Allow for unix-like usage: A.pipe(B).pipe(C)
	  return dest;
	};


/***/ },
/* 335 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(337);
	exports.Stream = __webpack_require__(334);
	exports.Readable = exports;
	exports.Writable = __webpack_require__(343);
	exports.Duplex = __webpack_require__(342);
	exports.Transform = __webpack_require__(345);
	exports.PassThrough = __webpack_require__(346);
	if (!process.browser && process.env.READABLE_STREAM === 'disable') {
	  module.exports = __webpack_require__(334);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	module.exports = Readable;

	/*<replacement>*/
	var isArray = __webpack_require__(338);
	/*</replacement>*/


	/*<replacement>*/
	var Buffer = __webpack_require__(311).Buffer;
	/*</replacement>*/

	Readable.ReadableState = ReadableState;

	var EE = __webpack_require__(326).EventEmitter;

	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/

	var Stream = __webpack_require__(334);

	/*<replacement>*/
	var util = __webpack_require__(339);
	util.inherits = __webpack_require__(340);
	/*</replacement>*/

	var StringDecoder;


	/*<replacement>*/
	var debug = __webpack_require__(341);
	if (debug && debug.debuglog) {
	  debug = debug.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/


	util.inherits(Readable, Stream);

	function ReadableState(options, stream) {
	  var Duplex = __webpack_require__(342);

	  options = options || {};

	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;


	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.readableObjectMode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;

	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;

	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;

	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(344).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}

	function Readable(options) {
	  var Duplex = __webpack_require__(342);

	  if (!(this instanceof Readable))
	    return new Readable(options);

	  this._readableState = new ReadableState(options, this);

	  // legacy
	  this.readable = true;

	  Stream.call(this);
	}

	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;

	  if (util.isString(chunk) && !state.objectMode) {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }

	  return readableAddChunk(this, state, chunk, encoding, false);
	};

	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};

	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (util.isNullOrUndefined(chunk)) {
	    state.reading = false;
	    if (!state.ended)
	      onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);

	      if (!addToFront)
	        state.reading = false;

	      // if we want the data now, just emit it.
	      if (state.flowing && state.length === 0 && !state.sync) {
	        stream.emit('data', chunk);
	        stream.read(0);
	      } else {
	        // update the buffer info.
	        state.length += state.objectMode ? 1 : chunk.length;
	        if (addToFront)
	          state.buffer.unshift(chunk);
	        else
	          state.buffer.push(chunk);

	        if (state.needReadable)
	          emitReadable(stream);
	      }

	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }

	  return needMoreData(state);
	}



	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}

	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(344).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};

	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}

	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;

	  if (state.objectMode)
	    return n === 0 ? 0 : 1;

	  if (isNaN(n) || util.isNull(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }

	  if (n <= 0)
	    return 0;

	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);

	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else
	      return state.length;
	  }

	  return n;
	}

	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  debug('read', n);
	  var state = this._readableState;
	  var nOrig = n;

	  if (!util.isNumber(n) || n > 0)
	    state.emittedReadable = false;

	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended)
	      endReadable(this);
	    else
	      emitReadable(this);
	    return null;
	  }

	  n = howMuchToRead(n, state);

	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0)
	      endReadable(this);
	    return null;
	  }

	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.

	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);

	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }

	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  }

	  if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }

	  // If _read pushed data synchronously, then `reading` will be false,
	  // and we need to re-evaluate how much data we can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);

	  var ret;
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;

	  if (util.isNull(ret)) {
	    state.needReadable = true;
	    n = 0;
	  }

	  state.length -= n;

	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;

	  // If we tried to read() past the EOF, then emit end on the next tick.
	  if (nOrig !== n && state.ended && state.length === 0)
	    endReadable(this);

	  if (!util.isNull(ret))
	    this.emit('data', ret);

	  return ret;
	};

	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}


	function onEofChunk(stream, state) {
	  if (state.decoder && !state.ended) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;

	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}

	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync)
	      process.nextTick(function() {
	        emitReadable_(stream);
	      });
	    else
	      emitReadable_(stream);
	  }
	}

	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}


	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    process.nextTick(function() {
	      maybeReadMore_(stream, state);
	    });
	  }
	}

	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}

	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};

	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;

	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;

	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    process.nextTick(endFn);
	  else
	    src.once('end', endFn);

	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }

	  function onend() {
	    debug('onend');
	    dest.end();
	  }

	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);

	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);

	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain &&
	        (!dest._writableState || dest._writableState.needDrain))
	      ondrain();
	  }

	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    var ret = dest.write(chunk);
	    if (false === ret) {
	      debug('false write response, pause',
	            src._readableState.awaitDrain);
	      src._readableState.awaitDrain++;
	      src.pause();
	    }
	  }

	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];



	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);

	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }

	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);

	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }

	  return dest;
	};

	function pipeOnDrain(src) {
	  return function() {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain)
	      state.awaitDrain--;
	    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}


	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;

	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;

	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;

	    if (!dest)
	      dest = state.pipes;

	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }

	  // slow case. multiple pipe destinations.

	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;

	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }

	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;

	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];

	  dest.emit('unpipe', this);

	  return this;
	};

	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);

	  // If listening to data, and it has not explicitly been paused,
	  // then call resume to start the flow of data on the next tick.
	  if (ev === 'data' && false !== this._readableState.flowing) {
	    this.resume();
	  }

	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        var self = this;
	        process.nextTick(function() {
	          debug('readable nexttick read 0');
	          self.read(0);
	        });
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }

	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;

	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    if (!state.reading) {
	      debug('resume read 0');
	      this.read(0);
	    }
	    resume(this, state);
	  }
	  return this;
	};

	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    process.nextTick(function() {
	      resume_(stream, state);
	    });
	  }
	}

	function resume_(stream, state) {
	  state.resumeScheduled = false;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading)
	    stream.read(0);
	}

	Readable.prototype.pause = function() {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};

	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  if (state.flowing) {
	    do {
	      var chunk = stream.read();
	    } while (null !== chunk && state.flowing);
	  }
	}

	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;

	  var self = this;
	  stream.on('end', function() {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }

	    self.push(null);
	  });

	  stream.on('data', function(chunk) {
	    debug('wrapped data');
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);
	    if (!chunk || !state.objectMode && !chunk.length)
	      return;

	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });

	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }}(i);
	    }
	  }

	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });

	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };

	  return self;
	};



	// exposed for testing purposes only.
	Readable._fromList = fromList;

	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;

	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;

	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);

	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);

	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);

	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();

	        c += cpy;
	      }
	    }
	  }

	  return ret;
	}

	function endReadable(stream) {
	  var state = stream._readableState;

	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');

	  if (!state.endEmitted) {
	    state.ended = true;
	    process.nextTick(function() {
	      // Check that we didn't get one last unshift.
	      if (!state.endEmitted && state.length === 0) {
	        state.endEmitted = true;
	        stream.readable = false;
	        stream.emit('end');
	      }
	    });
	  }
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 338 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.

	function isArray(arg) {
	  if (Array.isArray) {
	    return Array.isArray(arg);
	  }
	  return objectToString(arg) === '[object Array]';
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = Buffer.isBuffer;

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(311).Buffer))

/***/ },
/* 340 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 341 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.

	module.exports = Duplex;

	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/


	/*<replacement>*/
	var util = __webpack_require__(339);
	util.inherits = __webpack_require__(340);
	/*</replacement>*/

	var Readable = __webpack_require__(337);
	var Writable = __webpack_require__(343);

	util.inherits(Duplex, Readable);

	forEach(objectKeys(Writable.prototype), function(method) {
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	});

	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);

	  Readable.call(this, options);
	  Writable.call(this, options);

	  if (options && options.readable === false)
	    this.readable = false;

	  if (options && options.writable === false)
	    this.writable = false;

	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;

	  this.once('end', onend);
	}

	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;

	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  process.nextTick(this.end.bind(this));
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.

	module.exports = Writable;

	/*<replacement>*/
	var Buffer = __webpack_require__(311).Buffer;
	/*</replacement>*/

	Writable.WritableState = WritableState;


	/*<replacement>*/
	var util = __webpack_require__(339);
	util.inherits = __webpack_require__(340);
	/*</replacement>*/

	var Stream = __webpack_require__(334);

	util.inherits(Writable, Stream);

	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	}

	function WritableState(options, stream) {
	  var Duplex = __webpack_require__(342);

	  options = options || {};

	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.writableObjectMode;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;

	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;

	  // a flag to see when we're in the middle of a write.
	  this.writing = false;

	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;

	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };

	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;

	  // the amount that is being written when _write is called.
	  this.writelen = 0;

	  this.buffer = [];

	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;

	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;

	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}

	function Writable(options) {
	  var Duplex = __webpack_require__(342);

	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);

	  this._writableState = new WritableState(options, this);

	  // legacy.
	  this.writable = true;

	  Stream.call(this);
	}

	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};


	function writeAfterEnd(stream, state, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  process.nextTick(function() {
	    cb(er);
	  });
	}

	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    process.nextTick(function() {
	      cb(er);
	    });
	    valid = false;
	  }
	  return valid;
	}

	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;

	  if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;

	  if (!util.isFunction(cb))
	    cb = function() {};

	  if (state.ended)
	    writeAfterEnd(this, state, cb);
	  else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }

	  return ret;
	};

	Writable.prototype.cork = function() {
	  var state = this._writableState;

	  state.corked++;
	};

	Writable.prototype.uncork = function() {
	  var state = this._writableState;

	  if (state.corked) {
	    state.corked--;

	    if (!state.writing &&
	        !state.corked &&
	        !state.finished &&
	        !state.bufferProcessing &&
	        state.buffer.length)
	      clearBuffer(this, state);
	  }
	};

	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      util.isString(chunk)) {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}

	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;

	  state.length += len;

	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;

	  if (state.writing || state.corked)
	    state.buffer.push(new WriteReq(chunk, encoding, cb));
	  else
	    doWrite(stream, state, false, len, chunk, encoding, cb);

	  return ret;
	}

	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev)
	    stream._writev(chunk, state.onwrite);
	  else
	    stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}

	function onwriteError(stream, state, sync, er, cb) {
	  if (sync)
	    process.nextTick(function() {
	      state.pendingcb--;
	      cb(er);
	    });
	  else {
	    state.pendingcb--;
	    cb(er);
	  }

	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}

	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}

	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;

	  onwriteStateUpdate(state);

	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(stream, state);

	    if (!finished &&
	        !state.corked &&
	        !state.bufferProcessing &&
	        state.buffer.length) {
	      clearBuffer(stream, state);
	    }

	    if (sync) {
	      process.nextTick(function() {
	        afterWrite(stream, state, finished, cb);
	      });
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}

	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}

	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}


	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;

	  if (stream._writev && state.buffer.length > 1) {
	    // Fast case, write everything using _writev()
	    var cbs = [];
	    for (var c = 0; c < state.buffer.length; c++)
	      cbs.push(state.buffer[c].callback);

	    // count the one we are adding, as well.
	    // TODO(isaacs) clean this up
	    state.pendingcb++;
	    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
	      for (var i = 0; i < cbs.length; i++) {
	        state.pendingcb--;
	        cbs[i](err);
	      }
	    });

	    // Clear buffer
	    state.buffer = [];
	  } else {
	    // Slow case, write chunks one-by-one
	    for (var c = 0; c < state.buffer.length; c++) {
	      var entry = state.buffer[c];
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;

	      doWrite(stream, state, false, len, chunk, encoding, cb);

	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        c++;
	        break;
	      }
	    }

	    if (c < state.buffer.length)
	      state.buffer = state.buffer.slice(c);
	    else
	      state.buffer.length = 0;
	  }

	  state.bufferProcessing = false;
	}

	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));

	};

	Writable.prototype._writev = null;

	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;

	  if (util.isFunction(chunk)) {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (!util.isNullOrUndefined(chunk))
	    this.write(chunk, encoding);

	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }

	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};


	function needFinish(stream, state) {
	  return (state.ending &&
	          state.length === 0 &&
	          !state.finished &&
	          !state.writing);
	}

	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}

	function finishMaybe(stream, state) {
	  var need = needFinish(stream, state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else
	      prefinish(stream, state);
	  }
	  return need;
	}

	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      process.nextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var Buffer = __webpack_require__(311).Buffer;

	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }


	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}

	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }

	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};


	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;

	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;

	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }

	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);

	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;

	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }

	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);

	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }

	  charStr += buffer.toString(this.encoding, 0, end);

	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }

	  // or just emit the charStr
	  return charStr;
	};

	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;

	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];

	    // See http://en.wikipedia.org/wiki/UTF-8#Description

	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }

	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }

	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};

	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);

	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }

	  return res;
	};

	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}

	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}

	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.


	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.

	module.exports = Transform;

	var Duplex = __webpack_require__(342);

	/*<replacement>*/
	var util = __webpack_require__(339);
	util.inherits = __webpack_require__(340);
	/*</replacement>*/

	util.inherits(Transform, Duplex);


	function TransformState(options, stream) {
	  this.afterTransform = function(er, data) {
	    return afterTransform(stream, er, data);
	  };

	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	}

	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;

	  var cb = ts.writecb;

	  if (!cb)
	    return stream.emit('error', new Error('no writecb in Transform class'));

	  ts.writechunk = null;
	  ts.writecb = null;

	  if (!util.isNullOrUndefined(data))
	    stream.push(data);

	  if (cb)
	    cb(er);

	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}


	function Transform(options) {
	  if (!(this instanceof Transform))
	    return new Transform(options);

	  Duplex.call(this, options);

	  this._transformState = new TransformState(options, this);

	  // when the writable side finishes, then flush out anything remaining.
	  var stream = this;

	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;

	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;

	  this.once('prefinish', function() {
	    if (util.isFunction(this._flush))
	      this._flush(function(er) {
	        done(stream, er);
	      });
	    else
	      done(stream);
	  });
	}

	Transform.prototype.push = function(chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};

	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function(chunk, encoding, cb) {
	  throw new Error('not implemented');
	};

	Transform.prototype._write = function(chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform ||
	        rs.needReadable ||
	        rs.length < rs.highWaterMark)
	      this._read(rs.highWaterMark);
	  }
	};

	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function(n) {
	  var ts = this._transformState;

	  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};


	function done(stream, er) {
	  if (er)
	    return stream.emit('error', er);

	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;

	  if (ws.length)
	    throw new Error('calling transform done when ws.length != 0');

	  if (ts.transforming)
	    throw new Error('calling transform done when still transforming');

	  return stream.push(null);
	}


/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.

	module.exports = PassThrough;

	var Transform = __webpack_require__(345);

	/*<replacement>*/
	var util = __webpack_require__(339);
	util.inherits = __webpack_require__(340);
	/*</replacement>*/

	util.inherits(PassThrough, Transform);

	function PassThrough(options) {
	  if (!(this instanceof PassThrough))
	    return new PassThrough(options);

	  Transform.call(this, options);
	}

	PassThrough.prototype._transform = function(chunk, encoding, cb) {
	  cb(null, chunk);
	};


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(343)


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(342)


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(345)


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(346)


/***/ },
/* 351 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = ProxyHandler;

	function ProxyHandler(cbs){
		this._cbs = cbs || {};
	}

	var EVENTS = __webpack_require__(315).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(){
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a){
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a, b){
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils = module.exports;

	[
		__webpack_require__(354),
		__webpack_require__(365),
		__webpack_require__(366),
		__webpack_require__(367),
		__webpack_require__(368),
		__webpack_require__(369)
	].forEach(function(ext){
		Object.keys(ext).forEach(function(key){
			DomUtils[key] = ext[key].bind(DomUtils);
		});
	});


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(328),
	    getOuterHTML = __webpack_require__(355),
	    isTag = ElementType.isTag;

	module.exports = {
		getInnerHTML: getInnerHTML,
		getOuterHTML: getOuterHTML,
		getText: getText
	};

	function getInnerHTML(elem, opts){
		return elem.children ? elem.children.map(function(elem){
			return getOuterHTML(elem, opts);
		}).join("") : "";
	}

	function getText(elem){
		if(Array.isArray(elem)) return elem.map(getText).join("");
		if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
		if(elem.type === ElementType.Text) return elem.data;
		return "";
	}


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  Module dependencies
	*/
	var ElementType = __webpack_require__(356);
	var entities = __webpack_require__(357);

	/*
	  Boolean Attributes
	*/
	var booleanAttributes = {
	  __proto__: null,
	  allowfullscreen: true,
	  async: true,
	  autofocus: true,
	  autoplay: true,
	  checked: true,
	  controls: true,
	  default: true,
	  defer: true,
	  disabled: true,
	  hidden: true,
	  ismap: true,
	  loop: true,
	  multiple: true,
	  muted: true,
	  open: true,
	  readonly: true,
	  required: true,
	  reversed: true,
	  scoped: true,
	  seamless: true,
	  selected: true,
	  typemustmatch: true
	};

	var unencodedElements = {
	  __proto__: null,
	  style: true,
	  script: true,
	  xmp: true,
	  iframe: true,
	  noembed: true,
	  noframes: true,
	  plaintext: true,
	  noscript: true
	};

	/*
	  Format attributes
	*/
	function formatAttrs(attributes, opts) {
	  if (!attributes) return;

	  var output = '',
	      value;

	  // Loop through the attributes
	  for (var key in attributes) {
	    value = attributes[key];
	    if (output) {
	      output += ' ';
	    }

	    if (!value && booleanAttributes[key]) {
	      output += key;
	    } else {
	      output += key + '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
	    }
	  }

	  return output;
	}

	/*
	  Self-enclosing tags (stolen from node-htmlparser)
	*/
	var singleTag = {
	  __proto__: null,
	  area: true,
	  base: true,
	  basefont: true,
	  br: true,
	  col: true,
	  command: true,
	  embed: true,
	  frame: true,
	  hr: true,
	  img: true,
	  input: true,
	  isindex: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true,
	};


	var render = module.exports = function(dom, opts) {
	  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
	  opts = opts || {};

	  var output = '';

	  for(var i = 0; i < dom.length; i++){
	    var elem = dom[i];

	    if (elem.type === 'root')
	      output += render(elem.children, opts);
	    else if (ElementType.isTag(elem))
	      output += renderTag(elem, opts);
	    else if (elem.type === ElementType.Directive)
	      output += renderDirective(elem);
	    else if (elem.type === ElementType.Comment)
	      output += renderComment(elem);
	    else if (elem.type === ElementType.CDATA)
	      output += renderCdata(elem);
	    else
	      output += renderText(elem, opts);
	  }

	  return output;
	};

	function renderTag(elem, opts) {
	  // Handle SVG
	  if (elem.name === "svg") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};

	  var tag = '<' + elem.name,
	      attribs = formatAttrs(elem.attribs, opts);

	  if (attribs) {
	    tag += ' ' + attribs;
	  }

	  if (
	    opts.xmlMode
	    && (!elem.children || elem.children.length === 0)
	  ) {
	    tag += '/>';
	  } else {
	    tag += '>';
	    if (elem.children) {
	      tag += render(elem.children, opts);
	    }

	    if (!singleTag[elem.name] || opts.xmlMode) {
	      tag += '</' + elem.name + '>';
	    }
	  }

	  return tag;
	}

	function renderDirective(elem) {
	  return '<' + elem.data + '>';
	}

	function renderText(elem, opts) {
	  var data = elem.data || '';

	  // if entities weren't decoded, no need to encode them back
	  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
	    data = entities.encodeXML(data);
	  }

	  return data;
	}

	function renderCdata(elem) {
	  return '<![CDATA[' + elem.children[0].data + ']]>';
	}

	function renderComment(elem) {
	  return '<!--' + elem.data + '-->';
	}


/***/ },
/* 356 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var encode = __webpack_require__(358),
	    decode = __webpack_require__(361);

	exports.decode = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
	};

	exports.decodeStrict = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
	};

	exports.encode = function(data, level){
		return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
	};

	exports.encodeXML = encode.XML;

	exports.encodeHTML4 =
	exports.encodeHTML5 =
	exports.encodeHTML  = encode.HTML;

	exports.decodeXML =
	exports.decodeXMLStrict = decode.XML;

	exports.decodeHTML4 =
	exports.decodeHTML5 =
	exports.decodeHTML = decode.HTML;

	exports.decodeHTML4Strict =
	exports.decodeHTML5Strict =
	exports.decodeHTMLStrict = decode.HTMLStrict;

	exports.escape = encode.escape;


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	var inverseXML = getInverseObj(__webpack_require__(359)),
	    xmlReplacer = getInverseReplacer(inverseXML);

	exports.XML = getInverse(inverseXML, xmlReplacer);

	var inverseHTML = getInverseObj(__webpack_require__(360)),
	    htmlReplacer = getInverseReplacer(inverseHTML);

	exports.HTML = getInverse(inverseHTML, htmlReplacer);

	function getInverseObj(obj){
		return Object.keys(obj).sort().reduce(function(inverse, name){
			inverse[obj[name]] = "&" + name + ";";
			return inverse;
		}, {});
	}

	function getInverseReplacer(inverse){
		var single = [],
		    multiple = [];

		Object.keys(inverse).forEach(function(k){
			if(k.length === 1){
				single.push("\\" + k);
			} else {
				multiple.push(k);
			}
		});

		//TODO add ranges
		multiple.unshift("[" + single.join("") + "]");

		return new RegExp(multiple.join("|"), "g");
	}

	var re_nonASCII = /[^\0-\x7F]/g,
	    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

	function singleCharReplacer(c){
		return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";
	}

	function astralReplacer(c){
		// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
		var high = c.charCodeAt(0);
		var low  = c.charCodeAt(1);
		var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
		return "&#x" + codePoint.toString(16).toUpperCase() + ";";
	}

	function getInverse(inverse, re){
		function func(name){
			return inverse[name];
		}

		return function(data){
			return data
					.replace(re, func)
					.replace(re_astralSymbols, astralReplacer)
					.replace(re_nonASCII, singleCharReplacer);
		};
	}

	var re_xmlChars = getInverseReplacer(inverseXML);

	function escapeXML(data){
		return data
				.replace(re_xmlChars, singleCharReplacer)
				.replace(re_astralSymbols, astralReplacer)
				.replace(re_nonASCII, singleCharReplacer);
	}

	exports.escape = escapeXML;


/***/ },
/* 359 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	};

/***/ },
/* 360 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	};

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	var entityMap = __webpack_require__(360),
	    legacyMap = __webpack_require__(362),
	    xmlMap    = __webpack_require__(359),
	    decodeCodePoint = __webpack_require__(363);

	var decodeXMLStrict  = getStrictDecoder(xmlMap),
	    decodeHTMLStrict = getStrictDecoder(entityMap);

	function getStrictDecoder(map){
		var keys = Object.keys(map).join("|"),
		    replace = getReplacer(map);

		keys += "|#[xX][\\da-fA-F]+|#\\d+";

		var re = new RegExp("&(?:" + keys + ");", "g");

		return function(str){
			return String(str).replace(re, replace);
		};
	}

	var decodeHTML = (function(){
		var legacy = Object.keys(legacyMap)
			.sort(sorter);

		var keys = Object.keys(entityMap)
			.sort(sorter);

		for(var i = 0, j = 0; i < keys.length; i++){
			if(legacy[j] === keys[i]){
				keys[i] += ";?";
				j++;
			} else {
				keys[i] += ";";
			}
		}

		var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
		    replace = getReplacer(entityMap);

		function replacer(str){
			if(str.substr(-1) !== ";") str += ";";
			return replace(str);
		}

		//TODO consider creating a merged map
		return function(str){
			return String(str).replace(re, replacer);
		};
	}());

	function sorter(a, b){
		return a < b ? 1 : -1;
	}

	function getReplacer(map){
		return function replace(str){
			if(str.charAt(1) === "#"){
				if(str.charAt(2) === "X" || str.charAt(2) === "x"){
					return decodeCodePoint(parseInt(str.substr(3), 16));
				}
				return decodeCodePoint(parseInt(str.substr(2), 10));
			}
			return map[str.slice(1, -1)];
		};
	}

	module.exports = {
		XML: decodeXMLStrict,
		HTML: decodeHTML,
		HTMLStrict: decodeHTMLStrict
	};

/***/ },
/* 362 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	};

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(364);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 364 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	};

/***/ },
/* 365 */
/***/ function(module, exports) {

	var getChildren = exports.getChildren = function(elem){
		return elem.children;
	};

	var getParent = exports.getParent = function(elem){
		return elem.parent;
	};

	exports.getSiblings = function(elem){
		var parent = getParent(elem);
		return parent ? getChildren(parent) : [elem];
	};

	exports.getAttributeValue = function(elem, name){
		return elem.attribs && elem.attribs[name];
	};

	exports.hasAttrib = function(elem, name){
		return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
	};

	exports.getName = function(elem){
		return elem.name;
	};


/***/ },
/* 366 */
/***/ function(module, exports) {

	exports.removeElement = function(elem){
		if(elem.prev) elem.prev.next = elem.next;
		if(elem.next) elem.next.prev = elem.prev;

		if(elem.parent){
			var childs = elem.parent.children;
			childs.splice(childs.lastIndexOf(elem), 1);
		}
	};

	exports.replaceElement = function(elem, replacement){
		var prev = replacement.prev = elem.prev;
		if(prev){
			prev.next = replacement;
		}

		var next = replacement.next = elem.next;
		if(next){
			next.prev = replacement;
		}

		var parent = replacement.parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs[childs.lastIndexOf(elem)] = replacement;
		}
	};

	exports.appendChild = function(elem, child){
		child.parent = elem;

		if(elem.children.push(child) !== 1){
			var sibling = elem.children[elem.children.length - 2];
			sibling.next = child;
			child.prev = sibling;
			child.next = null;
		}
	};

	exports.append = function(elem, next){
		var parent = elem.parent,
			currNext = elem.next;

		next.next = currNext;
		next.prev = elem;
		elem.next = next;
		next.parent = parent;

		if(currNext){
			currNext.prev = next;
			if(parent){
				var childs = parent.children;
				childs.splice(childs.lastIndexOf(currNext), 0, next);
			}
		} else if(parent){
			parent.children.push(next);
		}
	};

	exports.prepend = function(elem, prev){
		var parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(elem), 0, prev);
		}

		if(elem.prev){
			elem.prev.next = prev;
		}
		
		prev.parent = parent;
		prev.prev = elem.prev;
		prev.next = elem;
		elem.prev = prev;
	};




/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	var isTag = __webpack_require__(328).isTag;

	module.exports = {
		filter: filter,
		find: find,
		findOneChild: findOneChild,
		findOne: findOne,
		existsOne: existsOne,
		findAll: findAll
	};

	function filter(test, element, recurse, limit){
		if(!Array.isArray(element)) element = [element];

		if(typeof limit !== "number" || !isFinite(limit)){
			limit = Infinity;
		}
		return find(test, element, recurse !== false, limit);
	}

	function find(test, elems, recurse, limit){
		var result = [], childs;

		for(var i = 0, j = elems.length; i < j; i++){
			if(test(elems[i])){
				result.push(elems[i]);
				if(--limit <= 0) break;
			}

			childs = elems[i].children;
			if(recurse && childs && childs.length > 0){
				childs = find(test, childs, recurse, limit);
				result = result.concat(childs);
				limit -= childs.length;
				if(limit <= 0) break;
			}
		}

		return result;
	}

	function findOneChild(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(test(elems[i])) return elems[i];
		}

		return null;
	}

	function findOne(test, elems){
		var elem = null;

		for(var i = 0, l = elems.length; i < l && !elem; i++){
			if(!isTag(elems[i])){
				continue;
			} else if(test(elems[i])){
				elem = elems[i];
			} else if(elems[i].children.length > 0){
				elem = findOne(test, elems[i].children);
			}
		}

		return elem;
	}

	function existsOne(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(
				isTag(elems[i]) && (
					test(elems[i]) || (
						elems[i].children.length > 0 &&
						existsOne(test, elems[i].children)
					)
				)
			){
				return true;
			}
		}

		return false;
	}

	function findAll(test, elems){
		var result = [];
		for(var i = 0, j = elems.length; i < j; i++){
			if(!isTag(elems[i])) continue;
			if(test(elems[i])) result.push(elems[i]);

			if(elems[i].children.length > 0){
				result = result.concat(findAll(test, elems[i].children));
			}
		}
		return result;
	}


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(328);
	var isTag = exports.isTag = ElementType.isTag;

	exports.testElement = function(options, element){
		for(var key in options){
			if(!options.hasOwnProperty(key));
			else if(key === "tag_name"){
				if(!isTag(element) || !options.tag_name(element.name)){
					return false;
				}
			} else if(key === "tag_type"){
				if(!options.tag_type(element.type)) return false;
			} else if(key === "tag_contains"){
				if(isTag(element) || !options.tag_contains(element.data)){
					return false;
				}
			} else if(!element.attribs || !options[key](element.attribs[key])){
				return false;
			}
		}
		return true;
	};

	var Checks = {
		tag_name: function(name){
			if(typeof name === "function"){
				return function(elem){ return isTag(elem) && name(elem.name); };
			} else if(name === "*"){
				return isTag;
			} else {
				return function(elem){ return isTag(elem) && elem.name === name; };
			}
		},
		tag_type: function(type){
			if(typeof type === "function"){
				return function(elem){ return type(elem.type); };
			} else {
				return function(elem){ return elem.type === type; };
			}
		},
		tag_contains: function(data){
			if(typeof data === "function"){
				return function(elem){ return !isTag(elem) && data(elem.data); };
			} else {
				return function(elem){ return !isTag(elem) && elem.data === data; };
			}
		}
	};

	function getAttribCheck(attrib, value){
		if(typeof value === "function"){
			return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
		} else {
			return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
		}
	}

	function combineFuncs(a, b){
		return function(elem){
			return a(elem) || b(elem);
		};
	}

	exports.getElements = function(options, element, recurse, limit){
		var funcs = Object.keys(options).map(function(key){
			var value = options[key];
			return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
		});

		return funcs.length === 0 ? [] : this.filter(
			funcs.reduce(combineFuncs),
			element, recurse, limit
		);
	};

	exports.getElementById = function(id, element, recurse){
		if(!Array.isArray(element)) element = [element];
		return this.findOne(getAttribCheck("id", id), element, recurse !== false);
	};

	exports.getElementsByTagName = function(name, element, recurse, limit){
		return this.filter(Checks.tag_name(name), element, recurse, limit);
	};

	exports.getElementsByTagType = function(type, element, recurse, limit){
		return this.filter(Checks.tag_type(type), element, recurse, limit);
	};


/***/ },
/* 369 */
/***/ function(module, exports) {

	// removeSubsets
	// Given an array of nodes, remove any member that is contained by another.
	exports.removeSubsets = function(nodes) {
		var idx = nodes.length, node, ancestor, replace;

		// Check if each node (or one of its ancestors) is already contained in the
		// array.
		while (--idx > -1) {
			node = ancestor = nodes[idx];

			// Temporarily remove the node under consideration
			nodes[idx] = null;
			replace = true;

			while (ancestor) {
				if (nodes.indexOf(ancestor) > -1) {
					replace = false;
					nodes.splice(idx, 1);
					break;
				}
				ancestor = ancestor.parent;
			}

			// If the node has been found to be unique, re-insert it.
			if (replace) {
				nodes[idx] = node;
			}
		}

		return nodes;
	};

	// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	var POSITION = {
		DISCONNECTED: 1,
		PRECEDING: 2,
		FOLLOWING: 4,
		CONTAINS: 8,
		CONTAINED_BY: 16
	};

	// Compare the position of one node against another node in any other document.
	// The return value is a bitmask with the following values:
	//
	// document order:
	// > There is an ordering, document order, defined on all the nodes in the
	// > document corresponding to the order in which the first character of the
	// > XML representation of each node occurs in the XML representation of the
	// > document after expansion of general entities. Thus, the document element
	// > node will be the first node. Element nodes occur before their children.
	// > Thus, document order orders element nodes in order of the occurrence of
	// > their start-tag in the XML (after expansion of entities). The attribute
	// > nodes of an element occur after the element and before its children. The
	// > relative order of attribute nodes is implementation-dependent./
	// Source:
	// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
	//
	// @argument {Node} nodaA The first node to use in the comparison
	// @argument {Node} nodeB The second node to use in the comparison
	//
	// @return {Number} A bitmask describing the input nodes' relative position.
	//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
	//         a description of these values.
	var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
		var aParents = [];
		var bParents = [];
		var current, sharedParent, siblings, aSibling, bSibling, idx;

		if (nodeA === nodeB) {
			return 0;
		}

		current = nodeA;
		while (current) {
			aParents.unshift(current);
			current = current.parent;
		}
		current = nodeB;
		while (current) {
			bParents.unshift(current);
			current = current.parent;
		}

		idx = 0;
		while (aParents[idx] === bParents[idx]) {
			idx++;
		}

		if (idx === 0) {
			return POSITION.DISCONNECTED;
		}

		sharedParent = aParents[idx - 1];
		siblings = sharedParent.children;
		aSibling = aParents[idx];
		bSibling = bParents[idx];

		if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
			if (sharedParent === nodeB) {
				return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
			}
			return POSITION.FOLLOWING;
		} else {
			if (sharedParent === nodeA) {
				return POSITION.PRECEDING | POSITION.CONTAINS;
			}
			return POSITION.PRECEDING;
		}
	};

	// Sort an array of nodes based on their relative position in the document and
	// remove any duplicate nodes. If the array contains nodes that do not belong
	// to the same document, sort order is unspecified.
	//
	// @argument {Array} nodes Array of DOM nodes
	//
	// @returns {Array} collection of unique nodes, sorted in document order
	exports.uniqueSort = function(nodes) {
		var idx = nodes.length, node, position;

		nodes = nodes.slice();

		while (--idx > -1) {
			node = nodes[idx];
			position = nodes.indexOf(node);
			if (position > -1 && position < idx) {
				nodes.splice(idx, 1);
			}
		}
		nodes.sort(function(a, b) {
			var relative = comparePos(a, b);
			if (relative & POSITION.PRECEDING) {
				return -1;
			} else if (relative & POSITION.FOLLOWING) {
				return 1;
			}
			return 0;
		});

		return nodes;
	};


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = CollectingHandler;

	function CollectingHandler(cbs){
		this._cbs = cbs || {};
		this.events = [];
	}

	var EVENTS = __webpack_require__(315).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(){
				this.events.push([name]);
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a){
				this.events.push([name, a]);
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a, b){
				this.events.push([name, a, b]);
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

	CollectingHandler.prototype.onreset = function(){
		this.events = [];
		if(this._cbs.onreset) this._cbs.onreset();
	};

	CollectingHandler.prototype.restart = function(){
		if(this._cbs.onreset) this._cbs.onreset();

		for(var i = 0, len = this.events.length; i < len; i++){
			if(this._cbs[this.events[i][0]]){

				var num = this.events[i].length;

				if(num === 1){
					this._cbs[this.events[i][0]]();
				} else if(num === 2){
					this._cbs[this.events[i][0]](this.events[i][1]);
				} else {
					this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);
				}
			}
		}
	};


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(310),
	    render = __webpack_require__(355);

	/**
	 * HTML Tags
	 */

	var tags = { tag: true, script: true, style: true };

	/**
	 * Check if the DOM element is a tag
	 *
	 * isTag(type) includes <script> and <style> tags
	 */

	exports.isTag = function(type) {
	  if (type.type) type = type.type;
	  return tags[type] || false;
	};

	/**
	 * Convert a string to camel case notation.
	 * @param  {String} str String to be converted.
	 * @return {String}     String in camel case notation.
	 */

	exports.camelCase = function(str) {
	  return str.replace(/[_.-](\w|$)/g, function(_, x) {
	    return x.toUpperCase();
	  });
	};

	/**
	 * Convert a string from camel case to "CSS case", where word boundaries are
	 * described by hyphens ("-") and all characters are lower-case.
	 * @param  {String} str String to be converted.
	 * @return {string}     String in "CSS case".
	 */
	exports.cssCase = function(str) {
	  return str.replace(/[A-Z]/g, '-$&').toLowerCase();
	};

	/**
	 * Iterate over each DOM element without creating intermediary Cheerio instances.
	 *
	 * This is indented for use internally to avoid otherwise unnecessary memory pressure introduced
	 * by _make.
	 */

	exports.domEach = function(cheerio, fn) {
	  var i = 0, len = cheerio.length;
	  while (i < len && fn.call(cheerio, i, cheerio[i]) !== false) ++i;
	  return cheerio;
	};

	/**
	 * Create a deep copy of the given DOM structure by first rendering it to a
	 * string and then parsing the resultant markup.
	 *
	 * @argument {Object} dom - The htmlparser2-compliant DOM structure
	 * @argument {Object} options - The parsing/rendering options
	 */
	exports.cloneDom = function(dom, options) {
	  return parse(render(dom, options), options).children;
	};

	/*
	 * A simple way to check for HTML strings or ID strings
	 */

	var quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;

	/*
	 * Check if string is HTML
	 */
	exports.isHtml = function(str) {
	  // Faster than running regex, if str starts with `<` and ends with `>`, assume it's HTML
	  if (str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3) return true;

	  // Run the regex
	  var match = quickExpr.exec(str);
	  return !!(match && match[1]);
	};


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * @license
	 * lodash <https://lodash.com/>
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.15.0';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Used as the `TypeError` message for "Functions" methods. */
	  var FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for function metadata. */
	  var BIND_FLAG = 1,
	      BIND_KEY_FLAG = 2,
	      CURRY_BOUND_FLAG = 4,
	      CURRY_FLAG = 8,
	      CURRY_RIGHT_FLAG = 16,
	      PARTIAL_FLAG = 32,
	      PARTIAL_RIGHT_FLAG = 64,
	      ARY_FLAG = 128,
	      REARG_FLAG = 256,
	      FLIP_FLAG = 512;

	  /** Used to compose bitmasks for comparison styles. */
	  var UNORDERED_COMPARE_FLAG = 1,
	      PARTIAL_COMPARE_FLAG = 2;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 150,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', ARY_FLAG],
	    ['bind', BIND_FLAG],
	    ['bindKey', BIND_KEY_FLAG],
	    ['curry', CURRY_FLAG],
	    ['curryRight', CURRY_RIGHT_FLAG],
	    ['flip', FLIP_FLAG],
	    ['partial', PARTIAL_FLAG],
	    ['partialRight', PARTIAL_RIGHT_FLAG],
	    ['rearg', REARG_FLAG]
	  ];

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      reUnescapedHtml = /[&<>"'`]/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      reLeadingDot = /^\./,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;

	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect hexadecimal string values. */
	  var reHasHexPrefix = /^0x/i;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	      rsComboSymbolsRange = '\\u20d0-\\u20f0',
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
	    rsUpper + '+' + rsOptUpperContr,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 'ss'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;',
	    '`': '&#96;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'",
	    '&#96;': '`'
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();

	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;

	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;

	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding('util');
	    } catch (e) {}
	  }());

	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `map.set` because it's not chainable in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    // Don't return `set.add` because it's not chainable in IE 11.
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array ? array.length : 0;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array ? array.length : 0,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array ? array.length : 0;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array ? array.length : 0,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array ? array.length : 0;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array ? array.length : 0;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');

	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }

	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }

	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    if (value !== value) {
	      return baseFindIndex(array, baseIsNaN, fromIndex);
	    }
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array ? array.length : 0;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Checks if a cache value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        result++;
	      }
	    }
	    return result;
	  }

	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }

	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }

	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }

	  /**
	   * Checks if `value` is a host object in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	   */
	  function isHostObject(value) {
	    // Many host objects are `Object` objects that can coerce to strings
	    // despite having improperly defined `toString` methods.
	    var result = false;
	    if (value != null && typeof value.toString != 'function') {
	      try {
	        result = !!(value + '');
	      } catch (e) {}
	    }
	    return result;
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      result++;
	    }
	    return result;
	  }

	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }

	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Use `context` to stub `Date#getTime` use in `_.now`.
	   * var stubbed = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': stubGetTime };
	   *   }
	   * });
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  function runInContext(context) {
	    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;

	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];

	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString = objectProto.toString;

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        iteratorSymbol = Symbol ? Symbol.iterator : undefined,
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /* Used to set `toString` methods. */
	    var defineProperty = (function() {
	      var func = getNative(Object, 'defineProperty'),
	          name = getNative.name;

	      return (name && name.length > 2) ? func : undefined;
	    }());

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
	          (arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries ? entries.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	    }

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      return this.has(key) && delete this.__data__[key];
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }

	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries ? entries.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	    }

	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      return true;
	    }

	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      return index < 0 ? undefined : data[index][1];
	    }

	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }

	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }

	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries ? entries.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      return getMapData(this, key)['delete'](key);
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      getMapData(this, key).set(key, value);
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }

	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }

	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      this.__data__ = new ListCache(entries);
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      return this.__data__['delete'](key);
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var cache = this.__data__;
	      if (cache instanceof ListCache) {
	        var pairs = cache.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          return this;
	        }
	        cache = this.__data__ = new MapCache(pairs);
	      }
	      cache.set(key, value);
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	      // Safari 9 makes `arguments.length` enumerable in strict mode.
	      var result = (isArray(value) || isArguments(value))
	        ? baseTimes(value.length, String)
	        : [];

	      var length = result.length,
	          skipIndexes = !!length;

	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function assignInDefaults(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (typeof key == 'number' && value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          isNil = object == null,
	          length = paths.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = isNil ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	      var result;
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          if (isHostObject(value)) {
	            return object ? value : {};
	          }
	          result = initCloneObject(isFunc ? {} : value);
	          if (!isDeep) {
	            return copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      if (!isArr) {
	        var props = isFull ? getAllKeys(value) : keys(value);
	      }
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }

	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];

	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    function baseCreate(proto) {
	      return isObject(proto) ? objectCreate(proto) : {};
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);

	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `getTag`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      return objectToString.call(value);
	    }

	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      if (!isKey(path, object)) {
	        path = castPath(path);
	        object = parent(object, path);
	        path = last(path);
	      }
	      var func = object == null ? object : object[toKey(path)];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
	    }

	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && objectToString.call(value) == dateTag;
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, customizer, bitmask, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;

	      if (!objIsArr) {
	        objTag = getTag(object);
	        objTag = objTag == argsTag ? objectTag : objTag;
	      }
	      if (!othIsArr) {
	        othTag = getTag(other);
	        othTag = othTag == argsTag ? objectTag : othTag;
	      }
	      var objIsObj = objTag == objectTag && !isHostObject(object),
	          othIsObj = othTag == objectTag && !isHostObject(other),
	          isSameTag = objTag == othTag;

	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	      }
	      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	    }

	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObject(value) && objectToString.call(value) == regexpTag;
	    }

	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];

	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      if (!(isArray(source) || isTypedArray(source))) {
	        var props = baseKeysIn(source);
	      }
	      arrayEach(props || source, function(srcValue, key) {
	        if (props) {
	          key = srcValue;
	          srcValue = source[key];
	        }
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      });
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        newValue = srcValue;
	        if (isArray(srcValue) || isTypedArray(srcValue)) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	          else {
	            newValue = objValue;
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, props) {
	      object = Object(object);
	      return basePickBy(object, props, function(value, key) {
	        return key in object;
	      });
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick from.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, props, predicate) {
	      var index = -1,
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index],
	            value = object[key];

	        if (predicate(value, key)) {
	          result[key] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          }
	          else if (!isKey(index, array)) {
	            var path = castPath(index),
	                object = parent(array, path);

	            if (object != null) {
	              delete object[toKey(last(path))];
	            }
	          }
	          else {
	            delete array[toKey(index)];
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = array;
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;

	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array ? array.length : low;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array ? array.length : 0,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);

	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }

	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);
	      object = parent(object, path);

	      var key = toKey(last(path));
	      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var index = -1,
	          length = arrays.length;

	      while (++index < length) {
	        var result = result
	          ? arrayPush(
	              baseDifference(result, arrays[index], iteratee, comparator),
	              baseDifference(arrays[index], result, iteratee, comparator)
	            )
	          : arrays[index];
	      }
	      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value) {
	      return isArray(value) ? value : stringToPath(value);
	    }

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var result = new buffer.constructor(buffer.length);
	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);

	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);

	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }

	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;

	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;

	        assignValue(object, key, newValue === undefined ? source[key] : newValue);
	      }
	      return object;
	    }

	    /**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return baseRest(function(funcs) {
	        funcs = baseFlatten(funcs, 1);

	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 &&
	              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & ARY_FLAG,
	          isBind = bitmask & BIND_FLAG,
	          isBindKey = bitmask & BIND_KEY_FLAG,
	          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
	          isFlip = bitmask & FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return baseRest(function(iteratees) {
	        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	          ? arrayMap(iteratees[0], baseUnary(getIteratee()))
	          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));

	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

	      if (!(bitmask & CURRY_BOUND_FLAG)) {
	        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     *   512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] == null
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

	      stack.set(array, other);
	      stack.set(other, array);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!seen.has(othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	                  return seen.add(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, customizer, bitmask, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= UNORDERED_COMPARE_FLAG;

	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	          stack['delete'](object);
	          return result;

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;

	      while (length--) {
	        var key = result[length],
	            value = object[key];

	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }

	    /**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

	    /**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;

	    // Fallback for data views, maps, sets, and weak maps in IE 11,
	    // for data views in Edge < 14, and promises in Node.js.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = objectToString.call(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : undefined;

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var result,
	          index = -1,
	          length = path.length;

	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result) {
	        return result;
	      }
	      var length = object ? object.length : 0;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length,
	          lastIndex = length - 1;

	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return !!length &&
	        (typeof value == 'number' || reIsUint.test(value)) &&
	        (value > -1 && value % 1 == 0 && value < length);
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }

	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
	        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }

	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = (function() {
	      var count = 0,
	          lastCalled = 0;

	      return function(key, value) {
	        var stamp = now(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return key;
	          }
	        } else {
	          count = 0;
	        }
	        return baseSetData(key, value);
	      };
	    }());

	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };

	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return defineProperty(wrapper, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))
	      });
	    };

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoize(function(string) {
	      string = toString(string);

	      var result = [];
	      if (reLeadingDot.test(string)) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to process.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array ? array.length : 0;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length,
	          args = Array(length ? length - 1 : 0),
	          array = arguments[0],
	          index = length;

	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return length
	        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))
	        : [];
	    }

	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. Result values
	     * are chosen from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs ? pairs.length : 0,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array ? array.length : 0;
	      return length ? baseSlice(array, 0, -1) : [];
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. Result values are chosen
	     * from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (comparator === last(mapped)) {
	        comparator = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array ? nativeJoin.call(array, separator) : '';
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array ? array.length : 0;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = (
	          index < 0
	            ? nativeMax(length + index, 0)
	            : nativeMin(index, length - 1)
	        ) + 1;
	      }
	      if (value !== value) {
	        return baseFindIndex(array, baseIsNaN, index - 1, true);
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = baseRest(function(array, indexes) {
	      indexes = baseFlatten(indexes, 1);

	      var length = array ? array.length : 0,
	          result = baseAt(array, indexes);

	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));

	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array ? nativeReverse.call(array) : array;
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array ? array.length : 0;
	      return length ? baseSlice(array, 1, length) : [];
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each
	     * element is kept.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length)
	        ? baseUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      return (array && array.length)
	        ? baseUniq(array, undefined, comparator)
	        : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = baseRest(function(paths) {
	      paths = baseFlatten(paths, 1);
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _([1, 2]).forEach(function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        result[key] = [value];
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          isProp = isKey(path),
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
	        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var array = isArrayLike(collection) ? collection : values(collection),
	          length = array.length;

	      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      var index = -1,
	          result = toArray(collection),
	          length = result.length,
	          lastIndex = length - 1;

	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = baseClamp(toInteger(n), 0, length);
	      }
	      while (++index < n) {
	        var rand = baseRandom(index, lastIndex),
	            value = result[rand];

	        result[rand] = result[index];
	        result[index] = value;
	      }
	      result.length = n;
	      return result;
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      return sampleSize(collection, MAX_ARRAY_LENGTH);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, function(o) { return o.user; });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     *
	     * _.sortBy(users, 'user', function(o) {
	     *   return Math.floor(o.age / 10);
	     * });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one or more milliseconds.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result);
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Assign cache to `_.memoize`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = baseRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = baseRest(function(func, indexes) {
	      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      wrapper = wrapper == null ? identity : wrapper;
	      return partial(wrapper, value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, false, true);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      return baseClone(value, false, true, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, true, true);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      return baseClone(value, true, true, customizer);
	    }

	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	    }

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && objectToString.call(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' ||
	            typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (nonEnumShadows || isPrototype(value)) {
	        return !nativeKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      return (objectToString.call(value) == errorTag) ||
	        (typeof value.message == 'string' && typeof value.name == 'string');
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 8-9 which returns 'object' for typed array and other constructors.
	      var tag = isObject(value) ? objectToString.call(value) : '';
	      return tag == funcTag || tag == genTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return !!value && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return !!value && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');
	      }
	      return baseIsNative(value);
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && objectToString.call(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) ||
	          objectToString.call(value) != objectTag || isHostObject(value)) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return (typeof Ctor == 'function' &&
	        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && objectToString.call(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (iteratorSymbol && value[iteratorSymbol]) {
	        return iteratorToArray(value[iteratorSymbol]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;

	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = baseRest(function(object, paths) {
	      return baseAt(object, baseFlatten(paths, 1));
	    });

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties ? baseAssign(result, properties) : result;
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(args) {
	      args.push(undefined, assignInDefaults);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, mergeDefaults);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[iteratee(value, key, object)] = value;
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[key] = iteratee(value, key, object);
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with seven arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = baseRest(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      props = arrayMap(baseFlatten(props, 1), toKey);
	      return basePick(object, baseDifference(getAllKeysIn(object), props));
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = baseRest(function(object, props) {
	      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        object = undefined;
	        length = 1;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object) || isTypedArray(object);
	      iteratee = getIteratee(iteratee, 4);

	      if (accumulator == null) {
	        if (isArr || isObject(object)) {
	          var Ctor = object.constructor;
	          if (isArr) {
	            accumulator = isArray(object) ? new Ctor : [];
	          } else {
	            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	          }
	        } else {
	          accumulator = {};
	        }
	      }
	      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object ? baseValues(object, keys(object)) : [];
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in IE < 9, they can break out of
	     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the
	     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      // Chrome fails to trim leading <BOM> whitespace characters.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      string = toString(string).replace(reTrim, '');
	      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = baseClamp(toInteger(position), 0, string.length);
	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, assignInDefaults);

	      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = baseRest(function(object, methodNames) {
	      arrayEach(baseFlatten(methodNames, 1), function(key) {
	        key = toKey(key);
	        object[key] = bind(object[key], object);
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs ? pairs.length : 0,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, true));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, true));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }

	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }

	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }

	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }

	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(value));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;

	    if (iteratorSymbol) {
	      lodash.prototype[iteratorSymbol] = wrapperToIterator;
	    }
	    return lodash;
	  }

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;

	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(300)(module)))

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(372),
	  $ = __webpack_require__(374),
	  utils = __webpack_require__(371),
	  isTag = utils.isTag,
	  domEach = utils.domEach,
	  hasOwn = Object.prototype.hasOwnProperty,
	  camelCase = utils.camelCase,
	  cssCase = utils.cssCase,
	  rspace = /\s+/,
	  dataAttrPrefix = 'data-',

	  // Lookup table for coercing string data-* attributes to their corresponding
	  // JavaScript primitives
	  primitives = {
	    null: null,
	    true: true,
	    false: false
	  },

	  // Attributes that are booleans
	  rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	  // Matches strings that look like JSON objects or arrays
	  rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;


	var getAttr = function(elem, name) {
	  if (!elem || !isTag(elem)) return;

	  if (!elem.attribs) {
	    elem.attribs = {};
	  }

	  // Return the entire attribs object if no attribute specified
	  if (!name) {
	    return elem.attribs;
	  }

	  if (hasOwn.call(elem.attribs, name)) {
	    // Get the (decoded) attribute
	    return rboolean.test(name) ? name : elem.attribs[name];
	  }

	  // Mimic the DOM and return text content as value for `option's`
	  if (elem.name === 'option' && name === 'value') {
	    return $.text(elem.children);
	  }
	};

	var setAttr = function(el, name, value) {

	  if (value === null) {
	    removeAttribute(el, name);
	  } else {
	    el.attribs[name] = value+'';
	  }
	};

	exports.attr = function(name, value) {
	  // Set the value (with attr map support)
	  if (typeof name === 'object' || value !== undefined) {
	    if (typeof value === 'function') {
	      return domEach(this, function(i, el) {
	        setAttr(el, name, value.call(el, i, el.attribs[name]));
	      });
	    }
	    return domEach(this, function(i, el) {
	      if (!isTag(el)) return;

	      if (typeof name === 'object') {
	        _.each(name, function(value, name) {
	          setAttr(el, name, value);
	        });
	      } else {
	        setAttr(el, name, value);
	      }
	    });
	  }

	  return getAttr(this[0], name);
	};

	var getProp = function (el, name) {
	  return el.hasOwnProperty(name)
	      ? el[name]
	      : rboolean.test(name)
	          ? getAttr(el, name) !== undefined
	          : getAttr(el, name);
	};

	var setProp = function (el, name, value) {
	  el[name] = rboolean.test(name) ? !!value : value;
	};

	exports.prop = function (name, value) {
	  var i = 0,
	      property;

	  if (typeof name === 'string' && value === undefined) {

	    switch (name) {
	      case 'style':
	        property = this.css();

	        _.each(property, function (v, p) {
	          property[i++] = p;
	        });

	        property.length = i;

	        break;
	      case 'tagName':
	      case 'nodeName':
	        property = this[0].name.toUpperCase();
	        break;
	      default:
	        property = getProp(this[0], name);
	    }

	    return property;
	  }

	  if (typeof name === 'object' || value !== undefined) {

	    if (typeof value === 'function') {
	      return domEach(this, function(i, el) {
	        setProp(el, name, value.call(el, i, getProp(el, name)));
	      });
	    }

	    return domEach(this, function(i, el) {
	      if (!isTag(el)) return;

	      if (typeof name === 'object') {

	        _.each(name, function(val, name) {
	          setProp(el, name, val);
	        });

	      } else {
	        setProp(el, name, value);
	      }
	    });

	  }
	};

	var setData = function(el, name, value) {
	  if (!el.data) {
	    el.data = {};
	  }

	  if (typeof name === 'object') return _.extend(el.data, name);
	  if (typeof name === 'string' && value !== undefined) {
	    el.data[name] = value;
	  } else if (typeof name === 'object') {
	    _.exend(el.data, name);
	  }
	};

	// Read the specified attribute from the equivalent HTML5 `data-*` attribute,
	// and (if present) cache the value in the node's internal data store. If no
	// attribute name is specified, read *all* HTML5 `data-*` attributes in this
	// manner.
	var readData = function(el, name) {
	  var readAll = arguments.length === 1;
	  var domNames, domName, jsNames, jsName, value, idx, length;

	  if (readAll) {
	    domNames = Object.keys(el.attribs).filter(function(attrName) {
	      return attrName.slice(0, dataAttrPrefix.length) === dataAttrPrefix;
	    });
	    jsNames = domNames.map(function(domName) {
	      return camelCase(domName.slice(dataAttrPrefix.length));
	    });
	  } else {
	    domNames = [dataAttrPrefix + cssCase(name)];
	    jsNames = [name];
	  }

	  for (idx = 0, length = domNames.length; idx < length; ++idx) {
	    domName = domNames[idx];
	    jsName = jsNames[idx];
	    if (hasOwn.call(el.attribs, domName)) {
	      value = el.attribs[domName];

	      if (hasOwn.call(primitives, value)) {
	        value = primitives[value];
	      } else if (value === String(Number(value))) {
	        value = Number(value);
	      } else if (rbrace.test(value)) {
	        try {
	          value = JSON.parse(value);
	        } catch(e){ }
	      }

	      el.data[jsName] = value;
	    }
	  }

	  return readAll ? el.data : value;
	};

	exports.data = function(name, value) {
	  var elem = this[0];

	  if (!elem || !isTag(elem)) return;

	  if (!elem.data) {
	    elem.data = {};
	  }

	  // Return the entire data object if no data specified
	  if (!name) {
	    return readData(elem);
	  }

	  // Set the value (with attr map support)
	  if (typeof name === 'object' || value !== undefined) {
	    domEach(this, function(i, el) {
	      setData(el, name, value);
	    });
	    return this;
	  } else if (hasOwn.call(elem.data, name)) {
	    return elem.data[name];
	  }

	  return readData(elem, name);
	};

	/**
	 * Get the value of an element
	 */

	exports.val = function(value) {
	  var querying = arguments.length === 0,
	      element = this[0];

	  if(!element) return;

	  switch (element.name) {
	    case 'textarea':
	      return this.text(value);
	    case 'input':
	      switch (this.attr('type')) {
	        case 'radio':
	          if (querying) {
	            return this.attr('value');
	          } else {
	            this.attr('value', value);
	            return this;
	          }
	          break;
	        default:
	          return this.attr('value', value);
	      }
	      return;
	    case 'select':
	      var option = this.find('option:selected'),
	          returnValue;
	      if (option === undefined) return undefined;
	      if (!querying) {
	        if (!this.attr().hasOwnProperty('multiple') && typeof value == 'object') {
	          return this;
	        }
	        if (typeof value != 'object') {
	          value = [value];
	        }
	        this.find('option').removeAttr('selected');
	        for (var i = 0; i < value.length; i++) {
	          this.find('option[value="' + value[i] + '"]').attr('selected', '');
	        }
	        return this;
	      }
	      returnValue = option.attr('value');
	      if (this.attr().hasOwnProperty('multiple')) {
	        returnValue = [];
	        domEach(option, function(i, el) {
	          returnValue.push(getAttr(el, 'value'));
	        });
	      }
	      return returnValue;
	    case 'option':
	      if (!querying) {
	        this.attr('value', value);
	        return this;
	      }
	      return this.attr('value');
	  }
	};

	/**
	 * Remove an attribute
	 */

	var removeAttribute = function(elem, name) {
	  if (!elem.attribs || !hasOwn.call(elem.attribs, name))
	    return;

	  delete elem.attribs[name];
	};


	exports.removeAttr = function(name) {
	  domEach(this, function(i, elem) {
	    removeAttribute(elem, name);
	  });

	  return this;
	};

	exports.hasClass = function(className) {
	  return _.some(this, function(elem) {
	    var attrs = elem.attribs,
	        clazz = attrs && attrs['class'],
	        idx = -1,
	        end;

	    if (clazz) {
	      while ((idx = clazz.indexOf(className, idx+1)) > -1) {
	        end = idx + className.length;

	        if ((idx === 0 || rspace.test(clazz[idx-1]))
	            && (end === clazz.length || rspace.test(clazz[end]))) {
	          return true;
	        }
	      }
	    }
	  });
	};

	exports.addClass = function(value) {
	  // Support functions
	  if (typeof value === 'function') {
	    return domEach(this, function(i, el) {
	      var className = el.attribs['class'] || '';
	      exports.addClass.call([el], value.call(el, i, className));
	    });
	  }

	  // Return if no value or not a string or function
	  if (!value || typeof value !== 'string') return this;

	  var classNames = value.split(rspace),
	      numElements = this.length;


	  for (var i = 0; i < numElements; i++) {
	    // If selected element isn't a tag, move on
	    if (!isTag(this[i])) continue;

	    // If we don't already have classes
	    var className = getAttr(this[i], 'class'),
	        numClasses,
	        setClass;

	    if (!className) {
	      setAttr(this[i], 'class', classNames.join(' ').trim());
	    } else {
	      setClass = ' ' + className + ' ';
	      numClasses = classNames.length;

	      // Check if class already exists
	      for (var j = 0; j < numClasses; j++) {
	        var appendClass = classNames[j] + ' ';
	        if (setClass.indexOf(' ' + appendClass) < 0)
	          setClass += appendClass;
	      }

	      setAttr(this[i], 'class', setClass.trim());
	    }
	  }

	  return this;
	};

	var splitClass = function(className) {
	  return className ? className.trim().split(rspace) : [];
	};

	exports.removeClass = function(value) {
	  var classes,
	      numClasses,
	      removeAll;

	  // Handle if value is a function
	  if (typeof value === 'function') {
	    return domEach(this, function(i, el) {
	      exports.removeClass.call(
	        [el], value.call(el, i, el.attribs['class'] || '')
	      );
	    });
	  }

	  classes = splitClass(value);
	  numClasses = classes.length;
	  removeAll = arguments.length === 0;

	  return domEach(this, function(i, el) {
	    if (!isTag(el)) return;

	    if (removeAll) {
	      // Short circuit the remove all case as this is the nice one
	      el.attribs.class = '';
	    } else {
	      var elClasses = splitClass(el.attribs.class),
	          index,
	          changed;

	      for (var j = 0; j < numClasses; j++) {
	        index = elClasses.indexOf(classes[j]);

	        if (index >= 0) {
	          elClasses.splice(index, 1);
	          changed = true;

	          // We have to do another pass to ensure that there are not duplicate
	          // classes listed
	          j--;
	        }
	      }
	      if (changed) {
	        el.attribs.class = elClasses.join(' ');
	      }
	    }
	  });
	};

	exports.toggleClass = function(value, stateVal) {
	  // Support functions
	  if (typeof value === 'function') {
	    return domEach(this, function(i, el) {
	      exports.toggleClass.call(
	        [el],
	        value.call(el, i, el.attribs['class'] || '', stateVal),
	        stateVal
	      );
	    });
	  }

	  // Return if no value or not a string or function
	  if (!value || typeof value !== 'string') return this;

	  var classNames = value.split(rspace),
	    numClasses = classNames.length,
	    state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0,
	    numElements = this.length,
	    elementClasses,
	    index;

	  for (var i = 0; i < numElements; i++) {
	    // If selected element isn't a tag, move on
	    if (!isTag(this[i])) continue;

	    elementClasses = splitClass(this[i].attribs.class);

	    // Check if class already exists
	    for (var j = 0; j < numClasses; j++) {
	      // Check if the class name is currently defined
	      index = elementClasses.indexOf(classNames[j]);

	      // Add if stateValue === true or we are toggling and there is no value
	      if (state >= 0 && index < 0) {
	        elementClasses.push(classNames[j]);
	      } else if (state <= 0 && index >= 0) {
	        // Otherwise remove but only if the item exists
	        elementClasses.splice(index, 1);
	      }
	    }

	    this[i].attribs.class = elementClasses.join(' ');
	  }

	  return this;
	};

	exports.is = function (selector) {
	  if (selector) {
	    return this.filter(selector).length > 0;
	  }
	  return false;
	};



/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies
	 */

	var select = __webpack_require__(375),
	    parse = __webpack_require__(310),
	    serialize = __webpack_require__(355),
	    _ = __webpack_require__(372);

	/**
	 * $.load(str)
	 */

	exports.load = function(content, options) {
	  var Cheerio = __webpack_require__(309);

	  options = _.defaults(options || {}, Cheerio.prototype.options);

	  var root = parse(content, options);

	  var initialize = function(selector, context, r, opts) {
	    if (!(this instanceof initialize)) {
	      return new initialize(selector, context, r, opts);
	    }
	    opts = _.defaults(opts || {}, options);
	    return Cheerio.call(this, selector, context, r || root, opts);
	  };

	  // Ensure that selections created by the "loaded" `initialize` function are
	  // true Cheerio instances.
	  initialize.prototype = Object.create(Cheerio.prototype);
	  initialize.prototype.constructor = initialize;

	  // Mimic jQuery's prototype alias for plugin authors.
	  initialize.fn = initialize.prototype;

	  // Keep a reference to the top-level scope so we can chain methods that implicitly 
	  // resolve selectors; e.g. $("<span>").(".bar"), which otherwise loses ._root
	  initialize.prototype._originalRoot = root;

	  // Add in the static methods
	  _.merge(initialize, exports);

	  // Add in the root
	  initialize._root = root;
	  // store options
	  initialize._options = options;

	  return initialize;
	};

	/*
	* Helper function
	*/

	function render(that, dom, options) {
	  if (!dom) {
	    if (that._root && that._root.children) {
	      dom = that._root.children;
	    } else {
	      return '';
	    }
	  } else if (typeof dom === 'string') {
	    dom = select(dom, that._root, options);
	  }

	  return serialize(dom, options);
	}

	/**
	 * $.html([selector | dom], [options])
	 */

	exports.html = function(dom, options) {
	  var Cheerio = __webpack_require__(309);

	  // be flexible about parameters, sometimes we call html(),
	  // with options as only parameter
	  // check dom argument for dom element specific properties
	  // assume there is no 'length' or 'type' properties in the options object
	  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))
	  {
	    options = dom;
	    dom = undefined;
	  }

	  // sometimes $.html() used without preloading html
	  // so fallback non existing options to the default ones
	  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);

	  return render(this, dom, options);
	};

	/**
	 * $.xml([selector | dom])
	 */

	exports.xml = function(dom) {
	  var options = _.defaults({xmlMode: true}, this._options);

	  return render(this, dom, options);
	};

	/**
	 * $.text(dom)
	 */

	exports.text = function(elems) {
	  if (!elems) return '';

	  var ret = '',
	      len = elems.length,
	      elem;

	  for (var i = 0; i < len; i++) {
	    elem = elems[i];
	    if (elem.type === 'text') ret += elem.data;
	    else if (elem.children && elem.type !== 'comment') {
	      ret += exports.text(elem.children);
	    }
	  }

	  return ret;
	};

	/**
	 * $.parseHTML(data [, context ] [, keepScripts ])
	 * Parses a string into an array of DOM nodes. The `context` argument has no
	 * meaning for Cheerio, but it is maintained for API compatibility with jQuery.
	 */
	exports.parseHTML = function(data, context, keepScripts) {
	  var parsed;

	  if (!data || typeof data !== 'string') {
	    return null;
	  }

	  if (typeof context === 'boolean') {
	    keepScripts = context;
	  }

	  parsed = this.load(data);
	  if (!keepScripts) {
	    parsed('script').remove();
	  }

	  // The `children` array is used by Cheerio internally to group elements that
	  // share the same parents. When nodes created through `parseHTML` are
	  // inserted into previously-existing DOM structures, they will be removed
	  // from the `children` array. The results of `parseHTML` should remain
	  // constant across these operations, so a shallow copy should be returned.
	  return parsed.root()[0].children.slice();
	};

	/**
	 * $.root()
	 */
	exports.root = function() {
	  return this(this._root);
	};

	/**
	 * $.contains()
	 */
	exports.contains = function(container, contained) {

	  // According to the jQuery API, an element does not "contain" itself
	  if (contained === container) {
	    return false;
	  }

	  // Step up the descendants, stopping when the root element is reached
	  // (signaled by `.parent` returning a reference to the same object)
	  while (contained && contained !== contained.parent) {
	    contained = contained.parent;
	    if (contained === container) {
	      return true;
	    }
	  }

	  return false;
	};


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = CSSselect;

	var Pseudos       = __webpack_require__(376),
	    DomUtils      = __webpack_require__(377),
	    findOne       = DomUtils.findOne,
	    findAll       = DomUtils.findAll,
	    getChildren   = DomUtils.getChildren,
	    removeSubsets = DomUtils.removeSubsets,
	    falseFunc     = __webpack_require__(388).falseFunc,
	    compile       = __webpack_require__(390),
	    compileUnsafe = compile.compileUnsafe,
	    compileToken  = compile.compileToken;

	function getSelectorFunc(searchFunc){
		return function select(query, elems, options){
	        if(typeof query !== "function") query = compileUnsafe(query, options, elems);
	        if(!Array.isArray(elems)) elems = getChildren(elems);
			else elems = removeSubsets(elems);
			return searchFunc(query, elems);
		};
	}

	var selectAll = getSelectorFunc(function selectAll(query, elems){
		return (query === falseFunc || !elems || elems.length === 0) ? [] : findAll(query, elems);
	});

	var selectOne = getSelectorFunc(function selectOne(query, elems){
		return (query === falseFunc || !elems || elems.length === 0) ? null : findOne(query, elems);
	});

	function is(elem, query, options){
		return (typeof query === "function" ? query : compile(query, options))(elem);
	}

	/*
		the exported interface
	*/
	function CSSselect(query, elems, options){
		return selectAll(query, elems, options);
	}

	CSSselect.compile = compile;
	CSSselect.filters = Pseudos.filters;
	CSSselect.pseudos = Pseudos.pseudos;

	CSSselect.selectAll = selectAll;
	CSSselect.selectOne = selectOne;

	CSSselect.is = is;

	//legacy methods (might be removed)
	CSSselect.parse = compile;
	CSSselect.iterate = selectAll;

	//hooks
	CSSselect._compileUnsafe = compileUnsafe;
	CSSselect._compileToken = compileToken;


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	/*
		pseudo selectors

		---

		they are available in two forms:
		* filters called when the selector
		  is compiled and return a function
		  that needs to return next()
		* pseudos get called on execution
		  they need to return a boolean
	*/

	var DomUtils    = __webpack_require__(377),
	    isTag       = DomUtils.isTag,
	    getText     = DomUtils.getText,
	    getParent   = DomUtils.getParent,
	    getChildren = DomUtils.getChildren,
	    getSiblings = DomUtils.getSiblings,
	    hasAttrib   = DomUtils.hasAttrib,
	    getName     = DomUtils.getName,
	    getAttribute= DomUtils.getAttributeValue,
	    getNCheck   = __webpack_require__(385),
	    checkAttrib = __webpack_require__(389).rules.equals,
	    BaseFuncs   = __webpack_require__(388),
	    trueFunc    = BaseFuncs.trueFunc,
	    falseFunc   = BaseFuncs.falseFunc;

	//helper methods
	function getFirstElement(elems){
		for(var i = 0; elems && i < elems.length; i++){
			if(isTag(elems[i])) return elems[i];
		}
	}

	function getAttribFunc(name, value){
		var data = {name: name, value: value};
		return function attribFunc(next){
			return checkAttrib(next, data);
		};
	}

	function getChildFunc(next){
		return function(elem){
			return !!getParent(elem) && next(elem);
		};
	}

	var filters = {
		contains: function(next, text){
			return function contains(elem){
				return next(elem) && getText(elem).indexOf(text) >= 0;
			};
		},
		icontains: function(next, text){
			var itext = text.toLowerCase();
			return function icontains(elem){
				return next(elem) &&
					getText(elem).toLowerCase().indexOf(itext) >= 0;
			};
		},

		//location specific methods
		"nth-child": function(next, rule){
			var func = getNCheck(rule);

			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);

			return function nthChild(elem){
				var siblings = getSiblings(elem);

				for(var i = 0, pos = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						else pos++;
					}
				}

				return func(pos) && next(elem);
			};
		},
		"nth-last-child": function(next, rule){
			var func = getNCheck(rule);

			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);

			return function nthLastChild(elem){
				var siblings = getSiblings(elem);

				for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						else pos++;
					}
				}

				return func(pos) && next(elem);
			};
		},
		"nth-of-type": function(next, rule){
			var func = getNCheck(rule);

			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);

			return function nthOfType(elem){
				var siblings = getSiblings(elem);

				for(var pos = 0, i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(getName(siblings[i]) === getName(elem)) pos++;
					}
				}

				return func(pos) && next(elem);
			};
		},
		"nth-last-of-type": function(next, rule){
			var func = getNCheck(rule);

			if(func === falseFunc) return func;
			if(func === trueFunc)  return getChildFunc(next);

			return function nthLastOfType(elem){
				var siblings = getSiblings(elem);

				for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(getName(siblings[i]) === getName(elem)) pos++;
					}
				}

				return func(pos) && next(elem);
			};
		},

	    //TODO determine the actual root element
	    root: function(next){
	        return function(elem){
	            return !getParent(elem) && next(elem);
	        };
	    },

	    scope: function(next, rule, options, context){
	        if(!context || context.length === 0){
	            //equivalent to :root
	            return filters.root(next);
	        }

	        if(context.length === 1){
	            //NOTE: can't be unpacked, as :has uses this for side-effects
	            return function(elem){
	                return context[0] === elem && next(elem);
	            };
	        }

	        return function(elem){
	            return context.indexOf(elem) >= 0 && next(elem);
	        };
	    },

		//jQuery extensions (others follow as pseudos)
		checkbox: getAttribFunc("type", "checkbox"),
		file: getAttribFunc("type", "file"),
		password: getAttribFunc("type", "password"),
		radio: getAttribFunc("type", "radio"),
		reset: getAttribFunc("type", "reset"),
		image: getAttribFunc("type", "image"),
		submit: getAttribFunc("type", "submit")
	};

	//while filters are precompiled, pseudos get called when they are needed
	var pseudos = {
		empty: function(elem){
			return !getChildren(elem).some(function(elem){
				return isTag(elem) || elem.type === "text";
			});
		},

		"first-child": function(elem){
			return getFirstElement(getSiblings(elem)) === elem;
		},
		"last-child": function(elem){
			var siblings = getSiblings(elem);

			for(var i = siblings.length - 1; i >= 0; i--){
				if(siblings[i] === elem) return true;
				if(isTag(siblings[i])) break;
			}

			return false;
		},
		"first-of-type": function(elem){
			var siblings = getSiblings(elem);

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return true;
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}

			return false;
		},
		"last-of-type": function(elem){
			var siblings = getSiblings(elem);

			for(var i = siblings.length-1; i >= 0; i--){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return true;
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}

			return false;
		},
		"only-of-type": function(elem){
			var siblings = getSiblings(elem);

			for(var i = 0, j = siblings.length; i < j; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) continue;
					if(getName(siblings[i]) === getName(elem)) return false;
				}
			}

			return true;
		},
		"only-child": function(elem){
			var siblings = getSiblings(elem);

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i]) && siblings[i] !== elem) return false;
			}

			return true;
		},

		//:matches(a, area, link)[href]
		link: function(elem){
			return hasAttrib(elem, "href");
		},
		visited: falseFunc, //seems to be a valid implementation
		//TODO: :any-link once the name is finalized (as an alias of :link)

		//forms
		//to consider: :target

		//:matches([selected], select:not([multiple]):not(> option[selected]) > option:first-of-type)
		selected: function(elem){
			if(hasAttrib(elem, "selected")) return true;
			else if(getName(elem) !== "option") return false;

			//the first <option> in a <select> is also selected
			var parent = getParent(elem);

			if(
				!parent ||
				getName(parent) !== "select" ||
				hasAttrib(parent, "multiple")
			) return false;

			var siblings = getChildren(parent),
				sawElem  = false;

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem){
						sawElem = true;
					} else if(!sawElem){
						return false;
					} else if(hasAttrib(siblings[i], "selected")){
						return false;
					}
				}
			}

			return sawElem;
		},
		//https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements
		//:matches(
		//  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],
		//  optgroup[disabled] > option),
		// fieldset[disabled] * //TODO not child of first <legend>
		//)
		disabled: function(elem){
			return hasAttrib(elem, "disabled");
		},
		enabled: function(elem){
			return !hasAttrib(elem, "disabled");
		},
		//:matches(:matches(:radio, :checkbox)[checked], :selected) (TODO menuitem)
		checked: function(elem){
			return hasAttrib(elem, "checked") || pseudos.selected(elem);
		},
		//:matches(input, select, textarea)[required]
		required: function(elem){
			return hasAttrib(elem, "required");
		},
		//:matches(input, select, textarea):not([required])
		optional: function(elem){
			return !hasAttrib(elem, "required");
		},

		//jQuery extensions

		//:not(:empty)
		parent: function(elem){
			return !pseudos.empty(elem);
		},
		//:matches(h1, h2, h3, h4, h5, h6)
		header: function(elem){
			var name = getName(elem);
			return name === "h1" ||
			       name === "h2" ||
			       name === "h3" ||
			       name === "h4" ||
			       name === "h5" ||
			       name === "h6";
		},

		//:matches(button, input[type=button])
		button: function(elem){
			var name = getName(elem);
			return name === "button" ||
			       name === "input" &&
			       getAttribute(elem, "type") === "button";
		},
		//:matches(input, textarea, select, button)
		input: function(elem){
			var name = getName(elem);
			return name === "input" ||
			       name === "textarea" ||
			       name === "select" ||
			       name === "button";
		},
		//input:matches(:not([type!='']), [type='text' i])
		text: function(elem){
			var attr;
			return getName(elem) === "input" && (
				!(attr = getAttribute(elem, "type")) ||
				attr.toLowerCase() === "text"
			);
		}
	};

	function verifyArgs(func, name, subselect){
		if(subselect === null){
			if(func.length > 1 && name !== "scope"){
				throw new SyntaxError("pseudo-selector :" + name + " requires an argument");
			}
		} else {
			if(func.length === 1){
				throw new SyntaxError("pseudo-selector :" + name + " doesn't have any arguments");
			}
		}
	}

	//FIXME this feels hacky
	var re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;

	module.exports = {
		compile: function(next, data, options, context){
			var name = data.name,
				subselect = data.data;

			if(options && options.strict && !re_CSS3.test(name)){
				throw SyntaxError(":" + name + " isn't part of CSS3");
			}

			if(typeof filters[name] === "function"){
				verifyArgs(filters[name], name,  subselect);
				return filters[name](next, subselect, options, context);
			} else if(typeof pseudos[name] === "function"){
				var func = pseudos[name];
				verifyArgs(func, name, subselect);

				if(next === trueFunc) return func;

				return function pseudoArgs(elem){
					return func(elem, subselect) && next(elem);
				};
			} else {
				throw new SyntaxError("unmatched pseudo-class :" + name);
			}
		},
		filters: filters,
		pseudos: pseudos
	};


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils = module.exports;

	[
		__webpack_require__(378),
		__webpack_require__(380),
		__webpack_require__(381),
		__webpack_require__(382),
		__webpack_require__(383),
		__webpack_require__(384)
	].forEach(function(ext){
		Object.keys(ext).forEach(function(key){
			DomUtils[key] = ext[key].bind(DomUtils);
		});
	});


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(379),
	    getOuterHTML = __webpack_require__(355),
	    isTag = ElementType.isTag;

	module.exports = {
		getInnerHTML: getInnerHTML,
		getOuterHTML: getOuterHTML,
		getText: getText
	};

	function getInnerHTML(elem, opts){
		return elem.children ? elem.children.map(function(elem){
			return getOuterHTML(elem, opts);
		}).join("") : "";
	}

	function getText(elem){
		if(Array.isArray(elem)) return elem.map(getText).join("");
		if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
		if(elem.type === ElementType.Text) return elem.data;
		return "";
	}


/***/ },
/* 379 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>
		Doctype: "doctype",

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};


/***/ },
/* 380 */
/***/ function(module, exports) {

	var getChildren = exports.getChildren = function(elem){
		return elem.children;
	};

	var getParent = exports.getParent = function(elem){
		return elem.parent;
	};

	exports.getSiblings = function(elem){
		var parent = getParent(elem);
		return parent ? getChildren(parent) : [elem];
	};

	exports.getAttributeValue = function(elem, name){
		return elem.attribs && elem.attribs[name];
	};

	exports.hasAttrib = function(elem, name){
		return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
	};

	exports.getName = function(elem){
		return elem.name;
	};


/***/ },
/* 381 */
/***/ function(module, exports) {

	exports.removeElement = function(elem){
		if(elem.prev) elem.prev.next = elem.next;
		if(elem.next) elem.next.prev = elem.prev;

		if(elem.parent){
			var childs = elem.parent.children;
			childs.splice(childs.lastIndexOf(elem), 1);
		}
	};

	exports.replaceElement = function(elem, replacement){
		var prev = replacement.prev = elem.prev;
		if(prev){
			prev.next = replacement;
		}

		var next = replacement.next = elem.next;
		if(next){
			next.prev = replacement;
		}

		var parent = replacement.parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs[childs.lastIndexOf(elem)] = replacement;
		}
	};

	exports.appendChild = function(elem, child){
		child.parent = elem;

		if(elem.children.push(child) !== 1){
			var sibling = elem.children[elem.children.length - 2];
			sibling.next = child;
			child.prev = sibling;
			child.next = null;
		}
	};

	exports.append = function(elem, next){
		var parent = elem.parent,
			currNext = elem.next;

		next.next = currNext;
		next.prev = elem;
		elem.next = next;
		next.parent = parent;

		if(currNext){
			currNext.prev = next;
			if(parent){
				var childs = parent.children;
				childs.splice(childs.lastIndexOf(currNext), 0, next);
			}
		} else if(parent){
			parent.children.push(next);
		}
	};

	exports.prepend = function(elem, prev){
		var parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(elem), 0, prev);
		}

		if(elem.prev){
			elem.prev.next = prev;
		}
		
		prev.parent = parent;
		prev.prev = elem.prev;
		prev.next = elem;
		elem.prev = prev;
	};




/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var isTag = __webpack_require__(379).isTag;

	module.exports = {
		filter: filter,
		find: find,
		findOneChild: findOneChild,
		findOne: findOne,
		existsOne: existsOne,
		findAll: findAll
	};

	function filter(test, element, recurse, limit){
		if(!Array.isArray(element)) element = [element];

		if(typeof limit !== "number" || !isFinite(limit)){
			limit = Infinity;
		}
		return find(test, element, recurse !== false, limit);
	}

	function find(test, elems, recurse, limit){
		var result = [], childs;

		for(var i = 0, j = elems.length; i < j; i++){
			if(test(elems[i])){
				result.push(elems[i]);
				if(--limit <= 0) break;
			}

			childs = elems[i].children;
			if(recurse && childs && childs.length > 0){
				childs = find(test, childs, recurse, limit);
				result = result.concat(childs);
				limit -= childs.length;
				if(limit <= 0) break;
			}
		}

		return result;
	}

	function findOneChild(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(test(elems[i])) return elems[i];
		}

		return null;
	}

	function findOne(test, elems){
		var elem = null;

		for(var i = 0, l = elems.length; i < l && !elem; i++){
			if(!isTag(elems[i])){
				continue;
			} else if(test(elems[i])){
				elem = elems[i];
			} else if(elems[i].children.length > 0){
				elem = findOne(test, elems[i].children);
			}
		}

		return elem;
	}

	function existsOne(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(
				isTag(elems[i]) && (
					test(elems[i]) || (
						elems[i].children.length > 0 &&
						existsOne(test, elems[i].children)
					)
				)
			){
				return true;
			}
		}

		return false;
	}

	function findAll(test, elems){
		var result = [];
		for(var i = 0, j = elems.length; i < j; i++){
			if(!isTag(elems[i])) continue;
			if(test(elems[i])) result.push(elems[i]);

			if(elems[i].children.length > 0){
				result = result.concat(findAll(test, elems[i].children));
			}
		}
		return result;
	}


/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(379);
	var isTag = exports.isTag = ElementType.isTag;

	exports.testElement = function(options, element){
		for(var key in options){
			if(!options.hasOwnProperty(key));
			else if(key === "tag_name"){
				if(!isTag(element) || !options.tag_name(element.name)){
					return false;
				}
			} else if(key === "tag_type"){
				if(!options.tag_type(element.type)) return false;
			} else if(key === "tag_contains"){
				if(isTag(element) || !options.tag_contains(element.data)){
					return false;
				}
			} else if(!element.attribs || !options[key](element.attribs[key])){
				return false;
			}
		}
		return true;
	};

	var Checks = {
		tag_name: function(name){
			if(typeof name === "function"){
				return function(elem){ return isTag(elem) && name(elem.name); };
			} else if(name === "*"){
				return isTag;
			} else {
				return function(elem){ return isTag(elem) && elem.name === name; };
			}
		},
		tag_type: function(type){
			if(typeof type === "function"){
				return function(elem){ return type(elem.type); };
			} else {
				return function(elem){ return elem.type === type; };
			}
		},
		tag_contains: function(data){
			if(typeof data === "function"){
				return function(elem){ return !isTag(elem) && data(elem.data); };
			} else {
				return function(elem){ return !isTag(elem) && elem.data === data; };
			}
		}
	};

	function getAttribCheck(attrib, value){
		if(typeof value === "function"){
			return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
		} else {
			return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
		}
	}

	function combineFuncs(a, b){
		return function(elem){
			return a(elem) || b(elem);
		};
	}

	exports.getElements = function(options, element, recurse, limit){
		var funcs = Object.keys(options).map(function(key){
			var value = options[key];
			return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
		});

		return funcs.length === 0 ? [] : this.filter(
			funcs.reduce(combineFuncs),
			element, recurse, limit
		);
	};

	exports.getElementById = function(id, element, recurse){
		if(!Array.isArray(element)) element = [element];
		return this.findOne(getAttribCheck("id", id), element, recurse !== false);
	};

	exports.getElementsByTagName = function(name, element, recurse, limit){
		return this.filter(Checks.tag_name(name), element, recurse, limit);
	};

	exports.getElementsByTagType = function(type, element, recurse, limit){
		return this.filter(Checks.tag_type(type), element, recurse, limit);
	};


/***/ },
/* 384 */
/***/ function(module, exports) {

	// removeSubsets
	// Given an array of nodes, remove any member that is contained by another.
	exports.removeSubsets = function(nodes) {
		var idx = nodes.length, node, ancestor, replace;

		// Check if each node (or one of its ancestors) is already contained in the
		// array.
		while (--idx > -1) {
			node = ancestor = nodes[idx];

			// Temporarily remove the node under consideration
			nodes[idx] = null;
			replace = true;

			while (ancestor) {
				if (nodes.indexOf(ancestor) > -1) {
					replace = false;
					nodes.splice(idx, 1);
					break;
				}
				ancestor = ancestor.parent;
			}

			// If the node has been found to be unique, re-insert it.
			if (replace) {
				nodes[idx] = node;
			}
		}

		return nodes;
	};

	// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	var POSITION = {
		DISCONNECTED: 1,
		PRECEDING: 2,
		FOLLOWING: 4,
		CONTAINS: 8,
		CONTAINED_BY: 16
	};

	// Compare the position of one node against another node in any other document.
	// The return value is a bitmask with the following values:
	//
	// document order:
	// > There is an ordering, document order, defined on all the nodes in the
	// > document corresponding to the order in which the first character of the
	// > XML representation of each node occurs in the XML representation of the
	// > document after expansion of general entities. Thus, the document element
	// > node will be the first node. Element nodes occur before their children.
	// > Thus, document order orders element nodes in order of the occurrence of
	// > their start-tag in the XML (after expansion of entities). The attribute
	// > nodes of an element occur after the element and before its children. The
	// > relative order of attribute nodes is implementation-dependent./
	// Source:
	// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
	//
	// @argument {Node} nodaA The first node to use in the comparison
	// @argument {Node} nodeB The second node to use in the comparison
	//
	// @return {Number} A bitmask describing the input nodes' relative position.
	//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
	//         a description of these values.
	var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
		var aParents = [];
		var bParents = [];
		var current, sharedParent, siblings, aSibling, bSibling, idx;

		if (nodeA === nodeB) {
			return 0;
		}

		current = nodeA;
		while (current) {
			aParents.unshift(current);
			current = current.parent;
		}
		current = nodeB;
		while (current) {
			bParents.unshift(current);
			current = current.parent;
		}

		idx = 0;
		while (aParents[idx] === bParents[idx]) {
			idx++;
		}

		if (idx === 0) {
			return POSITION.DISCONNECTED;
		}

		sharedParent = aParents[idx - 1];
		siblings = sharedParent.children;
		aSibling = aParents[idx];
		bSibling = bParents[idx];

		if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
			if (sharedParent === nodeB) {
				return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
			}
			return POSITION.FOLLOWING;
		} else {
			if (sharedParent === nodeA) {
				return POSITION.PRECEDING | POSITION.CONTAINS;
			}
			return POSITION.PRECEDING;
		}
	};

	// Sort an array of nodes based on their relative position in the document and
	// remove any duplicate nodes. If the array contains nodes that do not belong
	// to the same document, sort order is unspecified.
	//
	// @argument {Array} nodes Array of DOM nodes
	//
	// @returns {Array} collection of unique nodes, sorted in document order
	exports.uniqueSort = function(nodes) {
		var idx = nodes.length, node, position;

		nodes = nodes.slice();

		while (--idx > -1) {
			node = nodes[idx];
			position = nodes.indexOf(node);
			if (position > -1 && position < idx) {
				nodes.splice(idx, 1);
			}
		}
		nodes.sort(function(a, b) {
			var relative = comparePos(a, b);
			if (relative & POSITION.PRECEDING) {
				return -1;
			} else if (relative & POSITION.FOLLOWING) {
				return 1;
			}
			return 0;
		});

		return nodes;
	};


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(386),
	    compile = __webpack_require__(387);

	module.exports = function nthCheck(formula){
		return compile(parse(formula));
	};

	module.exports.parse = parse;
	module.exports.compile = compile;

/***/ },
/* 386 */
/***/ function(module, exports) {

	module.exports = parse;

	//following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo

	//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
	var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;

	/*
		parses a nth-check formula, returns an array of two numbers
	*/
	function parse(formula){
		formula = formula.trim().toLowerCase();

		if(formula === "even"){
			return [2, 0];
		} else if(formula === "odd"){
			return [2, 1];
		} else {
			var parsed = formula.match(re_nthElement);

			if(!parsed){
				throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
			}

			var a;

			if(parsed[1]){
				a = parseInt(parsed[1], 10);
				if(isNaN(a)){
					if(parsed[1].charAt(0) === "-") a = -1;
					else a = 1;
				}
			} else a = 0;

			return [
				a,
				parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0
			];
		}
	}


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = compile;

	var BaseFuncs = __webpack_require__(388),
	    trueFunc  = BaseFuncs.trueFunc,
	    falseFunc = BaseFuncs.falseFunc;

	/*
		returns a function that checks if an elements index matches the given rule
		highly optimized to return the fastest solution
	*/
	function compile(parsed){
		var a = parsed[0],
		    b = parsed[1] - 1;

		//when b <= 0, a*n won't be possible for any matches when a < 0
		//besides, the specification says that no element is matched when a and b are 0
		if(b < 0 && a <= 0) return falseFunc;

		//when a is in the range -1..1, it matches any element (so only b is checked)
		if(a ===-1) return function(pos){ return pos <= b; };
		if(a === 0) return function(pos){ return pos === b; };
		//when b <= 0 and a === 1, they match any element
		if(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };

		//when a > 0, modulo can be used to check if there is a match
		var bMod = b % a;
		if(bMod < 0) bMod += a;

		if(a > 1){
			return function(pos){
				return pos >= b && pos % a === bMod;
			};
		}

		a *= -1; //make `a` positive

		return function(pos){
			return pos <= b && pos % a === bMod;
		};
	}

/***/ },
/* 388 */
/***/ function(module, exports) {

	module.exports = {
		trueFunc: function trueFunc(){
			return true;
		},
		falseFunc: function falseFunc(){
			return false;
		}
	};

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils  = __webpack_require__(377),
	    hasAttrib = DomUtils.hasAttrib,
	    getAttributeValue = DomUtils.getAttributeValue,
	    falseFunc = __webpack_require__(388).falseFunc;

	//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469
	var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;

	/*
		attribute selectors
	*/

	var attributeRules = {
		__proto__: null,
		equals: function(next, data){
			var name  = data.name,
			    value = data.value;

			if(data.ignoreCase){
				value = value.toLowerCase();

				return function equalsIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.toLowerCase() === value && next(elem);
				};
			}

			return function equals(elem){
				return getAttributeValue(elem, name) === value && next(elem);
			};
		},
		hyphen: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len = value.length;

			if(data.ignoreCase){
				value = value.toLowerCase();

				return function hyphenIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null &&
							(attr.length === len || attr.charAt(len) === "-") &&
							attr.substr(0, len).toLowerCase() === value &&
							next(elem);
				};
			}

			return function hyphen(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null &&
						attr.substr(0, len) === value &&
						(attr.length === len || attr.charAt(len) === "-") &&
						next(elem);
			};
		},
		element: function(next, data){
			var name = data.name,
			    value = data.value;

			if(/\s/.test(value)){
				return falseFunc;
			}

			value = value.replace(reChars, "\\$&");

			var pattern = "(?:^|\\s)" + value + "(?:$|\\s)",
			    flags = data.ignoreCase ? "i" : "",
			    regex = new RegExp(pattern, flags);

			return function element(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && regex.test(attr) && next(elem);
			};
		},
		exists: function(next, data){
			var name = data.name;
			return function exists(elem){
				return hasAttrib(elem, name) && next(elem);
			};
		},
		start: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len = value.length;

			if(len === 0){
				return falseFunc;
			}
			
			if(data.ignoreCase){
				value = value.toLowerCase();

				return function startIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);
				};
			}

			return function start(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(0, len) === value && next(elem);
			};
		},
		end: function(next, data){
			var name  = data.name,
			    value = data.value,
			    len   = -value.length;

			if(len === 0){
				return falseFunc;
			}

			if(data.ignoreCase){
				value = value.toLowerCase();

				return function endIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.substr(len).toLowerCase() === value && next(elem);
				};
			}

			return function end(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(len) === value && next(elem);
			};
		},
		any: function(next, data){
			var name  = data.name,
			    value = data.value;

			if(value === ""){
				return falseFunc;
			}

			if(data.ignoreCase){
				var regex = new RegExp(value.replace(reChars, "\\$&"), "i");

				return function anyIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && regex.test(attr) && next(elem);
				};
			}

			return function any(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.indexOf(value) >= 0 && next(elem);
			};
		},
		not: function(next, data){
			var name  = data.name,
			    value = data.value;

			if(value === ""){
				return function notEmpty(elem){
					return !!getAttributeValue(elem, name) && next(elem);
				};
			} else if(data.ignoreCase){
				value = value.toLowerCase();

				return function notIC(elem){
					var attr = getAttributeValue(elem, name);
					return attr != null && attr.toLowerCase() !== value && next(elem);
				};
			}

			return function not(elem){
				return getAttributeValue(elem, name) !== value && next(elem);
			};
		}
	};

	module.exports = {
		compile: function(next, data, options){
			if(options && options.strict && (
				data.ignoreCase || data.action === "not"
			)) throw SyntaxError("Unsupported attribute selector");
			return attributeRules[data.action](next, data);
		},
		rules: attributeRules
	};


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	/*
		compiles a selector to an executable function
	*/

	module.exports = compile;
	module.exports.compileUnsafe = compileUnsafe;
	module.exports.compileToken = compileToken;

	var parse       = __webpack_require__(391),
	    DomUtils    = __webpack_require__(377),
	    isTag       = DomUtils.isTag,
	    Rules       = __webpack_require__(392),
	    sortRules   = __webpack_require__(393),
	    BaseFuncs   = __webpack_require__(388),
	    trueFunc    = BaseFuncs.trueFunc,
	    falseFunc   = BaseFuncs.falseFunc,
	    procedure   = __webpack_require__(394);

	function compile(selector, options, context){
		var next = compileUnsafe(selector, options, context);
		return wrap(next);
	}

	function wrap(next){
		return function base(elem){
			return isTag(elem) && next(elem);
		};
	}

	function compileUnsafe(selector, options, context){
		var token = parse(selector, options);
		return compileToken(token, options, context);
	}

	function includesScopePseudo(t){
	    return t.type === "pseudo" && (
	        t.name === "scope" || (
	            Array.isArray(t.data) &&
	            t.data.some(function(data){
	                return data.some(includesScopePseudo);
	            })
	        )
	    );
	}

	var DESCENDANT_TOKEN = {type: "descendant"},
	    SCOPE_TOKEN = {type: "pseudo", name: "scope"},
	    PLACEHOLDER_ELEMENT = {},
	    getParent = DomUtils.getParent;

	//CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector
	//http://www.w3.org/TR/selectors4/#absolutizing
	function absolutize(token, context){
	    //TODO better check if context is document
	    var hasContext = !!context && !!context.length && context.every(function(e){
	        return e === PLACEHOLDER_ELEMENT || !!getParent(e);
	    });


	    token.forEach(function(t){
	        if(t.length > 0 && isTraversal(t[0]) && t[0].type !== "descendant"){
	            //don't return in else branch
	        } else if(hasContext && !includesScopePseudo(t)){
	            t.unshift(DESCENDANT_TOKEN);
	        } else {
	            return;
	        }

	        t.unshift(SCOPE_TOKEN);
	    });
	}

	function compileToken(token, options, context){
	    token = token.filter(function(t){ return t.length > 0; });

		token.forEach(sortRules);

		var isArrayContext = Array.isArray(context);

	    context = (options && options.context) || context;

	    if(context && !isArrayContext) context = [context];

	    absolutize(token, context);

		return token
			.map(function(rules){ return compileRules(rules, options, context, isArrayContext); })
			.reduce(reduceRules, falseFunc);
	}

	function isTraversal(t){
		return procedure[t.type] < 0;
	}

	function compileRules(rules, options, context, isArrayContext){
		var acceptSelf = (isArrayContext && rules[0].name === "scope" && rules[1].type === "descendant");
		return rules.reduce(function(func, rule, index){
			if(func === falseFunc) return func;
			return Rules[rule.type](func, rule, options, context, acceptSelf && index === 1);
		}, options && options.rootFunc || trueFunc);
	}

	function reduceRules(a, b){
		if(b === falseFunc || a === trueFunc){
			return a;
		}
		if(a === falseFunc || b === trueFunc){
			return b;
		}

		return function combine(elem){
			return a(elem) || b(elem);
		};
	}

	//:not, :has and :matches have to compile selectors
	//doing this in lib/pseudos.js would lead to circular dependencies,
	//so we add them here

	var Pseudos     = __webpack_require__(376),
	    filters     = Pseudos.filters,
	    existsOne   = DomUtils.existsOne,
	    isTag       = DomUtils.isTag,
	    getChildren = DomUtils.getChildren;


	function containsTraversal(t){
		return t.some(isTraversal);
	}

	filters.not = function(next, token, options, context){
		var opts = {
		    	xmlMode: !!(options && options.xmlMode),
		    	strict: !!(options && options.strict)
		    };

		if(opts.strict){
			if(token.length > 1 || token.some(containsTraversal)){
				throw new SyntaxError("complex selectors in :not aren't allowed in strict mode");
			}
		}

	    var func = compileToken(token, opts, context);

		if(func === falseFunc) return next;
		if(func === trueFunc)  return falseFunc;

		return function(elem){
			return !func(elem) && next(elem);
		};
	};

	filters.has = function(next, token, options){
		var opts = {
			xmlMode: !!(options && options.xmlMode),
			strict: !!(options && options.strict)
		};

	    //FIXME: Uses an array as a pointer to the current element (side effects)
	    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;

		var func = compileToken(token, opts, context);

		if(func === falseFunc) return falseFunc;
		if(func === trueFunc)  return function(elem){
				return getChildren(elem).some(isTag) && next(elem);
			};

		func = wrap(func);

	    if(context){
	        return function has(elem){
			return next(elem) && (
	                (context[0] = elem), existsOne(func, getChildren(elem))
	            );
		};
	    }

	    return function has(elem){
			return next(elem) && existsOne(func, getChildren(elem));
		};
	};

	filters.matches = function(next, token, options, context){
		var opts = {
			xmlMode: !!(options && options.xmlMode),
			strict: !!(options && options.strict),
			rootFunc: next
		};

		return compileToken(token, opts, context);
	};


/***/ },
/* 391 */
/***/ function(module, exports) {

	"use strict";

	module.exports = parse;

	var re_name = /^(?:\\.|[\w\-\u00c0-\uFFFF])+/,
	    re_escape = /\\([\da-f]{1,6}\s?|(\s)|.)/ig,
	    //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87
	    re_attr = /^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])(.*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/;

	var actionTypes = {
		__proto__: null,
		"undefined": "exists",
		"":  "equals",
		"~": "element",
		"^": "start",
		"$": "end",
		"*": "any",
		"!": "not",
		"|": "hyphen"
	};

	var simpleSelectors = {
		__proto__: null,
		">": "child",
		"<": "parent",
		"~": "sibling",
		"+": "adjacent"
	};

	var attribSelectors = {
		__proto__: null,
		"#": ["id", "equals"],
		".": ["class", "element"]
	};

	//pseudos, whose data-property is parsed as well
	var unpackPseudos = {
		__proto__: null,
		"has": true,
		"not": true,
		"matches": true
	};

	var stripQuotesFromPseudos = {
		__proto__: null,
		"contains": true,
		"icontains": true
	};

	var quotes = {
		__proto__: null,
		"\"": true,
		"'": true
	};

	//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139
	function funescape( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			// BMP codepoint
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	}

	function unescapeCSS(str){
		return str.replace(re_escape, funescape);
	}

	function isWhitespace(c){
		return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}

	function parse(selector, options){
		var subselects = [];

		selector = parseSelector(subselects, selector + "", options);

		if(selector !== ""){
			throw new SyntaxError("Unmatched selector: " + selector);
		}

		return subselects;
	}

	function parseSelector(subselects, selector, options){
		var tokens = [],
			sawWS = false,
			data, firstChar, name, quot;

		function getName(){
			var sub = selector.match(re_name)[0];
			selector = selector.substr(sub.length);
			return unescapeCSS(sub);
		}

		function stripWhitespace(start){
			while(isWhitespace(selector.charAt(start))) start++;
			selector = selector.substr(start);
		}

		stripWhitespace(0);

		while(selector !== ""){
			firstChar = selector.charAt(0);

			if(isWhitespace(firstChar)){
				sawWS = true;
				stripWhitespace(1);
			} else if(firstChar in simpleSelectors){
				tokens.push({type: simpleSelectors[firstChar]});
				sawWS = false;

				stripWhitespace(1);
			} else if(firstChar === ","){
				if(tokens.length === 0){
					throw new SyntaxError("empty sub-selector");
				}
				subselects.push(tokens);
				tokens = [];
				sawWS = false;
				stripWhitespace(1);
			} else {
				if(sawWS){
					if(tokens.length > 0){
						tokens.push({type: "descendant"});
					}
					sawWS = false;
				}

				if(firstChar === "*"){
					selector = selector.substr(1);
					tokens.push({type: "universal"});
				} else if(firstChar in attribSelectors){
					selector = selector.substr(1);
					tokens.push({
						type: "attribute",
						name: attribSelectors[firstChar][0],
						action: attribSelectors[firstChar][1],
						value: getName(),
						ignoreCase: false
					});
				} else if(firstChar === "["){
					selector = selector.substr(1);
					data = selector.match(re_attr);
					if(!data){
						throw new SyntaxError("Malformed attribute selector: " + selector);
					}
					selector = selector.substr(data[0].length);
					name = unescapeCSS(data[1]);

					if(
						!options || (
							"lowerCaseAttributeNames" in options ?
								options.lowerCaseAttributeNames :
								!options.xmlMode
						)
					){
						name = name.toLowerCase();
					}

					tokens.push({
						type: "attribute",
						name: name,
						action: actionTypes[data[2]],
						value: unescapeCSS(data[4] || data[5] || ""),
						ignoreCase: !!data[6]
					});

				} else if(firstChar === ":"){
					if(selector.charAt(1) === ":"){
						selector = selector.substr(2);
						tokens.push({type: "pseudo-element", name: getName().toLowerCase()});
						continue;
					}

					selector = selector.substr(1);

					name = getName().toLowerCase();
					data = null;

					if(selector.charAt(0) === "("){
						if(name in unpackPseudos){
							quot = selector.charAt(1);
							var quoted = quot in quotes;

							selector = selector.substr(quoted + 1);

							data = [];
							selector = parseSelector(data, selector, options);

							if(quoted){
								if(selector.charAt(0) !== quot){
									throw new SyntaxError("unmatched quotes in :" + name);
								} else {
									selector = selector.substr(1);
								}
							}

							if(selector.charAt(0) !== ")"){
								throw new SyntaxError("missing closing parenthesis in :" + name + " " + selector);
							}

							selector = selector.substr(1);
						} else {
							var pos = 1, counter = 1;

							for(; counter > 0 && pos < selector.length; pos++){
								if(selector.charAt(pos) === "(") counter++;
								else if(selector.charAt(pos) === ")") counter--;
							}

							if(counter){
								throw new SyntaxError("parenthesis not matched");
							}

							data = selector.substr(1, pos - 2);
							selector = selector.substr(pos);

							if(name in stripQuotesFromPseudos){
								quot = data.charAt(0);

								if(quot === data.slice(-1) && quot in quotes){
									data = data.slice(1, -1);
								}

								data = unescapeCSS(data);
							}
						}
					}

					tokens.push({type: "pseudo", name: name, data: data});
				} else if(re_name.test(selector)){
					name = getName();

					if(!options || ("lowerCaseTags" in options ? options.lowerCaseTags : !options.xmlMode)){
						name = name.toLowerCase();
					}

					tokens.push({type: "tag", name: name});
				} else {
					if(tokens.length && tokens[tokens.length - 1].type === "descendant"){
						tokens.pop();
					}
					addToken(subselects, tokens);
					return selector;
				}
			}
		}

		addToken(subselects, tokens);

		return selector;
	}

	function addToken(subselects, tokens){
		if(subselects.length > 0 && tokens.length === 0){
			throw new SyntaxError("empty sub-selector");
		}

		subselects.push(tokens);
	}


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils    = __webpack_require__(377),
	    isTag       = DomUtils.isTag,
	    getParent   = DomUtils.getParent,
	    getChildren = DomUtils.getChildren,
	    getSiblings = DomUtils.getSiblings,
	    getName     = DomUtils.getName;

	/*
		all available rules
	*/
	module.exports = {
		__proto__: null,

		attribute: __webpack_require__(389).compile,
		pseudo: __webpack_require__(376).compile,

		//tags
		tag: function(next, data){
			var name = data.name;
			return function tag(elem){
				return getName(elem) === name && next(elem);
			};
		},

		//traversal
		descendant: function(next, rule, options, context, acceptSelf){
			return function descendant(elem){

				if (acceptSelf && next(elem)) return true;

				var found = false;

				while(!found && (elem = getParent(elem))){
					found = next(elem);
				}

				return found;
			};
		},
		parent: function(next, data, options){
			if(options && options.strict) throw SyntaxError("Parent selector isn't part of CSS3");

			return function parent(elem){
				return getChildren(elem).some(test);
			};

			function test(elem){
				return isTag(elem) && next(elem);
			}
		},
		child: function(next){
			return function child(elem){
				var parent = getParent(elem);
				return !!parent && next(parent);
			};
		},
		sibling: function(next){
			return function sibling(elem){
				var siblings = getSiblings(elem);

				for(var i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						if(next(siblings[i])) return true;
					}
				}

				return false;
			};
		},
		adjacent: function(next){
			return function adjacent(elem){
				var siblings = getSiblings(elem),
				    lastElement;

				for(var i = 0; i < siblings.length; i++){
					if(isTag(siblings[i])){
						if(siblings[i] === elem) break;
						lastElement = siblings[i];
					}
				}

				return !!lastElement && next(lastElement);
			};
		},
		universal: function(next){
			return next;
		}
	};

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = sortByProcedure;

	/*
		sort the parts of the passed selector,
		as there is potential for optimization
		(some types of selectors are faster than others)
	*/

	var procedure = __webpack_require__(394);

	var attributes = {
		__proto__: null,
		exists: 10,
		equals: 8,
		not: 7,
		start: 6,
		end: 6,
		any: 5,
		hyphen: 4,
		element: 4
	};

	function sortByProcedure(arr){
		var procs = arr.map(getProcedure);
		for(var i = 1; i < arr.length; i++){
			var procNew = procs[i];

			if(procNew < 0) continue;

			for(var j = i - 1; j >= 0 && procNew < procs[j]; j--){
				var token = arr[j + 1];
				arr[j + 1] = arr[j];
				arr[j] = token;
				procs[j + 1] = procs[j];
				procs[j] = procNew;
			}
		}
	}

	function getProcedure(token){
		var proc = procedure[token.type];

		if(proc === procedure.attribute){
			proc = attributes[token.action];

			if(proc === attributes.equals && token.name === "id"){
				//prefer ID selectors (eg. #ID)
				proc = 9;
			}

			if(token.ignoreCase){
				//ignoreCase adds some overhead, prefer "normal" token
				//this is a binary operation, to ensure it's still an int
				proc >>= 1;
			}
		} else if(proc === procedure.pseudo){
			if(!token.data){
				proc = 3;
			} else if(token.name === "has" || token.name === "contains"){
				proc = 0; //expensive in any case
			} else if(token.name === "matches" || token.name === "not"){
				proc = 0;
				for(var i = 0; i < token.data.length; i++){
					//TODO better handling of complex selectors
					if(token.data[i].length !== 1) continue;
					var cur = getProcedure(token.data[i][0]);
					//avoid executing :has or :contains
					if(cur === 0){
						proc = 0;
						break;
					}
					if(cur > proc) proc = cur;
				}
				if(token.data.length > 1 && proc > 0) proc -= 1;
			} else {
				proc = 1;
			}
		}
		return proc;
	}


/***/ },
/* 394 */
/***/ function(module, exports) {

	module.exports = {
		"universal": 50,
		"tag": 30,
		"attribute": 1,
		"pseudo": 0,
		"descendant": -1,
		"child": -1,
		"parent": -1,
		"sibling": -1,
		"adjacent": -1
	};

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(372),
	    select = __webpack_require__(375),
	    utils = __webpack_require__(371),
	    domEach = utils.domEach,
	    uniqueSort = __webpack_require__(315).DomUtils.uniqueSort,
	    isTag = utils.isTag;

	exports.find = function(selectorOrHaystack) {
	  var elems = _.reduce(this, function(memo, elem) {
	    return memo.concat(_.filter(elem.children, isTag));
	  }, []);
	  var contains = this.constructor.contains;
	  var haystack;

	  if (selectorOrHaystack && typeof selectorOrHaystack !== 'string') {
	    if (selectorOrHaystack.cheerio) {
	      haystack = selectorOrHaystack.get();
	    } else {
	      haystack = [selectorOrHaystack];
	    }

	    return this._make(haystack.filter(function(elem) {
	      var idx, len;
	      for (idx = 0, len = this.length; idx < len; ++idx) {
	        if (contains(this[idx], elem)) {
	          return true;
	        }
	      }
	    }, this));
	  }

	  var options = {__proto__: this.options, context: this.toArray()};

	  return this._make(select(selectorOrHaystack, elems, options));
	};

	// Get the parent of each element in the current set of matched elements,
	// optionally filtered by a selector.
	exports.parent = function(selector) {
	  var set = [];

	  domEach(this, function(idx, elem) {
	    var parentElem = elem.parent;
	    if (parentElem && set.indexOf(parentElem) < 0) {
	      set.push(parentElem);
	    }
	  });

	  if (arguments.length) {
	    set = exports.filter.call(set, selector, this);
	  }

	  return this._make(set);
	};

	exports.parents = function(selector) {
	  var parentNodes = [];

	  // When multiple DOM elements are in the original set, the resulting set will
	  // be in *reverse* order of the original elements as well, with duplicates
	  // removed.
	  this.get().reverse().forEach(function(elem) {
	    traverseParents(this, elem.parent, selector, Infinity)
	      .forEach(function(node) {
	        if (parentNodes.indexOf(node) === -1) {
	          parentNodes.push(node);
	        }
	      }
	    );
	  }, this);

	  return this._make(parentNodes);
	};

	exports.parentsUntil = function(selector, filter) {
	  var parentNodes = [], untilNode, untilNodes;

	  if (typeof selector === 'string') {
	    untilNode = select(selector, this.parents().toArray(), this.options)[0];
	  } else if (selector && selector.cheerio) {
	    untilNodes = selector.toArray();
	  } else if (selector) {
	    untilNode = selector;
	  }

	  // When multiple DOM elements are in the original set, the resulting set will
	  // be in *reverse* order of the original elements as well, with duplicates
	  // removed.

	  this.toArray().reverse().forEach(function(elem) {
	    while ((elem = elem.parent)) {
	      if ((untilNode && elem !== untilNode) ||
	        (untilNodes && untilNodes.indexOf(elem) === -1) ||
	        (!untilNode && !untilNodes)) {
	        if (isTag(elem) && parentNodes.indexOf(elem) === -1) { parentNodes.push(elem); }
	      } else {
	        break;
	      }
	    }
	  }, this);

	  return this._make(filter ? select(filter, parentNodes, this.options) : parentNodes);
	};

	// For each element in the set, get the first element that matches the selector
	// by testing the element itself and traversing up through its ancestors in the
	// DOM tree.
	exports.closest = function(selector) {
	  var set = [];

	  if (!selector) {
	    return this._make(set);
	  }

	  domEach(this, function(idx, elem) {
	    var closestElem = traverseParents(this, elem, selector, 1)[0];

	    // Do not add duplicate elements to the set
	    if (closestElem && set.indexOf(closestElem) < 0) {
	      set.push(closestElem);
	    }
	  }.bind(this));

	  return this._make(set);
	};

	exports.next = function(selector) {
	  if (!this[0]) { return this; }
	  var elems = [];

	  _.forEach(this, function(elem) {
	    while ((elem = elem.next)) {
	      if (isTag(elem)) {
	        elems.push(elem);
	        return;
	      }
	    }
	  });

	  return selector ?
	    exports.filter.call(elems, selector, this) :
	    this._make(elems);
	};

	exports.nextAll = function(selector) {
	  if (!this[0]) { return this; }
	  var elems = [];

	  _.forEach(this, function(elem) {
	    while ((elem = elem.next)) {
	      if (isTag(elem) && elems.indexOf(elem) === -1) {
	        elems.push(elem);
	      }
	    }
	  });

	  return selector ?
	    exports.filter.call(elems, selector, this) :
	    this._make(elems);
	};

	exports.nextUntil = function(selector, filterSelector) {
	  if (!this[0]) { return this; }
	  var elems = [], untilNode, untilNodes;

	  if (typeof selector === 'string') {
	    untilNode = select(selector, this.nextAll().get(), this.options)[0];
	  } else if (selector && selector.cheerio) {
	    untilNodes = selector.get();
	  } else if (selector) {
	    untilNode = selector;
	  }

	  _.forEach(this, function(elem) {
	    while ((elem = elem.next)) {
	      if ((untilNode && elem !== untilNode) ||
	        (untilNodes && untilNodes.indexOf(elem) === -1) ||
	        (!untilNode && !untilNodes)) {
	        if (isTag(elem) && elems.indexOf(elem) === -1) {
	          elems.push(elem);
	        }
	      } else {
	        break;
	      }
	    }
	  });

	  return filterSelector ?
	    exports.filter.call(elems, filterSelector, this) :
	    this._make(elems);
	};

	exports.prev = function(selector) {
	  if (!this[0]) { return this; }
	  var elems = [];

	  _.forEach(this, function(elem) {
	    while ((elem = elem.prev)) {
	      if (isTag(elem)) {
	        elems.push(elem);
	        return;
	      }
	    }
	  });

	  return selector ?
	    exports.filter.call(elems, selector, this) :
	    this._make(elems);
	};

	exports.prevAll = function(selector) {
	  if (!this[0]) { return this; }
	  var elems = [];

	  _.forEach(this, function(elem) {
	    while ((elem = elem.prev)) {
	      if (isTag(elem) && elems.indexOf(elem) === -1) {
	        elems.push(elem);
	      }
	    }
	  });

	  return selector ?
	    exports.filter.call(elems, selector, this) :
	    this._make(elems);
	};

	exports.prevUntil = function(selector, filterSelector) {
	  if (!this[0]) { return this; }
	  var elems = [], untilNode, untilNodes;

	  if (typeof selector === 'string') {
	    untilNode = select(selector, this.prevAll().get(), this.options)[0];
	  } else if (selector && selector.cheerio) {
	    untilNodes = selector.get();
	  } else if (selector) {
	    untilNode = selector;
	  }

	  _.forEach(this, function(elem) {
	    while ((elem = elem.prev)) {
	      if ((untilNode && elem !== untilNode) ||
	        (untilNodes && untilNodes.indexOf(elem) === -1) ||
	        (!untilNode && !untilNodes)) {
	        if (isTag(elem) && elems.indexOf(elem) === -1) {
	          elems.push(elem);
	        }
	      } else {
	        break;
	      }
	    }
	  });

	  return filterSelector ?
	    exports.filter.call(elems, filterSelector, this) :
	    this._make(elems);
	};

	exports.siblings = function(selector) {
	  var parent = this.parent();

	  var elems = _.filter(
	    parent ? parent.children() : this.siblingsAndMe(),
	    _.bind(function(elem) { return isTag(elem) && !this.is(elem); }, this)
	  );

	  if (selector !== undefined) {
	    return exports.filter.call(elems, selector, this);
	  } else {
	    return this._make(elems);
	  }
	};

	exports.children = function(selector) {

	  var elems = _.reduce(this, function(memo, elem) {
	    return memo.concat(_.filter(elem.children, isTag));
	  }, []);

	  if (selector === undefined) return this._make(elems);

	  return exports.filter.call(elems, selector, this);
	};

	exports.contents = function() {
	  return this._make(_.reduce(this, function(all, elem) {
	    all.push.apply(all, elem.children);
	    return all;
	  }, []));
	};

	exports.each = function(fn) {
	  var i = 0, len = this.length;
	  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;
	  return this;
	};

	exports.map = function(fn) {
	  return this._make(_.reduce(this, function(memo, el, i) {
	    var val = fn.call(el, i, el);
	    return val == null ? memo : memo.concat(val);
	  }, []));
	};

	var makeFilterMethod = function(filterFn) {
	  return function(match, container) {
	    var testFn;
	    container = container || this;

	    if (typeof match === 'string') {
	      testFn = select.compile(match, container.options);
	    } else if (typeof match === 'function') {
	      testFn = function(el, i) {
	        return match.call(el, i, el);
	      };
	    } else if (match.cheerio) {
	      testFn = match.is.bind(match);
	    } else {
	      testFn = function(el) {
	        return match === el;
	      };
	    }

	    return container._make(filterFn(this, testFn));
	  };
	};

	exports.filter = makeFilterMethod(_.filter);
	exports.not = makeFilterMethod(_.reject);

	exports.has = function(selectorOrHaystack) {
	  var that = this;
	  return exports.filter.call(this, function() {
	    return that._make(this).find(selectorOrHaystack).length > 0;
	  });
	};

	exports.first = function() {
	  return this.length > 1 ? this._make(this[0]) : this;
	};

	exports.last = function() {
	  return this.length > 1 ? this._make(this[this.length - 1]) : this;
	};

	// Reduce the set of matched elements to the one at the specified index.
	exports.eq = function(i) {
	  i = +i;

	  // Use the first identity optimization if possible
	  if (i === 0 && this.length <= 1) return this;

	  if (i < 0) i = this.length + i;
	  return this[i] ? this._make(this[i]) : this._make([]);
	};

	// Retrieve the DOM elements matched by the jQuery object.
	exports.get = function(i) {
	  if (i == null) {
	    return Array.prototype.slice.call(this);
	  } else {
	    return this[i < 0 ? (this.length + i) : i];
	  }
	};

	// Search for a given element from among the matched elements.
	exports.index = function(selectorOrNeedle) {
	  var $haystack, needle;

	  if (arguments.length === 0) {
	    $haystack = this.parent().children();
	    needle = this[0];
	  } else if (typeof selectorOrNeedle === 'string') {
	    $haystack = this._make(selectorOrNeedle);
	    needle = this[0];
	  } else {
	    $haystack = this;
	    needle = selectorOrNeedle.cheerio ? selectorOrNeedle[0] : selectorOrNeedle;
	  }

	  return $haystack.get().indexOf(needle);
	};

	exports.slice = function() {
	  return this._make([].slice.apply(this, arguments));
	};

	function traverseParents(self, elem, selector, limit) {
	  var elems = [];
	  while (elem && elems.length < limit) {
	    if (!selector || exports.filter.call([elem], selector, self).length) {
	      elems.push(elem);
	    }
	    elem = elem.parent;
	  }
	  return elems;
	}

	// End the most recent filtering operation in the current chain and return the
	// set of matched elements to its previous state.
	exports.end = function() {
	  return this.prevObject || this._make([]);
	};

	exports.add = function(other, context) {
	  var selection = this._make(other, context);
	  var contents = uniqueSort(selection.get().concat(this.get()));

	  for (var i = 0; i < contents.length; ++i) {
	    selection[i] = contents[i];
	  }
	  selection.length = contents.length;

	  return selection;
	};

	// Add the previous set of elements on the stack to the current set, optionally
	// filtered by a selector.
	exports.addBack = function(selector) {
	  return this.add(
	    arguments.length ? this.prevObject.filter(selector) : this.prevObject
	  );
	};


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(372),
	    parse = __webpack_require__(310),
	    $ = __webpack_require__(374),
	    updateDOM = parse.update,
	    evaluate = parse.evaluate,
	    utils = __webpack_require__(371),
	    domEach = utils.domEach,
	    cloneDom = utils.cloneDom,
	    isHtml = utils.isHtml,
	    slice = Array.prototype.slice;

	// Create an array of nodes, recursing into arrays and parsing strings if
	// necessary
	exports._makeDomArray = function makeDomArray(elem, clone) {
	  if (elem == null) {
	    return [];
	  } else if (elem.cheerio) {
	    return clone ? cloneDom(elem.get(), elem.options) : elem.get();
	  } else if (Array.isArray(elem)) {
	    return _.flatten(elem.map(function(el) {
	      return this._makeDomArray(el, clone);
	    }, this));
	  } else if (typeof elem === 'string') {
	    return evaluate(elem, this.options);
	  } else {
	    return clone ? cloneDom([elem]) : [elem];
	  }
	};

	var _insert = function(concatenator) {
	  return function() {
	    var elems = slice.call(arguments),
	        lastIdx = this.length - 1;

	    return domEach(this, function(i, el) {
	      var dom, domSrc;

	      if (typeof elems[0] === 'function') {
	        domSrc = elems[0].call(el, i, $.html(el.children));
	      } else {
	        domSrc = elems;
	      }

	      dom = this._makeDomArray(domSrc, i < lastIdx);
	      concatenator(dom, el.children, el);
	    });
	  };
	};

	/*
	 * Modify an array in-place, removing some number of elements and adding new
	 * elements directly following them.
	 *
	 * @param {Array} array Target array to splice.
	 * @param {Number} spliceIdx Index at which to begin changing the array.
	 * @param {Number} spliceCount Number of elements to remove from the array.
	 * @param {Array} newElems Elements to insert into the array.
	 *
	 * @api private
	 */
	var uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {
	  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),
	      prev = array[spliceIdx - 1] || null,
	      next = array[spliceIdx] || null;
	  var idx, len, prevIdx, node, oldParent;

	  // Before splicing in new elements, ensure they do not already appear in the
	  // current array.
	  for (idx = 0, len = newElems.length; idx < len; ++idx) {
	    node = newElems[idx];
	    oldParent = node.parent || node.root;
	    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);

	    if (oldParent && prevIdx > -1) {
	      oldParent.children.splice(prevIdx, 1);
	      if (parent === oldParent && spliceIdx > prevIdx) {
	        spliceArgs[0]--;
	      }
	    }

	    node.root = null;
	    node.parent = parent;

	    if (node.prev) {
	      node.prev.next = node.next || null;
	    }

	    if (node.next) {
	      node.next.prev = node.prev || null;
	    }

	    node.prev = newElems[idx - 1] || prev;
	    node.next = newElems[idx + 1] || next;
	  }

	  if (prev) {
	    prev.next = newElems[0];
	  }
	  if (next) {
	    next.prev = newElems[newElems.length - 1];
	  }
	  return array.splice.apply(array, spliceArgs);
	};

	exports.appendTo = function(target) {
	  if (!target.cheerio) {
	    target = this.constructor.call(this.constructor, target, null, this._originalRoot);
	  }

	  target.append(this);

	  return this;
	};

	exports.prependTo = function(target) {
	  if (!target.cheerio) {
	    target = this.constructor.call(this.constructor, target, null, this._originalRoot);
	  }

	  target.prepend(this);

	  return this;
	};

	exports.append = _insert(function(dom, children, parent) {
	  uniqueSplice(children, children.length, 0, dom, parent);
	});

	exports.prepend = _insert(function(dom, children, parent) {
	  uniqueSplice(children, 0, 0, dom, parent);
	});

	exports.wrap = function(wrapper) {
	  var wrapperFn = typeof wrapper === 'function' && wrapper,
	      lastIdx = this.length - 1;

	  _.forEach(this, _.bind(function(el, i) {
	    var parent = el.parent || el.root,
	        siblings = parent.children,
	        dom, index;

	    if (!parent) {
	      return;
	    }

	    if (wrapperFn) {
	      wrapper = wrapperFn.call(el, i);
	    }

	    if (typeof wrapper === 'string' && !isHtml(wrapper)) {
	      wrapper = this.parents().last().find(wrapper).clone();
	    }

	    dom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);
	    index = siblings.indexOf(el);

	    updateDOM([el], dom[0]);
	    // The previous operation removed the current element from the `siblings`
	    // array, so the `dom` array can be inserted without removing any
	    // additional elements.
	    uniqueSplice(siblings, index, 0, dom, parent);
	  }, this));

	  return this;
	};

	exports.after = function() {
	  var elems = slice.call(arguments),
	      lastIdx = this.length - 1;

	  domEach(this, function(i, el) {
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        index = siblings.indexOf(el),
	        domSrc, dom;

	    // If not found, move on
	    if (index < 0) return;

	    if (typeof elems[0] === 'function') {
	      domSrc = elems[0].call(el, i, $.html(el.children));
	    } else {
	      domSrc = elems;
	    }
	    dom = this._makeDomArray(domSrc, i < lastIdx);

	    // Add element after `this` element
	    uniqueSplice(siblings, index + 1, 0, dom, parent);
	  });

	  return this;
	};

	exports.insertAfter = function(target) {
	  var clones = [],
	      self = this;
	  if (typeof target === 'string') {
	    target = this.constructor.call(this.constructor, target, null, this._originalRoot);
	  }
	  target = this._makeDomArray(target);
	  self.remove();
	  domEach(target, function(i, el) {
	    var clonedSelf = self._makeDomArray(self.clone());
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        index = siblings.indexOf(el);

	    // If not found, move on
	    if (index < 0) return;

	    // Add cloned `this` element(s) after target element
	    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);
	    clones.push(clonedSelf);
	  });
	  return this.constructor.call(this.constructor, this._makeDomArray(clones));
	};

	exports.before = function() {
	  var elems = slice.call(arguments),
	      lastIdx = this.length - 1;

	  domEach(this, function(i, el) {
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        index = siblings.indexOf(el),
	        domSrc, dom;

	    // If not found, move on
	    if (index < 0) return;

	    if (typeof elems[0] === 'function') {
	      domSrc = elems[0].call(el, i, $.html(el.children));
	    } else {
	      domSrc = elems;
	    }

	    dom = this._makeDomArray(domSrc, i < lastIdx);

	    // Add element before `el` element
	    uniqueSplice(siblings, index, 0, dom, parent);
	  });

	  return this;
	};

	exports.insertBefore = function(target) {
	  var clones = [],
	      self = this;
	  if (typeof target === 'string') {
	    target = this.constructor.call(this.constructor, target, null, this._originalRoot);
	  }
	  target = this._makeDomArray(target);
	  self.remove();
	  domEach(target, function(i, el) {
	    var clonedSelf = self._makeDomArray(self.clone());
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        index = siblings.indexOf(el);

	    // If not found, move on
	    if (index < 0) return;

	    // Add cloned `this` element(s) after target element
	    uniqueSplice(siblings, index, 0, clonedSelf, parent);
	    clones.push(clonedSelf);
	  });
	  return this.constructor.call(this.constructor, this._makeDomArray(clones));
	};

	/*
	  remove([selector])
	*/
	exports.remove = function(selector) {
	  var elems = this;

	  // Filter if we have selector
	  if (selector)
	    elems = elems.filter(selector);

	  domEach(elems, function(i, el) {
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        index = siblings.indexOf(el);

	    if (index < 0) return;

	    siblings.splice(index, 1);
	    if (el.prev) {
	      el.prev.next = el.next;
	    }
	    if (el.next) {
	      el.next.prev = el.prev;
	    }
	    el.prev = el.next = el.parent = el.root = null;
	  });

	  return this;
	};

	exports.replaceWith = function(content) {
	  var self = this;

	  domEach(this, function(i, el) {
	    var parent = el.parent || el.root;
	    if (!parent) {
	      return;
	    }

	    var siblings = parent.children,
	        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),
	        index;

	    // In the case that `dom` contains nodes that already exist in other
	    // structures, ensure those nodes are properly removed.
	    updateDOM(dom, null);

	    index = siblings.indexOf(el);

	    // Completely remove old element
	    uniqueSplice(siblings, index, 1, dom, parent);
	    el.parent = el.prev = el.next = el.root = null;
	  });

	  return this;
	};

	exports.empty = function() {
	  domEach(this, function(i, el) {
	    _.each(el.children, function(el) {
	      el.next = el.prev = el.parent = null;
	    });

	    el.children.length = 0;
	  });
	  return this;
	};

	/**
	 * Set/Get the HTML
	 */
	exports.html = function(str) {
	  if (str === undefined) {
	    if (!this[0] || !this[0].children) return null;
	    return $.html(this[0].children, this.options);
	  }

	  var opts = this.options;

	  domEach(this, function(i, el) {
	    _.each(el.children, function(el) {
	      el.next = el.prev = el.parent = null;
	    });

	    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts);

	    updateDOM(content, el);
	  });

	  return this;
	};

	exports.toString = function() {
	  return $.html(this, this.options);
	};

	exports.text = function(str) {
	  // If `str` is undefined, act as a "getter"
	  if (str === undefined) {
	    return $.text(this);
	  } else if (typeof str === 'function') {
	    // Function support
	    return domEach(this, function(i, el) {
	      var $el = [el];
	      return exports.text.call($el, str.call(el, i, $.text($el)));
	    });
	  }

	  // Append text node to each selected elements
	  domEach(this, function(i, el) {
	    _.each(el.children, function(el) {
	      el.next = el.prev = el.parent = null;
	    });

	    var elem = {
	      data: '' + str,
	      type: 'text',
	      parent: el,
	      prev: null,
	      next: null,
	      children: []
	    };

	    updateDOM(elem, el);
	  });

	  return this;
	};

	exports.clone = function() {
	  return this._make(cloneDom(this.get(), this.options));
	};


/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(372),
	    domEach = __webpack_require__(371).domEach;
	var toString = Object.prototype.toString;

	/**
	 * Set / Get css.
	 *
	 * @param {String|Object} prop
	 * @param {String} val
	 * @return {self}
	 * @api public
	 */

	exports.css = function(prop, val) {
	  if (arguments.length === 2 ||
	    // When `prop` is a "plain" object
	    (toString.call(prop) === '[object Object]')) {
	    return domEach(this, function(idx, el) {
	      setCss(el, prop, val, idx);
	    });
	  } else {
	    return getCss(this[0], prop);
	  }
	};

	/**
	 * Set styles of all elements.
	 *
	 * @param {String|Object} prop
	 * @param {String} val
	 * @param {Number} idx - optional index within the selection
	 * @return {self}
	 * @api private
	 */

	function setCss(el, prop, val, idx) {
	  if ('string' == typeof prop) {
	    var styles = getCss(el);
	    if (typeof val === 'function') {
	      val = val.call(el, idx, styles[prop]);
	    }

	    if (val === '') {
	      delete styles[prop];
	    } else if (val != null) {
	      styles[prop] = val;
	    }

	    el.attribs.style = stringify(styles);
	  } else if ('object' == typeof prop) {
	    Object.keys(prop).forEach(function(k){
	      setCss(el, k, prop[k]);
	    });
	  }
	}

	/**
	 * Get parsed styles of the first element.
	 *
	 * @param {String} prop
	 * @return {Object}
	 * @api private
	 */

	function getCss(el, prop) {
	  var styles = parse(el.attribs.style);
	  if (typeof prop === 'string') {
	    return styles[prop];
	  } else if (Array.isArray(prop)) {
	    return _.pick(styles, prop);
	  } else {
	    return styles;
	  }
	}

	/**
	 * Stringify `obj` to styles.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function stringify(obj) {
	  return Object.keys(obj || {})
	    .reduce(function(str, prop){
	      return str += ''
	        + (str ? ' ' : '')
	        + prop
	        + ': '
	        + obj[prop]
	        + ';';
	    }, '');
	}

	/**
	 * Parse `styles`.
	 *
	 * @param {String} styles
	 * @return {Object}
	 * @api private
	 */

	function parse(styles) {
	  styles = (styles || '').trim();

	  if (!styles) return {};

	  return styles
	    .split(';')
	    .reduce(function(obj, str){
	      var n = str.indexOf(':');
	      // skip if there is no :, or if it is the first/last character
	      if (n < 1 || n === str.length-1) return obj;
	      obj[str.slice(0,n).trim()] = str.slice(n+1).trim();
	      return obj;
	    }, {});
	}


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js
	// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js
	var _ = __webpack_require__(372),
	    submittableSelector = 'input,select,textarea,keygen',
	    rCRLF = /\r?\n/g;

	exports.serializeArray = function() {
	  // Resolve all form elements from either forms or collections of form elements
	  var Cheerio = this.constructor;
	  return this.map(function() {
	      var elem = this;
	      var $elem = Cheerio(elem);
	      if (elem.name === 'form') {
	        return $elem.find(submittableSelector).toArray();
	      } else {
	        return $elem.filter(submittableSelector).toArray();
	      }
	    }).filter(
	        // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)
	        '[name!=""]:not(:disabled)'
	        // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)
	        + ':not(:submit, :button, :image, :reset, :file)'
	        // and are either checked/don't have a checkable state
	        + ':matches([checked], :not(:checkbox, :radio))'
	    // Convert each of the elements to its value(s)
	    ).map(function(i, elem) {
	      var $elem = Cheerio(elem);
	      var name = $elem.attr('name');
	      var val = $elem.val();

	      // If there is no value set (e.g. `undefined`, `null`), then return nothing
	      if (val == null) {
	        return null;
	      } else {
	        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs
	        if (Array.isArray(val)) {
	          return _.map(val, function(val) {
	            // We trim replace any line endings (e.g. `\r` or `\r\n` with `\r\n`) to guarantee consistency across platforms
	            //   These can occur inside of `<textarea>'s`
	            return {name: name, value: val.replace( rCRLF, '\r\n' )};
	          });
	        // Otherwise (e.g. `<input type="text">`, return only one key/value pair
	        } else {
	          return {name: name, value: val.replace( rCRLF, '\r\n' )};
	        }
	      }
	    // Convert our result to an array
	    }).get();
	};


/***/ },
/* 399 */
/***/ function(module, exports) {

	module.exports = {
		"name": "cheerio",
		"version": "0.20.0",
		"description": "Tiny, fast, and elegant implementation of core jQuery designed specifically for the server",
		"author": {
			"name": "Matt Mueller",
			"email": "mattmuelle@gmail.com",
			"url": "mat.io"
		},
		"license": "MIT",
		"keywords": [
			"htmlparser",
			"jquery",
			"selector",
			"scraper",
			"parser",
			"html"
		],
		"repository": {
			"type": "git",
			"url": "git://github.com/cheeriojs/cheerio.git"
		},
		"main": "./index.js",
		"files": [
			"index.js",
			"lib"
		],
		"engines": {
			"node": ">= 0.6"
		},
		"dependencies": {
			"css-select": "~1.2.0",
			"entities": "~1.1.1",
			"htmlparser2": "~3.8.1",
			"dom-serializer": "~0.1.0",
			"lodash": "^4.1.0",
			"jsdom": "^7.0.2"
		},
		"devDependencies": {
			"benchmark": "~1.0.0",
			"coveralls": "~2.10",
			"expect.js": "~0.3.1",
			"istanbul": "~0.2",
			"jshint": "~2.5.1",
			"mocha": "*",
			"xyz": "~0.5.0"
		},
		"scripts": {
			"test": "make test"
		},
		"optionalDependencies": {
			"jsdom": "^7.0.2"
		},
		"gitHead": "c3ec1cd7bff41da0033bdc45375d77844f0f81c0",
		"bugs": {
			"url": "https://github.com/cheeriojs/cheerio/issues"
		},
		"homepage": "https://github.com/cheeriojs/cheerio#readme",
		"_id": "cheerio@0.20.0",
		"_shasum": "5c710f2bab95653272842ba01c6ea61b3545ec35",
		"_from": "cheerio@>=0.20.0 <0.21.0",
		"_npmVersion": "3.6.0",
		"_nodeVersion": "5.5.0",
		"_npmUser": {
			"name": "feedic",
			"email": "me@feedic.com"
		},
		"dist": {
			"shasum": "5c710f2bab95653272842ba01c6ea61b3545ec35",
			"tarball": "https://registry.npmjs.org/cheerio/-/cheerio-0.20.0.tgz"
		},
		"maintainers": [
			{
				"name": "mattmueller",
				"email": "mattmuelle@gmail.com"
			},
			{
				"name": "davidchambers",
				"email": "dc@davidchambers.me"
			},
			{
				"name": "jugglinmike",
				"email": "mike@mikepennisi.com"
			},
			{
				"name": "feedic",
				"email": "me@feedic.com"
			}
		],
		"directories": {},
		"_resolved": "https://registry.npmjs.org/cheerio/-/cheerio-0.20.0.tgz",
		"readme": "ERROR: No README data found!"
	};

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _block = __webpack_require__(178);

	var _block2 = _interopRequireDefault(_block);

	var _document = __webpack_require__(179);

	var _document2 = _interopRequireDefault(_document);

	var _state = __webpack_require__(222);

	var _state2 = _interopRequireDefault(_state);

	var _text = __webpack_require__(217);

	var _text2 = _interopRequireDefault(_text);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Deserialize a plain text `string` to a state.
	 *
	 * @param {String} string
	 * @return {State}
	 */

	function deserialize(string) {
	  return _state2.default.create({
	    document: _document2.default.create({
	      nodes: string.split('\n').map(deserializeLine)
	    })
	  });
	}

	/**
	 * Deserialize a `line` of text.
	 *
	 * @param {String} line
	 * @return {Block}
	 */

	function deserializeLine(line) {
	  return _block2.default.create({
	    type: 'line',
	    nodes: [_text2.default.create({
	      characters: line.split('').map(deserializeCharacter)
	    })]
	  });
	}

	/**
	 * Deserialize a `character`.
	 *
	 * @param {String} char
	 * @return {Character}
	 */

	function deserializeCharacter(char) {
	  return { text: char };
	}

	/**
	 * Serialize a `state` to plain text.
	 *
	 * @param {State} state
	 * @return {String}
	 */

	function serialize(state) {
	  return state.document.nodes.map(function (block) {
	    return block.text;
	  }).join('\n');
	}

	/**
	 * Export.
	 */

	exports.default = {
	  deserialize: deserialize,
	  serialize: serialize
	};

/***/ },
/* 401 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	/**
	 * Find the DOM node for a `node`.
	 *
	 * @param {Node} node
	 * @return {Element} el
	 */

	function findDOMNode(node) {
	  var el = window.document.querySelector("[data-key=\"" + node.key + "\"]");

	  if (!el) {
	    throw new Error("Unable to find a dom node for \"" + node.key + "\". This is\noften because of forgetting to add `props.attributes` to a component\nreturned from `renderNode`.");
	  }

	  return el;
	}

	/**
	 * Export.
	 */

	exports.default = findDOMNode;

/***/ },
/* 402 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Jyutping = function Jyutping(pinyin) {
	  _classCallCheck(this, Jyutping);

	  this.pinyin = pinyin;

	  var _ref = function (pinyin) {
	    var match = pinyin.match(/([a-zA-Z]+)(\d)/);
	    var ping = null;
	    var tone = null;
	    if (match) {
	      ping = match[1];
	      tone = match[2];
	    }
	    return {
	      ping: ping,
	      tone: tone
	    };
	  }(this.pinyin);

	  var ping = _ref.ping;
	  var tone = _ref.tone;


	  this.ping = ping;
	  this.tone = tone;
	};

	var NotedChar = function NotedChar(charObj) {
	  _classCallCheck(this, NotedChar);

	  this.char = charObj.char;
	  // 拼音
	  this.jyutping = new Jyutping(charObj.pinyin);
	  // 用例
	  this.use_cases = charObj.use_cases || null;
	  this.explanations = charObj.explanations || null;
	  // 异读字
	  this.is_variant = charObj.is_variant || null;
	  // 粤语用词
	  this.is_cantonese = charObj.is_cantonese || null;
	  // 专有名词
	  this.is_proper = charObj.is_proper || null;
	  // 通假字
	  this.is_borrwed = charObj.is_borrwed || null;
	};

	var CantoDict = function () {
	  function CantoDict(f) {
	    _classCallCheck(this, CantoDict);

	    this.dict = {};
	    var lines = f.split("\n");
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = lines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var line = _step.value;

	        var notedChar = parse_line(line);
	        if (notedChar) {
	          // check if
	          var char = notedChar.char;
	          if (char in this.dict) {
	            this.dict[char].add(notedChar);
	          } else {
	            this.dict[char] = new Zi(notedChar);
	          }
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }
	  }

	  _createClass(CantoDict, [{
	    key: "lookupZi",
	    value: function lookupZi(char) {
	      return this.dict[char] || null;
	    }
	  }, {
	    key: "getNotedChar",
	    value: function getNotedChar(char) {
	      var in_str = arguments.length <= 1 || arguments[1] === undefined ? "" : arguments[1];

	      var zi = this.lookupZi(char);
	      if (zi) {
	        // console.log(in_str)
	        return zi.chooseOne(in_str);
	      }
	      return null;
	    }
	  }]);

	  return CantoDict;
	}();

	var Zi = function () {
	  function Zi(notedChar) {
	    _classCallCheck(this, Zi);

	    this.char = notedChar.char;
	    this.pronunciations = {};
	    var pinyin = notedChar.jyutping.pinyin;
	    this.pronunciations[pinyin] = notedChar;
	  }

	  _createClass(Zi, [{
	    key: "add",
	    value: function add(notedChar) {
	      var pinyin = notedChar.jyutping.pinyin;
	      this.pronunciations[pinyin] = notedChar;
	    }
	  }, {
	    key: "pronounce",
	    value: function pronounce(in_str) {
	      return chooseOne(in_str).jyutping;
	    }
	  }, {
	    key: "chooseOne",
	    value: function chooseOne(in_str) {
	      var maxWeight = 0;
	      var maxWeightChar = null;
	      for (var key in this.pronunciations) {
	        var notedChar = this.pronunciations[key];
	        var currentWeight = 1;
	        if (notedChar.use_cases) {
	          currentWeight += notedChar.use_cases.length;
	          var _iteratorNormalCompletion2 = true;
	          var _didIteratorError2 = false;
	          var _iteratorError2 = undefined;

	          try {
	            for (var _iterator2 = notedChar.use_cases[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	              var use_case = _step2.value;

	              if (use_case.includes("(")) {
	                use_case = use_case.slice(0, use_case.indexOf("("));
	              }
	              // console.log(use_case)
	              if (in_str.includes(use_case)) {
	                return notedChar;
	              }
	            }
	          } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	              }
	            } finally {
	              if (_didIteratorError2) {
	                throw _iteratorError2;
	              }
	            }
	          }
	        }
	        if (notedChar.explanations) {
	          currentWeight += notedChar.explanations.length;
	        }
	        if (notedChar.is_variant) {
	          currentWeight *= 0.05;
	        }
	        if (notedChar.is_cantonese) {
	          currentWeight *= 2;
	        }
	        if (notedChar.is_proper) {
	          currentWeight *= 0.6;
	        }
	        console.log(currentWeight, notedChar);
	        if (currentWeight > maxWeight) {
	          maxWeight = currentWeight;
	          maxWeightChar = notedChar;
	        }
	      }
	      return maxWeightChar;
	    }
	  }]);

	  return Zi;
	}();

	var _re_variant = /异读字|異讀字/;
	var _re_cantonese = /粤语用字|粵語用字/;
	var _re_proper = /人名|地名|姓氏|复姓|複姓|县名|縣名|国名|國名/;
	var _re_borrowed = /同「.」字|通「.」字/;
	var _re_other = /助词|助詞/;

	function parse_line(line) {
	  line = line.trim();
	  var splitedLine = line.split("\t");
	  if (splitedLine.length == 3) {
	    var _splitedLine = _slicedToArray(splitedLine, 3);

	    var char = _splitedLine[0];
	    var pinyin = _splitedLine[1];
	    var extra = _splitedLine[2];

	    var notedChar = new NotedChar({ char: char, pinyin: pinyin });
	    var use_cases = null;
	    var explanations = null;
	    if (extra) {
	      var flag = false;
	      if (_re_variant.exec(extra)) {
	        notedChar.is_variant = true;
	        flag = true;
	      }
	      if (_re_cantonese.exec(extra)) {
	        notedChar.is_cantonese = true;
	        flag = true;
	      }
	      if (_re_proper.exec(extra)) {
	        notedChar.is_proper = true;
	        flag = true;
	      }
	      if (_re_borrowed.exec(extra)) {
	        notedChar.is_borrowed = true;
	        flag = true;
	      }
	      if (_re_other.exec(extra)) {
	        flag = true;
	      }
	      var splitedExtra = extra.split("；");
	      if (splitedExtra.length > 1 && !splitedExtra[0].startsWith("(")) {
	        use_cases = splitedExtra[0].split("，");
	        explanations = splitedExtra.slice(1);
	      } else {
	        if (flag || splitedExtra[0].startsWith("(")) {
	          explanations = splitedExtra;
	        } else {
	          use_cases = extra.split("，");
	        }
	      }
	    }
	    notedChar.explanations = explanations;
	    notedChar.use_cases = use_cases;
	    return notedChar;
	  }
	  return null;
	}

	exports.Jyutping = Jyutping;
	exports.NotedChar = NotedChar;
	exports.CantoDict = CantoDict;

/***/ },
/* 403 */
/***/ function(module, exports) {

	"use strict";Object.defineProperty(exports,"__esModule",{value:true});var CANTO_DICT=exports.CANTO_DICT="一\tjat1\t一致，统一，一枝独秀，一般，一切，一样，专一，划一，一视同仁，一触即发，一落千丈，长短不一\n七\tcat1\t七夕，七情六欲，七擒七纵，七言律诗，北斗七星，七嘴八舌，七零八落，七窍，七彩缤纷，七孔生烟，七步之才；(1)数词；(2)姓氏\n丈\tzoeng6\t丈夫，丈人，丈母，清丈，丈量，岳丈，一落千丈，丈二金刚\n丑\tcau2\t丑角，丑时，小丑，武丑，文丑；(1)地支的第二位；(2)姓氏\n丏\tmin5\t(1)遮蔽；(2)古代避箭的短墙\n丙\tbing2\t丙等，丙夜，付丙(烧弃)，丙吉问牛；(1)十「天干」之三；(2)姓氏\n丘\tjau1\t丘陵，丘壑，沙丘，一丘之貉，比丘；姓氏\n丕\tpei1\t丕变，丕烈\n世\tsai3\t世界，世纪，世俗，世事，遁世，面世，世间，世事，世局，世态，没世难忘\n丢\tdiu1\t丢弃，丢掉，丢下，丢脸，丢人，丢开，丢失\n丌\tgei1\t姓氏\n丌\tkei4\t(1)姓氏；(2)「其」的古字\n下\thaa5\t指动作的次数，如「打一下」\n下\thaa6\t下人，下手，下午，下方，下水，下世，下旬，下乘，下海，下堂，下策，下款，下落，下马威，下里巴人\n三\tsaam1\t三才，三代，三皇，三字经，三家村，三令五申，三长两短，三茶六礼，三从四德，三教九流，三纲五常，三坟五典，三顾草庐，举一反三\n三\tsaam3\t三思，三复，三思后行\n上\tsoeng5\t上山，上书，上课，上声，送上，迎头赶上\n上\tsoeng6\t上午，上司，上旬，上苍，上联，上层，上款，上下其手，上行下效，上层建筑，后来居上\n不\tbat1\t不然，不离不弃，一成不变，不可，来不及，有条不紊\n不\tfau2\t同「否」字\n与\tjyu4\t同「欤」字\n丞\tcing2\t通「拯」字\n丞\tsing4\t丞相，驿丞，县丞，府丞，扶丞\n丐\tgoi3\t「丐koi3」的异读字\n丐\tkoi3\t丐助，乞丐，沾丐\n并\tbing3\t「并bing6」的异读字\n并\tbing6\t并且，并世无两，并行不悖，并肩作战，并驾齐驱，并列，图文并茂\n丁\tzaang1\t象声词\n丁\tzang1\t「丁zaang1」的异读字\n丁\tding1\t丁等，白丁，男丁，丁役，壮丁，丁忧，目不识丁，拉丁(Latin汉译)；(1)十「天干」之一；(2)姓氏\n万\tmaak6\t「万mak6」的异读字\n万\tmak6\t万俟(复姓)\n且\tce2\t且住，且慢，而且，尚且，姑且\n且\tceoi1\t次且\n且\tceoi2\t「且zeoi1」的异读字\n且\tzeoi1\t古汉语助词\n且\tcou4\t「且ceoi1」的异读字\n丰\tfung1\t丰采，丰姿，丰神俊美，丰度(也作风度)，丰茸(草木茂盛)\n丱\tgwaan3\t小孩头发分束成两角突出的样子\n丳\tcaan2\t烤肉用的铁签(一说竹签)\n褁\tgwo2\t同「裹」字，「褁」是「裹」的俗字\n中\tzung1\t中土，中心，中天，中介，中允，中古，中央，中州，中旬，中波，中性，中和，中表，中衰，中秋，中流，中原，中坚，中堂，中游，中华，中叶，中间，中道，中辍，中枢，中锋，中层，中兴，中断，适中，中世纪，中流砥柱，中流击楫，中饱私囊\n中\tzung3\t中邪，中肯，中风，中理，中彩，中暑，中伤，中标，中选，一矢中的\n串\tgwaan3\t习惯\n串\tcyun3\t串联，串通，串供，串门，串演，串成，反串，客串量词\n丫\taa1\t丫鬟，枝丫\n丫\tngaa1\t「丫aa1」的异读字\n丹\tdaan1\t丹青，丹药，丹心，丹枫，牡丹，丹田，丹桂，内丹\n主\tzyu2\t主要，主持，主力，主张，主动，主权，主办，主题，主角，主旨，主帅，民主，反客为主，地主\n丸\tjyun2\t口语读音\n丸\tjyun4\t药丸，弹丸，宽心丸儿\n丼\tdam2\t(1)投物井中的声音；(2)姓氏\n丼\tzing2\t同「井」字\n乂\tngaai6\t乂安，俊乂，惩乂，保国乂民，俾乂斯民；(1)割草；(2)治理；(3)安定；(4)才德出众者；(5)惩戒\n久\tgau2\t久远，久候，久病，久违，久别，久仰，长久\n之\tzi1\t之乎者也，之子于归，珍而重之，之后，之间，之外，之前，之下，之际，之中，之余，之内，之时，之初，之类，之于，之交，之至，之流，之左，多事之秋多用途虚词，可作介词、连词、代词。作为实词中的动词用时，主要解「往」\n乏\tfat6\t乏味，缺乏，乏善可陈，疲乏，贫乏，乏力，乏人问津\n乖\tgwaai1\t乖乖，乖巧，乖张，乖违，乖舛，乖戾，乖僻\n乃\tnaai5\t乃公，乃翁，乃尔，乃是\n乃\toi2\t欸乃\n么\tmaa1\t同「吗」字\n么\tjiu1\t幺麽小丑，挑么挑六，呼么喝六\n乇\tzaak6\t草叶\n乇\ttok3\t委托\n乘\tsing4\t乘车，乘坐，乘除，乘凉，乘桴，乘机，乘人之危，乘风破浪，乘虚而入，搭乘\n乘\tsing6\t上乘，史乘，大乘，小乘，万乘之国\n乍\tzaa3\t乍见，乍晴乍雨，乍暖还寒，初学乍练\n乍\tzaa6\t「乍zaa3」的异读字\n乓\tbam1\t「乓pong1」的异读字\n乓\tpong1\t乒乓球\n乒\tbing1\t「乒ping1」的异读字\n乒\tping1\t乒乓球\n乎\tfu1\t同「呼」字\n乎\tfu4\t在乎，合乎情理，之乎者也\n乎\twu4\t「乎fu4」的异读字\n九\tgau2\t九洲，九死一生，九霄云外，九牛一毛，九泉之下\n也\tjaa5\t也许，也罢，空空如也\n丮\tgik1\t握持，执的本字\n乩\tgei1\t扶乩，乩童，降乩，乩坛\n乳\tjyu5\t乳牛，乳房，乳液，乳酪，乳汁，乳酸，乳臭未干\n乿\tzi6\t同「治」字\n乱\tlyun6\t乱世，乱闯，动乱，暴乱，叛乱，乱七八糟，乱成一团，拨乱反正，兵荒马乱\n亄\tji3\t贪婪而吝啬\n亃\tleon6\t一种似彘的野兽\n乞\that1\t乞讨，乞怜，乞丐，乞求，行乞；(1)求取；(2)引申为希冀、盼望\n乞\thei3\t给予\n干\tkin4\t乾坤，乾隆，干顾，乾断，乾道，乾元，乾造，乾宅，乾曜；(1)八卦之一；(2)易经六十四重卦之一；(3)男性、阳刚\n干\tgon1\t干果，干杯，干枯，干笑，干脆，干涸，干净，干爽，干燥，外强中干；(1)缺乏水份；(2)枯竭\n乙\tjyut3\t乙烯，乙炔，乙酸十「天干」之一\n乙\tjyut6\t「乙jyut3」的异读字\n乜\tmat1\t粤语用字，意谓「甚么」\n乜\tme1\t乜斜，斜乜著眼，乜嘴\n乜\tme2\t「乜me1」的异读字\n乜\tme5\t「乜me1」的异读字\n乜\tne6\t姓氏\n事\tsi6\t事情，故事，事物，事态，事故，事实，事业，事件，事倍功半，事与愿违，事过境迁，事必躬亲\n予\tjyu4\t予智，予圣，予一人，予小子，予取予求\n予\tjyu5\t予告，予宁，予夺，予人口实，给予，授予，赐予，赋予，不予置评，寄予希望\n了\tlaa1\t「了liu5」的异读字\n了\tliu4\t「了liu5」的异读字\n了\tliu5\t了断，不得了，没完没了，了结，了解，了得，了事，了当，了然，了案，了愿，了悟，了债，末了，罢了，了不起，免不了，不了了之，不甚了了\n二\tji6\t二胡，接二连三，独一无二，二重奏，不二价，店小二，略知一二，不二法门\n亍\tcuk1\t彳亍\n亓\tkei4\t(1)同「其」字；(2)姓氏\n五\tng5\t五代，五伦\n云\twan4\t人云亦云，不知所云\n互\twu6\t互相，互动，互助，互利，互换\n亘\tgang2\t亘古亘今\n亟\tkei3\t屡次\n亟\tgik1\t急迫\n于\tjyu1\t「于jyu4」的异读字\n于\tjyu4\t于飞(比翼偕飞，喻夫妇和合)，于归(女子出嫁)，于阗(古西域国名)姓氏\n井\tzeng2\t「井zing2」的异读字，口语读音\n井\tzing2\t井田，井底之蛙，井井有条，水井，天井，井盐，井台，井中求火\n亚\taa3\t亚洲，亚军，亚热带\n亚\tngaa3\t「亚aa3」的异读字\n些\tsai3\t「些so3」的异读字\n些\tse1\t些许，些微\n些\tso1\t「些so3」的异读字\n些\tso3\t语气词\n交\tgaau1\t交通，交易，交流，交换，交给，交付，交代，交往，交头接耳\n亥\thoi6\t地支的第十二位\n亦\tjik6\t亦步亦趋，不亦乐乎，人云亦云\n享\thoeng2\t享受，享有，享用，享年，享受到，享誉，享乐，享福，享寿\n亮\tloeng6\t亮丽，亮相，光亮，漂亮\n亭\tting4\t亭台楼阁，亭亭玉立，亭台楼阁，十里长亭\n亡\tmong1\t亡果(即芒果)\n亡\tmong4\t亡灵，灭亡，亡羊补牢，亡命，亡国之音，死亡\n亡\tmou4\t同「无」字\n亢\tgong1\t人的颈项\n亢\tkong3\t亢奋，不卑不亢，亢龙有悔，亢旱，亢直，亢进，高亢\n亨\tpaang1\t同「烹」字\n亨\thang1\t亨通，亨途，丰亨豫大姓氏\n亨\thoeng2\t同「享」字\n京\tging1\t京华，京都，京剧，京城，京戏，京片子，京师，京腔，京畿，京沪，京话国之首都\n京\tjyun4\t九京(墓地，一作九原)\n亶\tdaan6\t同「但」字\n亶\ttaan2\t古公亶父(周文王祖父)，亶其然乎(见《诗经˙小雅˙常棣》)；(1)姓氏；(2)助语词，实在、诚然解\n亶\tsin4\t屯亶(难行貌)\n亶\tsin6\t飞\n亹\tmei5\t亹亹(连续不怠倦)\n亹\tmun4\t亹源(青海地名)\n亳\tbok3\t(1)国名，故城于今安徽省亳县；(2)地名，商汤建都于此\n亳\tbok6\t「亳bok3」的异读字\n人\tjan4\t人员，人民，人生，人口，人事，人物，人才，人格，人道，人选，人质，人权，人类，人心惶惶\n仃\tding1\t伶仃，仃问，孤苦伶仃，瘦伶仃\n今\tgam1\t今昔，当今，古往今来，今天，今年，今后，今夕，今朝，今生今世，今文经，今非昔比，抚今追昔，博古通今，谈古论今\n仁\tjan4\t仁德，杏仁，麻木不仁，仁厚，仁爱，仁慈，仁政，仁兄，虾仁，仁至义尽，仁心仁术，仁人君子，仁者乐山，一视同仁\n仍\tjing4\t仍然，仍旧，频仍，仍孙(第八世孙)，一仍其旧\n仄\tzak1\t仄闻(从旁听闻)，平仄，仄目而视，仄声，逼仄\n仉\tzoeng2\t姓氏\n仈\tbaat3\t姓氏\n仟\tcin1\t(1)「千」的大写；(2)古代官职名\n代\tdoi6\t代替，年代，代罪羔羊，代数，代价，代表，代劳，代理，代课，代销，代步，代码，代沟，代用品，代表作，代议政制，时代，新陈代谢，风华绝代，改朝换代，越俎代庖\n付\tfu6\t付出，付款，付钱，付托，付予，付与\n仞\tjan6\t古以八尺或七尺为一仞\n以\tji5\t以往，所以，以逸待劳，以为，以免，以牙还牙，以身作则，以身试法，以讹传讹，以德报怨，以偏概全，以毒攻毒，以貌取人，以暴易暴\n仨\tsaam1\t三个人\n仕\tsi6\t仕途，出仕\n仙\tsin1\t仙子，仙境，仙女，仙人掌，仙人\n仝\ttung4\t(1)姓氏；(2)同「同」字\n仚\thin1\t(1)人在山上；(2)同「仙」字\n仜\thung4\t(1)身体肥胖；(2)大腹\n仩\tcoeng4\t「长」的俗字\n伐\tfat6\t伐木，砍伐，木伐，步伐，征伐，讨伐，口诛笔伐\n伙\tfo2\t伙食，合伙，拆伙，伙伴，伙计\n伕\tfu1\t伕役，拉伕\n伒\tgan3\t相也\n件\tgin6\t事件，案件，信件，函件，文件，稿件，证件，条件，物件，零件，机件，软件\n伊\tji1\t伊始，伊人，伊于胡底(意谓不知将落到什么地步为止，语出《诗经˙小雅˙小旻》)，伊尹，伊斯兰；(1)助词，指刚刚；(2)发语词；(3)第二或第三人代词；(4)姓氏；(5)外语词常用音译\n伉\tkong3\t伉俪\n伍\tng5\t队伍，落伍，入伍，退伍\n仵\tng5\t仵作，仵匠\n伢\tngaa4\t方言用字，意谓「小孩子」\n仳\tpei2\t仳离，仳别\n伈\tsam2\t伈伈(形容恐惧)\n伀\tzung1\t征伀\n仲\tzung6\t仲夏，昆仲，不相伯仲，仲裁，仲介\n伔\tdaam6\t(1)同「髧」字；(2)停止\n伝\twan4\t伝伝(无休止地行走)\n伂\tpui3\t颠伂(即颠沛)\n伅\tdeon6\t倱伅(蒙昧无知)\n伓\tpei1\t同「伾」字\n伄\tdiu3\t伄儅(不经常)\n仴\tjyut6\t地名\n伬\tce2\t古代工尺谱的记音符号\n佖\tbit1\t(1)无威仪；(2)铺满\n布\tbou3\t布置，布局，布署，布景，布道，布告\n似\tci5\t似乎，类似，似是而非，相似，似曾相识，似懂非懂\n伫\tcyu5\t伫立，伫足，伫候\n但\tdaan6\t不但，但是，但愿\n低\tdai1\t低迷，低于，低档，低落，低廉，低温，低头，低潮，低估，低空，低阶，低级，低沈\n佑\tjau6\t保佑，庇佑，眷佑，冥佑\n佒\tjoeng5\t身体不能伸展的样子\n伭\tjyun4\t凶狠\n佧\tkaa1\t佧佤族(云南少数民族)\n佉\tkeoi1\t驱遂\n伶\tling4\t伶俐，伶仃，优伶，伶人\n你\tnei5\t你们，你死我活，你推我让，你争我夺，你来我往\n佤\tngaa5\t佤族(我国少数民族之一)\n佞\tning6\t佞臣，谄佞，佞徒损友，佞口，佞人，奸佞，便佞，礼贤远佞，谗言佞语；(1)迷惑；(2)谄媚，巧言巴结；(3)迷恋\n伾\tpei1\t伾伾(有力貌)\n伸\tsan1\t伸出，伸展，伸缩\n佘\tse4\t姓氏\n伳\tsit3\t侈\n佟\ttung4\t姓氏\n佐\tzo3\t佐证，佐料，佐理\n作\tzok3\t作品，作文，作用，作风，作家，作者，作证，作息，作坊，作客，作弊，作怪，作乐，作古，作废，作弄，作奸犯科，合作，工作，耕作\n住\tzyu6\t住宅，住宿，住址，住院，住家，住所，住嘴，住手\n佡\thin1\t轻也\n侘\tcaa3\t侘傺(失意貌)\n侈\tci2\t侈谈，奢侈\n佌\tci2\t佌佌(小)\n佽\tci3\t佽助，佽飞\n佺\tcyun4\t偓佺(古代传说中的仙人)\n佳\tgaai1\t佳节，佳作，佳丽，佳音，佳人，佳话，佳偶，佳肴美酒，佳偶天成\n佼\tgaau2\t佼佼(美好出众)\n侅\tgoi1\t奇侅\n佹\tgwai2\t佹得佹失，佹辩，𪲔佹\n佷\than2\t凶狠\n佾\tjat6\t八佾，佾生，佾舞古时乐舞的行列\n侑\tjau6\t侑祠，侑酬，侑宾，侑酒，侑宴劝人饮食\n依\tji1\t依据，依照，依然，依赖，依旧，依附，依靠，依循，依依不舍，依稀，依恋，依从，依傍\n侇\tji4\t(1)同辈；(2)陈列\n侀\tjing4\t(1)同「形」字；(2)同「刑」字\n佯\tjoeng4\t佯装，佯言，佯狂\n例\tlai6\t例如，例子，例行，例外，例证，例会\n仑\tleon4\t美仑美奂，语无仑次条理分析\n侔\tmau4\t侔色揣称(赋诗行文善于比量)，侔德复载(功德可比天地)相等\n佩\tpui3\t佩服，佩带，钦佩\n侁\tsan1\t侁侁(形容众多)\n侍\tsi6\t侍卫，侍从，侍候，侍奉\n侂\ttok3\t委托\n佪\twui4\t儃佪\n佸\twut6\t相会\n侜\tzau1\t侜张\n侏\tzyu1\t侏儒，侏罗纪\n侞\tjyu4\t均匀\n侒\ton1\t同「安」字\n侕\tji4\t众多的样子\n保\tbou2\t保护，保障，保证，保留，保持，保卫，保密\n侵\tcam1\t侵入，侵占，侵略，侵害，侵犯，侵占，侵袭，侵蚀，侵吞，侵扰，侵吞公款，侵凌，侵夺\n俏\tciu3\t俏丽，俊俏，打情骂俏，俏皮话，看俏，走俏，撒娇卖俏\n促\tcuk1\t促进，促销，促使，促成，促请，促膝，促狭，促销，催促，局促，窘促，仓促\n俘\tfu1\t战俘，俘虏\n俓\tging3\t(1)同「径」字；(2)直往；(3)经过\n局\tguk6\t局限，局促\n系\thai6\t关系\n侯\thau4\t侯爵，封侯，诸侯\n俙\thei1\t(1)诉讼时当面对质；(2)感动；(3)解\n俋\tjap1\t俋俋(耕地的样子)\n俣\tjyu5\t俣俣\n俅\tkau4\t俅俅恭顺的样子\n俚\tlei5\t俚语，俚俗，俚歌\n俐\tlei6\t俐落，伶俐，麻俐\n侣\tleoi5\t伴侣，情侣，僧侣\n俍\tloeng4\t善于\n侮\tmou5\t侮辱，侮蔑，外侮，御侮，欺侮\n俉\tng6\t同「迕」字，意指相遇\n俄\tngo4\t俄而，俄顷，俄延，俄罗斯顷刻\n俜\tping1\t伶俜侠客\n侲\tzan3\t童子\n俊\tzeon3\t俊杰，俊秀，俊材，俊俏，俊美，俊逸\n俎\tzo2\t刀俎，俎豆(泛指祭祀)，越俎代庖；(1)祭祀时盛牲体等祭品的器具；(2)切肉用的砧板\n俗\tzuk6\t俗语，风俗，俗气，习俗，俗套，俗缘，俗务，俗例，俗体，俗不可耐\n侺\tsam4\t俯首\n俀\tteoi2\t弱也\n私\tsi1\t家私(粤语用词，意为家具)\n俴\tcin5\t浅\n仓\tcong1\t仓库，仓储，仓促，仓皇，仓猝\n俷\tfai3\t(1)背弃、败坏；(2)薄\n倣\tfong2\t同「仿」字\n俯\tfu2\t俯首，俯视，俯瞰，俯拾，俯冲，俯仰\n倨\tgeoi3\t倨傲\n个\tgo3\t个人，个案，个性，个体，个别，个例，个子，个中滋味\n倌\tgun1\t倌人，堂倌\n倔\tgwat6\t倔强\n倦\tgyun6\t倦勤，疲倦，孜孜不倦，倦容，倦意，倦怠，厌倦，困倦，好学不倦，诲人不倦，鸟倦知还\n幸\thang6\t幸免，幸存，幸臣，宠幸\n候\thau6\t候补，候车，等候，拜候，征候\n倛\thei1\t(1)古代打鬼驱疫时带的面具；(2)同「魌」字\n倇\tjyun2\t(1)欢乐；(2)劝\n伦\tleon4\t伦理，伦常\n俩\tloeng5\t伎俩，夫妇俩\n们\tmun4\t你们\n倷\tnoi6\t吴方言用字，第二人称代词\n俳\tpaai4\t俳谐，俳优\n倗\tpang4\t同「朋」字\n修\tsau1\t修正，修改，修订，修理，修缮，修补，修养\n倠\tseoi1\t仳倠(面容丑陋)\n倜\ttik1\t倜傥，倜傥不群\n借\tze3\t借用，借款，借贷，借重，借镜，借尸还魂，借助，借题发挥，借出，借据，借酒浇愁，借债，借宿，借刀杀人，借口\n值\tzik6\t值得，值班，值勤，值日\n倧\tzung1\t传说中的上古神人\n倵\tmou5\t人名用字\n倯\tsung1\t(1)懒隋；(2)愚蠢\n倱\twan6\t倱伅(蒙昧无知)\n倎\ttin2\t同「腆」字\n偪\tbik1\t偪仂，偪仄，偪侧\n偆\tceon2\t富有\n偩\tfu6\t(1)依照；(2)依赖\n健\tgin6\t健康，健全，健将，健壮，健儿，健谈，健忘，刚健\n偌\tje6\t偌大，偌多；(1)如此；(2)这么\n偯\tji2\t哭泣余声\n偞\tjip6\t轻\n伪\tngai6\t真伪，伪造，伪君子，伪装，伪证，伪药，伪善，伪证罪\n偶\tngau5\t偶尔，偶像，偶而，偶然，偶发，偶遇，偶一为之，偶发性，偶数\n偏\tpin1\t偏差，偏僻，偏向，偏好，偏爱，偏袒，偏见，偏执，偏激，偏心，偏私，偏旁\n偋\tbing2\t(1)隐僻无人的地方；(2)同「屏」字\n倕\tseoi4\t人名\n偰\tsit3\t人名，传说中殷人的祖先\n倏\tsuk1\t倏地，倏忽，倏然\n偍\ttai4\t同「媞」字\n偷\ttau1\t偷渡，偷窃，偷走，偷懒，偷偷摸摸，偷窥，偷袭，偷天换日，偷情，偷鸡摸狗，偷空，偷听\n停\tting4\t停止，停留，停火\n伟\twai5\t伟大，伟人，伟业\n偟\twong4\t傍偟\n偎\twui1\t偎倚，偎傍\n偺\tzaa1\t同「咱」字\n偡\tzaam3\t偡然\n侧\tzak1\t侧面，侧目，侧门，侧重，侧耳，侧身，侧边，侧卧，侧室，侧睡\n偳\tzeoi3\t细小\n侦\tzing1\t侦查，侦破，侦测，侦察，侦缉\n做\tzou6\t做法，做到，做成，做人，做梦\n偛\tzaap3\t皮皱\n偅\tzung3\t老态儱偅(即老态龙钟)\n偣\tjim1\t女性思想不纯正\n偤\tjau4\t服侍\n偀\tjing1\t同「英」字，「偀」是「英」的俗写\n偮\tzap1\t人多的样子\n偗\tsaang2\t(1)直的样子；(2)长的样子\n㐽\tfung1\t(1)姓氏；(2)地名\n备\tbei6\t备用，备查，备案，备而不用\n傎\tdin1\t颠倒错乱\n家\tgaa1\t家具，家伙，家具\n杰\tgit6\t杰出，杰作，英雄豪杰\n傕\tgok3\t姓氏\n傚\thaau6\t模傚，仿傚\n傔\thim3\t傔卒，傔从\n傜\tjiu4\t同「徭」字\n㐷\tmaa6\t同「骂」字\n伞\tsaan3\t伞兵，雨伞，跳伞\n傃\tsou3\t(1)趋向、向著；(2)经常\n傝\ttaap3\t不谨慎\n傂\tzi6\t偨傂(参差不齐)，傂祁(古地名)，；(1)参差不齐；(2)车轮\n傇\tjung5\t众多\n傺\tcai3\t欿傺(陷于停滞)，侘傺(不得志貌)留住、停留\n傶\tcau3\t(1)邑名；(2)姓氏；(3)亲近；(4)腠理\n催\tceoi1\t催促，催眠，催泪弹，催逼，催化剂\n佥\tcim1\t佥谋，佥同，佥议，佥押，佥望，打佥；(1)全部；(2)众人的代称\n傿\tjin1\t姓氏\n伛\tjyu2\t伛偻\n倾\tking1\t倾倒，倾向，倾斜，倾心\n僆\tlin5\t(1)小鸡；(2)双胞胎\n僇\tluk6\t同「戮」字\n僈\tmaan6\t轻视怠慢\n傲\tngou6\t傲慢，傲视，傲人，傲世，傲骨，傲然，傲气\n僊\tsin1\t同「仙」字\n傻\tso4\t傻瓜，傻子，傻事，傻话，傻笑\n伤\tsoeng1\t伤害，伤亡，伤者，伤心，伤势，伤口，伤痕，伤人，伤残，伤感，伤痕累累，伤天害理，伤风，伤兵\n傱\tsung2\t傱傱(疾进的样子)\n债\tzaai3\t债务，公债，债券，债权\n傽\tzoeng1\t傽偟\n傸\tcong2\t恶也\n仆\tbuk6\t仆人，奴仆，女仆，仆从\n僤\tdaan6\t(1)疾速；(2)厚\n僩\thaan5\t僩然，瑟兮僩兮；(1)宽大；(2)威武\n僖\thei1\t喜乐\n僛\thei1\t僛僛\n侨\tkiu4\t侨民，归侨，侨胞，侨居，华侨\n僗\tlou4\t呆僗\n僳\tsuk1\t少数文族名\n僓\tteoi4\t(1)顺；(2)长好的样子\n僣\tzim3\t同「僭」字\n像\tzoeng6\t像样，肖像，画像，塑像\n僔\tzyun2\t聚集\n僠\tbo1\t僠僠(形容勇敢)\n儊\tco2\t不滑\n价\tgaa3\t价格，价值，价位，价钱，价廉物美\n僸\tgam3\t(1)仰头貌；(2)北夷乐名\n俭\tgim6\t俭约，节俭\n儆\tging2\t儆戒，杀一儆百，以儆效尤，儆惕，惩一儆众\n僵\tgoeng1\t僵持，僵局，僵硬，僵固，僵住\n儇\thyun1\t儇子，妆儇，儇薄无行\n仪\tji4\t仪表，仪容，仪式\n亿\tjik1\t亿万，亿兆\n僶\tman5\t僶勉\n侬\tnung4\t侬语，偎侬，侬本多情\n侪\tcaai4\t侪辈，朋侪，同侪，吾侪，友侪，侪居同辈、同类的人\n俦\tcau4\t俦伴，俦俪，朋俦\n儒\tjyu4\t儒学，儒者，儒雅，硕儒，宿儒\n儓\ttoi4\t古代对下层奴仆的称谓\n尽\tzeon2\t尽管，尽意随心\n儚\tmung4\t儚儚(昏乱迷惑的样子)\n儑\tngaam4\t不慧\n儦\tbiu1\t行人众多的样子\n优\tjau1\t优先，优势，优良，优秀，优待，优异，优点，优美，优胜，优雅，优劣，优越，优厚，优胜劣败，优柔寡断\n儡\tleoi5\t傀儡\n儢\tleoi5\t(1)懒散、不勤奋；(2)心不平\n儠\tlip6\t(1)高壮；(2)凶恶的样子\n偿\tsoeng4\t偿还，补偿，血债血偿，偿命，赔偿，抵偿，索偿，无偿契约，得偿所愿，得不偿失，如愿以偿\n儤\tbou3\t(1)古代官吏连日值班；(2)考场外代笔人\n儭\tcan3\t儭钱\n儱\tlung5\t儱侗(含混)，老态儱偅(即老态龙钟)\n儮\tlik6\t人名用字\n儰\twai5\t船动摇的样子\n儴\tjoeng4\t依循、沿袭\n儵\tsuk1\t同「倏」字\n俪\tlai6\t俪影，俪词，伉俪\n㑩\tlo4\t偻㑩\n傩\tno4\t(1)迎神赛会以乐舞驱逐疫鬼；(2)柔美的样子\n俨\tjim5\t俨然，俨如\n傥\ttong2\t傥若，傥荡，倜傥\n介\tgaa3\t方言用字\n介\tgaai3\t介绍，媒介，煞有介事，介入，介质，介怀，介意，介胄，介词，中介，简介，评介，推介，耿介，狷介，一介不取\n仔\tzai2\t粤语用字，如「女仔」、「手巾仔」\n仔\tzi1\t仔肩\n仔\tzi2\t仔细，仔密\n仗\tzoeng3\t打仗，败仗\n仗\tzoeng6\t仗恃，依仗，仗义疏财，仗剑而立，仗义执言，仗势欺人，器仗\n份\tban1\t同「彬」字\n份\tfan6\t月份，年份，省份，股份，一式两份\n仿\tfong2\t仿古，模仿，仿佛，仿效，仿造，仿照，仿单\n仿\tpong4\t仿偟，仿佯\n价\tgaai3\t价绍，价人\n伎\tgei6\t伎俩\n伎\tkei4\t伎伎(行步舒缓的样子)\n任\tjam4\t姓氏\n任\tjam6\t任何，任用，任免，任性，任命，任侠，任教，任期，任意，任职，任人唯贤，任重道远，放任，责任，委任\n仱\tkim4\t古中国北方少数民族的一种乐曲\n仱\tging1\t同「矜」字\n伯\tbaa3\t同「霸」字\n伯\tbaak3\t伯父，伯仲，伯劳，伯乐，伯道无儿，世伯，叔伯\n体\tban6\t同「笨」字\n佛\tbat6\t佛肸(春秋时人)同「弼」字\n佛\tfat1\t仿佛\n佛\tfat6\t佛教，活佛，佛口蛇心，佛法，佛牙，佛手，佛性，佛陀，佛门，佛堂，佛龛，佛头著粪，立地成佛\n伽\tgaa1\t伽马射线\n伽\tke4\t伽蓝\n估\tgu2\t估计，估价，低估\n估\tgu3\t估衣\n何\tho4\t何必，如何，何况，何苦，何足挂齿，如何\n何\tho6\t同「荷」字\n佚\tjat6\t佚失，佚游\n佚\tdit6\t佚宕\n佰\tbaak3\t同「百」字，「佰」是「百」的大写\n佰\tmak6\t同「陌」字\n供\tgung1\t供给，供应，口供\n供\tgung3\t供品，供养，供奉\n佬\tliu4\tlou5\n佬\tlou2\t口语用字，称成年男性\n佬\tlou5\t仡佬\n侄\tzat1\t坚牢\n侄\tzat6\t同「姪」字\n佫\tgaak3\t到达\n佫\thok6\t姓氏\n侳\tco3\t同「挫」字\n侳\tzo6\t同「坐」字\n俛\tmin5\t通「勉」字\n俛\tfu2\t同「俯」字\n俇\tgwaang6\t俇俇\n俇\thong1\t俇攘\n伣\tjin5\t(1)间见；(2)同「𪾢」字\n伣\tjin6\t譬喻\n俟\tkei4\t万俟(复姓)\n俟\tzi6\t俟候，俟命，俟机行事，修谨以俟，韬光俟奋等待\n信\tsan1\t通「伸」字\n信\tseon3\t信心，信徒，信号，电信\n侻\tteoi3\t美好\n侻\ttyut3\t通侻\n俖\tpoi2\t(1)不肯；(2)诳妄\n俖\tpui5\t同「倍」字，「俖」是「倍」的古字\n俾\tpai3\t俾倪\n俾\tbei2\t使\n倡\tcoeng1\t倡优\n倡\tcoeng3\t倡议，提倡，倡导，倡言，首倡，一倡百和\n俶\ttik1\t俶傥\n俶\tcuk1\t俶装，俶扰\n倒\tdou2\t倒戈，倒闭，倒台，倒胃口，跌倒，颠倒\n倒\tdou3\t倒叙，倒退，倒挂，倒贴，倒置，倒悬，倒行逆施，倒果为因，倒持泰阿\n倞\tging6\t强\n倞\tloeng6\t天倞，光倞\n倚\tkei1\t通「畸」字\n倚\tji2\t倚赖，倚重，倚靠，倚天，倚仗，倚门，倚望\n倪\tngai4\t端倪\n倪\tngai6\t俾倪\n倘\tsoeng4\t倘佯\n倘\ttong2\t倘若，倘使\n偢\tcau2\t偢采，偢问\n偢\tciu2\t方言用字，意指\n假\tgaa2\t假充，假扮，假冒，假托，假借，假设，假象，假想敌，假面具，假惺惺，假道学，假手于人，假公济私，真假\n假\tgaa3\t假期，放假，渡假，寒假，暑假\n偈\tgai2\t粤语用字\n偈\tgai6\t偈语，佛偈，偈子，偈颂\n偈\tgit6\t(1)勇武；(2)疾驰\n傍\tbong6\t傍晚，傍人门户，傍人篱壁，依傍，依山傍水\n傍\tpong4\t同「旁」字\n傀\tfaai3\t傀儡，傀儡皇帝，傀儡政权\n傀\tgwai1\t傀奇，傀伟，傀然\n傅\tfu1\t同「敷」字\n傅\tfu6\t师傅，傅粉\n傒\thai4\t傒幸\n傒\thai6\t通「系」字\n傛\tjung4\t傛华\n傛\tjung6\t不安\n傋\tgau3\t傋霿(愚昧无知)\n傋\tgong2\t用来形容不媚的样子\n傮\tcou4\t通「曹」字\n傮\tzou1\t同「遭」字\n传\tcyun4\t传人，传世，传言，传染，传神，传教，传授，传媒，传统，传说，传达，传诵，传播，传宗接代，宣传，流传，言传身教\n传\tzyun3\t传马，传置，传驿\n传\tzyun6\t传记，传诘，传略，自传，经传\n佣\tcung1\t圴等\n佣\tjung2\t佣金\n佣\tjung4\t佣工，雇佣\n傰\tbang1\t(1)朋党；(2)同「绷」字\n傰\tpang4\t姓氏\n僋\ttaam2\t无检\n僋\ttaam3\t(1)老无宜适；(2)痴貌；(3)不净\n僚\tliu4\t僚属，官僚\n僚\tliu5\t同「嫽」字\n僚\tlou5\t部分小数民族的泛称\n僝\tsaan4\t僝僽\n僝\tzaan6\t(1)显现；(2)具备\n僬\tziu1\t僬侥\n僬\tziu3\t僬眇，僬僬\n僪\tjyut6\t太阳旁边的云气\n僪\tkyut3\t狂僪(发狂)\n僯\tleon5\t羞惭\n僯\tleon6\t同「遴」字\n儋\tdaam1\t儋石，家无儋石；(1)盛物的器具，可容纳一石谷物；(2)同「担」字；(3)姓氏\n儋\tdaam3\t同「甔」字\n儅\tdong1\t停止\n儅\tdong3\t伄儅(不经常)\n傧\tban1\t尊敬\n傧\tban3\t傧相，傧从，傧接\n儗\tji5\t(1)同「拟」字；(2)僭越\n儗\tji6\t佁儗\n儥\tdik6\t同「觌」字\n儥\tduk6\t动也\n儥\tjuk6\t买卖\n儽\tleoi4\t儽然而殆，儽儽\n儽\tleoi5\t病困\n仂\tlak6\t仂语(文法上不成句的词组)，偪仂(胁逼)\n仂\tlik6\t「仂lak6」的异读字\n他\ttaa1\t他日，他乡，其他\n他\tto1\t「他taa1」的异读字\n伏\tbuk6\t「伏fuk6」的异读字\n伏\tfuk6\t伏刃，伏法，伏贴，伏兔，伏流，伏案，伏寇，伏惟，伏笔，伏诛，伏羲，伏击，三伏，埋伏，制伏，俯伏，老骥伏枥\n仰\tjoeng5\t仰卧，仰泳，仰承，仰望，仰给，仰慕，仰人鼻息，仰韶文化，仰天大笑，俯仰\n仰\tngong5\t「仰joeng5」的异读字\n伋\tgap1\t「伋kap1」的异读字\n伋\tkap1\t人名用字\n企\tkei2\t「企kei5」的异读字\n企\tkei5\t企及，企立，企求，企盼，企业，企图，企予望之，企足而待，企者不立，企踵可待\n伴\tbun6\t伴侣，伙伴，结伴同行，伴奏，伴娘，伴当，伴读，伴食宰相，良伴，陪伴\n伴\tpun5\t「伴bun6」的异读字，口语读音\n佃\tdin6\t佃户，佃客\n佃\ttin4\t「佃din6」的异读字\n佢\theoi5\t「佢keoi5」的异读字\n佢\tkeoi5\t粤语用字，第三人称代名词\n佁\tci3\t痴呆的样子\n佁\tji5\t「佁ci3」的异读字\n佝\tgau1\t「佝kau3」的异读字\n佝\tkau3\t佝偻\n佝\tkeoi1\t「佝kau3」的异读字\n伻\tpaang1\t「伻ping1」的异读字\n伻\tping1\t使者\n位\twai2\t「位wai6」的异读字\n位\twai6\t位置，位子，地位，位居，位居要津，位极人臣\n伺\tsi6\t「伺zi6」的异读字\n伺\tzi6\t伺候，窥伺，伺机而动，伺服器，强敌环伺\n伿\tji6\t(1)懈怠；(2)不敬\n伿\tzi3\t「伿zi3」的异读字\n侐\tgwik1\t清静\n侐\tkwik1\t「侐gwik1」的异读字\n侃\thon2\t侃侃而谈\n侃\thon3\t「侃hon2」的异读字\n侉\tkwaa1\t「侉kwaa2」的异读字\n侉\tkwaa2\t侉大，骄淫矜侉\n侚\tseon1\t同「徇」字\n侚\tseon6\t「侚seon1」的异读字\n佻\ttiu1\t「佻tiu4」的异读字，但不用于「佻佻」一词\n佻\ttiu4\t佻薄，佻达，轻佻，佻脱，躁佻，佻佻(独行的样子)轻薄、不庄重\n佮\tdaap6\t「佮gap3」的异读字\n佮\tgap3\t相合、聚合、通力合作\n侠\thaap6\t侠客，豪侠，武侠\n侠\thap6\t「侠haap6」的异读字\n俑\tjung2\t陶俑，始作俑者\n俑\tjung5\t「俑jung2」的异读字\n侹\tting2\t「侹ting5」的异读字\n侹\tting5\t平直\n俵\tbiu2\t俵分，俵散\n俵\tbiu3\t「俵biu2」的异读字\n倅\tceoi3\t倅车，倅贰副的\n倅\tzeot1\t「倅ceoi1」的异读字\n倬\tcoek3\t颢著\n倬\tzoek3\t「倬coek3」的异读字\n俸\tfung2\t俸禄，薪俸\n俸\tfung6\t「俸fung2」的异读字\n俱\tgeoi1\t「俱keoi1」的异读字\n俱\tkeoi1\t与生俱来，两败俱伤，声泪俱下，俱乐部\n俺\taan2\t「俺jim3」的异读字\n俺\tjim3\t方言\n倍\tbui3\t「倍pui5」的异读字\n倍\tpui5\t倍数，倍蓰\n倳\tzi3\t同「剚」字\n倳\tzi6\t「倳zi3」的异读字\n倰\tling4\t倰蹬(行走疲惫)\n倰\tling6\t「倰ling4」的异读字\n偓\tak1\t偓佺(仙人名)；(1)拘束的样子；(2)多用于人名\n偓\tngak1\t「偓ak1」的异读字\n偝\tbui3\t「偝bui6」的异读字\n偝\tbui6\t(1)背弃；(2)背向著\n偕\tgaai1\t偕同，偕行，偕老\n偕\thaai4\t「偕gaai1」的异读字\n偊\tgeoi2\t「偊jyu5」的异读字\n偊\tjyu2\t「偊jyu5」的异读字\n偊\tjyu5\t形容独行\n偃\tjim2\t「偃jin2」的异读字\n偃\tjin2\t偃卧，偃旗息鼓，偃武修文\n偠\tjiu2\t偠绍\n偠\tjiu5\t「偠jiu2」的异读字\n偭\tmin5\t(1)向；(2)违背\n偭\tmin6\t「偭min5」的异读字\n偫\tci5\t「偫zi6」的异读字\n偫\tzi6\t偫积\n偨\tci1\t「偨zi1」的异读字\n偨\tzi1\t偨池\n傞\tco1\t傞傞\n傞\tso1\t「傞co1」的异读字\n伧\tcaang1\t「伧cong1」的异读字\n伧\tcam2\t「伧cong1」的异读字\n伧\tcong1\t寒伧，伧俗\n傣\tdaai2\t「傣taai3」的异读字\n傣\ttaai3\t傣族\n仅\tgan2\t仅见，不仅，硕果仅存\n仅\tgan6\t「仅gan2」的异读字\n偻\tlau4\t佝偻，垂白上偻\n偻\tleoi5\t「偻lau4」的异读字\n僄\tpiu1\t「僄piu3」的异读字\n僄\tpiu3\t僄悍\n僄\tpiu5\t「僄piu3」的异读字\n偬\tzung2\t倥偬，戎马倥偬\n偬\tzung3\t「偬zung2」的异读字\n僰\tbaak6\t我国古代少数民族之一\n僰\tbat6\t「僰baak6」的异读字\n僰\tbok3\t「僰baak6」的异读字\n僭\tcim3\t「僭zim3」的异读字\n僭\tcim5\t「僭zim3」的异读字\n僭\tzim3\t僭越，僭建，僭妄，僭称，僭号；(1)越分以行事；(2)假冒上位者之名义\n偾\tfan3\t「偾fan5」的异读字\n偾\tfan5\t偾事，偾兴\n僧\tsang1\t「僧zang1」的异读字\n僧\tzang1\t僧尼，僧侣，僧俗，僧多粥少，高僧\n僦\tzau3\t「僦zau6」的异读字\n僦\tzau6\t租赁\n儌\tgiu1\t儌幸\n儌\tgiu2\t「儌giu1」的异读字\n儌\thiu1\t「儌giu1」的异读字\n侩\tkui2\t市侩，牙侩\n侩\tkui3\t「侩kui2」的异读字\n僾\toi3\t唈僾(气郁不顺快)隐约、仿佛\n僾\tngoi3\t「僾oi3」的异读字\n僻\tpik1\t僻静，僻远，僻壤，僻巷\n僻\tbui6\t「僻pik1」的异读字\n僿\tsai3\t「僿si3」的异读字\n僿\tsi1\t无诚意\n僽\tzau3\t僝僽\n僽\tzau6\t「僽zau3」的异读字\n儜\tnang4\t「儜ning4」的异读字\n儜\tning4\t儜奴，儜弱，伧儜弱小\n儩\tci3\t有时而儩(新唐书•李密列传)尽了\n儩\tsi3\t「儩ci3」的异读字\n储\tcyu1\t「储cyu5」的异读字\n储\tcyu4\t「储cyu5」的异读字\n储\tcyu5\t储君，储值，储蓄，储存，储备\n儹\tzaan2\t汇聚\n儹\tzyun2\t「儹zaan2」的异读字\n仇\tcau4\t「仇sau4」的异读字\n仇\tkau4\t姓氏\n仇\tsau4\t仇恨，仇怨，仇敌，仇刹，仇视，仇隙，冤仇，报仇，疾恶如仇\n仆\tfu6\t仆倒，仆顿，前仆后继\n仆\tpuk1\t「仆fu6」的异读字，口语读音\n什\tzaap6\t「什sap6」的异读字，用于「什物」一词\n什\tsam6\t什么(甚么)\n什\tsap6\t什锦，什一，篇什，什物，什件，什器，什袭，家什，鸠摩罗什\n令\tlim1\t「令ling1」的异读字\n令\tling1\t一令纸(口语字，英文量词ream的中译)\n令\tling4\t令狐(古地名/姓氏)\n令\tling5\t「令ling1」的异读字\n令\tling6\t令箭，命令，令人发指，令郎，令嗣，令尊，时令，法令\n仡\tgat1\t「仡go1」的异读字\n仡\that1\t「仡ngat6」的异读字\n仡\tngat6\t仡仡\n仡\tgo1\t仡佬族\n休\tjau1\t休闲，休息，休假，休会，休憩，休克，休养，休止，休想\n休\tnau2\t休屠(匈奴王号)\n休\theoi2\t「休jyu3」的异读字\n休\tjyu3\t同「煦」字\n佣\tjung2\t佣金，回佣\n佣\tjung6\t「佣jung2」的异读字\n佗\ttaa1\t「佗to1」的异读字\n佗\tto1\t通「他」字\n佗\tto4\t华佗负荷\n占\tcim1\t占毕\n占\tzim1\t「占cim1」的异读字\n占\tzim3\t占据，霸占，占尽先机，占便宜，占领，占地，占有，侵占\n并\tbing3\t并吞，合并，并发症，归并，并拢\n并\tping3\t「并bing3」的异读字\n佶\tgat1\t壮健貌\n佶\tgit3\t「佶git6」的异读字\n佶\tgit6\t佶屈聱牙\n佴\tnaai6\t「佴noi6」的异读字\n佴\tji5\t「佴ji6」的异读字\n佴\tji6\t(1)停留；(2)置\n佴\tnoi6\t姓氏\n来\tlai4\t「来loi4」的异读字\n来\tloi4\t来往，来世，来历，来龙去脉，未来\n来\tloi6\t劳来\n使\tsai2\t「使si2」的异读字\n使\tsi2\t使女，使用，使性，使气，支使\n使\tsi3\t使者，使命，使馆，使节，大使，出使\n侗\tdung6\t侗族\n侗\ttung2\t「侗tung4」的异读字\n侗\ttung4\t倥侗，儱侗\n便\tbin2\t「便bin6」的异读字，用于「随便」一词\n便\tbin6\t便利，方便，便条，便捷，便饭，便当，便衣，便服，便溺，便秘，随便，简便\n便\tpin4\t便宜，便给，大腹便便，口舌便给\n俞\tjyu4\t俞允姓氏\n俞\tjyu6\t「俞jyu4」的异读字\n俞\tsyu3\t俞穴\n伥\tcaang1\t「伥coeng1」的异读字\n伥\tcaang4\t独立貌\n伥\tzan3\t童子，特指用以逐鬼的童男童女\n伥\tcoeng1\t伥伥，伥鬼，为虎作伥\n倥\thung1\t倥侗\n倥\thung2\t倥偬，戎马倥偬\n倥\thung3\t「倥hung2」的异读字\n倩\tsin3\t倩影，倩装，倩俏，倩盼\n倩\tsin6\t「倩sin3」的异读字\n倩\tcing3\t倩人执笔\n倓\tdaam6\t(1)「倓taam4」的异读字；(2)通「赕」字\n倓\ttaam4\t倓然\n倭\twai1\t倭迟\n倭\twai2\t「倭wai1」的异读字\n倭\two1\t倭人，倭刀，倭瓜，倭寇\n倭\two2\t倭堕髻\n倢\tzip3\t「倢zit3」的异读字\n倢\tzit3\t汉代官中女官名\n倢\tzit6\t同「捷」字\n偁\tcan3\t「偁cing3」的异读字\n偁\tcing1\t同「称」字\n偁\tcing3\t同「称」字，用于「称心」等词\n偲\tcaai1\t多才\n偲\tsi1\t偲偲(朋友互相责勉)\n偲\tsoi1\t「偲caai1」的异读字\n僁\tsat1\t「僁sit3」的异读字\n僁\tseot1\t用来形容不安的心情\n僁\tsit3\t象声词，形容草动\n侥\tgiu1\t「侥hiu1」的异读字\n侥\tgiu2\t「侥hiu1」的异读字\n侥\thiu1\t侥幸\n侥\tjiu4\t僬侥\n僮\tzong3\t「僮zong6」的异读字\n僮\tzong6\t少数民族名\n僮\ttung4\t僮仆，书僮\n僎\tzaan6\t(1)供置；(2)具\n僎\tzeon1\t典礼饮宴时辅佐主人行仪节的人\n僎\tzyun1\t「僎zeon1」的异读字\n儃\ttaan2\t儃儃\n儃\tsin4\t儃徊\n儃\tzin1\t「儃sin4」的异读字\n儳\tcaam3\t儳道，儳言\n儳\tcaam4\t不整齐\n儳\tzaam6\t「儳caam3」的异读字\n兀\tngat6\t兀立，突兀，兀坐\n兀\tngat6\t同「兀」字\n元\tjyun4\t元旦，元首，元宵，元气，元素，元帅，元凶，状元\n充\tcung1\t充分，充满，充实，充斥，充裕，充足，充沛，充公\n光\tgwong1\t光复，光明，光荣，光辉，光彩，光线，光临\n凶\thung1\t凶嫌，凶手，凶杀，凶猛，凶恶，凶悍，凶案，凶残\n兆\tsiu6\t兆头，恶兆，梦兆熊罴，兆赫，朕兆，预兆，不祥之兆\n兔\ttou3\t兔子，兔死狐悲，守株待兔，动如脱兔，狡兔三窟\n兜\tdau1\t兜售，兜风，兜肚\n兟\tsan1\t进\n兢\tging1\t兢兢业业，战战兢兢\n允\twan5\t允许，允诺，允当，允准，允文允武，应允\n允\tjyun4\t允吾(甘肃省县名)\n兄\thing1\t兄弟，称兄道弟，兄友弟恭，兄长，兄嫂，兄妹，仁兄，义兄，父兄\n兄\tfong3\t同「况」字\n免\tman6\t同「絻」字\n免\tmin5\t免去，免役，免俗，免税，免费，免礼，免疫力，免开尊口，避免，难免\n儿\tngai4\t姓氏\n儿\tji4\t儿童，弄潮儿，儿女情长，男儿，健儿，儿戏，一会儿\n先\tsin1\t先生，先民，先考，先妣，先知，先哲，先烈，先进，先锋，先驱，先入为主，先见之明，先斩后奏，先发制人，先睹为快，先声夺人\n先\tsin3\t「先sin1」的异读字\n克\thaak1\t「克hak1」的异读字\n克\thak1\t克己，克服，克制，克复，克敌，克己复礼，克勤克俭，攻克，以柔克刚\n兕\tci5\t「兕zi6」的异读字\n兕\tzi3\t「兕zi6」的异读字\n兕\tzi6\t雌犀牛\n兖\tjin2\t「兖jin5」的异读字\n兖\tjin5\t兖洲(山东省县名)\n儿\tngai4\t「儿ji4」的异读字\n儿\tjan4\t(1)部首；(2)同「人」字\n兑\tdeoi3\t兑现，汇兑，兑换率，兑付，兑卦\n兑\tdeoi6\t「兑deoi3」的异读字\n兑\tjeoi6\t同「锐」字\n入\tjap6\t入境，加入，出入，入口，列入，放入\n屳\tsin1\t同「仙」字\n全\tcyun4\t全面，全力，全体，全盘，全力以赴，全军覆没，全神贯注，全心全意，两全其美，顾全大局\n内\tnaap6\t同「纳」字\n内\tnoi6\t内容，内疚，内忧外患，内外，内阁，内政，内情，内涵，内向，内陆，内战，内乱，内科，内衣，内阁制，内人，内哄\n两\tloeng2\t「两loeng5」的异读字，只用于「斤两」一词\n两\tloeng5\t两边，两岸，斤两\n两\tloeng6\t同「辆」字\n八\tbaat3\t八卦，八仙，八方，八面玲珑，八行书\n公\tgung1\t公司，公开，公园，公平，公路，公民，公正\n兮\thai4\t助词，表感叹或肯定\n六\tluk6\t六神无主，七情六欲，身怀六甲，六艺，六经，六合，六朝，六书，六根清静，六亲不认，六畜旺相\n弚\tteoi4\t弚靡(穷困)\n兵\tbing1\t兵役，兵器，兵荒马乱，兵法，兵卒，兵戎相见，兵不厌诈，兵兵球\n典\tdin2\t典礼，典型，典当，典藏，典范，典狱长，典雅，典故，典章，典籍，典试委员会，典试，典型人物，典卖\n具\tgeoi6\t具备，具体，工具，用具，文具，阳具\n兼\tgim1\t兼职，兼备，兼顾\n共\tgung1\t(1)通「恭」字；(2)通「供」字\n共\tgung2\t同「拱」字\n共\tgung6\t共同，公共，患难与共，共性，共和国，共和制，总共，共襄盛举\n其\tgei1\t夜如何其，郦食其\n其\tgei6\t语助词\n其\tkei4\t其次，其他，其实，其余，其势汹汹，其貌不扬，其应若响\n冀\tgei3\t「冀kei3」的异读字\n冀\tkei3\t冀望\n册\tcaak3\t册子，册封，册页，册立\n冉\tjim5\t冉冉(逐渐/柔弱下垂的样子)\n再\tzoi3\t再次，再见，再现，再接再厉，再婚，再会\n冏\tgwing2\t同「囧」字\n胄\tzau6\t介胄(披甲戴盔)，贝胄，躬擐甲胄\n冔\theoi2\t殷冠名\n冕\tmin5\t冠冕，加冕，冠冕堂皇，卫冕，沐猴冠冕\n冒\tmak6\t冒顿(汉初匈奴单于名)，贪冒，贪荣冒宠\n冒\tmou6\t冒充，冒昧，冒险，假冒\n冇\tmo5\t「冇mou5」的异读字\n冇\tmou5\t没有\n冓\tgau3\t中冓\n冓\tkau3\t「冓gau3」的异读字\n冞\tmei4\t(1)更加；(2)深入\n冤\tjyun1\t冤枉，冤狱，冤情，冤冤相报，冤家路窄，沉冤莫白，蒙冤\n幂\tmik6\t幂幂，降幂，乘幂；(1)覆盖器物的布；(2)覆盖；(3)数学中一数自乘的「次方」\n冘\tjam4\t冘冘(行进)\n冘\tjau4\t冘豫(同犹豫)\n冠\tgun1\t冠冕，冠盖，冠心病，王冠，衣冠，花冠，鸡冠，冠状病毒；(1)帽子；(2)事物顶端的东西\n冠\tgun3\t冠军，冠礼，弱冠，未冠，勇冠三军，冠山戴粒基本上作动词用\n冗\tjung2\t冗长，冗员，冗繁，烦冗，拨冗\n冗\tjung5\t「冗jung2」的异读字\n冥\tming4\t冥想苦思，幽冥，冥顽不灵，冥王星，冥合，冥府地狱\n冥\tming5\t「冥ming4」的异读字\n冬\tdung1\t冬季，立冬，冬暖夏凉，冬天，冬至，冬风，冬装，冬瓜，冬菇，冬眠，隆冬，过冬，秋收冬藏，残冬腊月\n冱\twu6\t同「沍」字\n冶\tje5\t冶金，冶铁，冶炼\n冷\tlaang5\t冷冻，冷气，冷却，冷静，冷战，冷清，冷淡，冷藏，冷漠，冷汗，冷门，冷落，冷饮，冷酷，冷眼，冷箭，冷冰冰，冷艳，冷血\n冹\tfat1\t(1)寒冰；(2)寒冰的样子\n冽\tlit6\t凛冽，栗冽，泠冽\n冼\tsin2\t姓氏\n冾\thaap6\t同「洽」字\n凋\tdiu1\t凋零，凋谢，凋敝，凋萎；(1)枯萎；(2)衰落\n冻\tdung3\t冻结，冻伤，冻僵，冻疮，冰冻\n凎\tgam3\t醇凎(化学名词)\n凌\tling4\t凌厉，凌乱，凌驾，凌辱，凌云壮志，欺凌，恃势凌人\n准\tzeon2\t准予，准许，准考证，准将，准假，批准\n凅\tgu3\t凝结\n凐\tjan1\t寒貌\n凘\tsi1\t凘冰\n凛\tlam5\t凛冽，凛然，凛凛\n凞\thei1\t和熙\n冰\tbing1\t冰雹，结冰，冰释前嫌，冰棒，冰窖，冰凉，溜冰，冰淇淋，电冰霜，破冰船，冷冰冰，冰清玉洁，冰天雪地，冰河时期，冰雪聪明，冰封三尺\n冰\tjing4\t同「凝」字\n净\tzeng6\t「净zing6」的异读字，用于「干净」一词\n净\tzing6\t净重，干净，纯净\n凊\tcing3\t「凊zing6」的异读字\n凊\tzing6\t冬温夏凊(《礼记˙曲礼上》所载之孝行)寒凉\n凔\tcong1\t(1)水暗绿色；(2)寒冷\n凔\tcong3\t「凔cong1」的异读字\n凗\tceoi1\t「凗ceoi4」的异读字\n凗\tceoi4\t用以形容霜雪积聚\n凝\tjing4\t凝视，冷凝，凝神静听，混凝土，凝结，凝重，凝脂，凝滞，凝聚\n凝\tking4\t「凝jing4」的异读字\n凡\tfaan4\t凡是，凡人，凡间，平凡，凡夫俗子\n凰\twong4\t凤凰，凤凰木，凤求凰\n凳\tdang3\t凳子，板凳\n几\tgei1\t茶几，炕几，窗明几净\n几\tgei2\t「几gei1」的异读字\n凯\thoi2\t凯旋，凯歌，奏凯而归，凯风，凯复\n凯\tngoi2\t「凯hoi2」的异读字\n凶\thung1\t凶器，凶手，凶猛，凶狠，凶多吉少\n出\tceot1\t出现，进出，出生入死，出色，出口，出席，出售，出版，出租，出缺，出身，出类拔萃，出尔反尔，出乎意料，出双入对，付出，不世出，别出机杼\n函\thaam4\t函件，函索，函令，函授，函购，函授班，函数，崤函之固\n凹\twaa1\t「凹nap1」的异读字\n凹\taau1\t「凹nap1」的异读字\n凹\taau3\t「凹nap1」的异读字\n凹\tngaau1\t「凹nap1」的异读字\n凹\tlap1\t「凹nap1」的异读字\n凹\tnap1\t凹陷，下凹，凹凸不平，凹透镜\n凸\tdat6\t凸透镜，凹凸，挺胸凸肚，凸起，凸出，凸版印刷\n凸\tgu2\t「凸dat6」的异读字，用于「凸起」一词\n凵\tham2\t「凵ham3」的异读字\n凵\tham3\t部首\n凵\tjyu1\t国音字母韵母之一\n刁\tdiu1\t刁蛮，刁难，刁钻古怪，刁民，刁顽，刁滑，刁风拐月\n刀\tdou1\t刀叉，开刀，刀光剑影，刀枪，刀片，刀伤，刀痕，刀柄，刀械，刀背，刀刃，刀锋，刀俎，刀面，刀笔吏\n刃\tjan6\t刀刃，利刃，兵刃，兵不血刃，迎刃而解，游刃有余，手刃亲雠；(1)刀口；(2)兵器；(3)杀\n刈\tngaai6\t刈草，刈获，；(1)割取；(2)砍杀\n刌\tcyun2\t刌切；(1)割断、切断；(2)苏林曰：「刌，度也，知曲之终始节度也．」\n刉\tgei1\t切断\n刑\tjing4\t刑事，刑法，刑责，刑罚，服刑，刑克\n刓\tjyun4\t(1)削去棱角；(2)挖\n刖\tjyut6\t砍掉脚的酷刑\n刎\tman5\t刎颈，自刎，刎颈之交(生死之交)用刀割颈\n初\tco1\t初级，当初，初生之犊，初步，初选，初期，初审，初赛，初一，初衷，初犯，初中，初时，初学者，初稿，初试啼声，初生，初阶，初恋，初夏，初学，初冬，初诊，初秋，初等，初版，初旬，初春，初更，初度，初交\n刜\tfat1\t(1)用刀砍；(2)击\n利\tlei6\t利用，利率，利益，利润，利息，利器，利害，利己利人，福利，便利\n刨\tpaau4\t(1)掘；(2)除去\n判\tpun3\t判断，审判，判若两人，判决，判刑，判处，判定，判例，判别，判罪，判官，裁判，判若云泥\n删\tsaan1\t删除，删减，删改，删繁就简\n刞\tceoi3\t耕土而起\n刡\tman5\t刡削\n到\tdou3\t到底，到场，到处，到达，到期，到来，到任，碰到，到家，料到，报到，独到之见\n刳\tfu1\t刳斮，刳木为舟；(1)剖开；(2)挖空\n刮\tgwaat3\t刮伤，刮起，刮掉，刮痧，刮目相看\n刵\tji6\t割耳的酷刑\n制\tzai3\t制度，制定，制裁，制止，制式，制服，制订，制宪，制伏，制衡，制约，制动\n前\tcin4\t前后，前辈，前车之鉴，前往，前天，前途，前提，前夕，前景，前锋，前线，前瞻，前例，前所未有，前身，前因后果，前程，前卫，前言，前嫌，前功尽弃，前奏，前边，前尘，前列腺\n剉\tco3\t(1)折伤；(2)同「锉」字\n刭\tging2\t自刭用刀割颈\n削\tsoek3\t削弱，剥削，削足适履，削减，削平，削尖，削价，瘦削，削铁如泥，蜂腰削背，削发为尼\n剃\ttai3\t剃刀，剃头，剃发\n则\tzak1\t法则，规则，以身作则\n刚\tgong1\t刚才，金刚，刚愎自用，刚强，刚毅，刚烈，刚直，刚健，刚好，刚柔并济，刚巧\n剟\tzyut3\t刺剟；(1)割；(2)削减\n剫\tdok6\t裁割、加工木材\n剪\tzin2\t剪刀，裁剪，剪彩，剪贴，剪纸，剪断，剪辑，剪报，剪接，剪发，剪影，剪除，剪取\n割\tgot3\t割舍，割爱，割除，割让，割据，割草，割断，割开，割地，割破，割裂\n剻\tfau4\t一处在右扶风的乡名\n剼\tsaam1\t剪除灭绝\n劁\tciu4\t(1)切割；(2)阉割\n劀\tgwaat3\t刮掉烂肉脓血\n划\twaak6\t划分，划出，划一，划清界线\n剑\tgim3\t宝剑，剑术，剑兰，剑及履及，舌剑唇枪\n刿\tgwai3\t(1)伤；(2)割\n剧\tkek6\t剧团，剧场，剧本，剧院，剧情\n刽\tkui2\t刽子手\n刘\tlau4\t虔刘(蹂躏)；(1)姓氏；(2)杀戮；(3)斧钺一类的兵器\n劓\tji6\t割鼻的酷刑\n劘\tmo4\t切削\n切\tcai3\t一切，一切法，目空一切\n切\tcit3\t切磋，密切，切实，切合，切割，切口，切题，反切，贴切，关切，恳切，急切，切肤之痛，不切实际，拊膺切齿，刀切斧砍\n分\tfan1\t分寸，分心，分功，分手，分化，分别，分身，分析，分歧，分明，分居，分封，分红，分配，分娩，分野，分裂，分解，分号，分赃，分庭抗体，分崩离析，分道扬镳，积分\n分\tfan6\t分外，分量，名分，成分，身分，过分\n别\tbit3\t别扭(同别扭)\n别\tbit6\t别人，别墅，别致，别号，别离，别名\n刷\tcaat3\t刷新，毛刷，洗刷，粉刷\n刷\tsaat3\t刷白，刷选\n剌\tlaa1\t(1)割开；(2)闲谈\n剌\tlaat6\t剌谬，乖剌\n剡\tjim5\t剡手，剡注，剡剡，剡章，剡麻，剡移，剡荐，剡木为矢削尖\n剡\tsim6\t剡溪，剡县，剡牍\n剔\ttai3\t(1)同「剃」字；(2)同「鬄」字\n剔\ttik1\t挑剔，剔除\n剢\tdoek3\t同「斲」字\n剢\tduk1\t刀锄\n副\tpik1\t割裂\n副\tfu3\t副车，名副其实\n剬\tzai3\t同「制」字\n剬\ttyun4\t同「剸」字\n创\tcong1\t创伤，创痍，创巨痛深，重创\n创\tcong3\t创造，首创，创业守成，创作，创举，草创，创立，创刊，创见，创始，创设，创新，创意\n剸\ttyun4\t割\n剸\tzyun1\t同「专」字\n剿\tcaau1\t剿说\n剿\tziu2\t征剿，剿匪\n劋\tcaau1\t同「抄」字\n劋\tziu2\t(1)灭绝；(2)砍削\n刊\thon1\t刊行，刊印，刊物，刊载，刊落，刊误，刊头，刊谬，月刊，期刊，报刊\n刊\thon2\t「刊hon1」的异读字\n列\tlaat6\t「列lit6」的异读字\n列\tlit6\t列举，排列，列车，列席，列印\n刐\tdaan2\t割裂\n刐\tdaan3\t「刐daan2」的异读字\n刱\tcong1\t「刱cong3」的异读字\n刱\tcong3\t同「创」字\n剁\tdo2\t杀剁，千刀万剁，斩斩剁剁\n剁\tdo3\t「剁do2」的异读字\n剁\tdoek3\t「剁do2」的异读字\n刲\tgwai1\t割取\n刲\tkwai1\t「刲gwai1」的异读字\n券\tgyun3\t「券hyun3」的异读字\n券\thyun3\t奖券，债券，稳操胜券\n刻\thaak1\t「刻haak1」的异读字\n刻\thak1\t刻字，刻板，刻毒，刻苦，刻意，刻薄，刻不容缓，刻舟求剑，刻骨铭心，木刻，深刻，篆刻，雕刻\n刹\tcaat3\t「刹saat3」的异读字\n刹\tsaat3\t刹车，刹那(ksana)，古刹\n克\thaak1\t「克hak1」的异读字\n克\thak1\t克日，克扣，克星，相生相克\n剆\tlo4\t「剆lo5」的异读字\n剆\tlo5\t器物相击，砍斫\n剥\tbok1\t「剥mok1」的异读字\n剥\tmok1\t剥削，剥落，剥夺，剥蚀，剥离，剥丝抽茧\n剒\tco3\t「剒cok3」的异读字\n剒\tcok3\t斩\n剕\tfai3\t「剕fei6」的异读字\n剕\tfai6\t「剕fei6」的异读字\n剕\tfei6\t古刖足之刑\n剞\tgei1\t剞劂\n剞\tgei2\t「剞gei1」的异读字\n剖\tfau2\t「剖pau2」的异读字\n剖\tpau2\t剖析，解剖，剖明事理\n剜\twun1\t用刀挖\n剜\twun2\t「剜wun1」的异读字\n剚\tzi3\t剚刃于腹\n剚\tzi6\t「剚zi3」的异读字\n剭\tuk1\t剭诛诛杀，有不公开进行之意味。颜师古˙注引服虔曰：「底，致也。周礼有屋诛，诛大臣于屋下，不露也。」\n剭\tnguk1\t「剭uk1」的异读字\n剐\tgwaa2\t剐刑，千刀万剐古刑罚，即凌迟\n剐\twaa2\t「剐gwaa2」的异读字\n剀\tgoi1\t「剀hoi2」的异读字\n剀\thoi2\t剀切\n剩\tsing6\t剩下，剩余，剩水残山，剩魄残魂，过剩\n剩\tzing6\t「剩sing6」的异读字\n剺\tlai5\t「剺lei4」的异读字\n剺\tlei4\t用刀划\n剽\tpiu3\t「剽piu5」的异读字\n剽\tpiu5\t剽窃，剽悍，剽掠\n劂\tgyut3\t「劂kyut3」的异读字\n劂\tkyut3\t剞劂；(1)雕刻；(2)雕刻刀\n劈\tpek3\t「劈pik1」的异读字，口语读音\n劈\tpek6\t「劈pik1」的异读字\n劈\tpik1\t劈开，劈面，砍劈\n剂\tzai1\t剂量，药剂\n剂\tzai6\t「剂zai1」的异读字\n劖\tcaam4\t劖言讪语；(1)凿；(2)刺\n劖\tcaam5\t「劖caam4」的异读字，粤语用字\n劗\tzin2\t「劗zyun1」的异读字\n劗\tzyun1\t剪除\n劙\tlai5\t劙面\n劙\tlai6\t「劙lai5」的异读字\n划\twaa1\t「划waa4」的异读字\n划\twaa4\t划船，划拳，划算，划桨，划动，划艇\n刺\tcek3\t「刺cik3」的异读字\n刺\tci3\t刺目，刺史，刺字，刺耳，刺股，刺客，刺激，刺绣，芒刺在背\n刺\tcik3\t行刺\n刺\tsik3\t「刺cik3」的异读字\n力\tlik6\t力量，努力，力争上游，力求，力争，力行，力劝，力不从心，力气，力士，力学，力荐，力战，力排众议，力尽\n功\tgung1\t功过，武功，功课，功夫\n劦\thip6\t合力\n劫\tgip3\t劫匪，劫持，劫数，劫狱\n劮\tjat6\t同「逸」字\n劬\tkeoi4\t劬劳\n努\tnou5\t努力，努嘴，金刚努目\n劭\tsiu6\t年高德劭\n助\tzo6\t助益，助理，助长，助人，助学金，助手，助选员，助教，助学，助威，助听器，助跑，助产士，助纣为虐\n劾\that6\t弹劾，劾奏，参劾，举劾\n劻\thong1\t劻勷(急迫不安)\n劼\tkit3\t劼毖(谨慎，见《书经˙酒诰》)；(1)谨慎；(2)稳固；(3)努力\n勃\tbut6\t勃发，蓬勃，勃然大怒，勃兴，勃谿，勃起\n勇\tjung5\t勇气，勇敢，勇士，勇往直前，勇猛，急流勇退，有勇无谋\n勉\tmin5\t勉强，勉励，勉力，勉为其难，勤勉，慰勉\n勀\thak1\t同「克」字\n勂\thou4\t告假\n勍\tking4\t勍勍，强勍敌\n动\tdung6\t动静，运动，明艳动人，动物，动作，动机，动向，动心，动怒，动荡，动乱，动画，发动，浮动，波动，暴动，盲动，变动不居，风吹草动，不动声色，大动干戈\n勗\tjuk1\t同「勖」字\n勖\tjuk1\t勖勉\n务\tmou6\t务必，务实，务农，务本，务求，务须\n勓\tfaai3\t努力\n勋\tfan1\t勋章，功勋，勋爵\n勤\tkan4\t勤奋，勤劳，勤俭，勤快，勤朴，勤恳，外勤，执勤\n募\tmou6\t募集，募款，募捐，招募\n势\tsai3\t势力，势在必行，势均力敌，势所难免，势在必得，势如破竹，势不两立\n𪟝\tzik1\t功绩\n勫\tfaan4\t勫\n劢\tmaai6\t勉力\n勯\tdaan1\t竭尽\n勋\tfan1\t勋爵，功勋，勋章，勋绩，勋业\n励\tlai6\t励志，励行，鼓励，激励，励精图治\n勴\tleoi6\t(1)赞助；(2)勉励\n劝\thyun3\t劝解，劝勉，劝告\n劳\tlou4\t劳力，劳工，劳心，劳役，劳苦，劳动，劳碌，劳损，劳民伤财，劳燕分飞，疲劳，勤劳\n劳\tlou6\t犒劳，慰劳，劳军\n胜\tsing1\t胜任，不胜枚举，高处不胜寒，防不胜防，数不胜数，美不胜收\n胜\tsing3\t胜利，名胜古迹，胜券在握，邪不胜正，反败为胜，优胜劣败\n勦\tcaau1\t勦袭\n勦\tcaau4\t勦捷\n勦\tziu2\t勦灭，围勦\n勷\tjoeng4\t劻勷(急迫不安貌)\n勷\tsoeng1\t勷办，勷理同「襄」字\n加\tgaa1\t加油，加重，加倍，加强，加冕，加剧\n加\tgaa3\t「加gaa1」的异读字\n劣\tlyut3\t劣行，恶劣，土豪劣绅，顽劣，劣货\n劣\tlyut6\t「劣lyut3」的异读字\n劲\tging3\t「劲ging6」的异读字\n劲\tging6\t劲旅，劲敌，劲头，雄劲，干劲，冲劲\n勘\tham1\t「勘ham3」的异读字\n勘\tham3\t勘正，勘定，勘探，勘测，勘察，勘误，勘验，校勘；(1)核对；(2)审问；(3)察看\n勒\tlaak6\t「勒lak6」的异读字\n勒\tlak6\t勒令，勒石，勒索，勒碑，悬崖勒马\n勚\tjai6\t疲勚\n勚\tji6\t「勚jai6」的异读字\n勰\thip3\t「勰hip6」的异读字\n勰\thip6\t协和，多用于人名\n勿\tmat6\t勿药，早占勿药，格杀勿论，宁缺勿滥，过勿惮改，勿以善小而不为副词，表示否定、劝阻或禁止\n匀\twan4\t匀称，匀净，均匀\n包\tbaau1\t包括，包装，包含，包围，包袱，包庇，包容，包扎\n匆\tcung1\t匆匆，匆忙，匆促\n匈\thung1\t匈牙利(地名)，匈奴\n匊\tguk1\t同「掬」字\n匋\ttou4\t陶器\n匍\tpou4\t匍匐，匍伏，匍匐前进\n匎\tam1\t匎刍(不奢侈)\n匏\tpaau4\t葫芦的一种\n匒\tdaap3\t重叠\n匑\tgung1\t用以形容谨敬的样子\n勺\tsoek3\t「勺zoek3」的异读字\n勺\tzoek3\t勺子，汤勺；(1)舀东西的器具；(2)容量单位，十撮为一勺\n勾\tau1\t「勾ngau1」的异读字\n勾\tgau1\t「勾ngau1」的异读字\n勾\tngau1\t勾销，勾结，勾留，勾当\n勼\tgau1\t勼合；(1)聚集；(2)古同「鸠」字\n勼\tkau1\t「勼gau1」的异读字\n匉\tpaang1\t同「砰」字\n匉\tping1\t「匉paang1」的异读字\n匐\tbaak6\t匍匐\n匐\tfuk6\t「匐baak6」的异读字\n匕\tbei2\t匙羹\n匕\tbei6\t匕首\n化\tfaa1\t同「花」字\n化\tfaa3\t化学，教化，化险为夷，化石，化缘，腐化，变化，分化，焚化炉，化妆品，白热化，化敌为友，化为乌有，逢凶化吉\n北\tbak1\t北方，败北，天南地北，连战皆北，北斗星，北极，北回归线\n北\tbui3\t通「背」字\n匙\tci4\t茶匙，汤匙，羹匙\n匙\tsi4\t钥匙\n匜\tji4\t槃匜(盥洗用具。见《仪礼˙公食大夫礼》)，奉匜沃盥古代盛器名\n匝\tzaap3\t周匝，匝月，漫天匝地，曲匝，交匝；(1)环绕；(2)环绕圈数；(3)满、整\n匡\thong1\t匡正，靖匡，济世匡时，匡救，匡谬，蚕绩蟹匡\n匟\tkong3\t同「炕」字\n匠\tzoeng6\t木匠\n匢\tfat1\t匢董(即古董)古器物\n匣\thaap6\t匣式，匣子，木匣\n匪\tfei2\t匪徒，匪夷所思，匪懈\n匦\tgwai2\t票匦，匦函，匦院(古代民意搜罗机构)匣子\n汇\twui6\t汇合，外汇，汇报，汇票，汇款，汇聚，汇流\n匰\tdaan1\t宗庙中安放神主之匣\n匮\tgwai6\t匮乏，金匮，金匮要略(中医重要经典)；(1)缺乏，竭尽；(2)储放东西的箱子。同柜\n匴\tsyun3\t古代竹器\n匷\tkeoi4\t蝉匷(车名)\n匚\tfo1\t国语注音字母之一\n匚\tfong1\t(1)汉字部首；(2)古代一种方形盛物器\n匹\tpat1\t匹敌，匹夫，匹配\n匽\tjin2\t(1)同「偃」字；(2)姓氏\n匾\tbin2\t匾额，横匾\n匼\tam3\t「匼hap1」的异读字\n匼\thap1\t匼河(水名)，匼匝\n匼\to1\t「匼hap1」的异读字\n匿\tnik1\t匿怨，匿名信，藏匿，匿居，销声匿迹\n匿\tnik6\t「匿nik1」的异读字\n区\tau1\t姓氏\n区\tngau1\t「区au1」的异读字\n区\tkeoi1\t区域，区分，区别\n十\tsap6\t十足，十万火急，十全十美，十恶不赦，十面埋伏\n千\tcin1\t千头万绪，千疮百孔，千金，千篇一律，千辛万苦，千奇百怪，千钧一发，千变万化，千呼万唤，千载难逢，千真万确，千丝万缕，千锤百炼，千娇百媚\n午\tng5\t午餐，午夜，午后，午时，午间，午前，午饭，午休，午睡，午安\n升\tsing1\t升级，升格，升高，升学，升任，升降\n半\tbun3\t半径，苦乐参半，半途而废，半导体，半数，半成品，半天，半岛，半夜，半途，半路，半生，半信半疑，半票，半价，半自动，半身，半百，半死，半工半读，半身不遂，半山，半空，半封建，半山腰，半死不活，半圆，半夜里，半殖民地，半球，半夜三更，半生不熟，半推半就，半晌，半政府，半圆形，半斤八两，半路出家，半私营，半衰期，半壁江山，半壁\n卌\tse3\t四十\n卍\tmaan6\t古印度宗教的吉祥标记\n卑\tbei1\t卑微，卑鄙，卑躬屈膝，卑劣，卑下，谦卑\n博\tbok3\t博爱，赌博，地大物博，博士，博学，博奕，博物馆，博大精深，博览群书，博大精深，博闻强记，旁征博引\n卒\tzeot1\t卒业，卒岁，士卒，兵卒\n卒\tcyut3\t同「猝」字\n南\tnaa1\t南无\n南\tnaam4\t南方，南部，南面\n卅\tsaa1\t三十\n卅\tsaa4\t「卅saa1」的异读字\n卉\twai2\t花卉\n卉\twai5\t「卉wai2」的异读字\n卓\tcoek3\t卓立，卓见，卓著，卓越，卓绝，卓有成效，卓尔不群\n卓\tzoek3\t「卓coek3」的异读字\n协\thip3\t「协hip6」的异读字\n协\thip6\t协助，妥协，同心协力，协议，协定，协商，协办，协调，协会，协奏曲\n卞\tbin6\t卞急\n卣\tjau5\t古代盛酒器\n卦\tgwaa3\t卦象，卜卦，八卦，卦辞，占卦\n卜\tbaak6\t梦卜\n卜\tbuk1\t卜卦，卜居，占卜\n占\tzim1\t占卜，占卦，占星，占算，占梦\n卡\tkaa1\t卡通，关卡，卡路里，卡介苗，卡尺，卡车，货卡\n卡\tkaa2\t「卡kaa1」的异读字\n卡\tzaap6\t「卡kaa1」的异读字，用于「关卡」一词\n卡\tkaat1\t「卡kaa1」的异读字\n卮\tzi1\t卮言，漏卮，玉卮无当，卮酒\n危\tngai4\t危险，濒危，危言耸听，危害，危难，危机，危殆，危楼，危及，危城，危局，危机四伏，危急存亡，临危不乱，正襟危坐，乘人之危，岌岌可危，居安思危\n卲\tsiu6\t同「劭」字\n即\tzik1\t即将，即日，即时，即刻，即兴，即位，立即，若即若离\n卺\tgan2\t合卺，卺席，卺筵，合卺酒古时行婚礼所用的酒杯。孔颖达《礼记正义》：「卺谓半瓢，以一瓢分为两瓢，谓之卺……」\n卸\tse3\t卸妆，推卸，解衣卸甲，卸货，卸包袱，卸担子，卸除\n恤\tseot1\t抚恤，体恤，振穷恤贫，旌恤，恤金\n却\tkoek3\t却之不恭，冷却，望而却步，退却，忘却，却病延年\n卼\tngat6\t臲卼(动摇不安貌)《周易•困•上六》：「困于葛藟，于臲卼。」\n卿\thing1\t卿相，公卿，卿卿我我\n卬\tjoeng5\t同「仰」字\n卬\tngong4\t(1)我；(2)同「昂」字；(3)姓氏\n卯\tmaau5\t卯足，卯上，卯时，卯子，点卯\n卯\tmau3\t「卯maau5」的异读字\n印\tjan3\t印行，印泥，印花，印刷，印染，印章，印象，印证，印鉴，烙印，脚印\n印\tngan3\t「印jan3」的异读字\n卵\tleon2\t「卵leon5」的异读字\n卵\tleon5\t卵子，卵石，卵生，卵巢，卵翼，卵与石斗，危如累卵\n卵\tlo5\t「卵leon5」的异读字\n卷\tgyun2\t卷轴，试卷，手不释卷，案卷，卷帙，卷宗，书卷，春卷\n卷\tgyun3\t「卷gyun2」的异读字\n卷\tkyun4\t(1)弯曲；(2)通「拳」字\n厏\tzaa3\t厏厊(不相合)\n厒\thip3\t崖岸\n厚\thau5\t厚望，厚实，厚重，厚道，厚爱，厚颜，厚礼，厚待，优厚，厚此薄彼\n厘\tlei4\t厘米\n厍\tse3\t(1)姓氏；(2)同「库」字\n厗\ttai4\t唐厗(石名)\n厝\tcou3\t厝基，厝身，安厝\n厞\tfei6\t厞隐(隐蔽)\n厜\tseoi4\t或作嵯\n厥\tkyut3\t厥后(其后)，昏厥，允执厥中，大放厥辞；(1)晕倒；(2)同「其」字；(3)助语词\n厧\tdin1\t同「颠」字\n厬\tgwai2\t干涸\n厣\tjim2\t(1)蟹腹下的薄壳；(2)螺类介壳口的圆片状盖\n原\tjyun4\t原因，原则，原本，原料，原地，原始\n原\tjyun5\t乡原\n厌\tjim1\t厌厌(安静的样子)\n厌\tjim3\t厌世，厌恨，厌食，厌倦，厌弃，厌恶，厌烦，讨厌，厌旧贪新，贪得无厌，学而不厌\n厄\taak1\t「厄ak1」的异读字\n厄\tak1\t厄难，困厄，消灾解厄，厄运，矜贫救厄\n厄\tngak1\t「厄ak1」的异读字\n厊\taa1\t「厊ngaa5」的异读字\n厊\tngaa5\t厏厊(不相合)\n厎\tdai2\t「厎zi2」的异读字\n厎\tzi2\t同「砥」字\n厔\tzat1\t「厔zat6」的异读字\n厔\tzat6\t同「庢」字\n厖\tmong4\t面厖，厖杂，厖眉皓发，厖蒙，厖错\n厖\tpong4\t「厖mong4」的异读字\n厂\tam1\t同「庵」字\n厂\tngam1\t「厂am1」的异读字\n厂\tho1\t注音字母之一\n厂\thon2\t「厂hon3」的异读字\n厂\thon3\t(1)部首；(2)山边可住人之岩洞\n厂\tngon6\t同「岸」字\n厉\tlaai3\t「厉laai6」的异读字\n厉\tlaai6\t同「疠」字\n厉\tlai6\t厉害，厉行，严厉，正言厉色\n厹\tjau4\t兽足迹\n厹\tkau4\t厹矛(古代一种有三棱的矛)\n去\theoi2\t(1)除掉；(2)放弃\n去\theoi3\t去向，去留，去处，去路，去住两难，失去，离去，逝去\n参\tcaam1\t参加，参考，参差不齐，参半，参天，参观，参谒，参互，参见，参事，参政，参酌，参照，参谋，参赛，参赞，参议\n参\tsaam1\t同「三」字\n参\tcam1\t「参caam1」的异读字\n参\tsam1\t参商(参、商均星名，分居于西与东方)，人参，月没参横，海参，曾参杀人\n又\tjau6\t又惊又喜，日新又新，欲言又止，又读，又及\n叉\tcaa1\t叉腰，叉路，交叉\n友\tjau5\t友善，朋友，良师益友，友爱，校友会，卖友求荣\n取\tceoi2\t取缔，取消，取代，取材，取决，取舍，取笑，取悦，取巧，取长补短\n受\tsau6\t受伤，受理，受刑，受害，受难，受益，受训，受惠，受骗，受托，受罚，受雇，受贿，受辱，受聘，受惊，受教，受邀者，受累，受礼，受业，受洗，受戒，受苦受难，受宠若惊，受之无愧，受款，受精\n叔\tsuk1\t叔叔，叔姪，叔父，叔公，叔伯，叔祖\n叛\tbun6\t叛逆，背叛，众叛亲离，叛乱，叛徒，叛军，叛变，叛国，反叛\n叟\tsau2\t老叟\n丛\tcung4\t丛生，丛林，丛书，丛聚，丛刊，树丛\n反\tfaan1\t反切，平反\n反\tfaan2\t反目，反光，反串，反坐，反派，反省，反映，反叛，反思，反差，反常，反话，反驳，反扑，反应，反击，反唇相讥，反朴归真，反对，相反，造反\n反\tfaan3\t反反(慎重)\n夃\tjing4\t古同「赢」字\n夃\tgu2\t(1)买卖多得利；(2)古同「贾」字\n及\tgap6\t「及kap6」的异读字\n及\tkap6\t及格，普及，推己及人，及时，及肩，及门，及冠，及笄，及锋而试\n叡\thaai6\t「叡jeoi6」的异读字\n叡\tjeoi6\t同「睿」字\n口\thau2\t口舌，口角，口味，口琴，口德，口水\n叭\tbaa1\t喇叭\n叱\tcik1\t叱责，呼叱，叱咤风云，叱喝\n叮\tding1\t叮当，叮咛，叮嘱\n叼\tdiu1\t用嘴衔住\n叫\tgiu3\t呼叫，叫声，叫唤，叫化子\n古\tgu2\t古迹，古典，古老，古代，古物，古董，古时\n右\tjau6\t右手，右侧，右派，右边，右脚\n叩\tkau3\t叩门，叩头，三跪九叩，叩首，登门叩谢，略叩生平\n另\tling6\t另外，另行\n叵\tpo2\t叵耐(可恶)，，居心叵测「不可」二字合音成义的新字\n司\tsi1\t司仪，公司，司空见惯，司令，司机，司法，司长，司徒，司马，礼宾司，打官司，大祭司，各司其事\n史\tsi2\t历史，史实，史迹，史官，太史，史籍\n吋\tcyun3\t英寸\n吊\tdiu3\t吊桥，吊起，吊唁，吊挂，吊丧，吊儿郎当\n吉\tgat1\t吉祥，吉利，吉凶，吉庆，良辰吉日\n各\tgok3\t各界，各自，各人\n后\thau6\t后座，后羿，后稷，皇后\n向\thoeng3\t方向，志向，向来，向前\n吆\tjiu1\t吆喝\n吏\tlei6\t吏治，吏部，吏宫\n同\ttung4\t同意，同学，同样，同胞，同人，同类，同心协力，同侪，同仇敌忾，同病相怜，陪同，大同\n吇\tzi2\t吇吇(鸟类的叫声)\n吥\tbat1\t「吸」的意思\n吵\tcaau2\t吵嚷，争吵，吵吵闹闹，吵架，吵杂\n呎\tcek3\t英美常用量度单位\n呈\tcing4\t呈现，呈报，呈送，呈请，呈献，呈交，呈上，呈露，辞呈\n吠\tfai6\t吠声，吠日，吠尧\n吩\tfan1\t吩咐\n吙\tfo2\t(1)吐气；(2)吐气声\n君\tgwan1\t君子，君主，君王，君子协定，国君\n含\tham4\t含有，含量，包含，含糊，含蓄，含意，含混，含苞待放，含羞，含情脉脉\n吸\tkap1\t吸引，呼吸，吸尘器，吸管，吸盘，吸收，吸烟，吸毒，吮吸，吸血鬼\n吕\tleoi5\t律吕\n吝\tleon6\t吝啬，悭吝，不吝赐教，吝惜\n吻\tman5\t吻合，接吻，口吻；(1)嘴唇；(2)以嘴唇接触\n吴\tng4\t吴下阿蒙，吴牛喘月，吴宫教阵，吴市吹箫姓氏\n呏\tsing1\t加仑的旧译名\n吞\ttan1\t吞噬，吞食，吞下，吞咽，吞吐\n吰\twang4\t噌吰(象声词)\n呇\thei2\t明亮的星星\n吘\tngau5\t和吘(意指和谐)\n呁\tgan3\t(1)吐出；(2)慰问遭遇非常变故的人\n吜\tcau2\t声音\n咇\tbit1\t咇咇(哀鸣、状声词)\n咚\tdung1\t象声词\n咈\tfat6\t乖戾\n呼\tfu1\t呼吁，呼吸，呼声，呼救，呼之欲出，呼啸，呼唤，呼风唤雨，呼天抢地\n咕\tgu1\t咕噜，咕咚，咕哝，嘀咕，叽咕\n呷\thaap3\t吸饮\n呬\thei3\t喘息、嘘气\n呦\tjau1\t呦呦(鹿叫声)\n味\tmei6\t味道，味精，味儿，味觉，味素\n呠\tpan3\t喷\n呸\tpei1\t叹词，表示唾弃或斥责\n呻\tsan1\t呻吟\n咂\tzaap3\t咂嘴，咂儿\n周\tzau1\t周围，周刊，周遭，周全，周详，周密\n咒\tzau3\t咒骂，咒语，咀咒，咒水，咒诅，咒愿\n咘\tbou3\t译名用字\n呯\tping4\t象声词\n呧\tdai2\t同「诋」字\n呡\tman5\t同「吻」字，「呡」是「吻」的俗写\n品\tban2\t品质，品种，品尝，品性，品评，品学兼优\n咠\tcap1\t聂语\n咸\thaam4\t(1)全；(2)都；(3)姓氏\n哅\thung1\t哅哅(喧嚷的声音)\n咿\tji1\t咿唔，咿咿呀呀\n咡\tji6\t(1)口旁；(2)蚕吐丝\n哞\tmau4\t牛叫声\n咩\tme1\t羊叫声\n咢\tngok6\t只击鼓不唱歌\n咶\tsaai5\t鼻息\n咷\ttou4\t号咷痛哭，嚎咷，噭咷\n哇\twaa1\t哇哇大叫，哇哇大哭\n咱\tzaa1\t咱们，咱家\n咮\tzau3\t鸟嘴\n咨\tzi1\t咨询，国情咨文\n咫\tzi2\t近在咫尺，咫尺天涯\n呰\tzi2\t呰败，呰窳病弱\n哉\tzoi1\t优哉游哉，乌呼哀哉，得其所哉\n咾\tlou5\t(1)声音；(2)语助词\n哃\ttung4\t妄下断语\n哖\tnin4\t台湾地名用字\n吣\tcam3\t胡吣，混吣\n哧\tci1\t哧溜，噗哧，吭哧象声词，形容笑声\n唗\tdau1\t咒骂人的字眼\n哥\tgo1\t哥哥\n唃\tguk1\t鸟鸣\n哮\thaau1\t哮喘，咆哮\n唏\thei1\t唏嘘\n哭\thuk1\t哭泣，哭诉，哭声，哭号\n唈\tjap1\t唈唈不乐，忧唈\n唁\tjin6\t吊唁，慰唁慰问死者家属\n唷\tjo1\t喔唷，哼唷\n哢\tlung6\t鸟叫\n哷\tlyut3\t鸡鸣\n哤\tmong4\t哤聒\n唦\tsaa1\t元曲常用的语助词\n哨\tsaau3\t放哨，哨子\n唇\tseon4\t唇枪舌剑，唇齿，唇膏，唇舌，唇亡齿寒，唇部，唇瓣\n唆\tso1\t唆使，教唆，啰唆\n唐\ttong4\t唐朝，荒唐，唐人街，唐突，唐诗，唐捐，求马唐肆(典出《庄子》)\n哳\tzaat3\t啁哳\n哲\tzit3\t哲学，哲理，哲人其萎，哲嗣，先哲\n唑\tzo6\t译音用字，多用于化合物的译名\n哫\tzuk1\t哫訾(善于体察颜色及奉承阿谀的样子)\n唒\tcau4\t苦唒(也作苦蝤，汉末人名)\n哻\thon4\t同「鼾」字，「哻」是「鼾」的俗字\n哠\thou6\t多言\n哸\tseoi1\t促饮\n唋\ttou1\t吐出\n啵\tbo1\t助词\n唱\tcoeng3\t唱和，歌唱，唱反调，演唱，唱片，唱盘，唱腔，唱戏，唱高调，唱票\n啋\tcoi1\t叹词\n啖\tdaam6\t啖噬，啖指咬舌，拔葵啖枣餐松啖柏\n啗\tdaam6\t啗饭，余桃啗君\n啶\tding6\t嘧啶(一种有机化合物)\n啄\tdoek3\t啄食，剥啄，啄木鸟\n啅\tdoek3\t(1)形容鸟鸣声；(2)喧闹的、聒噪的\n唭\tgei1\t(1)欺骗；(2)笑的样子；(3)有声无辞\n唴\tgoeng6\t(1)哭泣不止；(2)因悲哭过度而失声\n啈\thang1\t叹词\n唌\tjin4\t唌唌(形容频进谗言)\n启\tkai2\t启用，启程，启发，启示，启动，启事，启航，启蒙，启开，启齿，启口，启封\n啦\tlaa1\t啦啦队\n问\tman6\t问题，问卷调查，问卷，问世，问到，问候，问津，问道，问好，问鼎，问心无愧，问话，问答，问起，问号，问出，问讯，问案，问安，问答题，问罪，问倒，问斩，问心，问供，问上，问住\n啀\tngaai4\t啀喍狗欲囓而相斗\n售\tsau6\t售价，零售，售票处，售卖，出售，售罄，售货员，销售税\n商\tsoeng1\t商业，商品，商店，商人，商埠，商场，商讨，商号，参商\n啕\ttou4\t号啕，号啕痛哭，嚎啕痛哭\n唻\tloi6\t语助词\n唹\tjyu1\t脸带笑容\n啻\tci3\t不啻，何啻，啻啻磕磕，娇娇啻啻\n喘\tcyun2\t喘息，喘气，气喘如牛，哮喘\n喙\tfui3\t喙息，不容置喙，百喙莫辩\n喈\tgaai1\t喈喈\n喊\thaam3\t喊出，喊话，喊价，喊叫，喊冤，喊穷，喊醒，喊住\n喉\thau4\t喉咙，喉舌，喉头，如鲠在喉\n喧\thyun1\t喧哗，喧宾夺主，锣鼓喧天，喧闹，喧嚣，喧嚷，喧扰\n喓\tjiu1\t喓喓\n哟\tjo1\t助词\n喻\tjyu6\t喻为\n乔\tkiu4\t乔木，乔迁，乔装打扮，乔梓\n喱\tlei1\t咖喱\n喨\tloeng6\t嘹喨\n喵\tmiu1\t猫叫声\n喃\tnaam4\t喃喃自语，呢喃\n嗖\tsau1\t迅速通过声音\n善\tsin6\t善意，善良，善心，善男信女，善忘\n啼\ttai4\t啼笑皆非，哭哭啼啼，虎啸猿啼，啼叫\n唤\twun6\t唤起，唤醒，呼唤\n喒\tzaa1\t同「咱」字\n啾\tzau1\t啾啾，啁啾；(1)小儿声；(2)虫鸟或铃铎等细碎嘈杂声\n喕\tmin5\t不作声\n嗏\tcaa1\t助语词\n喍\tcaai4\t啀喍\n嗤\tci1\t嗤之以鼻，嗤笑\n喿\tcou3\t鸟群鸣\n嗲\tde2\t娇嗲，嗲声嗲气\n嘟\tdou1\t嘟嘟，嘟嚷，嘟嘴\n嗝\tgaak3\t打嗝，饱嗝\n嗥\thou4\t狂嗥，狼嗥鬼叫\n嗡\tjung1\t嗡嗡(像声词)\n嗈\tjung1\t嗈嗈(形容群鸟和鸣的声音)\n嗜\tsi3\t嗜好，嗜酒\n啬\tsik1\t啬夫，吝啬，啬己奉公\n唢\tso2\t唢呐\n嗍\tsok3\t吮吸\n嗉\tsou3\t嗉子，嗉囊，嗉袋动物食道后段，暂贮食物的囊袋\n嗢\twat1\t嗢咽，噎嗢，嗢噱，嗢哕\n呜\twu1\t呜呼，呜呼哀哉，呜咽，呜呜的\n嗟\tze1\t嗟夫，嗟悼，嗟叹，嗟愤，咄嗟，叱嗟，嗟来食，叱嗟风云，咄嗟便办\n嗣\tzi6\t嗣位，子嗣，复宗绝嗣，立嗣，后嗣，绝嗣，继嗣\n嗕\tjuk6\t古代北方部族名\n嗂\tjiu4\t喜乐\n哔\tbat1\t哔啁\n嗺\tceoi1\t(1)撮口作声；(2)口动貌；(3)嗟叹\n嘁\tci1\t嘁嘁喳喳\n嘈\tcou4\t嘈杂\n嘉\tgaa1\t嘉许，嘉勉，嘉奖，嘉宾\n嘂\tgiu3\t(1)高声大呼；(2)乐器名\n啯\tgwok3\t咽下食物声\n嘕\thin1\t笑的样子\n嘝\thuk6\t英美容量单位蒲式耳的旧译名\n𪡏\tlin4\t𪡏喽\n唛\tmak1\t英语mark的译音，货物包装上用以辨识一批货物不同于另一批货物的标记\n嘧\tmat6\t嘧啶(一种有机化合物)\n嗷\tngou4\t嗷嗷待哺，嗷嘈\n尝\tsoeng4\t尝试，尝到\n嘒\twai3\t细微的声音或光芒\n嗿\ttaam2\t众人饮食声\n㖊\tcam4\t英美制计水深单位，fathom之译音，合六英尺\n叽\tgei1\t叽叽喳喳\n嘻\thei1\t嘻笑，嘻嘻，嘻笑怒骂，嘻皮笑脸\n嘘\theoi1\t嘘声，嘘唏，嘘寒问暖\n哓\thiu1\t哓舌，哓咋\n噎\tjit3\t哽噎，因噎废食，打噎，哽噎，抽噎食物塞哽\n𪡀\tkiu4\t不知是谁\n𪡞\tkwaai3\t(1)同「喟」字；(2)讥讽；(3)哀怜\n噘\tkyut3\t噘嘴\n嘹\tliu4\t嘹亮\n噗\tpok3\t象声词\n噀\tseon3\t沙噀\n嘲\tzaau1\t嘲讽，嘲弄，嘲笑，自嘲\n嘴\tzeoi2\t嘴巴，嘴唇，嘴角，嘴脸，馋嘴\n噂\tzyun2\t噂沓，噂议\n𪡃\tmaai5\t羊叫声\n𠯠\tfai1\t(1)口部长得斜歪难看；(2)讥诮\n噪\tcou3\t噪音，蝉噪\n哒\tdaat6\t咯哒，巴哒著嘴\n当\tdong1\t当啷，叮当，响当当，当啷落地，叮当作响，叮叮当当\n哙\tfaai3\t(1)吞咽；(2)动物的嘴；(3)通「快」字；(4)姓氏\n器\thei3\t器材，器具，器官，器物，器械，器皿，器重，器识，器度\n噷\thm1\t对人申斥或禁止声\n噰\tjung1\t噰噰\n噳\tjyu5\t噳噳(麇鹿或其他动物聚集貌)同「麌」字\n噙\tkam4\t噙泪\n噩\tngok6\t噩耗，噩梦，浑浑噩噩，噩运\n哝\tnung4\t咕哝，嘟嘟哝哝\n噬\tsai6\t吞噬，噬脐莫及\n噮\tjyun1\t美味\n嚓\tcaat3\t啪嚓，喀嚓\n嚃\tdaap6\t嘬嚃(狼吞虎咽)，毋嚃羹(礼记˙曲礼)；(1)吞吃；(2)大口吃喝\n嚎\thou4\t嚎叫，干嚎，鬼哭神嚎，嚎啕大哭\n嚅\tjyu4\t嗫嚅\n咛\tning4\t叮咛(嘱咐)，嘤咛\n尝\tsoeng4\t尝试，尝到\n哜\tzai6\t尝食、尝滋味\n噾\tjam1\t同「喑」字\n嚍\tzeon3\t愤怒\n嚁\tdik6\t激嚁(声音急速)\n噿\tzeoi2\t(1)鸟喙；(2)雀鸟叫声\n嚗\tbok3\t(1)形容发怒的声音；(2)形容物体迸裂的声音\n嚘\tjau1\t(1)语未定的样子；(2)气逆\n噜\tlou1\t噜苏，叽哩咕噜\n嚚\tngan4\t嚚猾，嚚暗，嚚讼，嚚瘖\n嚝\tgwong1\t(1)慨叹声；(2)鼓钟声\n嚫\tcan3\t达嚫\n嚪\tdaam6\t同「啖」字\n咽\tjin3\t狼吞虎咽，咽气\n嚬\tpan4\t同「颦」字\n嚭\tpei2\t大的同义词，古时用于人名，如春秋时有楚人伯嚭\n嚧\tlou4\t象声词，用以形容呼叫猪只的声音\n嚵\tcaam4\t(1)狗喙；(2)同「馋」字\n亸\tdo2\t垂下\n严\tjim4\t严重，严格，严厉，严密，严谨，严肃，严寒\n嘤\tjing1\t嘤咛，嚘嘤，嘤鸣求友\n咙\tlung4\t喉咙\n嚾\tfun1\t同「欢」字\n𪢕\tzyut3\t同「啜」字\n𠱞\tzaa3\t𠱞呼(即咋呼，口快话多)\n囆\tcaai3\t人名用字\n呓\tngai6\t呓语，梦呓\n囊\tnong4\t囊括，胆囊，囊空如洗，探囊取物\n苏\tsou1\t噜苏\n嘱\tzuk1\t嘱咐，遗嘱，千叮万嘱，嘱托\n囔\tnong4\t囔囔，嘟囔\n叨\tdou1\t叨唠\n叨\ttou1\t叨光，叨扰，叨叨不绝，叨教，叨窃非据\n可\thak1\t可汗\n可\tho2\t可取，两可，可以，许可，可是，非同小可，不可枚举，不可名状，可靠，可悲，可歌可泣，不置可否\n台\tji4\t(1)古人自称之词；(2)疑问词；(3)姓氏\n召\tsiu6\t(1)姓氏；(2)周朝国名\n召\tziu1\t同「招」字\n召\tziu6\t召见，召集，召开，召唤，召募，感召，号召\n只\tzek3\t量词\n只\tzi2\t只有，只好，只怕，只是，只道，只管，只顾，不只\n合\tgap3\t容量单位\n合\thap6\t合十，合力，合成，合同，合作，合宜，合金，合度，合流，合围，合适，合志同方，合浦还珠，合纵连横，符合\n吃\tjaak3\t「吃饭」一词中「吃」字的口语读音\n吃\tgat1\t口吃\n吃\that1\t吃吃而笑\n吃\thek3\t吃力，吃苦，吃饭，吁\theoi1\t长吁短叹\n吁\tjyu6\t呼喊要求\n咤\tzaa1\t哪吒(神话人物)\n咤\tzaa3\t叱咤，悲咤\n吧\tbaa1\t象声词\n吧\tbaa6\t语末助词\n吹\tceoi1\t吹拂，吹奏，吹捧，吹牛，吹嘘，吹毛求疪，吹灰之力，吹糠见米\n吹\tceoi3\t歌吹，鼓吹(一种器乐合奏曲)\n告\tgou3\t告示，告别，告身，告状，告急，告退，告捷，告诉，告终，告慰，告罄，告辞，布告，宣告，报告\n告\tguk1\t告朔，忠告\n吭\thang1\t一声不吭\n吭\thong4\t引吭高歌\n吾\tngaa4\t允吾县(古地名)\n吾\tng4\t吾人，吾兄，吾等，吾辈，支吾以对\n吾\tjyu4\t驺吾传说中的瑞兽名。即《诗经˙召南˙驺虞》中的驺虞\n吪\tfaa4\t象声词\n吪\tngo4\t(1)动；(2)化\n呔\ttaai1\t粤语用字\n呔\ttoi2\t语不正\n吱\tgei1\t哔吱\n吱\tzi1\t象声词\n吤\tgaai3\t喉中哽塞时发出的声音\n吤\thaai6\t同「齘」字\n吤\tgo3\t语助词，多用于唱词之中作为补字\n呅\tman5\t同「吻」字\n呅\tmui4\t哸呅\n呫\tzim1\t呫哔(占毕)\n呫\tcip3\t呫嗫，呫呫耳语，呫呫不休\n呫\ttip3\t呫血之盟\n呾\ttaan2\t相呼\n呾\tdaat3\t呵责\n咎\tgau3\t咎由自取，归咎，既往不咎，动辄得咎，引咎，咎悔\n咎\tgou1\t咎繇(县名)\n呺\thiu1\t大而虚空\n呺\thou4\t吼叫\n呣\tm2\t疑怪声\n呣\tm4\t叹词\n呣\tm6\t允诺声\n咆\tpaau3\t同「炮」字\n咆\tpaau4\t咆哮\n和\two4\t和谐，温和，和衷共济，和平，和气，和煦，和睦，和譪，调和，和风细雨，和盘托出\n和\two6\t和鸣，附和，曲高和寡，和韵，唱和\n和\twu4\t赌博用语\n咀\tzeoi2\t咀嚼，咀咒\n咀\tzo3\t通「诅」字\n咥\thei3\t咥咥然\n咥\tdit6\t咥噬咬\n哏\tgan1\t逗哏，捧哏\n哏\than2\t(1)通「很」字；(2)通「狠」字\n咻\tjau1\t喧闹\n咻\theoi2\t噢咻\n咽\tjin1\t咽喉，鼻咽\n咽\tjin3\t咽气，咽苦吐甜，吞咽，狼吞虎咽，细嚼慢咽\n咽\tjit3\t咽泣，哽咽，呜咽\n呲\tci1\t同「龇」字\n呲\tzi1\t同「龇」字\n咰\tseon1\t同「询」字\n咰\tseot6\t饮酒\n唅\tham3\t通「琀」字\n唅\tham4\t同「含」字\n唅\tham6\t唅蝉(殉葬时置死者口中的蝉形玉石)，唅以槁骨，羹藜唅糗嘴里衔著食物\n哼\thang1\t哼哧，哼唷，哼哈二将，哼哼唧唧\n哼\thng6\t语气词\n员\twan4\t增益\n员\twan6\t姓氏\n员\tjyun4\t员工，成员，员外，幅员，会员，演员，团员\n哩\tle1\t语气词\n哩\tlei5\t英里\n唊\tgaap3\t(1)妄下言语；(2)说话啰嗦\n唊\thim2\t猴子把食物藏在两颊囊中\n念\tnim6\t念书，念念有词，念经，念诵\n念\tdin6\t呻吟\n啁\tzaau1\t啁哳(形容繁杂细碎的声音)\n啁\tzau1\t啁啾，诙啁\n啜\tcyut3\t喝\n啜\tzyut3\t啜泣姓氏\n喋\tzaap6\t唼喋(水鸟或鱼类的吃食声)\n喋\tdip6\t喋喋不休，喋嗫，喋血；(1)多言貌；(2)践踏\n喜\thei2\t喜欢，喜爱，喜剧，喜悦，喜气洋洋，喜出望外\n喜\tci3\t通「饎」字\n喝\tjit3\t声之幽者\n喝\thot3\t喝茶，喝采，喝酒，呼喝，喝令，喝完，喝水，喝醉，当头棒喝，吃喝玩乐\n喑\tjam1\t喑哑，喑默，喑呜叱咤；(1)哭至嗓哑；(2)缄默\n喑\tngam6\t粤语用字\n喏\tje5\t唱喏\n喏\tnok6\t同「诺」字\n喭\tjin6\t(1)同「唁」字；(2)通「谚」字\n喭\tngon6\t粗俗\n喁\tjung4\t𪡋喁，喁喁，喁喁私语\n喁\tjyu4\t喁喁哝哝\n喇\tlaa1\t喇嘛\n喇\tlaa3\t喇叭\n丧\tsong1\t丧事，丧服，丧葬，丧仪，丧礼，治丧，哭丧\n丧\tsong3\t丧生，丧失，丧志，丧命，丧气，丧心病狂，丧家之犬，丧尽天良，丧权辱国，颓丧\n喥\tzaa3\t同「咤」字\n喥\tdok6\t语言无度\n喡\twai4\t(1)失声；(2)呼声\n喡\twai6\t小儿哭啼的声音\n呛\tcoeng1\t呛咳\n呛\tcoeng3\t油烟或辣味触鼻，以致感到难受\n唝\tgung3\t唝吥\n唝\thung2\t唝嘴，罗唝曲\n嗑\tgaap3\t嗑牙，嗑咀，嗑嗑\n嗑\thaap3\t嗑然而笑\n嗑\thap6\t噬嗑\n嗑\tngap1\t粤语用字\n嗯\tng2\t语气词\n嗯\tng6\t应答声\n嗙\tpaang1\t喻嗙\n嗙\tpong3\t吹牛\n嘐\tgaau1\t形容志大而言夸\n嘐\thaau1\t嘐戛\n喽\tlau1\t语助词\n喽\tlau4\t喽啰\n嘛\tmaa3\t助词\n嘛\tmaa4\t喇嘛\n嗽\tsau3\n嘄\tgiu3\t同「叫」字\n嘄\thiu1\t象声词\n嘄\ttou2\t祈祷\n噉\tdaam6\t同「啖」字\n噉\tgam2\t粤语用字，意指「如此」、「这样」\n嘿\tmak6\t同「默」字\n嘿\thei1\t感叹词\n啸\tcik1\t通「叱」字\n啸\tsiu3\t呼啸，啸傲\n噈\tzaap3\t用嘴唇吮吸\n噈\thap6\t柔也\n噈\tzuk1\t(1)口相就；(2)皱额\n噣\tzau3\t同「咮」字\n噣\tdoek3\t同「啄」字\n吓\thaak1\t感叹词\n吓\thaak3\t吓人，吓阻，吓唬，恫吓，威吓，恐吓\n向\thoeng2\t同「享」字\n向\thoeng3\t向导，向往，向明而治，向晦，向慕，向用\n嚣\thiu1\t嚣张，喧嚣\n嚣\tngou4\t同「隞」字\n啰\tlo1\t啰唆\n啰\tlo3\t粤语助词\n啰\tlo4\t喽啰\n囋\tzaan3\t问一而告二\n囋\tzaat6\t嘈囋\n呀\taa1\t(1)助词；(2)象声词\n呀\thaa1\t「呀aa1」的异读字\n呃\tak1\t呃喔，呃逆；(1)象声词，鸡叫声；(2)气逆上冲\n呃\tngak1\t「呃ak1」的异读字\n呆\tdaai1\t「呆ngoi4」的异读字\n呆\tngoi4\t呆子，呆坐，呆板，呆笑，呆滞，呆若木鸡，目定口呆\n吼\thaau1\t「吼hau3」的异读字\n吼\thau2\t「吼hau3」的异读字\n吼\thau3\t吼叫，怒吼，狮子吼\n吷\thyut3\t吷气\n吷\tkyut3\t「吷hyut3」的异读字\n吟\tjam4\t吟味，吟哦，吟咏，吟诵，吟风弄月，呻吟\n吟\tngam4\t「吟jam4」的异读字\n吮\tseon5\t「吮syun5」的异读字\n吮\tcyun5\t「吮syun5」的异读字\n吮\tsyun5\t吮吸，吮嘬，吮痈，吮墨\n咄\tdeot1\t咄咄逼人，咄咄书空\n咄\tcyut3\t「咄deot1」的异读字\n咄\tzyut3\t「咄deot1」的异读字\n咑\tdaa1\t「咑daak1」的异读字\n咑\tdaak1\t拟声词\n咐\tfu3\t吩咐，呕咐，嘱咐\n咐\tfu6\t「咐fu3」的异读字\n咁\tgam2\t「咁gam3」的异读字\n咁\tgam3\t粤语用字\n咍\thaai1\t「咍hoi1」的异读字\n咍\thoi1\t(1)蚩笑；(2)欢乐\n呥\tjam1\t「呥jim4」的异读字\n呥\tjim4\t呥呥(自安)\n咖\tgaa3\t「咖kaa1」的异读字\n咖\tkaa1\t咖啡，咖哩，咖啡因，咖啡色\n呿\theoi3\t「呿keoi1」的异读字\n呿\tkeoi1\t张口的样子\n呤\tling4\t轻声说话\n呤\tling5\t「呤ling4」的异读字\n命\tmeng6\t「命ming6」的异读字，口语读音\n命\tming6\t命运，生命，命不该绝，命名，命定，性命，算命，活命，救命正读\n呶\tnaau4\t喧呶，纷呶，唠呶大声喧哗\n呶\tnou4\t「呶naau4」的异读字\n哎\taai1\t哎哟，哎呀\n哎\tngaai1\t「哎aai1」的异读字\n哎\tngaai6\t「哎aai1」的异读字\n哎\tai3\t「哎aai1」的异读字\n哂\tsaai3\t「哂can2」的异读字\n哂\tcan2\t哂笑，哂纳，聊博一哂，不值一哂；(1)笑；(2)嘲笑\n咭\tkaat1\t「咭gat1」的异读字\n咭\tgat1\t咭咭笑\n咭\that1\t「咭gat1」的异读字\n咭\tkat1\t「咭gat1」的异读字\n哈\thaa1\t哈欠，哈哈大笑\n哈\thaa5\t「哈haa1」的异读字\n哈\tkaa1\t「哈haa1」的异读字\n哈\thaai1\t「哈haa1」的异读字\n咺\thyun1\t「咺hyun2」的异读字\n咺\thyun2\t(1)威仪显著、焕发；(2)哭泣不止\n咦\tji2\t语助词，表示惊讶\n咦\tji4\t「咦ji2」的异读字\n哀\toi1\t哀伤，哀愁，悲哀，哀悼\n哀\tngoi1\t「哀oi1」的异读字\n唉\taai1\t唉声叹气\n唉\tngaai1\t「唉aai1」的异读字\n唉\toi1\t「唉aai1」的异读字\n唉\tngoi1\t「唉aai1」的异读字\n哺\tbou1\t「哺bou6」的异读字\n哺\tbou6\t哺育，哺虎，哺养，哺乳动物\n哱\tpo3\t乱说大话\n哱\tbut6\t「哱po3」的异读字\n哿\tgo1\t「哿go2」的异读字\n哿\tgo2\t(1)表示称许；(2)古代妇女的首饰\n哿\tho2\t「哿go2」的异读字\n唎\tlei6\t语气词\n唎\tli1\t「唎lei6」的异读字\n唔\tm4\t口语用字\n唔\tng4\t「唔m4」的异读字\n唧\tzek1\t「唧zik1」的异读字\n唧\tzik1\t唧咕，唧啾，唧唧\n唵\tam2\t感叹词，表示怀疑\n唵\tngam2\t「唵am2」的异读字\n啤\tbe1\t啤酒\n啤\tpei4\t「啤be1」的异读字\n唰\tcaat3\t迅速擦过的声音\n唰\tsyut3\t「唰caat3」的异读字\n啐\tceoi3\t啐饮，啐醴\n啐\tseoi6\t「啐ceoi3」的异读字\n啡\tfe1\t「啡fei1」的异读字\n啡\tfei1\t吗啡，咖啡\n唬\thaak3\t「唬fu2」的异读字\n唬\tfu2\t威吓\n啣\thaam4\t燕子啣泥，啣泥，啣恨，啣接\n啣\tham4\t「啣haam4」的异读字\n唳\tlai6\t狼唳「唳leoi6」的异读字\n唳\tleoi6\t风声鹤唳\n唳\tlit6\t「唳leoi6」的异读字\n唡\tloeng2\t英两，也译作「盎斯」\n唡\tloeng5\t「唡loeng2」的异读字\n啎\tng5\t(1)抵；(2)逆\n啎\tng6\t「啎ng5」的异读字\n啪\tpaa1\t象声词\n啪\tpaak1\t「啪paa1」的异读字\n啥\tsaa1\t「啥saa2」的异读字\n啥\tsaa2\t什么\n啒\tfat1\t「啒gwat1」的异读字\n啒\tgwat1\t啒啒(形容忧心的样子)\n喳\tcaa1\t「喳zaa1」的异读字\n喳\tzaa1\t象声词\n喣\theoi2\t喣喣\n喣\tjyu3\t「喣heoi2」的异读字\n吃\tjaak3\t吃饭\n吃\that1\t「吃jaak1」的异读字\n吃\thek3\t「吃jaak3」的异读字\n啷\tlong1\t当啷\n啷\tlong4\t「啷long1」的异读字\n啽\tngaam4\t啽默，啽呓梦中呓语\n啽\tam2\t「啽ngaam4」的异读字\n啽\tngam4\t「啽ngaam4」的异读字\n喢\tsaap3\t喢血\n喢\tsip3\t「喢saap3」的异读字\n唾\tto3\t唾液，唾弃，唾骂，唾手可得，唾面自干，拾人唾余\n唾\ttoe3\t「唾to3」的异读字\n唾\ttoe5\t「唾to3」的异读字\n唾\ttou3\t「唾to3」的异读字\n喟\tfaai3\t「喟wai2」的异读字\n喟\twai2\t喟然长叹，感喟叹息\n喟\twai3\t「喟wai2」的异读字\n喟\twai6\t「喟wai2」的异读字\n喂\twai2\t「喂wai3」的异读字\n喂\twai6\t「喂wai3」的异读字\n喤\twaang4\t「喤wong4」的异读字\n喤\twong4\t喤喤\n喌\tzau1\t叫鸡的声音\n喌\tzuk1\t「喌zau1」的异读字\n啿\tdaam6\t「啿taam5」的异读字\n啿\ttaam5\t啿啿(也作湛湛，形容丰厚)\n嗔\tcan1\t嗔忿，嗔怪，嗔怒，立眉嗔目，薄面含嗔发怒\n嗔\tzan1\t「嗔can1」的异读字\n嗅\tcau3\t嗅觉\n嗅\thung3\t「嗅cau3」的异读字\n嗐\thaai6\t叹词\n嗐\thoi6\t「嗐haai6」的异读字\n嗨\thaai1\t嗨哟\n嗨\thei1\t「嗨haai1」的异读字\n嗨\thoi1\t「嗨haai1」的异读字\n嗋\thip3\t嗋吓，嗋呷(呼吸)\n嗋\thip6\t「嗋hip3」的异读字\n嗦\tso1\t哆嗦\n嗦\tsok3\t「嗦so1」的异读字\n嗓\tsong1\t「嗓song2」的异读字\n嗓\tsong2\t嗓子，嗓音，嗓门儿，嗓音洪亮，吊嗓，哑嗓\n嗀\tfo3\t「嗀hok3」的异读字\n嗀\thok3\t呕吐\n嘀\tdik1\t「嘀dik6」的异读字\n嘀\tdik6\t嘀咕，嘀嘀咕咕\n嘏\tgaa2\t嘏命，祝嘏，纯嘏\n嘏\tgu2\t「嘏gaa2」的异读字\n嘌\tpiu1\t嘌呤，嘌唱\n嘌\tpiu3\t「嘌piu1」的异读字\n嗾\tsau2\t嗾使\n嗾\tzuk6\t「嗾sau2」的异读字\n叹\ttaan1\t「叹taan3」的异读字\n叹\ttaan3\t叹息，叹气，叹服，嗟叹，感叹，叹为观止\n啧\tzaak3\t啧言，啧声，啧啧称奇\n啧\tzaak6\t「啧zaak3」的异读字\n啧\tzik1\t「啧zaak3」的异读字\n嗼\tmak6\t「嗼mok6」的异读字\n嗼\tmok6\t(1)寂静无声；(2)喷嚏\n嘬\tcaai3\t嘬兵，嘬炙，嘬嚃\n嘬\tceoi3\t「嘬caai1」的异读字\n嘬\tzyut3\t「嘬caai1」的异读字，为口语读音\n噆\tzaam1\t「噆zaap3」的异读字\n噆\tzaap3\t(1)咬；(2)叮；(3)衔\n噆\tcam2\t「噆zaap3」的异读字\n噆\tzam2\t「噆zaap3」的异读字\n喷\tfan5\t「喷pan3」的异读字\n喷\tpan1\t「喷pan3」的异读字\n喷\tpan3\t喷泉，喷云吐雾，喷薄欲出，含血喷人\n哗\tfaa1\t「哗waa1」的异读字\n哗\twaa4\t「哗waa1」的异读字\n哗\tjip6\t「哗waa1」的异读字\n噊\twat6\t(1)诡诈；(2)鸟鸣\n噊\tleot6\t「噊wat6」的异读字\n唠\tlou4\t唠叨\n唠\tlou6\t「唠lou6」的异读字\n恶\tok3\t恶心\n恶\tngok3\t「恶ok3」的异读字\n恶\twu3\t「恶ok3」的异读字\n嘶\tsai1\t嘶哑，马嘶，声嘶力竭\n嘶\tsi1\t「嘶sai1」的异读字\n噱\tkek6\t「噱koek6」的异读字\n噱\tcoek3\t「噱koek6」的异读字\n噱\tkoek6\t噱头，发噱，嗢噱\n吨\tdeon1\t重量单位\n吨\tdeon6\t「吨deon1」的异读字\n噶\tgaa1\t噶厦，噶个点儿，喀什噶尔\n噶\tgot3\t「噶gaa1」的异读字\n噤\tgam3\t噤声，寒噤，噤若寒蝉\n噤\tgam6\t「噤gam3」的异读字\n噤\tkam1\t「噤gam3」的异读字\n噭\tgiu3\t噭咷，噭噪，噭应\n噭\tkiu3\t「噭giu3」的异读字\n𪡋\tjim1\t「𪡋jim2」的异读字\n𪡋\tjim2\t𪡋喁\n嚆\thaau1\t「嚆hou1」的异读字\n嚆\thou1\t嚆矢\n嚂\tlaam4\t「嚂laam6」的异读字\n嚂\tlaam6\t贪求\n嚏\tdai3\t「嚏tai3」的异读字\n嚏\ttai3\t喷嚏\n啮\tngaat6\t「啮ngit6」的异读字\n啮\tjit6\t「啮ngit6」的异读字\n呖\tlik1\t「呖lik6」的异读字\n呖\tlik6\t呖呖，嘹呖\n喾\tguk1\t传说中的上古帝王，为五帝之一的高辛氏\n喾\tkuk1\t「喾guk1」的异读字\n嚷\tjoeng5\t「嚷joeng6」的异读字\n嚷\tjoeng6\t叫嚷，吵嚷，喧嚷\n嗫\tjip6\t「嗫zip3」的异读字\n嗫\tzip3\t嗫嚅\n啭\tzyun2\t鸟叫声\n啭\tzyun3\t「啭zyun2」的异读字\n冁\tcin2\t冁然\n冁\tzin2\t「冁cin2」的异读字\n囓\tngaat6\t「囓ngit6」的异读字\n囓\tjit6\t「囓ngit6」的异读字\n囓\tngit6\t同「啮」字\n句\tgau1\t「句ngau1」的异读字\n句\tngau1\t句曲，句留\n句\tgeoi3\t句子，句式，句号，句读，章句\n叻\tlak6\t「叻lik1」的异读字\n叻\tlek1\t粤语用字，意指「能干」\n叻\tlik1\t叻埠\n名\tmeng2\t「名meng4」的异读字\n名\tmeng4\t口语用字\n名\tming4\t名人，名片，名次，名流，名师，名胜，名誉正读，据《粤正》\n吐\tdat6\t吐谷浑\n吐\ttou2\t「吐tou3」的异读字\n吐\ttou3\t吐痰，吐露，吐故纳新，吐气扬眉，吐丝自缚，谈吐，倾吐\n否\tfau2\t否定，否决，否则，否认，不置可否\n否\tpei2\t否极泰来，臧否，天地否\n否\tpei5\t「否pei2」的异读字\n吽\thau1\t「吽hau2」的异读字\n吽\thau2\t牛鸣\n吽\tngau6\t粤语用字\n吽\thung1\t佛教真言中的第六字\n听\tjan5\t张口笑的样子\n听\tteng1\t「听ting1」的异读字\n呐\tnaap6\t呐喊，唢呐\n呐\tnat6\t「呐neot6」的异读字\n呐\tneot6\t同「讷」字\n呱\tgwaa1\t粤语用字\n呱\tgwaa2\t方言用字\n呱\twaa1\t「呱gu1」的异读字\n呱\tgu1\t呱呱大哭，呱呱坠地\n呴\thau3\t同「吼」字\n呴\theoi1\t张口哈气。见《庄子》天运篇：「相呴以湿，相濡以沫」\n呴\tjyu3\t「呴heoi1」的异读字\n呵\to1\t助词\n呵\tho1\t呵欠，呵斥，呵责，呵护，呵佛骂祖，呵壁问天，一气呵成\n呵\tho2\t「呵ho1」的异读字\n呢\tne1\t助词\n呢\tnei1\t「呢nei4」的异读字\n呢\tnei4\t呢喃，呢料，呢绒，毛呢\n呢\tni1\t粤语用字\n咋\tzaa1\t「咋zaa3」的异读字\n咋\tzaa3\t咋舌，咋呼\n咋\tzaa6\t同「乍」字\n咋\tzaak3\t「咋zaa3」的异读字\n咋\tzaak6\t「咋zaa3」的异读字\n哆\tce2\t「哆ci2」的异读字\n哆\tci2\t张口的样子\n哆\tdo1\t哆嗦\n哆\tdo2\t「哆do1」的异读字\n咳\thaai1\t叹词\n咳\tkat1\t咳唾，咳嗽，咳唾成珠，干咳\n咳\thei1\t「咳haai1」的异读字\n咳\thoi4\t(1)婴儿笑；(2)同「孩」字\n咳\tkoi3\t「咳kat1」的异读字\n哄\thung1\t乱哄哄\n哄\thung3\t「哄hung6」的异读字\n哄\thung6\t哄动，哄骗，哄堂大笑，一哄而散\n咧\tle1\t哭哭咧咧\n咧\tle2\t「咧lit6」的异读字\n咧\tle4\t咧咧乱谈\n咧\tlit6\t咧嘴，白不呲咧，龇牙咧嘴\n咯\tkat1\t咯痰，咯血\n咯\tlo1\t语助词\n咯\tlo3\t「咯lok3」的异读字\n咯\tgok3\t「咯lok3」的异读字\n咯\tlok3\t咯咯笑，咯崩(象声词)\n咯\tlok6\t用于英语pyrrole的音译\n咪\tmai1\t粤语用字，意指「话筒」\n咪\tmai5\t粤语用字，意指「不要」\n咪\tmai6\t「咪mai1」的异读字\n咪\tmei1\t笑咪咪\n咪\tmiu1\t猫叫声\n咬\taau1\t咬哇\n咬\tgaau1\t咬咬(鸟鸣声)\n咬\tngaau1\t「咬aau1」的异读字\n咬\tngaau5\t咬文嚼字，咬定牙关，咬牙切齿\n呙\tkwaa1\t「呙waa1」的异读字\n呙\twaa1\t呙斜(嘴歪斜不正)\n呙\tgwo1\t姓氏\n呙\two4\t同「和」字\n哽\tang2\t受硬物挤压而受损，口语用字\n哽\tgang2\t哽咽，哽结，哽噎难言因激动至不能成声\n哽\tngang2\t「哽ang2」的异读字\n呗\tbaa6\t「呗bui6」的异读字\n呗\tbaai6\t呗唱，呗赞，梵呗，赞呗在印度，呗泛指咏经或唱赞，在中国则只指唱赞。\n呗\tbui6\t语气词\n哪\tnaa1\t助词\n哪\tnaa4\t哪吒\n哪\tnaa5\n哦\to2\t「哦o4」的异读字\n哦\to4\t疑问助词\n哦\tngo4\t哦松，吟哦\n啊\taa1\t(1)叹词；(2)句末助词\n啊\taa2\t「啊haa2」的异读字\n啊\taa3\t「啊aa1」的异读字\n啊\taa4\t「啊haa4」的异读字\n啊\thaa2\t(1)疑问词；(2)疑惑词\n啊\thaa4\t醒悟叹词\n哑\taa1\t咿哑\n哑\taa2\t哑巴，哑谜，哑口无言\n哑\tngaa2\t「哑aa2」的异读字\n哑\tak1\t哑哑，哑然而笑\n哑\tngak1\t「哑ak1」的异读字\n啑\tsaap3\t「啑zaap3」的异读字\n啑\tzaap3\t啑喋(水鸟聚食声)\n啑\tdip6\t啑血(同喋血)\n啑\tzit6\t啑血为盟\n唪\tbaang6\t口语用字\n唪\tfung2\t唪经，唪诵\n唪\tfung6\t「唪fung2」的异读字\n啃\than2\t「啃hang2」的异读字\n啃\thang2\t啃骨头\n啃\thang3\t北方话\n啃\tkang2\t「啃hang2」的异读字\n唲\twaa1\t「唲aai1」的异读字\n唲\taai1\t唲呕\n唲\tngaai1\t「唲aai1」的异读字\n唲\tji4\t嚅唲\n啍\ttan1\t慢啍啍\n啍\tteon1\t「啍tan1」的异读字\n啍\tzeon1\t同「谆」字\n唯\twai2\t唯唯诺诺\n唯\twai4\t唯一，唯物论，唯我独尊，唯有，唯恐，唯心论，唯利是图，唯命是从\n唯\twai5\t「唯wai2」的异读字\n唶\tzaak3\t嚄唶(大声笑)，唶吮(吮吸)，咄唶(叹息)\n唶\tze3\t唶唶(鸟呜声)赞叹声\n唶\tzik1\t「唶zaak3」的异读字，用于「嚄唶」一词\n唼\tzaap3\t唼喋，唼唼，唼气\n唼\tcip3\t谗言\n唼\tzit6\t「唼cip3」的异读字\n喔\tak1\t鸡啼声\n喔\tngak1\t「喔ak1」的异读字\n喔\to1\t语助词，表示了解\n喔\tok1\t「喔ak1」的异读字\n单\tdaan1\t单一，单方，单元，单身，单弦，单纯，单独，单据，单薄，单刀直入，单刀赴会，单枪匹马，孤单，简单\n单\tsim4\t「单sin4」的异读字\n单\tsin4\t单于\n单\tsin6\t(1)姓氏；(2)县名\n喀\tkaa1\t「喀kaa3」的异读字\n喀\tkaa3\t喀麦隆，喀什米尔\n喀\thaak1\t呕吐声\n喀\thaak3\t「喀kaa3」的异读字\n喦\tngap6\t地名\n喦\tjip6\t「喦nip6」的异读字\n喦\tnip6\t多言\n㖞\tkwaa1\t「㖞waa1」的异读字\n㖞\twaa1\t同「呙」字\n㖞\two3\t粤语用字，语气词\n㖞\two5\t粤语用字，语气词\n嗄\taa2\t语气词\n嗄\thaa2\t「嗄aa2」的异读字\n嗄\tsaa3\t声音嘶哑\n嗄\taai3\t「嗄saa3」的异读字\n嗄\tngaai3\t「嗄saa3」的异读字\n嗌\taai3\t咽喉窒塞\n嗌\tngaai3\t「嗌aai3」的异读字\n嗌\tjik1\t咽喉\n嗃\thaau1\t吹竹管声\n嗃\thaau3\t大呼\n嗃\thok3\t嗃嗃\n嗃\thok6\t「嗃hok3」的异读字\n嗛\thaam4\t同「衔」字\n嗛\tham4\t「嗛haam4」的异读字\n嗛\thim1\t通「谦」字\n嗛\thim2\t猿鼠之类的颊囊\n嗛\thip3\t通「歉」字\n吗\tmaa1\t助词，表示疑问\n吗\tmaa3\t「吗maa1」的异读字\n吗\tmaa4\t方言用字\n吗\tmaa5\t吗啡\n嗒\tdaap1\t(1)象声词﹕舐；(2)马蹄声\n嗒\tdaap3\t「嗒daap1」的异读字\n嗒\ttaap3\t嗒然若失，嗒丧\n嗒\tdaat6\t同「哒」字\n呕\tau1\t同「讴」字\n呕\tau2\t呕吐，作呕，呕心沥血，呕气，干呕\n呕\tngau1\t「呕au1」的异读字\n呕\tngau2\t「呕au2」的异读字\n呕\theoi1\t呕咐(爱养)，呕喻(和悦的样子)\n嘎\tgaa1\t嘎吱，饭嘎巴，嘎渣，嘎调；(1)象声词；(2)象断裂声、笑声等\n嘎\tgaa2\t(1)乖僻；(2)调皮\n嘎\tgaa4\t嘎嘎儿\n嘎\tgat1\t「嘎gaa1」的异读字\n噌\tcaang1\t「噌zang1」的异读字\n噌\tcang1\t噌吰\n噌\tzang1\t叱噌\n啴\ttaan1\t啴缓，啴啴\n啴\tcin2\t宽舒声\n啴\tzin2\t「啴cin2」的异读字\n呒\tm4\t方言用字，意谓「没有」\n呒\tmou5\t(1)惊愕；(2)「呒m4」的异读字\n呒\tfu2\t懵然\n嘾\tdaam6\t含深\n嘾\ttaam4\t贪爱\n嘾\ttaam5\t「嘾daam6」的异读字\n噫\taai3\t(1)呼；(2)吹\n噫\tngaai3\t「噫aai3」的异读字\n噫\tji1\t噫呜，噫嘻，噫吁戏叹词\n噢\to1\t叹词\n噢\tou3\t「噢o1」的异读字\n噢\tjyu2\t噢咻\n哕\twai3\t哕哕轻缓有节的鸟叫声\n哕\tjyut3\t「哕jyut6」的异读字\n哕\tjyut6\t干哕胃气不顺而打嗝\n嗳\taai1\t叹词\n嗳\toi2\t嗳气\n嗳\toi3\t「嗳oi2」的异读字\n嗳\tngoi2\t「嗳oi2」的异读字\n嗳\tngoi3\t「嗳oi2」的异读字\n嚄\twaak6\t「嚄wok6」的异读字\n嚄\to2\t叹词\n嚄\twok6\t嚄啧\n嚜\tmaa1\t助词\n嚜\tmaa3\t「嚜maa1」的异读字\n嚜\tmaak1\t商标\n嚜\tmak1\t同「唛」字\n嚜\tmak6\t同「默」字\n嚼\tziu6\t倒嚼\n嚼\tzoek3\t嚼舌，咀嚼，咬文嚼字，嚼子，味同嚼蜡\n嚼\tzoek6\t「嚼zoek3」的异读字\n囚\tcau4\t囚禁，囚犯，囚房，囚牢，囚车\n因\tjan1\t因为，因素，因应，因果，因缘，因由，因材施教，因循，因噎废食，因势利导，因地制宜，因袭，因循苟且，因时制宜\n囡\tnaam4\t囡囡(女孩，女儿)\n囟\tseon3\t囟门，囟骨(天灵盖)\n回\twui4\t回收，回馈，回家，回来，回答，回应，回合，回忆，回头，回复，回绝，回想，回响，回味，回音，回首，回心转意，回头是岸\n囧\tgwing2\t窗透明，引申为明亮\n困\tkwan3\t困难，困扰，困境，困窘，困惑，困苦，困顿，困局，困兽之斗，困乏，困守，困阨\n囥\tkong3\t隐藏\n固\tgu3\t固定，固然，固有，固执，固守，固体，固醇，固态，固若金汤，固结\n囷\tkwan1\t圆形谷仓\n囹\tling4\t囹圄\n囿\tjau6\t拘囿，园囿\n圄\tjyu5\t囹圄\n圁\tngan4\t圁水(蒙古河流名)，圁阳(县名)\n圊\tcing1\t圊肥，圊圂，圊溷厕所\n国\tgwok3\t国家，国货，国际，国术，国文，国王，国父，国手，国会，国策，国产，国籍，国语，祖国，盟国，叛国，爱国，国计民生\n圉\tjyu5\t囹圉，豢圉，牧圉\n囵\tleon4\t囫囵吞枣\n围\twai4\t围墙，围观，围堵，围绕，围巾，围裙，外围，入围\n圆\tjyun4\t圆满，圆形，圆桌，圆滑，圆筒\n园\tjyun4\t园地，园艺，园林，园丁，园圃，花园，校园\n圔\tjap1\t窳圔(指乐声低回)\n图\ttou4\t图书，图片，图形，贪图，地图\n团\ttyun4\t团体，团结，团聚\n圚\twui6\t圈圚(圈套)，门圚(门阓)\n圛\tjik6\t(1)纡回行走；(2)云气稀疏连绵的样子\n𪢮\tlyun4\t团𪢮\n囗\twai4\t「围」的古字\n囗\tgwok3\t「国」的古字\n圂\twaan6\t同「豢」字\n圂\twan6\t厕所\n圈\tgyun6\t圈牢，圈肥，圈养，圈槛，羊圈，马圈\n圈\thyun1\t圈子，圈占，圈套，圈阅，圈点，圆圈\n圌\tseoi4\t圌山\n圌\tcyun4\t谷囤\n圜\twaan4\t转圜\n圜\tjyun4\t圜丘，破觚为圜，方枘圜凿，圜扉\n四\tsei3\t四方，四海，四时，四声，四不像，四大皆空，四面楚歌，四书五经，四通八达\n四\tsi3\t「四sei3」的异读字\n囝\tnaam4\t「囝zai2」的异读字\n囝\tzai2\t摇囝仔歌\n囫\tfat1\t囫囵吞枣\n囫\twat6\t「囫fat1」的异读字\n囮\tjau4\t「囮ngo4」的异读字\n囮\tngo4\t鸟腜\n圃\tbou2\t「圃pou2」的异读字\n圃\tpou2\t圃师，圃事，玄圃，老圃，花圃，苗圃，菜圃，辩圃学林，抱瓮灌圃\n囱\tcoeng1\t同「窗」字\n囱\tcung1\t烟囱(即烟筒)\n囱\ttung1\t「囱cung1」的异读字，口语读音\n囤\tdeon6\t米囤，粮囤\n囤\tteon4\t「囤tyun4」的异读字\n囤\ttyun4\t囤积，囤积居奇\n土\ttou2\t国土，尘土，土产，土地，泥土\n圠\tcaak3\t坱圠(广大无垠)山弯曲的地方\n圢\tting5\t平坦\n圭\tgwai1\t圭臬(本解「日圭，转指「典范」)，圭璋(玉中之贵者，人品中之高洁者)，圭表，圭荜，白圭之玷，三复白圭(慎言)；(1)诸侯朝会时手持的玉制礼器；(2)说文解字：圭，瑞玉也，上圜下方；(3)古代测日影的器具；(4)墙上的小门\n圯\tji4\t桥\n圬\twu1\t同「杇」字\n在\tzoi6\t在于，在场，在逃，在下，在野，在乎，在意，自在，存在，内在\n圴\tzoek3\t土迹\n坒\tbai6\t(1)相连接；(2)同「陛」字\n坌\tban6\t(1)灰尘；(2)聚集\n坑\thaang1\t坑洞，火坑，焚书坑儒，坑道，坑杀，坑害\n坅\tjam2\t掘坑\n坍\ttaan1\t坍方，坍塌\n址\tzi2\t地址，旧址，住址，遗址\n坁\tzi2\t止\n坼\tcaak3\t坼副，坼裂，坼兆\n坫\tdim3\t坛坫；(1)古时室内放置食物酒具的土台子；(2)屏障\n坲\tfat6\t尘埃飞扬的样子\n坰\tgwing1\t野外\n坵\tjau1\t量词\n坱\tjoeng5\t(1)尘埃；(2)充盛貌；(3)污秽\n坤\tkwan1\t坤伶，乾坤，坤宅，坤造(女子的八字)；(1)易经卦名；(2)女性的代称\n垃\tlaap6\t垃圾\n坴\tluk6\t大的土块\n坶\tmuk6\t坶野(古地名)\n坭\tnai4\t同「泥」字\n坪\tping4\t坪林，草坪\n坯\tpui1\t没有烧过的砖瓦、陶器\n坦\ttaan2\t平坦，坦承，坦克，坦然，坦诚，坦白，坦率，坦荡\n坨\tto4\t(1)成块成堆的东西；(2)露天盐场\n垀\tfu1\t垺垀\n坽\tling4\t险峻的崖岸\n垞\tcaa4\t小土山\n垤\tdit6\t蚁垤\n垓\tgoi1\t垓下(地名)，垓心(重围之中)，垓前，垓极(阵前)，垓埏(至远之地)；(1)荒远之地；(2)界限；(3)军阵\n垝\tgwai2\t垝垣\n垔\tjan1\t(1)堵塞；(2)土山\n型\tjing4\t模型，典型\n垚\tjiu4\t山高\n垟\tjoeng4\t方言用字\n垮\tkwaa1\t垮台，垮下来\n垠\tngan4\t垠际，绝垠，一望无垠，垠堮\n垂\tseoi4\t垂直，垂钓，垂青，垂涎，垂危，垂询，垂杨，垂死，垂帘听政，垂头丧气，垂爱，垂涎三尺，垂柳，垂老，垂下，垂暮，垂手，垂手可得，垂怜\n垣\twun4\t城垣，颓垣断壁，泥垣宫(头顶前部)\n垙\tgwong1\t田间的小路\n垹\tbong1\t一种外形像手掌的药物\n垘\tfuk6\t(1)填塞不通；(2)崩坏\n垥\thip3\t堤水\n垏\tleot6\t土埂子\n埔\tbou3\t埔里，埔心，埔盐\n埕\tcing4\t蛏埕，盐埕\n埂\tgang2\t田埂\n垼\tjik6\t砖瓦窑的烟囱，也指用土坯监时搭成的灶\n堉\tjuk6\t肥沃的土地\n垸\tjyun6\t(1)修补墙垣；(2)古重量单位；(3)方言用字\n埆\tkok3\t塉埆土地多石而贫瘠\n埌\tlong6\t圹埌\n埋\tmaai4\t埋伏，埋设，埋下，埋怨，埋葬，埋首，埋头苦干，埋没，埋藏，埋没人才\n垽\tngan6\t沉淀物、渣滓\n埁\tsam4\t同「岑」字\n垿\tzeoi6\t古时天子宴请诸侯时放酒杯的土台\n垶\tsing1\t坚硬的红土\n埐\tzam1\t土地\n采\tcoi3\t采地\n堁\tfo3\t尘土\n基\tgei1\t基金，基本，基于，基础，基层，基地，基准，基业\n坚\tgin1\t坚固，坚强，坚定不移，坚持，坚决，坚守，坚信，坚实，坚拒，坚挺，坚硬，坚贞，坚韧，坚忍，坚壁清野，坚牢，坚苦卓绝，坚苦，坚厚，坚果\n堈\tgong1\t同「缸」字\n堌\tgu3\t(1)土堡；(2)多用于地名\n埢\tgyun6\t埢垣\n埜\tje5\t同「野」字\n埸\tjik6\t疆埸\n埽\tsou3\t(1)同「扫」字；(2)治河工程中用以护岸和堵缺口的设施\n堂\ttong4\t堂堂，堂上，堂兄弟，堂皇，堂而皇之，堂奥，堂堂正正，堂会\n堍\ttou3\t桥堍桥两边靠近平地的地方\n域\twik6\t区域，疆域，西域\n执\tzap1\t执行，执政，执法，执意，执业，执著，执绋，执掌，执迷不悟，各执一词，固执己见，父执\n埻\tzeon2\t箭靶中心\n埴\tzik6\t黏土\n埥\tzang1\t同「埩」字\n𪣆\tdung1\t上𪣆(地名)\n堔\tsam1\t土地深陷\n报\tbou3\t报纸，海报，以德报怨，报告，报导，报销，业报，报答，果报，善有善报，怨怨相报，精忠报国\n场\tcoeng4\t场所，场面，场地，场合，场景，场子，场记，场规\n堞\tdip6\t城上齿状矮墙\n堪\tham1\t堪虞，堪舆，堪萨斯，堪察，堪萨斯州，堪验\n堠\thau6\t瞭望敌情的碉堡\n堙\tjan1\t堙灭，堙窒；(1)堵塞；(2)土山\n堰\tjin2\t都江堰，塘堰，埭堰挡水的低坝\n尧\tjiu4\t尧舜，尧年，尧龄\n堧\tjyun4\t河边的空地\n堳\tmei4\t古时坛墠四周的矮墙\n堮\tngok6\t垠堮\n堛\tpei3\t土块\n堤\ttai4\t堤防，堤岸，堤堰，堤道，堤坝\n堶\tto4\t抛堶(北宋时代汴京在寒食节所盛行的一种抛掷瓦石的游戏)\n堭\twong4\t城堭\n堣\tjyu4\t堣夷(古地名)\n堜\tlin6\t堜塘(墟名)\n堹\tzung3\t池塘塍埂\n堬\tjyu4\t坟冢\n堸\tfung4\t虫的巢穴\n堻\tzeon1\t润泽\n块\tfaai3\t块头，块茎，块根，方块，垒块\n塥\tgaak3\t土地坚硬、瘠恶\n堽\tgong1\t堽城屯(地名)；(1)山脊､山岭；(2)同「冈」字\n塨\tgung1\t用于人名\n垲\thoi2\t爽垲\n茔\tjing4\t茔地，祖茔，坟茔\n塕\tjung2\t风起的样子\n塙\tkok3\t同「确」字\n塱\tlong5\t元塱(广州市附近地名)\n塓\tmik6\t抹墙\n埘\tsi4\t在墙上凿的鸡窝\n塍\tsing4\t塍畎，田塍，沟塍，塍埒交经，塍陌交通田界路\n塔\ttaap3\t灯塔，宝塔\n塌\ttaap3\t崩塌，坍塌，塌实，塌方，死心塌地，一塌糊涂，作塌；(1)脱落；(2)凹陷\n塘\ttong4\t水塘，鱼塘\n塯\tlau6\t陶制饭器\n塉\tzik6\t塉埆贫瘠的土地\n塛\tleot6\t塞也\n塝\tbong6\t方言用字，指田边土坡、沟渠或土埂的边\n塣\tcing2\t畅通无阻\n塎\tjung5\t用以形容不安宁\n塭\twan1\t土地温暖\n墋\tcam2\t牙墋，寒墋\n尘\tcan4\t尘土，尘嚣，尘埃，尘封，尘世，尘事，尘垢，尘缘，尘俗，风尘，红尘\n墔\tceoi1\t土丘\n堑\tcim3\t堑壕，天堑(天险)，欲堑，地堑(地质学上断层引致的狭长的低地)；(1)坑、壕沟；(2)险阻的地形；(3)喻困难\n境\tging2\t境界，境遇，境况，边境，环境，心境\n墎\tgwok3\t城郭\n墈\tham3\t高陡的堤岸\n墉\tjung4\t墉城(传说中西王母住所)，垣墉小城\n墁\tmaan6\t把砖、石等物铺在地面上\n墓\tmou6\t墓地，墓园，墓穴，墓碑，墓志，墓木已拱，扫墓\n塽\tsong2\t高而何阳之地\n塾\tsuk6\t塾师，家塾，私塾，义塾\n墇\tzoeng1\t隔塞\n塼\tzyun1\t同「砖」字\n墑\tdik1\t(1)台阶；(2)同「的」字，意指箭把的中心\n墘\tkin4\t车路墘(台湾省)\n塻\tmok6\t尘土\n墂\tbiu1\t同「标」字，特别指用土立的标志\n塶\tluk6\t地名用字，一说同「鹿」字\n墏\tcoeng2\t墏基(将土弄平而成的地基)\n墀\tci4\t丹墀，庭墀，玉墀\n墫\tzeon1\t同「樽」字\n墱\tdang3\t(1)栈道；(2)排水道\n墬\tdei6\t同「地」字\n墦\tfaan4\t坟墓\n墝\thaau1\t贫瘠坚硬的土地\n墟\theoi1\t墟里，墟市，废墟，趁墟\n墠\tsin6\t古代祭祀用的平地，《诗经》有「东门之墠」篇名。\n墡\tsin6\t白墡白色黏土\n坠\tzeoi6\t天花乱坠，坠落，耳坠子，下坠，坠毁，坠机，坠地，摇摇欲坠\n壆\tbok3\t粤语用字\n墼\tgik1\t炭墼\n垦\than2\t开垦，垦辟，垦荒，垦地，垦殖，垦丁，垦民，屯垦，耕垦\n𡒄\tlam5\t坎𡒄\n坛\ttaan4\t花坛，祭坛，讲坛，神坛，艺坛\n壉\tgeoi3\t古地名\n壂\tdin6\t(1)同「殿」字；(2)地基\n壔\tdou2\t(1)堡；(2)高土\n壏\thaam5\t坚结的土\n壕\thou4\t壕沟，战壕，壕堑\n壖\tjyun4\t同「堧」字\n壑\tkok3\t沟壑，丘壑，千山万壑，放情丘壑；(1)谷､沟；(2)坑洞\n壛\tjim4\t步壛(长廊)\n垆\tlou4\t垆土，当垆卖酒\n垄\tlung5\t垄断，田垄\n坏\twaai6\t坏人，坏事，坏处，坏死，坏话，坏蛋，败坏，破坏\n壝\twai2\t古祭坛周围之低土墙\n𪤚\tleon4\t菜畦\n壨\tleoi4\t雷出地\n壧\tngaam4\t同「岩」字\n坝\tbaa3\t坝子，堤坝，水坝\n圣\tgaai3\t(1)居也，循也；(2)一说同「怪」字\n圣\tfat1\t从手从地，致力于地解\n坊\tfong1\t坊间，街坊，磨坊，坊巷，牌坊，染坊，工作坊\n坊\tfong4\t堤坊\n圻\tngan4\t同「垠」字\n圻\tkei4\t方圆千里之地\n坉\tnang4\t大坉(吴川县)\n坉\ttyun4\t田垄\n坏\tpui1\t同「坯」字\n坏\tpui4\t同「培」字\n坻\tdai2\t宝坻(县名)\n坻\tci4\t水中高地\n坻\tzi2\t坻伏\n坷\tho1\t坷垃\n坷\tho2\t坎坷，命途坎坷\n坢\tbun6\t坋也\n坢\tpun5\t(1)平坦；(2)发地\n垢\tgau3\t污垢\n垢\thau4\t封开(县名)\n埲\tbong6\t地名\n埲\tbung6\t量词，口语用字\n埲\tpung1\t塕埲\n堆\tdeoi1\t堆砌，草堆，堆积如山，堆放，堆叠，堆肥，土堆，垃圾堆，堆金积玉，满脸堆笑\n堆\tzeoi1\t小堆\n堵\tze2\t(1)古县名；(2)河流名\n堵\tdou2\t堵塞，堵住，堵嘴，围堵\n埶\tngai6\t同「艺」字\n埶\tsai3\t同「势」字\n培\tbau6\t培𪣻(小土山)\n培\tpui4\t培养，培育\n埩\tcaang4\t古代鲁城北门池\n埩\tzang1\t耕治\n埱\ttau3\t同「透」字\n埱\tcuk1\t同「俶」字\n埮\tdaam6\t形容地平而长\n埮\ttaam4\t一种口小腹大的瓦制容器\n埣\tseoi4\t不粘合的泥土\n埣\tseot1\t土颓落\n堡\tbou2\t城堡，堡垒，堡寨，碉堡\n堡\tpou3\t通「铺」字\n埵\tdo2\t埵防\n埵\tdo3\t埵堁\n堷\tjam3\t同「窨」字\n堷\tbau6\t堷楼(培楼的讹误)\n堥\tmau4\t堆堥(小堆陇)\n堥\tmou4\t前高后低的土丘\n堥\tmou5\t瓦制的容器\n塞\tsak1\t塞责，阻塞，搪塞，闭塞，茅塞顿开\n塞\tcoi3\t塞外，出塞，边塞，要塞\n填\tzan3\t通「镇」字\n填\ttin4\t填写，填补，填充，填表，填平，愤气填膺\n𪣻\tlau4\t坟头\n𪣻\tlau5\t培𪣻(小土山)\n堕\tfai1\t同「隳」字\n堕\tdo6\t堕马，堕胎，呱呱堕地，堕落\n墯\tfai1\t同「隳」字\n墯\tdo6\t同「堕」字\n坟\tfan4\t坟墓，坟籍\n坟\tfan5\t肥土\n增\tcang4\t通「层」字\n增\tzang1\t增加，增进，增多，增强，增值，增长，增减，增援\n墥\tteon2\t同「畽」字，指禽兽践踏的地方\n墥\tdung2\t蚂蚁做窝时堆在蚁穴口的小土堆\n墿\tjik6\t同「驿」字\n墿\ttou4\t同「途」字\n垒\tleoi5\t垒球，堡垒，两军对垒，垒墙，垒块，垒坝，深沟高垒\n垒\tleot6\t神荼郁垒\n地\tdei6\t地区，天地，地动山摇，地方，地位，地理，地域，地窖，本地，地大物博，地广人稀，不败之地，不留余地\n地\tdeng6\t「地dei6」的异读字\n圪\tgat6\t「圪ngat6」的异读字\n圪\tngat6\t(1)墙高貌；(2)高大貌\n圮\tpei2\t(1)倒塌；(2)毁坏\n圮\tpei5\t「圮pei2」的异读字\n圳\tzan3\t深圳(地名用字)田野间的水沟\n圳\thyun2\t「圳zan3」的异读字\n坐\tco5\t「坐zo6」的异读字，口语读音\n坐\tzo6\t坐标，打坐，坐井观天，坐镇，坐化，坐失，坐科，坐禅，坐馆，连坐法，坐以待弊，坐卧不宁\n坋\tban6\t「坋fan5」的异读字\n坋\tfan5\t丹朱坋身\n坋\tfan6\t「坋fan5」的异读字\n坳\taau1\t「坳aau3」的异读字\n坳\taau3\t坳塘，山坳\n坳\tngaau1\t「坳aau1」的异读字\n坳\tngaau3\t「坳aau3」的异读字\n坡\tbo1\t坡度，山坡，斜坡，坡道，陡坡\n坡\tpo1\t「坡bo1」的异读字\n坩\tham1\t坩埚\n坩\tkim4\t「坩ham1」的异读字\n埯\tam1\t播种时挖的小坑\n埯\tam2\t「埯am1」的异读字\n垛\tdo2\t标垛，垛积，堆垛\n垛\tdo6\t「垛do2」的异读字\n垕\thau5\t同「厚」字\n垕\thau6\t「垕hau5」的异读字\n城\tseng4\t「城sing4」的异读字\n城\tsing4\t城市，城池，城垣，城堡，城关，城下之盟\n垗\tsiu6\t「垗ziu6」的异读字\n垗\tziu6\t(1)葬地；(2)祭坛四周的边界\n埃\taai1\t「埃oi1」的异读字\n埃\tngaai1\t「埃oi1」的异读字\n埃\toi1\t埃及，尘埃\n埃\tngoi1\t「埃oi1」的异读字\n埇\tcung1\t「埇jung2」的异读字\n埇\tjung2\t道上加土\n埒\tlyut3\t壝埒，塍埒，相埒，富埒天子(史记•平准书)；(1)矮墙；(2)界线；(3)相等\n埒\tlyut6\t「埒lyut3」的异读字\n堲\tzat1\t「堲zik1」的异读字，解火烧过的土或燃烧过的烛芯\n堲\tzik1\t(1)憎恶；(2)火烧过的土；(3)燃烧过的烛芯\n堲\tzik6\t「堲zik1」的异读字，意为憎恶\n垭\taa3\t黄角垭\n垭\tngaa3\t「垭aa3」的异读字\n埧\tbaa3\t「埧geoi6」的异读字\n埧\tgeoi6\t堤塘\n埠\tfau6\t本埠，外埠，开埠，埠头，商埠\n埠\tbou6\t「埠fau6」的异读字\n埭\tdai6\t「埭doi6」的异读字\n埭\tdoi6\t埭堰；(1)防水土坝；(2)地名\n堀\tfat1\t堀堁\n堀\tgwat6\t「堀fat1」的异读字\n埳\tham2\t同「坎」字\n埳\tham3\t「埳ham2」的异读字\n堎\tling4\t长头堎\n堎\tling6\t「堎ling4」的异读字\n堄\tngai4\t「堄ngai6」的异读字\n堄\tngai6\t埤堄\n垩\tok3\t白垩，垩帚\n垩\tngok3\t「垩ok3」的异读字\n堩\tgang2\t道路\n堩\tgang3\t「堩gang2」的异读字\n塈\tgei6\t「塈hei3」的异读字\n塈\thei3\t塈涂\n塈\tkei3\t「塈hei3」的异读字\n埚\tgwo1\t「埚wo1」的异读字\n埚\two1\t坩埚\n埙\tfan1\t「埙hyun1」的异读字\n塑\tsok3\t「塑sou3」的异读字\n塑\tsou3\t塑料，塑造，塑像，泥塑，雕塑\n涂\tcaa4\t「涂tou4」的异读字\n涂\ttou4\t涂料，涂抹，涂改，涂鸦，涂上，涂掉，涂潭\n坞\tou3\t「坞wu2」的异读字，用于「船坞」一词\n坞\twu2\t花坞，山坞，船坞\n塴\tbaang6\t「塴bing3」的异读字\n塴\tbang1\t「塴bing3」的异读字\n塴\tbing3\t同「堋」字，丧葬时下棺于土\n墐\tgan2\t「墐gan6」的异读字\n墐\tgan6\t墐户，墐泥\n塺\tmo6\t「塺mui4」的异读字\n塺\tmui4\t细尘\n墅\tseoi5\t别墅\n墅\tseoi6\t「墅seoi5」的异读字\n墩\tdan1\t「墩deon1」的异读字\n墩\tdan2\t「墩deon1」的异读字\n墩\tdeon1\t墩子，墩布，墩打，墩嘴，土墩，桥墩，门墩，塔墩；(1)沙土堆成的高丘；(2)支撑或垫物的基础\n墨\tmaak6\t「墨mak6」的异读字\n墨\tmak6\t墨盒，墨汁，墨笔，墨迹，骚人墨客\n墣\tpok3\t土块\n墣\tbuk6\t「墣pok3」的异读字\n壁\tbek3\t「壁bik1」的异读字，口语用字\n壁\tbik1\t壁人，壁立，壁衣，壁虎，壁门，壁飞，壁记，壁垒，峭壁，绝壁\n壁\tbik3\t「壁bik1」的异读字\n墺\tou3\t水涯\n墺\tngou3\t「墺ou3」的异读字\n墽\thaau1\t「墽hiu1」的异读字\n墽\thiu1\t(1)地名；(2)抛弃；(3)土壤坚硬贫瘠\n压\taat3\t压力，压迫，压制，压抑，压倒，压阵，欺压，气压\n压\tngaat3\t「压aat3」的异读字\n埙\tfan1\t「埙hyun1」的异读字\n埙\thyun1\t埙箎相和，颂埙，伯埙仲篪\n壒\toi2\t同「堨」字\n壒\toi3\t「壒oi2」的异读字\n壒\tngoi3\t「壒oi2」的异读字\n圹\tkong3\t「圹kwong3」的异读字\n圹\tkwong3\t圹埌，圹远\n坜\tlek6\t「坜lik6」的异读字\n坜\tlik6\t中坜(台湾地名)\n壤\tjoeng5\t「壤joeng6」的异读字\n壤\tjoeng6\t土壤，天壤之别\n圩\twai4\t圩堤\n圩\theoi1\t同「墟」字\n圩\tjyu4\t(1)同「围」字；(2)「圩wai4」的异读字\n均\tgwan1\t均匀，均等，均势，均衡，均摊，平均\n均\tkwan1\t「均gwan1」的异读字\n均\twan6\t同「韵」字\n坎\tham1\t「坎ham2」的异读字\n坎\tham2\t坎坷，坎肩，心坎，坎𡒄，土坎，田坎\n坎\tham3\t地名用字\n圾\tsaap3\t垃圾，搭圾(零乱、破旧)\n圾\tkap1\t(1)危险；(2)同「岌」字\n圾\tngap6\t「圾kap1」的异读字\n垌\tdung6\t儒垌(广东省地名)\n垌\ttung2\t垌冢(湖北省地名)\n垌\ttung4\t「垌tung2」的异读字\n垺\tpau4\t「垺pui1」的异读字\n垺\tfu1\t同「郛」字\n垺\tpui1\t(1)制陶器的模型；(2)盛大\n堋\tbaang6\t「堋bing3」的异读字\n堋\tbang1\t「堋bing3」的异读字\n堋\tpang4\t(1)分水的堤坝；(2)箭靶\n堋\tbing3\t葬时下棺于土\n埏\tsaan1\t「埏sin1」的异读字\n埏\tjin4\t埏道\n埏\tsin1\t八埏，埏埴\n埤\tbai3\t「埤pai3」的异读字\n埤\tpai3\t埤堄\n埤\tbei1\t通「卑」字\n埤\tpei4\t埤益\n堨\taat3\t(1)阻塞；(2)堤堰\n堨\tngaat3\t「堨aat3」的异读字\n堨\toi2\t尘埃\n堨\toi3\t「堨oi2」的异读字\n堨\tngoi2\t「堨oi2」的异读字\n堨\tngoi3\t「堨oi2」的异读字\n堿\thaam4\t堿坷\n堿\tgaan2\t含氢氧根的化合物的统称\n堿\tham3\t「堿haam4」的异读字\n墆\tdai3\t墆翳\n墆\tzai6\t停滞、积聚\n墆\tdit6\t「墆zai6」的异读字\n垫\tdim3\t「垫din3」的异读字，用于「昏垫」一词\n垫\tdin2\t「垫din3」的异读字，用于「鞋垫」、「草垫」等词\n垫\tdin3\t垫付，铺垫，鞋垫，垫款，垫底，垫没，垫脚石，草垫，昏垫(溺陷，见《书经》)\n垫\tdin6\t「垫din3」的异读字，用于「垫款」、「垫支」等词\n垫\tzin3\t「垫din3」的异读字，用于「鞋垫」、「草垫」等词\n垫\tdip6\t垫江(四川省旧县名)\n壅\tjung1\t「壅jung2」的异读字\n壅\tjung2\t壅土，壅肥，壅塞，壅滞\n壅\tngung1\t粤语用字\n士\tsi6\t士气，士兵，士卒\n壬\tjam4\t六壬(古占卜法一)，壬公(水神)，壬人(奸佞之人)十「天干」之一\n壴\tzyu3\t(1)陈列乐器；(2)鼓架；(3)姓氏\n壶\twu4\t茶壶，铜壶滴漏，壶天日月\n壸\tkwan2\t壸闱，内壸，壸范\n壾\tmong5\t人名用字\n寿\tsau6\t寿命，寿星，寿辰，寿终正寝\n囍\thei2\t「喜」的异体字\n壮\tzong1\t姓氏\n壮\tzong3\t壮观，壮大，壮年，壮围，壮丽，壮硕，壮士，壮烈，壮举，壮盛，壮丁，壮胆，壮实，壮健，壮志凌云\n壮\tzong6\t壮族\n壹\tjat1\t同「一」字\n壹\tjik1\t通「抑」字\n壿\tdeon1\t同「蹲」字\n壿\tcyun4\t「壿deon1」的异读字\n夆\tfung1\t相逆啎\n夆\tfung4\t「夆fung1」的异读字\n夌\tling4\t同「陵」字\n夔\tkwai4\t夔纹，夔牛，夔龙，夔州，一夔已足；(1)传说中的怪兽；(2)姓氐；(3)用于人名、地名等\n复\tfuk1\t回复，复利\n复\tfuk6\t复原，光复，复员，复命，复仇，复习\n夏\tgaa2\t夏楚(古代教庠中行使笞刑的体罚用具)\n夏\thaa6\t夏天\n夎\tzeoi3\t「夎co3」的异读字\n夎\tco3\t(1)古代甲士跪拜时，跪而不至地，显得失礼；(2)衣服张起\n夒\tnaau4\t同「猱」字\n夒\tnou4\t「夒naau4」的异读字\n夕\tzik6\t夕阳，夕照，除夕，朝夕，日夕，朝闻夕改，危在旦夕，朝不保夕\n外\tngoi6\t外国，外出，门外，国外\n多\tdo1\t多数，多少，多久，多么，多余\n夙\tsuk1\t夙愿，夙敌，夙夜匪懈，夙世因缘，夙昔；(1)往昔的；(2)早晨\n夜\tje6\t夜间，夜晚，夜总会，夜里，夜游，夜班，夜空，夜半，夜猫，夜生活，夜景，夜幕，夜来香，夜袭，夜深人静，夜曲，夜长梦多，夜场，夜光，夜勤，夜郎自大，夜不闭户，夜航，夜莺，夜有所梦，夜警，夜光杯，夜明珠，夜盲，夜阑\n够\tgau3\t足够，受够，够数，能够\n伙\tfo2\t伙伴，合伙，伙计，伙众\n夤\tjan4\t夤夜(深夜)，夤畏，夤亮，夤缘\n夗\tjyun2\t通「宛」字\n夗\tjyun3\t(1)委曲貌；(2)转卧\n梦\tmung4\t梦雨\n梦\tmung6\t梦想，梦话，梦寐以求\n夬\tgwaai3\t六十四卦之一\n太\ttaai3\t太平，太阳，太空，太极，太值得喇\n天\ttin1\t天下，天才，天空，天地，天伦，天壤之别，天经地义\n夷\tji4\t匪夷所思，蛮夷，化险为夷，鄙夷，东夷，夷为平地，以夷制夷，尊王攘夷，履险如夷\n夸\tkwaa1\t奢侈\n奀\tngan1\t粤语用字，意指「瘦弱」\n奉\tfung6\t奉献，奉命，奉祀，奉劝，奉派，奉令，奉养，奉行，奉公守法，奉召，奉送，奉上，奉告，奉承，奉还，奉陪，奉旨，奉到，奉为圭臬，奉公\n奈\tnoi6\t奈烦，奈何，无奈，怎奈；(1)堪､经得起，通「耐」；(2)处置，与「何」合用；(3)表意外之语气词\n奅\tpaau3\t车大奅(粤人所指说大话骗人)虚大、张大\n奕\tjik6\t精神奕奕\n奂\twun6\t奂然，美轮美奂\n奚\thai4\t奚落，奚隶\n套\ttou3\t套用，圈套，套利\n奜\tfei2\t同「斐」字\n奠\tdin6\t奠定，奠基，奠立，祭奠\n奡\tngou6\t排奡；(1)傲慢；(2)矫健\n夺\tdyut6\t夺取，定夺，光彩夺目，夺标，夺魁，夺回，夺门，攫夺，掠夺，抢夺，褫夺，剥夺，夺眶而出，巧取豪夺，横刀夺爱，巧夺天工，强词夺理，喧宾夺主，先声夺人，争分夺秒\n奁\tlim4\t妆奁，奁敬\n奭\tsik1\t(1)盛大的样子；(2)姓氏\n奖\tzoeng2\t奖励，褒奖，奖券，奖品，奖学金，奖章，奖状，奖助，奖赏，奖杯\n奰\tbei6\t怒\n奱\tlyun4\t(1)系扎；(2)捆缚\n大\tdaai6\t大小，大夫，大名，大概\n大\ttaai3\t通「太」字\n夫\tfu1\t夫妻，夫子，丈夫，夫人，夫君，夫胥，夫子自道，夫倡妇随\n夫\tfu4\t指示词、助词\n夭\tjiu1\t夭桃秾李，桃之夭夭\n夭\tjiu2\t夭折，夭遏，夭厉，寿夭，民不夭札\n夭\tou2\t禽兽及草木之稚者\n夯\thaang1\t打夯，夯歌\n夯\tban6\t同「笨」字\n央\tjing1\t央央(鲜明的样子)\n央\tjoeng1\t中央，央求\n失\tjat6\t同「逸」字\n失\tsat1\t失败，失望，失职，失误，失约，失和，失落，失色，失意，失恋\n奇\tgei1\t奇偶，奇数\n奇\tkei4\t奇怪，稀奇，奇货可居，奇遇，奇妙，奇特，奇谈，奇观，奇人异士，奇兵特出，奇谋妙计，奇文瑰句，奇珍异宝，奇耻大辱\n奄\tjim1\t奄奄一息\n奄\tjim2\t奄有，奄忽\n奏\tcau3\t同「腠」字\n奏\tzau3\t奏乐，节奏\n奊\thai5\t奊诟(即謑诟，指忍受耻辱)\n奊\tkwai4\t骫奊(头不正的样子)\n奲\tce2\t奲都(宋时西夏毅宗年号)\n奲\tdo2\t同「亸」字\n夼\tkong3\t方言用字，意为洼地，多用于地名\n夼\tkwong3\t「夼kong3」的异读字\n夹\tgaap3\t夹杂，夹击，夹带私逃，文件夹，夹攻，夹注，夹棍\n夹\tgap3\t「夹gaap3」的异读字\n夹\tgep6\t「夹gaap3」的异读字\n夹\tgip6\t「夹gaap3」的异读字\n奔\tban1\t狂奔，奔跑\n奔\tban3\t「奔ban1」的异读字\n奎\tkwai1\t「奎fui1」的异读字\n奎\tfui1\t奎章二十八星宿之一\n奢\tce1\t奢求，奢侈，奢望，奢华，奢靡，骄奢淫逸\n奢\tse1\t「奢ce1」的异读字\n奫\twan1\t奫沦\n奫\tjyun1\t「奫wan1」的异读字\n奋\tfan3\t「奋fan5」的异读字\n奋\tfan5\t奋斗，振奋，奋发图强，奋不顾身，兴奋，自告奋勇\n奓\tzaa1\t奓山、奓湖(湖北省地名)\n奓\tzaa3\t张开\n奓\tce1\t心奓，奓靡同「奢」字\n奓\tse1\t「奓ce1」的异读字\n奓\tci2\t同「侈」字\n契\tkai2\t「契kit3」的异读字，用于「契丹」一词\n契\tkai3\t契约，默契，投契，契合，契机，地契\n契\that1\t「契kit3」的异读字，用于「契丹」一词\n契\tkit3\t契阔，契丹\n契\tsit3\t人名，传说中殷人的祖先\n奘\tzong1\t粗壮\n奘\tzong3\t「奘zong1」的异读字\n奘\tzong6\t唐玄奘\n奥\tou2\t通「燠」字\n奥\tou3\t奥妙，深奥\n奥\tngou3\t「奥ou3」的异读字\n奥\tjuk1\t同「澳」字\n奴\tnou4\t奴隶，农奴，奴颜婢膝，奴才，奴仆，奴工，奴役，奴家，黑奴\n奸\tgaan1\t奸臣，奸商，奸笑，奸细，内奸\n如\tjyu4\t如果，如何，如此，如常，如厕\n妁\tzoek3\t媒妁，媒妁之言，男媒女妁男家的媒人叫媒，女家的媒人叫妁\n妅\thung4\t女子名称用字\n奾\tsin1\t女子人名用字\n奷\tcin1\t女子人名用字\n奿\tfaan3\t聪慧圆滑的女子\n妀\tgei2\t(1)姓氏；(2)女子人名用字\n奻\tnaan4\t(1)争吵；(2)愚蠢\n妣\tbei2\t考妣，先妣，祖妣已身故的母亲\n妒\tdou3\t妒忌，嫉妒，妒火中烧\n妢\tfan4\t妢胡(战国时楚地国名)\n妨\tfong4\t妨害，妨碍，何妨，不妨\n妦\tfung1\t方言用字\n妎\tgaai3\t妒\n妓\tgei6\t妓女，妓院，妓馆\n妍\tjin4\t争妍斗丽，不辨妍媸\n妤\tjyu4\t婕妤；(1)女官；(2)女子美称\n妗\tkam5\t妗母\n妙\tmiu6\t妙语如珠，玄妙，妙手回春，妙计，妙方，妙龄，妙处，妙用，妙舞，妙丽，美妙，奥妙，妙不可言\n妠\tnaap6\t婠妠(小孩肥胖美好的样子)\n妘\twan4\t姓氏\n妆\tzong1\t妆扮，化妆，梳妆\n妐\tzung1\t(1)丈夫的父亲；(2)丈夫的姐姐\n姖\tgeoi6\t吴姖(山名)\n妡\tjan1\t女子人名用字\n妏\tman6\t女子人名用字\n始\tci2\t始终，始末，始祖，原始，始终\n姒\tci5\t姒娣，姒妇\n妾\tcip3\t妾身，妾侍，妻妾\n姑\tgu1\t姑娘，姑且，姑妈，姑息\n姌\tjim5\t姌袅\n姏\tmaan4\t老女\n姆\tmou5\t保姆\n妹\tmui6\t姊妹，妹夫，妹妹\n妺\tmut6\t古人名用字\n妮\tnei4\t妮子\n妵\ttau2\t(1)好貌；(2)古人名用字\n姐\tze2\t姐姐，姐妹，姐夫，姐弟\n姃\tzing1\t容貌端庄的女子\n妽\tsan1\t女子人名用字\n姀\two4\t(1)女子人名用字；(2)仪态娴雅\n姈\tling4\t(1)女子人名用字；(2)形容女子聪明伶俐\n妴\tjyun2\t妴胡(兽名，见山海经)\n妼\tbat6\t形容妇女有仪容\n妱\tziu1\t女子人名用字\n奸\tgaan1\t奸淫，通奸，奸情，奸污\n姤\tgau3\t相遇\n姜\tgoeng1\t姓氏\n姮\thang4\t姮娥\n姻\tjan1\t姻缘，姻亲，婚姻\n姚\tjiu4\t姓氏\n姱\tkwaa1\t美好\n姘\tping1\t姘头，姘居，姘识\n姺\tsin2\t古国名，故址相传在今山东曹县北方的莘冢集\n娀\tsung1\t有娀(古国名)\n娃\twaa1\t娃娃，娇娃，洋娃娃\n威\twai1\t威胁，威力，威风，威吓，威望，威武，威严，威猛，威名，威势，威逼，威风凛凛\n姪\tzat6\t姪子，姪女，姪儿，姪孙\n姿\tzi1\t姿势，雄姿，多采多姿，姿态，舞姿，天姿国色，顾盼生姿，搔首弄姿，摇曳生姿，婀娜多姿，英姿焕发\n姷\tjau6\t相助\n姴\tlit6\t美丽\n姛\tdung6\t颈项挺直的样子\n姠\thoeng3\t女子人名用字\n姾\tcyun4\t女子人名用字\n姳\tming5\t好也\n姲\taan3\t女子人名用字\n姭\thim3\t样貌娟好\n娖\tcuk1\t娖娖\n姬\tgei1\t姬妾\n娟\tgyun1\t娟娟，娟秀，婵娟，娟丽，娟好\n娙\tjing4\t(1)女子身长而美好；(2)婢女\n娱\tjyu4\t娱乐，娱宾，娱悦，自娱，欢娱\n娌\tlei5\t妯娌\n娓\tmei5\t娓娓，娓娓道来\n娥\tngo4\t娥眉，宫娥，嫦娥，素娥，月娥\n娘\tnoeng4\t娘家，姑娘，爹娘，娘胎，红娘，娘子军，娘娘腔\n娑\tso1\t婆娑，摩娑，娑婆世界\n娏\tmong4\t传说中的女神名子\n娮\tjin4\t女子人名用字\n娳\tlei6\t女子人名用字\n婊\tbiu2\t婊子，婊子送客\n婥\tcoek3\t婥约\n娼\tcoeng1\t娼寮，娼妓\n婚\tfan1\t婚姻，结婚，婚丧喜庆，婚礼，谈婚论嫁，婚约\n妇\tfu5\t妇女，妇人，妇女会，妇产科，妇联会，妇联，妇孺，妇女节，妇科，妇联总会，妇幼医院，妇女运动，妇道人家，妇女杂志，妇幼卫生，妇人之仁，妇道，妇德\n婛\tging1\t美\n婞\thang6\t婞直\n娸\thei1\t(1)姓氏；(2)丑陋\n婬\tjam4\t同「淫」字\n婪\tlaam4\t贪婪\n婗\tngai4\t婗子，嫛婗\n婄\tpau3\t(1)女貌；(2)不才\n婢\tpei5\t婢女，奴婢\n婆\tpo4\t婆婆，婆娑，婆家，婆婆妈妈\n婠\twun1\t婠妠\n娵\tzeoi1\t娵觜(星名，十二星次之一)\n婧\tzing6\t(1)女子有才能；(2)纤弱貌\n婟\twu6\t(1)恋惜；(2)嫉恨\n娹\tjin4\t寡妇守节有德\n婈\tling4\t女子人名用字\n娾\tngaai6\t喜悦\n婍\tji2\t样貌美好\n婌\tsuk6\t古代后宫女官名\n婰\tdin2\t女子人名用字\n婖\ttim1\t女子人名用字\n婂\tmin4\t女子人名用字\n婇\tcoi2\t(1)宫女；(2)女子人名用字\n婒\ttaam4\t女子人名用字\n婃\tcung4\t女子人名用字\n婝\tdin6\t女子人名用字\n婸\tdong6\t淫\n妫\tgwai1\t河北省河流名\n媌\tmaau4\t美好\n媔\tmin4\t眼晴美的样子\n婺\tmou6\t婺江(江西省水名)，婺女(星座名)，婺源(朱熹故里)\n媢\tmou6\t水涨\n媒\tmui4\t媒介，媒人，媒妁，媒妁之言，媒谮，媒婆\n媥\tpin1\t身子灵巧轻便的样子\n婿\tsai3\t夫婿，女婿，纳婿\n媟\tsit3\t媟黩，媟弄，媟慢，淫言媟语；(1)轻侮；(2)污秽\n嫂\tsou2\t嫂嫂，嫂子，姑嫂，兄嫂\n媞\ttai4\t媞媞\n婷\tting4\t娉婷，婷婷玉立\n媦\twai6\t古代楚地人民对妹妹的称呼\n媋\tceon1\t(1)形容女子容貌美丽；(2)女子人名用字\n媎\tze2\t同「姐」字，羌族人对母亲的称呼\n媩\twu4\t女子人名用字\n媜\tzing1\t女子人名用字\n媏\tdyun1\t女子人名用字\n媝\tcau1\t女子人名用字\n媓\twong4\t传说中舜的妻子\n媄\tmei5\t样子美丽\n媗\thyun1\t女子人名用字\n婽\tgaa2\t美好\n媃\tjau4\t(1)形容女子温柔妩媚；(2)女子人名用字\n媬\tbou2\t保母，古代负摃抚养、教育贵族子弟的妇女\n婻\tnam6\t(1)美貌；(2)小肥\n媸\tci1\t妍媸\n㛀\tco4\t妇女怀孕\n嫁\tgaa3\t嫁给，嫁妆，嫁祸，嫁娶\n媐\thei1\t悦乐\n嫌\tjim4\t嫌犯，嫌疑，嫌隙，嫌恶，嫌弃\n嫈\tjing1\t嫈嫇，嫈嫈\n媱\tjiu4\t(1)曲肩行貌；(2)美好\n嫄\tjyun4\t姜嫄\n媺\tmei5\t同「美」字\n媻\tpun4\t媻珊\n媳\tsik1\t媳妇\n嫊\tsou3\t女子人名用字\n媴\tjyun4\t女子人名用字\n媶\tjung4\t妦媶(美貌)\n媷\tjuk6\t懈惰\n嫍\ttou1\t女子人名用字\n媹\tlau4\t女子人名用字\n嫆\tjung4\t女子人名用字\n嫡\tdik1\t嫡系，嫡子，嫡传，夺嫡\n嫛\tji1\t嫛婗\n嫣\tjin1\t嫣红，嫣然一笑，姹紫嫣红艳丽\n嫢\tkwai1\t嫢盈\n嫠\tlei4\t嫠妇\n嫘\tleoi4\t嫘祖\n嫪\tlou6\t嫪毐\n嫚\tmaan6\t(1)轻视；(2)侮辱\n嫫\tmou4\t嫫母\n嫟\tnik1\t同「昵」字\n嫩\tnyun6\t嫩绿，嫩芽，娇嫩\n嫳\tpit3\t嫳屑\n嫦\tsoeng4\t嫦娥\n嫮\twu6\t同「嫭」字\n嫭\twu6\t(1)形容美好的样子；(2)美女\n嫜\tzoeng1\t丈夫的父亲\n嫥\tzyun1\t专一，「专」之古字\n嫬\tze1\t女子人名用字\n嫙\tsyun4\t美好\n嫝\thong1\t(1)安康；(2)女子人名用字\n娇\tgiu1\t娇柔，百媚千娇，娇生惯养，娇滴滴，娇妻，娇艳，娇嫩，娇客，娇憨，娇媚，娇艳，娇小玲珑\n娴\thaan4\t同「\n媭\tseoi1\t古楚国人对姊姊的称呼\n嫷\tto5\t婑嫷\n婳\twaak6\t姽婳\n嬅\twaa6\t(1)女子容貌美丽；(2)女子人名用字\n嫹\tmaau4\t同「媌」字\n嫴\tgu1\t(1)保任；(2)苟且；(3)估计\n嬏\tfaan1\t女子人名用字\n嬂\tzik1\t女子人名用字\n嫸\tzin2\t(1)打断别人话柄；(2)嘲笑；(3)固执\n嬁\tdang1\t美女的样子\n嬐\tcim1\t(1)敏捷快速；(2)庄敬貌\n嫱\tcoeng4\t嫱媛，妃嫱\n嬴\tjing4\t姓氏\n嬝\tniu5\t同「袅」字\n嬗\tsin6\t嬗变，递嬗更替､演变\n嬞\tdung2\t女子人名用字\n嬓\tgiu3\t人名用字\n嬚\tlim5\t(1)清美；(2)女子人名用字\n嬠\tcam1\t贪婪\n婴\tjing1\t婴儿，弃婴，弃璧负婴，连体婴\n嬬\tjyu4\t小妾\n嬭\tnaai5\t同「奶」字\n嬯\ttoi4\t迟钝\n𫝩\tcau4\t女子人名用字\n嬨\tci4\t(1)形容妇女性情宽厚和顺；(2)女子人名用字\n𪥰\tning4\t姘𪥰(女劣貌，一说女子姿态舒缓)\n嬧\tzeon6\t女子人名用字\n婶\tsam2\t婶母，大婶，婶娘\n嬽\tjyun1\t同「娟」字\n嬾\tlaan5\t同「懒」字\n孅\tcim1\t同「纤」字\n娘\tnoeng4\t耶娘，舞娘\n孀\tsoeng1\t孀居\n孈\tseoi1\t愚戆多态\n𪥫\tsoeng1\t女子人名用字\n㛤\tlei4\t(1)古国名；(2)同「俪」字；(3)姓氏\n女\tneoi5\t女士，女史，女色，女巫，女娲，女婿，妇女\n女\tneoi6\t以女嫁人\n女\tjyu5\t同「汝」字\n妃\tfei1\t妃嫔，宫妃\n妃\tpui3\t同「配」字\n好\thou2\t好歹，好手，好看，美好，好感，好坏，好肉剜疮，好事多磨\n好\thou3\t好奇，好恶，好色，好尚，爱好，好大喜功，好行小慧，好勇斗狠，好高骛远，好为人师，君子好逑\n妧\twun6\t女子美好的样子\n妧\tjyun4\t女子人名用字\n妻\tcai1\t妻子，妻室，妻孥，夫妻\n妻\tcai3\t作动词用，意指把女子嫁给人\n姗\tsaan1\t姗笑，姗姗来迟\n姗\tsin1\t便姗\n委\twai1\t虚与委蛇\n委\twai2\t委曲，委屈，委任，委身，委派，委托，委琐，原委\n姇\tfau4\t同「琈」字\n姇\tfu1\t形容妇女容貌美丽\n妶\tjin4\t同「娹」字\n妶\tjyun4\t女子人名用字\n姣\tgaau2\t姣好，姣美，姣媚\n姣\thaau4\t(1)淫荡；(2)粤俗语有「发姣」一词\n姥\tlou5\t姥姥(外祖母)\n姥\tmou5\t(1)丈夫的母亲；(2)老妇的尊称\n姩\tnin4\t女子人名用字\n姩\tnin6\t美女\n姡\tkut3\t面貌丑陋\n姡\twut6\t(1)羞惭的样子；(2)狡诈\n姶\thap6\t(1)美好的样子；(2)女子人名用字；(3)姓氏；(4)无声\n姶\tjap1\t形容女子灵巧\n娩\tfaan3\t娩息\n娩\tmaan5\t娩泽，婉娩\n娩\tmin5\t分娩\n娉\tping1\t娉婷\n娉\tping3\t古时请媒人问女方名字和年生八字，晚近作品一概写作「聘」\n娕\tlaai6\t好的样子\n娕\tcuk1\t(1)谨慎；(2)善良；(3)同「娖」字\n娊\tdaam1\t安乐\n娊\tjin6\t(1)形容女子腰肢纤细；(2)女子人名用字\n娞\tneoi5\t用以形容妇女容貌美好\n娞\tseoi1\t同「绥」字\n婘\tgyun3\t同「眷」字\n婘\tkyun4\t屈曲\n娄\tlau4\t星名，二十八宿之一\n娄\tleoi4\t(1)拉；(2)牵\n婜\thaan1\t美丽\n婜\tgan2\t女子人名用字\n婩\tjoek6\t婩斫(不解悟的样子)\n婩\tngon6\t形容妇女容貌端正美好\n娷\tseoi6\t(1)女子人名用字；(2)姓氏\n娷\tzeoi6\t同「諈」字，意指推委\n婤\tcau1\t美好的样子\n婤\tzau1\t女子人名用字\n袅\tniu1\t细而长\n袅\tniu5\t袅娜，袅袅\n嫀\tsan1\t古国名\n嫀\tceon4\t女子人名用字\n嫖\tpiu1\t嫖姚\n嫖\tpiu4\t嫖客，嫖妓\n嫨\tnaan5\t同「戁」字\n嫨\thon1\t(1)怒容；(2)老妇貌\n嫶\tciu4\t嫶妍\n嫶\tziu1\t女子人名用字\n嬉\thei1\t嬉戏，嬉笑，嬉游，嬉皮笑脸，嬉笑怒骂\n嬉\thei2\t人名用字\n娆\tjiu4\t娇娆，妖娆\n娆\tjiu5\t烦扰\n嬔\tfaan3\t(1)生子多而素质均匀；(2)蕃殖；(3)鸟伏乍出；(4)禽类生蛋\n嬔\tfu6\t兔崽\n嬛\twaan4\t天帝的藏书处\n嬛\tking4\t同「惸」字\n嬛\thyun1\t便嬛，嬛佞\n嬥\ttiu4\t同「佻」字\n嬥\ttiu5\t(1)身材匀称美好；(2)妖艳貌；(3)调换\n孍\tjim4\t女子人名用字\n孍\tjim5\t美好的样子\n奶\tnaai1\t「奶naai5」的异读字\n奶\tnaai4\t「奶naai5」的异读字\n奶\tnaai5\t奶妈，奶母，牛奶，奶奶，奶名，奶油\n姹\tcaa3\t姹女，姹紫嫣红\n姹\tzaa3\t「姹zaa3」的异读字\n她\ttaa1\t女性第三人称代词\n她\tji1\t「她taa1」的异读字\n妄\tmong5\t妄想，妄念，妄语，妄自菲薄\n妄\tmong6\t「妄mong5」的异读字\n妊\tjam4\t「妊jam6」的异读字\n妊\tjam6\t妊娠，妊妇\n妖\tjiu1\t妖怪，妖邪，妖人，妖魔，妖魔鬼怪，妖精，妖道，妖异\n妖\tjiu2\t「妖jiu1」的异读字\n妞\tnau2\t妞儿，大妞\n妞\tnau5\t「妞nau2」的异读字\n妥\tto2\t「妥to5」的异读字\n妥\tto5\t妥善，妥协，办妥\n姅\tbun3\t姅变(月经)\n姅\tpun3\t「姅bun3」的异读字\n妲\ttaan2\t「妲daat3」的异读字\n妲\tdaat3\t妲己(王妃名)\n姁\theoi1\t「姁heoi1」的异读字\n姁\theoi2\t姁姁(安乐/温暖的样子)\n姓\tseng3\t「姓sing3」的异读字\n姓\tsing3\t姓氏，姓名，百姓\n姊\tze2\t「姊zi2」的异读字\n姊\tzi2\t姊弟，姊妹\n姎\tjoeng1\t古时女子自称之词\n姎\tjoeng2\t「姎joeng1」的异读字\n姼\tci2\t「姼si4」的异读字\n姼\tsi4\t姼姼(美好貌)\n姞\tgat1\t姓氏\n姞\tgit6\t「姞gat1」的异读字\n姽\tgwai2\t姽婳\n姽\tngai5\t「姽gwai2」的异读字\n姨\tji1\t「姨ji4」的异读字\n姨\tji4\t姨甥，小姨，姨太太，姨丈，姨妈，姨婆\n姝\tsyu1\t「姝zyu1」的异读字\n姝\tzyu1\t姝姝，姝丽，名姝，暧姝\n姵\tbui6\t「姵pui3」的异读字\n姵\tpui3\t女子人名用字\n娣\tdai6\t娣姒，娣姪\n娣\ttai5\t「娣dai6」的异读字\n娣\ttai6\t「娣dai6」的异读字\n娠\tsan1\t妊娠，妊娠纹\n娠\tzan3\t「娠san1」的异读字\n娅\taa3\t姻娅，娅婿\n娅\tngaa3\t「娅aa3」的异读字\n娶\tceoi2\t「娶ceoi3」的异读字，为口语读音\n娶\tceoi3\t娶妻，娶亲，迎娶，嫁娶\n婓\tfei1\t「婓fei4」的异读字\n婓\tfei4\t婓婓\n婉\twun2\t「婉jyun2」的异读字\n婉\tjyun2\t婉拒，婉谢，婉转，婉约，婉惜，婉言相劝\n婀\to1\t婀娜\n婀\to2\t「婀o1」的异读字\n婀\tngo1\t「婀o1」的异读字\n婀\tngo2\t「婀o2」的异读字\n婑\two1\t「婑wo2」的异读字\n婑\two2\t婑嫞\n婕\tzip3\t「婕zit3」的异读字\n婕\tzit3\t婕妤(古女官名)\n媕\tam1\t犹豫不决的样子\n媕\tngam1\t「媕am1」的异读字\n媚\tmei4\t「媚mei6」的异读字\n媚\tmei6\t媚世，媚外，媚行，媚笑，媚惑，媚态，媚颜，妩媚，献媚\n媮\ttau1\t媮安，媮生\n媮\tjyu4\t「媮tau1」的异读字\n娲\tgwaa1\t「娲wo1」的异读字\n娲\two1\t女娲，女娲补天\n媊\tcin4\t「媊zin2」的异读字\n媊\tzin2\t女媊(星名)\n媲\tbei2\t「媲pei3」的异读字\n媲\tpei3\t媲美，取青媲白\n媾\tgau3\t媾和，婚媾，交媾，姻媾；(1)交配；(2)议和\n媾\tkau3\t「媾gau3」的异读字\n媵\tjan6\t「媵jing6」的异读字\n媵\tjing6\t妾媵，媵婢，媵侍\n媪\tou2\t老媪，媪神，富媪\n媪\tngou2\t「媪ou2」的异读字\n嫉\tzaat6\t「嫉zat6」的异读字\n嫉\tzat6\t嫉妒，嫉恶如仇，愤世嫉俗\n嫕\tai3\t婉嫕柔顺\n嫕\tngai3\t「嫕ai3」的异读字\n嫕\tji3\t「嫕ai3」的异读字\n妪\tjyu2\t老妇\n妪\tjyu3\t「妪jyu2」的异读字\n嫞\tcung1\t「嫞jung4」的异读字\n嫞\tjung4\t(1)形容妇女懒惰；(2)女子人名用字\n嫽\tliu4\t嫽妙\n嫽\tliu5\t「嫽liu4」的异读字\n妩\tmou4\t「妩mou5」的异读字\n妩\tmou5\t妩媚\n婵\tsim4\t婵娟(形容月色明媢或人姿态袅娜)\n婵\tsin4\t「婵sim4」的异读字\n𫝬\tfaai3\t「𫝬kui2」的异读字\n𫝬\tkui2\t女子人名用字\n嫒\toi3\t令嫒\n嫒\tngoi3\t「嫒oi3」的异读字\n嬖\tbai3\t「嬖pei3」的异读字\n嬖\tpei3\t嬖妾，嬖臣\n嫔\tban3\t「嫔pan4」的异读字\n嫔\tpan4\t嫔从，嫔御，嫔妇，嫔俪，妃嫔\n嬮\tjim1\t(1)好人安详之容；(2)女子人名用字\n嬮\tjim3\t「嬮jim1」的异读字\n嬷\tmaa1\t嬷嬷，老嬷\n嬷\tmaa4\t「嬷maa1」的异读字\n嬷\tmo5\t「嬷maa1」的异读字\n嬼\tlau6\t「嬼liu5」的异读字\n嬼\tliu5\t(1)寡妇；(2)艳丽美好\n嬿\tjin2\t「嬿jin3」的异读字，用于「嬿婉」一词\n嬿\tjin3\t嬿服，嬿婉\n娈\tlyun2\t「娈lyun5」的异读字\n娈\tlyun5\t相貌美\n妳\tnaai5\t同「奶」字\n妳\tlei5\t「妳nei5」的异读字\n妳\tnei5\t同「你」字，专用于女姓\n妯\tcau1\t悲恸\n妯\tsuk6\t「妯zuk6」的异读字\n妯\tzuk6\t妯娌\n娗\ttin2\t(1)软劣；(2)欺骗\n娗\tting4\t「娗ting5」的异读字\n娗\tting5\t(1)妇科病名，指妇人子宫脱出；(2)长而美\n娭\taai1\t「娭oi1」的异读字\n娭\tngaai1\t「娭oi1」的异读字\n娭\thei1\t娭笑(即嬉笑)\n娭\toi1\t方言用字\n娜\tnaa4\t「娜no4」的异读字\n娜\tno4\t女子人名用字\n娜\tno5\t婀娜，袅娜\n婐\to1\t同「婀」字\n婐\tlo2\t「婐wo2」的异读字\n婐\two2\t侍女\n婼\tje4\t「婼joek6」的异读字\n婼\tji3\t「婼joek6」的异读字\n婼\tcoek3\t不顺从\n婼\tjoek6\t婼羌\n媛\twun4\t名媛，婵媛，淑媛\n媛\tjyun4\t「媛wun4」的异读字\n媛\tjyun6\t美女\n媿\tgwai2\t姓氏\n媿\tkwai3\t同「愧」字\n媿\tkwai5\t「媿kwai3」的异读字\n妈\tmaa1\t妈妈，姑妈，姨妈\n妈\tmaa2\t粤语用字，指女仆\n妈\tmaa4\t粤语用字，指祖母\n妈\tmaa5\t妈祖，妈祖庙「妈maa1」的异读字\n嫇\tmang4\t「嫇ming4」的异读字\n嫇\tming4\t嫈嫇\n嫇\tming5\t婴嫇\n嬲\tnau1\t(1)怒；(2)恨\n嬲\tniu4\t「嬲niu5」的异读字\n嬲\tniu5\t戏弄\n孎\tdoek3\t「孎zuk1」的异读字\n孎\tcuk1\t(1)同「娕」字；(2)同「娖」字\n孎\tsuk6\t女子人名用字\n孎\tzuk1\t谨慎\n孓\tkyut3\t孑孓\n孔\thung2\t孔雀开屏，洞孔，孔武有力，孔庙，孔隙，孔道，孔急\n孕\tjan6\t孕妇，孕育，怀孕，身孕，避孕\n存\tcyun4\t存在，寄存，去芜存菁，存放，存货，存疑，存折，存款，存取，存根，存有，存活，保存，留存，苟存，结存，生存，硕果仅存，生死存亡，求同存异，浩气长存，和平共存，荡然无存\n字\tzi6\t字典，文字，字母，别字，字形\n孚\tfu1\t(1)信实；(2)使人信服\n孝\thaau3\t孝顺，孝悌，孝敬，孝服，考道，考廉，举考廉，戴孝，守考，孜\tzi1\t孜孜，乐孜孜，孜孜不倦，孜孜不息\n孢\tbaau1\t孢子\n孤\tgu1\t孤立，孤独，孤苦，孤寂，孤僻，孤单，孤注一掷，孤掌难鸣，孤芳自赏，孤陋寡闻\n季\tgwai3\t季节，季军，季刊\n孟\tmaang6\t孟加拉，孟子，孟买，孟春，孟夏，孟姜女，孟秋，孟母三迁\n孥\tnou4\t孥戮，妻孥\n屘\tmei1\t方言。台湾地区称相同称谓的亲属中，排行最小的\n孰\tsuk6\t孰知，孰料\n孲\taa1\t孲婴(婴孩)\n孮\tcung4\t子孙隆盛\n孳\tzi1\t孳生，孳乳，孳息，孳孳不倦同「孜」字。\n孵\tfu1\t孵化，孵出，孵蛋，孵育，孵卵\n孷\tlei4\t孷孖(哺乳动物产下双生儿)，孷孳(即孷孖)\n学\thok6\t学生，学校，学者，学习，学历，学子，学业，学位，学问，学理，学养，学究，学员\n孻\tlaai1\t粤语用字，意谓「最后的」\n子\tci4\t子谅(同慈良，见《礼记•乐记/祭义》)\n子\tzi2\t子夜，儿子，子虚乌有，子女，子弟，脖子，王子，娘子，跛子，一辈子，摆架子，诸子百家，百子千孙，浪子回头\n孙\tseon3\t通「逊」字\n孙\tsyun1\t子孙，孙子，祖孙\n孑\tgit3\t「孑kit3」的异读字\n孑\tkit3\t孑孓，孑遗\n孖\tmaa1\t双生子\n孖\tzi1\t「孖maa1」的异读字\n孩\thaai4\t「孩hoi4」的异读字\n孩\thoi4\t孩子，孩童，孩提，孩儿\n孬\tnaau6\t「孬bou2」的异读字\n孬\tbou2\t孬种不好、懦弱\n孺\tjyu4\t孺子，孺弱，孺齿，孺慕，孺子可教，妇孺\n孺\tjyu6\t「孺jyu4」的异读字\n孽\tjip6\t「孽jit6」的异读字\n孽\tjit6\t孽子，孽根，孽种，孽缘，妖孽，冤孽，罪孽，余孽\n孪\tlyun4\t孪生，孪生兄弟双胞胎\n孪\tsyun3\t「孪lyun4」的异读字\n孛\tbaak6\t方言用字\n孛\tbui6\t「孛but6」的异读字\n孛\tbut6\t孛星\n孱\tcaan3\t孱头\n孱\tsaan4\t孱夫，孱弱，孱羸\n孱\tzaan6\t「孱caan3」的异读字\n宄\tgwai2\t奸宄泛指坏人，外为奸，内为宄\n宇\tjyu5\t宇宙，庙宇，眉宇，屋宇\n宅\tzaak6\t宅第，住宅，宅心仁厚\n完\tjyun4\t完成，完全，完整，完毕，完善，完美，完满，完结\n宋\tsung3\t宋代，宋朝，宋人，宋国，宋词，宋瓷\n宏\twang4\t宏观，无关宏旨，宽宏大量，宏伟，宏达，宏仁，宏亮，宏图，宏富，宏愿，宏业，宏儒，宏硕\n宒\tzeon1\t棺貌\n宕\tdong6\t跌宕，延宕\n官\tgun1\t官员，官方，官司，官僚，官吏，官长，官官相护，官腔，官样文章，官制，官差，官宦\n宜\tji4\t宜人，权宜\n宙\tzau6\t宇宙，宙斯(希腊神话中的天神)\n宗\tzung1\t宗教，宗旨，宗师，宗庙，宗族，宗派，宗室，祖宗\n客\thaak3\t客观，乘客，客似云来，客气，客运，客卿，客家人，客户，客车，客家，客厅，客机，客满，客房，客轮，客串，客席，客栈，客座教授，客体，客套，客船，客队，客地，客座，客室，客饭\n宥\tjau6\t宥恕，宽宥，原宥，谅宥，宥减，宥弼；(1)宽厚；(2)宽恕、赦免\n室\tsat1\t室内，室外，密室，家室\n宣\tsyun1\t宣传，宣泄，宣誓就职，宣布，宣战，宣慰，宣纸，秘而不宣\n宦\twaan6\t宦官，仕宦，官宦人家，宦途，宦海，世嗣宦族，薄宦，名宦，显宦，谪宦\n宨\ttiu2\t轻佻放肆\n宫\tgung1\t宫廷，宫殿，宫女，宫灯，宫闱，宫阙，宫庭，宫扇，宫门，迷宫，冷宫\n宧\tji4\t室内的东北角\n宴\tjin3\t宴请，宴会，宴客，宴席，宴飨，宴饮\n容\tjung4\t容易，容纳，容量，容许，容忍，容器，容貌\n宭\tkwan4\t群居\n宸\tsan4\t宸虑\n宬\tsing4\t藏书室\n宵\tsiu1\t宵夜，元宵，通宵达旦，宵禁，宵小，良宵，春宵苦短\n宰\tzoi2\t宰杀，宰割，宰制，宰羊，宰相\n寄\tgei3\t寄信，寄望，寄人篱下，寄托，寄存，寄件人，寄语，寄情，寄居，寄宿，寄生虫，寄养\n寅\tjan4\t建寅，同寅，寅吃卯粮，寅畏；(1)十二地支之一；(2)恭敬\n寇\tkau3\t寇仇，外寇，穷寇莫追，流寇，司寇(职官名，掌刑狱)\n密\tmat6\t密切，秘密，阴云密布，密麻麻，密集，密码，密封，密探，密宗，密谋，稠密，亲密，保密，密不透风，闺中密友\n寁\tzaam2\t疾速\n寂\tzik6\t寂寞，寂静，寂寥，寂静无声\n寎\tbing2\t寎月(阴历三月的别称)；(1)一种卧而善惊，不能酣睡的精神病；(2)嗜睡的症状\n寑\tcam2\t同「寝」字\n富\tfu3\t富贵，富有，富翁，财富\n寒\thon4\t寒假，寒冬，寒冷，寒流，寒暑，寒风，寒暄，寒心，寒酸，寒气，寒喧，寒微，寒光，寒带，寒舍，寒窗，寒梅，寒衣，寒霜，寒蝉，寒林，寒山\n寓\tjyu6\t寓所，寓教于乐，寓意，寓言，寓居，寓公，寓兵于农\n寐\tmei6\t寤寐，梦寐以求，夙兴夜寐，寝不能寐，不寐，假寐睡觉\n寪\twai2\t(1)姓氏；(2)屋宇张开貌\n寋\tgin6\t(1)单独击磬；(2)姓氏；(3)困难\n寊\tzing1\t人名用字\n寖\tzam3\t同「浸」字\n寙\tjyu5\t懒惰\n察\tcaat3\t察看，察觉，观察\n寝\tcam2\t寝室，寝具，寝食不安，就寝\n寣\tfu1\t(1)从睡到醒为一寣，即睡一觉；(2)小儿啼哭声；(3)叹词\n寡\tgwaa2\t寡妇，寡言，寡不敌众，寡廉鲜耻，寡情，寡人\n寥\tliu4\t寥落，寥若晨星，寥寥无几\n寞\tmok6\t寞然，寂寞，落寞，不甘寂寞，寞天寂地\n寤\tng6\t睡醒\n实\tsat6\t实践，实施，实际，实心任事，实现，实业，实习，实惠，实物，实效，实证，实干，实验室，货真价实，实录，实业家，现实，果实，实至名归，荷枪实弹，华而不实，实事求是，虚实，寨\tzaai6\t寨子，山寨，营寨\n宽\tfun1\t宽阔，宽恕，宽大，宽松，宽裕，宽宏大量；(1)大；(2)广；(3)不紧；(4)不严苛\n寮\tliu4\t寮国，茅寮，僧寮\n审\tsam2\t审慎，公审，审时度势，陪审团，审判，审定，审核，精审\n写\tse2\t写作，描写，轻描淡写，写生，写实，写真，写照，写意，书写\n寰\twaan4\t寰宇，瀛寰，撒手尘寰，誉满寰中，惨绝人寰\n寯\tzeon3\t(1)才能杰出的人；(2)聚合\n寱\tngai6\t寱言，熟寐寱言(见《楞严经•卷九》)说梦话\n寲\tji4\t(1)察看；(2)疑难；(3)便也\n宠\tcung2\t宠物，宠爱，宠儿，宠信，宠幸，纳宠(纳妾)；(1)溺爱；(2)恩惠；(3)偏好；(4)妾\n宝\tbou2\t宝座，宝贵，宝石，宝玉，宝剑，宝藏，宝庆，宝地，宝殿，宝物，宝刀未老，宝蓝，宝库，宝典，宝鉴，宝刀，宝位，宝刹\n宁\tcyu5\t(1)宫殿的门和屏之间；(2)正门内侧屋之间\n守\tsau2\t守法，守时，守卫，遵守，保守，驻守，不守本分，墨守成法，尽忠职守\n守\tsau3\t太守，巡守\n宓\tmat6\t安静\n宓\tfuk6\t姓氏\n家\tgaa1\t家长，家庭，家族\n家\tze1\t语助词，放于词尾\n家\tgu1\t通「姑」字\n宿\tsau3\t星宿，二十八宿\n宿\tsuk1\t宿命，宿舍，宿疾，宿将，宿恶，宿贼，宿醉，宿好，住宿，归宿\n寘\tzi3\t放寘，装寘，购寘，寘之不理\n寘\ttin4\t寘颜山\n𪧘\tlau4\t瓯𪧘\n𪧘\tgeoi6\t贫𪧘\n它\ttaa1\t代词\n它\tto1\t「它taa1」的异读字\n安\ton1\t安定，安全，平安，安排\n安\tngon1\t「安on1」的异读字\n宎\tngaau5\t「宎jiu2」的异读字\n宎\tjiu2\t屋之东南角\n采\tcoi2\t寮采\n采\tcoi3\t「采coi2」的异读字\n寍\tning4\t同「宁」字，「寍」是「宁」的古字\n寍\tning6\t「寍ning4」的异读字\n寔\tsat6\t陈寔遗盗(指以诚心感化宵小流氓，使踏正途；陈寔乃梁上君子故事中的主角)；(1)同「实」字；(2)放置\n寔\tzik6\t「寔sat6」的异读字\n宁\tning4\t宁静，宁愿，宁谧，宁缺勿滥，安宁\n宁\tning6\t「宁ning4」的异读字\n定\tdeng6\t「定ding6」的异读字\n定\tding3\t定星\n定\tding6\t定理，稳定，气定神闲，定向，定局，定神，定型，定律，定义，定语，定论，定额，定夺，定购，安定，制定，举棋不定\n宛\twun2\t「宛jyun2」的异读字\n宛\tjyun1\t大宛\n宛\tjyun2\t宛如，宛延，宛然，委宛\n害\thoi6\t害怕，害羞，害处，害群之马，利害，暗害，杀害\n害\thot3\t通「曷」字\n害\thot6\t「害hot3」的异读字\n寸\tcyun3\t尺寸，寸阴，寸步，寸铁，寸断\n封\tfung1\t封闭，封杀，封面，信封，封建\n尃\tfu1\t尃药，尃路，入不尃出\n专\tzyun1\t专心，专注，专业\n寻\tcam4\t寻找，寻求，寻常，找寻，追寻，寻花问柳，寻人启事，寻幽探胜\n尌\tsyu6\t(1)竖立；(2)姓氏\n对\tdeoi3\t对错，面对，对症下药，对讲机，对簿公堂，对象，对抗，对策，对立，对手，对话，对峙，对付，对比，对质，对照，对联，对调，对白，对称，对流，对角，对偶，对牛弹琴\n导\tdou6\t导师，引导，导火线，导航，导致，导演，导向，导游，导电，导体，导源，导出，导热，导言，导线，导论，导电性\n尉\twai3\t上尉，少尉，太尉，都尉\n尉\twat1\t复姓，如「尉迟」及「尉缭」\n将\tcoeng1\t(1)请求；(2)愿望\n将\tzoeng1\t将军，将来，将功赎罪，将计就计\n将\tzoeng3\t将帅，麻将牌，干将莫邪，激将法，将领，点将，兵来将挡，过关斩将，调兵遣将\n尊\tzeon1\t同「樽」字\n尊\tzyun1\t尊长，尊重，尊容，尊崇，尊范，尊严，尊贵，尊卑，自尊\n寺\tzi2\t「寺zi6」的异读字\n寺\tzi6\t寺庙，寺院，寺僧，佛寺\n射\tje6\t仆射(古代官名，相当于宰相)\n射\tse6\t射手，射门，射程，射箭，射击，射石饮羽，注射，发射，含沙射影\n射\tjik6\t无射(无厌)\n射\tsik6\t「射se6」的异读字，用于古代韵文\n小\tsiu2\t小孩，小姐，小心，小说，小孩子，小麦，小偷，小贩\n尒\tji5\t同「尔」字\n尕\tgaa1\t方言用字\n尖\tzim1\t尖端，尖刻，尖利，打尖，尖锐\n尚\tsoeng6\t尚未，尚且，尚志，尚佳，尚有可为，尚好，和尚，尚武，崇尚\n尟\tsin2\t尟见，尟有\n少\tsiu2\t少候，少许，少顷，少量，少礼，少安无躁，少见多怪，多少，缺少，稀少\n少\tsiu3\t少年，少壮，少校，少将，少小无猜，少不更事，老少，阔少\n尐\tzik1\t有花纹的雌蝉\n尐\tzit3\t(1)少的同义词；(2)细树枝\n尤\tjau4\t效尤，怨天尤人，悔尤，尤甚，尤须，尤其甚者，尤其，尤物，尤佳姓氏\n尥\tliu6\t尥蹶子(牲口用后脚向后踢)；(1)走路时足胫相交；(2)跛行\n尬\tgaai3\t尴尬\n尪\twong1\t瘦弱\n就\tzau6\t就业，就职，就近，就寝，就事论事，就范，就地取材，成就，就教，避重就轻，半推半就\n尴\tgaam1\t尴尬\n尢\tjau4\t(1)姓氏；(2)同「尤」字\n尢\twong1\t(1)部首；(2)同「尪」字\n尨\tmong4\t多毛的狗\n尨\tpong4\t通「庞」字\n尨\tmung4\t尨茸\n尰\tcung3\t「尰zung6」的异读字\n尰\tzung2\t「尰zung6」的异读字\n尰\tzung6\t脚肿\n尳\tgwat1\t(1)膝病；(2)骨差\n尳\twat6\t「尳gwat1」的异读字\n尹\twan5\t府尹，令尹，道尹，詹尹；(1)治理；(2)古时区域长官的名称；(3)姓氏一\n尼\tnei4\t尼姑，僧尼\n局\tguk6\t局长，局面，局势，局部，局外人，局外，局限，局数，局部性，局促，局限于\n尾\tmei5\t尾随，尾巴，尾声，尾数，尾牙，尾部，尾音\n屁\tpei3\t屁股，放屁气下泄也。\n届\tgaai3\t届时，届满，届临，无远弗届；(1)到达；(2)定期举行的活动的计算单位；(3)胪列某种职务或身分的次第单位\n屇\ttin4\t洞穴\n屌\tdiu2\t(1)男性生殖器；(2)骂人的脏话\n尸\tsi1\t尸体，尸骨，尸首，尸骸\n屐\tkek6\t屐履\n屑\tsit3\t纸屑，琐屑，不屑一顾，木屑，头皮屑，屑意(在意)\n展\tzin2\t展示，展览，展开，展望，展出\n屉\ttai3\t抽屉\n屡\tleoi5\t屡次，屡试不爽，屡败屡战，屡见不鲜；(1)每每；(2)多次\n屣\tsaai2\t屣履，倒屣相迎，弃若敝屣鞋子\n层\tcang4\t层次，层面，层出不穷，层次分明，层层叠叠\n屦\tgeoi3\t剑及屦及麻鞋\n𪨗\tgoek3\t草鞋\n屪\tliu4\t男性外生殖器\n尺\tce2\t工尺(中乐乐谱记音符号)\n尺\tcek3\t尺牍，直尺，尺短寸长，尺度，尺码，尺书，尺素，尺二秀才，尺幅千里\n居\tgei1\t语末助词\n居\tgeoi1\t居民，居住，居多，居然，居高不下，居家，居留，居间，居次，居处，居士，居所，居安思危，居功，居心，居留权，居功厥伟，居高临下，居心叵测，居心不良，居室\n屈\tgwat6\t蒲屈\n屈\twat1\t屈服，屈辱，屈就，屈膝，屈指，屈打成招\n屏\tbing1\t屏盈(徨恐的样子)，屏营\n屏\tbing2\t屏除，屏弃，屏息静气，屏绝\n屏\tping4\t屏风，荧屏，孔雀开屏，屏障\n屎\thei1\t殿屎(呻吟声)\n屎\tsi2\t屎尿，拉屎，耳屎，眼屎；(1)粪便；(2)人体某些分泌物\n屔\tnai4\t四周高中间低可以盛水的山丘\n屔\tnei4\t屔丘(山名)\n屠\tceoi4\t休屠\n屠\ttou4\t屠杀，屠宰，屠夫\n属\tsuk6\t属于，家属，神仙眷属，下属，隶属，藩属，属性，心有所属\n属\tzuk1\t属意，属文，前后相属，属心，属望\n属\tzuk6\t属镂\n尻\thaau1\t脊骨末端\n尻\thou1\t「尻haau1」的异读字\n尿\tseoi1\t「尿niu6」的异读字，方言用字\n尿\tniu6\t尿道，尿酸，撒尿，验尿\n屄\thai1\t「屄bei1」的异读字\n屄\tbei1\t女性外生殖器\n屋\tuk1\t房屋，屋子，屋簷\n屋\tnguk1\t「屋uk1」的异读字\n屖\tcai1\t「屖sai1」的异读字\n屖\tsai1\t屖迟(滞留不前)\n屝\tfai6\t粗屦\n屝\tfei2\t「屝fai6」的异读字\n屙\to1\t排泄\n屙\tngo1\t「屙o1」的异读字\n履\tlei5\t履中，履行，履约，履新，履端，履历，履舄交错，履险如夷，步履；(1)鞋子；(2)脚步；(3)践踏；(4)实行\n履\tleoi5\t「履lei5」的异读字\n屧\tsip3\t「屧sit3」的异读字\n屧\tsit3\t屧廊(走廊)木屐\n屭\tai3\t「屭hei3」的异读字\n屭\tngai3\t「屭hei3」的异读字\n屭\thei3\t赑屭\n屮\tcit3\t(1)初生的草木；(2)部首\n屯\tseon4\t屯留县(山西省县名)\n屯\tzeon1\t屯膏，屯难，屯蹇\n屯\ttyun4\t屯兵，屯戍，屯聚，屯积，驻屯\n山\tsaan1\t山岭，爬山，山明水秀，山区，山路，山峦，山岗，山脉，山崩，山歌，山水画，山光水色，山穷水尽，排山倒海，冰山一角，逼上梁山\n屺\thei2\t陟岵陟屺(游子登高思念父母)；(1)不长草木的山；(2)《诗经˙魏风˙陟岵》：「陟彼岵兮，瞻望父兮……陟彼屺兮，瞻望母兮。」\n屹\tngat6\t屹立，巍然屹立\n屼\tngat6\t形容山秃\n屾\tsan1\t两山\n屻\tjan6\t形容高耸的山\n岔\tcaa3\t岔道，打岔\n岍\thin1\t岍山(陜西省山名)\n岏\tjyun4\t巑岏\n岐\tkei4\t岐山(县名)姓氏\n岒\tkim4\t岒峨(高下不齐的样子)\n岑\tsam4\t岑寂，岑崟，岑楼(高楼，语出《孟子》)；(1)高；(2)山高而小；(3)姓氏一\n岆\tjiu2\t山名\n岓\tkei4\t山旁的石头\n岕\tgaai3\t(1)山名；(2)两山之间\n岉\tmat6\t崛岉(用以形容高耸的东西)\n岋\tngap6\t岋岋惙惙(忧愁不安)；(1)摇动的样子；(2)同「岌」字\n岱\tdoi6\t岱宗\n岪\tfat6\t岪蔚，岪郁\n岬\tgaap3\t岬角，海岬；(1)两山之间；(2)陆地向海突出的部分\n岣\tgau2\t岣嵝(山名)\n冈\tgong1\t山冈，冈陵，井冈山，景阳冈\n岢\tho2\t岢岚(县名)\n岷\tman4\t岷江(四川河流名)，岷山(四川山名)\n岳\tngok6\t岳丈\n岸\tngon6\t岸边，岸上，岸头\n岥\tpo1\t同「陂」字\n岧\ttiu4\t岧岧(形容高)\n岵\twu6\t多草木的山\n岫\tzau6\t笔岫，嵒岫，烟岚云岫，岫幌\n岯\tpei4\t大岯(河南省山名)\n岟\tjoeng2\t岟崥(山脚)\n岶\tpaak3\t用以形容密茂的样子\n岤\thyut3\t山洞\n岮\tto4\t岥岮(凹凸不平的样子)\n岰\taau3\t山岰(山曲间的平地)\n峇\tbaa1\t峇里(印尼岛名)\n峊\tfau6\t同「阜」字\n峎\tgan3\t山名\n峆\tgap3\t山貌\n峛\tlei5\t峛崺((同逦迆))\n峉\tngaak6\t峉峉(山势高大的样子)\n峋\tseon1\t嶙峋，瘦骨嶙峋\n峘\twun4\t小山高于大山\n峔\tmou5\t峔山(安徽省山名)\n峏\tji4\t峏山(山名)\n峟\tjau6\t山也\n峚\tmat6\t峚山(山名，又写作密山)\n峸\tsing4\t峸山(山名)\n峓\tji4\t嵎峓(山名，又写作嵎夷)\n峌\tdit6\t同「嵽」字\n峈\tlok6\t峈峄(山貌)\n峐\tgoi1\t不生草木的山\n峖\ton1\t峖山(山名)\n峬\tbou1\t峬峭(山形好貌，也泛指风姿、文笔优美)\n峭\tciu3\t峭拔，孤峭，悬崖峭壁，陡峭，巉峭，风骨峭峻\n岛\tdou2\t岛屿，孤岛，半岛\n峰\tfung1\t峰回路转，峰峦，巅峰，顶峰\n崁\tham3\t赤崁(台湾地名)\n岘\tjin6\t山小而险\n峮\tkwan1\t峮嶙\n峨\tngo4\t峨冠，巍峨，峨嵋山\n峻\tzeon3\t峻岭，峻德，峻急，峻峭，险峻\n峹\ttou4\t同「嵞」字\n峷\tsan1\t传说中一种外形像狗的兽类\n崩\tbang1\t崩塌，崩溃，崩坍，崩盘，崩裂，崩解，山崩地裂，分崩离析\n崠\tdung3\t(1)山名；(2)山脊\n崌\tgeoi1\t崌山(四川省山名)\n岗\tgong1\t山岗，岗位，岗哨，岗警，岗亭；(1)同「冈」字；(2)值勤时的处所；(3)比喻职掌或本分\n崮\tgu3\t四周陡峭顶上较平的山\n崛\tgwat6\t崛起，崛崎\n崞\tgwok3\t崞县\n崆\thung1\t崆峒山\n崟\tjam4\t嵚崟，崎崟高峻峗峨\n崦\tjim1\t崦嵫(山名。位于甘肃省)\n仑\tleon4\t仑背\n崚\tling4\t崚峭，崚嶒\n崃\tloi4\t崃山\n崖\tngaai4\t崖壁，悬崖，临崖勒马，崖略\n崤\tngaau4\t崤山，崤函之固\n崧\tsung1\t同「嵩」字\n崇\tsung4\t崇拜，崇高，崇尚，崇山峻岭，崇敬，崇洋，尊崇\n崣\twai2\t嶊崣\n崝\tzang1\t山高\n崨\tzit6\t用以形容山势高峻或绵延的样子\n崏\tman4\t同「岷」字\n崰\tzi1\t崰嶷(参差不齐)\n崷\tcau4\t崷崒\n崶\tfung1\t山西省龙门山\n嵁\tham1\t崎岖\n嵎\tjyu4\t(1)山弯曲的地方；(2)同「隅」字\n岚\tlaam4\t山岚，烟岚，晓岚\n嵂\tleot6\t嵂崒\n嵋\tmei4\t峨嵋\n嵒\tngaam4\t同「岩」字\n崿\tngok6\t山崖\n嵫\tzi1\t崦嵫，嵫厘\n嵕\tzung1\t数峰并峙的山\n嵀\tcyu5\t天嵀山(山名)\n嵅\tham4\t岚嵅(山名)\n崼\tsi6\t山也\n崲\twong4\t休崲湖(地名)\n崳\tjyu4\t崳次(山名)\n嵉\tting4\t嵉山(山西省山名)\n崹\ttai4\t崥崹(形容山势渐平的样子)\n崸\tdan6\t山名\n嵲\tjit6\t嵽嵲(高峻)\n嵱\tjung4\t嵱嵷(山峰连绵)\n嵬\tngai4\t嵬峨，嵬嶷\n嵊\tsing6\t嵊县\n嵩\tsung1\t嵩山，嵩厚，嵩峻\n嵞\ttou4\t嵞山(会稽山的古名，又写作涂山)\n嵢\tcong1\t山势\n嵨\twu2\t嵨山(山名)\n嵧\tlau4\t岣嵧(山貌)\n嵥\tgit6\t形容独立高耸的东西\n岖\tkeoi1\t崎岖\n嵹\tkoeng4\t嵹台山\n嵝\tlau5\t岣嵝\n嵺\tliu4\t嵺郭，嵺愀\n嵷\tsung2\t嵱嵷\n嶍\tzaap6\t嶍峨山名\n嶂\tzoeng3\t层峦叠嶂\n嵿\tding2\t(1)山顶；(2)山名\n嶆\tcou4\t用以形容山势深空险峻\n𡶴\tcaan2\t踡𡶴(特起的样子)\n嶈\tcoeng1\t嶈嶈(象声词，形容水流撞击石头的声音)\n嶊\tzeoi2\t嶊嶉(崇高貌)\n嶀\ttou1\t山名\n嶓\tbo1\t嶓冢\n嶒\tcang4\t嶒棱，崚嶒\n嶕\tciu4\t嶕峣\n嶝\tdang3\t登山的小路\n嶞\tdo6\t山狭而长\n嵚\tjam1\t嵚崟(山势耸立貌)，岖嵚，欹嵚历落(喻人品高洁，有骨气)\n峣\tjiu4\t形容高峻\n嶙\tleon4\t嶙峋，怪石嶙峋，傲骨嶙峋\n嶚\tliu4\t山高貌\n崂\tlou4\t崂山山名\n嶜\tzam1\t嶜崟喦高锐貌\n嶟\tzeon1\t形容山石高峻尖削\n嶰\thaai5\t嶰壑，嶰谷(昆仑山北谷)，幽嶰山涧\n崄\thim2\t崄巇\n峃\thok6\t峃口\n峄\tjik6\t山东省山名\n嶪\tjip6\t岌嶪\n嶩\tnaau4\t(1)山东省古山名；(2)人名用字\n嶯\tcap1\t嶯山(山名)\n嶵\tzeoi2\t山的样子\n岳\tngok6\t山岳，五岳，渊渟岳峙\n巀\tzit6\t巀嶭(形容山势高峻)\n巃\tlung4\t山高峻貌\n巉\tcaam4\t巉岩，巉刻，巉峻，巉峭，巉岏，静巉巉，嵌巉险峻\n巆\tjing4\t岭巆(形容山的深邃)\n巏\tkyun4\t巏务(河北省山名)\n巍\tngai4\t巍峨，巍然，巍巍\n巑\tcyun4\t巑岏\n巅\tdin1\t巅峰，山巅\n峦\tlyun4\t峰峦，山峦连绵不绝的山峰丘岭\n巕\tjit6\t同「嶭」字\n巘\tjin5\t山峰\n岭\tling4\t岭嶙\n岨\tzeoi1\t同「砠」字\n岨\tzeoi2\t同「龃」字\n峒\tdung6\t同「洞」字\n峒\ttung4\t崆峒\n峗\tngai4\t三峗(甘肃省山名)\n峗\tngai5\t形容高山巍峨\n峞\tngai4\t同「嵬」字\n峞\tngai5\t山貌\n崔\tceoi1\t姓氏\n崔\tceoi4\t崔巍，崔嵬\n崎\tkei1\t崎岖，崎岖不平\n崎\tkei4\t长崎(日本地名)\n崥\tbei2\t峡崥(山脚)\n崥\tpei4\t崥崹(形容山势渐平的样子)\n嵑\tkit3\t同「碣」字\n嵑\thot3\t嶱嵑\n崺\tji4\t同「迆」字\n崺\tji5\t峛崺(同逦迆)\n崵\tjoeng4\t首崵山(山名，即首阳山)\n崵\tdong6\t崵山(山名，又写作砀山)\n嵃\tjin5\t嵃峭(山势高耸险峻)\n嵃\tjin6\t嵃山(山名)\n嵣\tdong6\t山石广大的样子\n嵣\ttong4\t山名\n嶉\tzeoi1\t嶊嶉(山势高耸)\n嶉\tzeoi2\t山盘曲貌\n嶡\tgwai3\t山崛起貌\n嶡\tkyut3\t俎名\n嶬\tngai5\t崎嶬(又高又险的样子)\n嶬\tji4\t形容山峰巉岩\n嶷\tji4\t九嶷山\n嶷\tjik6\t嶷岌，岐嶷，嵬嶷\n屿\tzeoi6\t岛屿\n屿\tjyu4\t大屿山(香港地方名)\n屴\tlak6\t「屴lik6」的异读字\n屴\tlik6\t崱屴(山峰高耸)\n岌\tgap6\t「岌kap1」的异读字\n岌\tkap1\t岌蛾，岌嶪(巍峨高壮)，岌岌可危；(1)摇动；(2)山势高峻；(3)危险\n岌\tngap6\t「岌kap1」的异读字\n岈\thaa1\t山深之貌\n岈\tngaa4\t「岈haa1」的异读字\n岊\tgit3\t「岊zit3」的异读字\n岊\tzit3\t山间隐僻地\n岠\tgeoi6\t「岠keoi5」的异读字\n岠\tkeoi5\t(1)大山；(2)同「距」字\n岝\tzaak3\t「岝zaak6」的异读字\n岝\tzaak6\t岝岭，岝崿(山势高峻的样子)\n岦\tlaap6\t「岦lap6」的异读字\n岦\tlap6\t岦岌(山的样子)\n峡\thaap6\t峡谷，海峡\n峡\thap6\t「峡haap6」的异读字\n峪\tjuk6\t嘉峪关(关名，在甘肃省)\n峪\tjyu6\t「峪juk6」的异读字\n崀\tlong4\t「崀long6」的异读字\n崀\tlong5\t「崀long6」的异读字\n崀\tlong6\t崀山(地名)\n峱\tnaau4\t峱山(山东省古山名)\n峱\tnau4\t「峱naau4」的异读字\n峱\tnou4\t「峱naau4」的异读字\n峿\tng4\t岩峿\n峿\tjyu5\t「峿ng4」的异读字\n昆\tgwan1\t「昆kwan1」的异读字\n昆\tkwan1\t昆仑，昆曲\n崋\twaa4\t「崋waa6」的异读字\n崋\twaa6\t崋山\n峥\tcaang4\t「峥zaang1」的异读字\n峥\tzaang1\t峥嵘\n峥\tzang1\t「峥zaang1」的异读字\n崒\tzeot1\t山峰高而险\n崒\tzyut6\t「崒zeot1」的异读字\n嵌\thaam1\t「嵌ham6」的异读字\n嵌\tham2\t「嵌ham6」的异读字\n嵌\tham3\t「嵌ham6」的异读字\n嵌\tham6\t镶嵌，嵌画，嵌造把东西填入空隙\n嵇\thai4\t「嵇kai1」的异读字\n嵇\tkai1\t(1)姓氏；(2)河南省山名\n崱\tzak1\t崱屴；(1)山高大貌；(2)不齐\n崱\tsik6\t「崱zak1」的异读字\n崽\tzai2\t「崽zoi2」的异读字\n崽\tzoi2\t(1)幼小的动物；(2)詈词\n嵯\tco1\t嵯峨\n嵯\tco4\t「嵯co1」的异读字\n嵾\tcaam1\t「嵾cam1」的异读字\n嵾\tcam1\t嵾差\n嶱\tho1\t「嶱got3」的异读字\n嶱\tgot3\t嶱嵑\n岙\tou3\t山间平地\n岙\tngou3\t「岙ou3」的异读字\n嶲\tseoi2\t同「巂」字\n嶲\tseoi5\t「嶲seoi2」的异读字\n嶭\tjip6\t「嶭jit6」的异读字\n嶭\tjit6\t巀嶭\n嶭\tsit3\t「嶭jit6」的异读字\n嵘\twang4\t「嵘wing4」的异读字\n嵘\tjing4\t「嵘wing4」的异读字\n嵘\twing4\t峥嵘，峥嵘岁月，山势峥嵘\n岭\tleng5\t「岭ling5」的异读字\n岭\tling5\t岭南，山岭，五岭，崇山峻岭\n巇\thei1\t崄巇\n巇\thei3\t「巇hei1」的异读字\n岿\tkwai1\t岿然独存\n岿\tkwai2\t「岿kwai1」的异读字\n岩\tngaam4\t岩石，岩洞，熔岩\n岩\tjim4\t「岩ngaan4」的异读字\n峙\tci5\t对峙，鼎峙，耸峙，渊渟岳峙\n峙\tsi6\t峙县(山西省县名)\n峙\tzi6\t「峙ci5」的异读字\n崴\twaai1\t「崴wai1」的异读字\n崴\twaai2\t崴子\n崴\twai1\t崴嵬\n嵽\tdai3\t「嵽dai6」的异读字\n嵽\tdai6\t岧嵽\n嵽\tdit6\t嵽嵲\n崭\tcaam4\t崭岩\n崭\tcaam5\t「崭zaam2」的异读字\n崭\tzaam2\t崭新，崭露头角\n崭\tzaam3\t「崭zaam2」的异读字\n峤\tgiu2\t「峤giu6」的异读字\n峤\tgiu6\t山道\n峤\tkiu4\t山尖而高\n巂\tkwai1\t(1)通「规」字；(2)鸟名\n巂\tsai1\t「巂seoi5」的异读字\n巂\tseoi2\t「巂seoi5」的异读字\n巂\tseoi5\t越巂(四川省县名)\n川\tcyun1\t河川，山川，川流不息，百川归海\n巟\tfong1\t(1)水广；(2)至\n州\tzau1\t州郡，神州\n巡\tceon4\t巡逻，巡视，巡警，巡弋，巡捕，巡查，巡察，酒过三巡；(1)往来查察；(2)量词\n巢\tcaau4\t巢穴，鸟巢，归巢蜂巢，倾巢而出\n工\tgung1\t工作，工程，工厂，工具，工人，工夫\n巨\tgeoi6\t巨人，巨大，巨额，巨石，巨型\n左\tzo2\t左右，左手，左转，左边，左派\n巠\tging1\t溪流\n巫\tmou4\t巫师，巫山，巫术，巫峡\n巯\tkau4\t一种有机化合物，符号SH\n差\tcaa1\t差可，差舛，差池，差忒，差别，差距，差劲，差错，差额，差三错四，差强人意，偏差，误差\n差\tcaai1\t差役，差使，差事，差遣，出差，兼差，邮差，听差，衙差\n差\tci1\t差等，差肩，参差，差量\n差\tco1\t同「蹉」字\n巧\thaau2\t巧妙，技巧，巧夺天工，巧合，巧遇，巧辩，精巧，凑巧，巧立名目，巧舌如簧，巧言令色，巧取豪夺\n巧\tkiu2\t「巧haau2」的异读字\n己\tgei2\t己见，己身，自己，利己，异己，知己，推己及人，各执己见十「天干」之一\n已\tji5\t已经，已然，已往\n巳\tzi6\t巳时十二地支之一\n巴\tbaa1\t巴结，尾巴，结结巴巴，巴不得，锅巴\n巷\thong6\t巷子，巷陌，巷议，里巷，巷战\n巽\tseon3\t八卦之一\n巾\tgan1\t手巾，布巾，头巾，巾帼\n巿\tfat1\t同「黻」字\n布\tbou3\t布袋，布料，布置，布匹，布局\n市\tsi5\t市场，市民，市区，市面，市镇，市集，市郊\n帄\tding1\t修补衣裳\n希\thei1\t希望，希冀，几希\n帊\tpaa3\t(1)两幅宽的布帛；(2)头巾；(3)布帐\n帎\tdaam3\t冠俯前\n帛\tbaak6\t布帛，玉帛，帛书，帛画，帛丸，币帛，香帛，竹帛，财帛\n帙\tdit6\t卷帙，卷帙浩繁；(1)书籍的布套；(2)量词，一函为一帙\n帗\tfat1\t古代用五采缯帛制成的舞具\n帘\tlim4\t酒帘\n帖\ttip3\t字帖，请帖，碑帖，喜帖\n帝\tdai3\t帝王，上帝，帝国主义，帝君，帝制，帝位\n帢\thap1\t帢帽\n帟\tjik6\t小帐幕\n帤\tjyu4\t同「袽」字\n帡\tping4\t帡幪(帐幕)\n帩\tciu3\t帩头\n师\tsi1\t师生，师大，师傅，师资，师院，师父，师范\n席\tzik6\t席位，席卷，席地而坐，缺席，席不暇暖\n帠\tngai6\t法令\n带\tdaai3\t带领，佩带，披星带月，皮带，鞋带，地带，热带雨林，面带笑容，带领，带路，白带病，带坏，带伤，披麻带孝，带发修行\n常\tsoeng4\t常会，常常，常见，常识，常态，常设，常人，常规，常备，常数\n帷\twai4\t帷幕，帷幔，运筹帷幄\n帐\tzoeng3\t帐户，帐目，帐号，帐簿，结帐\n幅\tfuk1\t幅度，幅射\n帏\twai4\t帏幔，帏帐，罗帏\n帧\tzing3\t装帧，横帧\n帾\tdou2\t(1)旗帜；(2)覆盖棺木的帐幔\n幁\tseoi1\t束发的头巾\n幌\tfong2\t幌子，酒幌\n幏\tgaa3\t古代西南地区小数民族所织的布名，多用于贡赋\n幎\tmik6\t同「幂」字\n幋\tpun4\t(1)覆衣大巾；(2)首巾\n幊\tgung1\t衣巾\n幍\ttou1\t(1)布帽；(2)同「绦」字\n币\tbai6\t币值，硬币，辅币，货币\n帼\tgwok3\t巾帼英雄\n幔\tmaan6\t帷幔，帏幔，幔帐\n幕\tmok6\t幕僚，帐幕，帷幕，揭幕\n幙\tmok6\t同「幕」字\n幓\tsaam1\t同「縿」字\n幛\tzoeng3\t幛子，幛光，喜幛\n帜\tci3\t标帜，幡帜，旗帜，易帜，独树一帜；(1)旌旗；(2)标记\n幡\tfaan1\t幡帜，幢幡，经幡，幡然悔悟，扬幡擂鼓，扬幡招魂一种狭长､垂直悬挂的旗帜\n𪩸\tfan4\t马御两旁的绸条饰物\n幠\tfu1\t(1)覆盖；(2)傲慢\n幜\tging2\t(1)布帛；(2)古代御尘的罩衣\n幧\tciu1\t幧头\n帮\tbong1\t帮助，帮忙，帮派，帮手，帮会，帮凶，帮腔\n幭\tmit6\t覆盖物体的巾布\n幯\tzit3\t拭抹\n幰\thin2\t车的帐幔\n帑\ttong2\t帑藏，公帑，帑银，帑癐\n帑\tnou4\t同「孥」字\n帔\tpei1\t同「披」字\n帔\tpei3\t霞帔\n帣\tgyun2\t卷起袖口\n帣\tgyun3\t有底的囊\n帅\tseoi3\t帅印，主帅，元帅，将帅\n帅\tseot1\t同「率」字\n帴\tzin1\t通「鞯」字\n帴\tzin2\t狭小\n幢\tcong4\t石幢，幡幢，人影幢幢\n幢\ttong4\t经幢，海幢寺\n幢\tzong6\t量词\n帆\tfaan4\t帆船，帆布，风帆\n帆\tfaan6\t「帆faan4」的异读字\n帚\tzaau2\t「帚zau2」的异读字\n帚\tzau2\t扫帚，敝帚自珍\n帨\tceoi3\t「帨seoi3」的异读字\n帨\tseoi3\t佩巾\n幄\tak1\t运筹帷幄幄幕\n幄\tngak1\t「幄ak1」的异读字\n帽\tmou2\t「帽mou6」的异读字\n帽\tmou6\t帽子\n帻\tzaak3\t「帻zik1」的异读字\n帻\tzik1\t古代的一种头巾\n幝\tcin2\t破敝的样子\n幝\tzin2\t「幝cin2」的异读字\n幨\tcim1\t「幨zim1」的异读字\n幨\tzim1\t车幨\n幦\tmat6\t「幦mik2」的异读字\n幦\tmik6\t古代车前横木上的覆盖物\n幮\tceoi1\t「幮cyu4」的异读字\n幮\tcyu1\t「幮cyu4」的异读字\n幮\tcyu4\t纱幮\n帕\tpaa3\t「帕paak3」的异读字\n帕\tpaak3\t手帕，汗帕，书帕，绢帕\n帕\tmak6\t「帕mat6」的异读字\n帕\tmat6\t帕首\n帱\tcau4\t(1)床帐；(2)车帷\n帱\tdou6\t覆盖\n帱\ttou4\t「帱dou6」的异读字\n幪\tmung2\t「幪mung5」的异读字\n幪\tmung4\t帡幪\n幪\tmung5\t幪幪\n年\tnin4\t年度，年轻，年代，年级，年龄，拜年，青年，年关，年华，年幼无知，年迈，年鉴，比年，百年树人，少年\n幸\thang6\t幸福，幸运，幸亏，幸灾乐祸，幸免，万幸\n干\tgon1\t干扰，干预，干涉，干支，干戈\n干\tgon3\t干部，干了，主干，才干\n干\thon4\t(1)井栏；(2)井垣\n平\tpeng4\t「平ping4」的异读字，口语读音\n平\tping4\t平常，平等，平辈，平静，平息，平定，平易近人，和平\n幵\tgin1\t「幵hin1」的异读字\n幵\thin1\t(1)平；(2)汉代羌族的别支；(3)姓氏\n并\tbing1\t并州(山西太原的别名)\n并\tbing3\t「并bing6」的异读字\n并\tbing6\t并吞，兼并\n幻\twaan6\t幻想，幻灭，幻觉，幻影，幻象，变幻\n幼\tjau3\t幼儿，幼童，幼稚，幼苗，幼子\n幽\tjau1\t幽雅，幽静，幽默，幽会，幽禁，幽谷，幽暗，幽居，幽明\n几\tgei1\t几乎，庶几，几微\n几\tgei2\t几多，几何，寥寥无几，几许\n庀\tpei2\t鸠工庀材，鸠工庀料；(1)具备；(2)治理\n庂\tzak1\t同「仄」字\n庇\tbei3\t庇护，庇佑，庇荫\n床\tcong4\t床上，床位，床舖，床单\n庌\tngaa5\t(1)马厩；(2)大厅、厅堂；(3)路旁供来往宾客歇宿的房舍\n序\tzeoi6\t序号，秩序，序言，序幕，次序，序曲，序列，序文\n庈\tkam4\t人名用字\n店\tdim3\t店舖，商店，店小二，店面，店主，店员，店家，店东，店长，饭店，名店\n府\tfu2\t府第，府中，府上，府外，府库，府学\n庚\tgang1\t年庚，盘庚，贵庚，长庚，庚子赔款十「天干」之一\n庖\tpaau4\t庖厨，庖丁，越俎代庖，治庖(下厨煮食)，庖丁解牛\n庛\tci3\t古时指犁下端装犁头的一段木头\n庠\tcoeng4\t庠序，庠生，上庠，胶庠古代的学校\n庥\tjau1\t(1)庇荫；(2)保护\n庣\ttiu1\t(1)不满的样子；(2)凹下的地方\n庤\tzi6\t储备\n庨\thaau1\t庨豁(高峻深邃的样子)\n康\thong1\t康宁，康乐，康复，康庄大道，健康\n庸\tjung4\t庸俗，庸人自扰，庸碌，庸人，平庸，附庸\n庶\tsyu3\t庶务，庶民，庶几无愧，富庶，嫡庶\n庹\ttok3\t(1)姓氏；(2)量词，成人两臂左右平伸的长度\n庲\tloi4\t房舍\n庱\tcing2\t(1)古地名；(2)姓氏\n厩\tgau3\t马厩\n廊\tlong4\t廊道，走廊\n廋\tsau1\t廋伏，伏辞\n厢\tsoeng1\t厢房，包厢\n厦\thaa6\t厦门，大厦\n廇\tlau6\t堂屋的中央\n廉\tlim4\t廉价，廉洁，廉让\n廅\thap6\t(1)山边的洞穴；(2)藏匿；(3)草药名\n荫\tjam3\t荫庇，封妻荫子\n庼\tking2\t小厅堂\n廔\tlau4\t窗\n廖\tliu6\t姓氏\n廒\tngou4\t粮仓\n廜\ttou4\t廜苏\n廗\tdaai3\t(1)房屋倾斜；(2)河流名\n廘\tluk6\t堆积谷物的露天处所\n廛\tcin4\t廛肆，市廛，廛闬，一廛；(1)民居宅地；(2)店舖\n厂\tcong2\t工厂，纱厂，厂家\n废\tfai3\t废除，废弃，废料，废气，废纸，废墟，废寝忘食\n广\tgwong2\t广阔，推广，大庭广众，广袤，广泛，广告，广场，广播，广漠，广义，广博，宽广，广开言路，广结善缘\n廞\tjam1\t(1)陈设；(2)事情的开始、兴起\n庙\tmiu6\t庙宇，庙堂，庙祝，寺庙\n庑\tmou5\t正房对面和两侧的小屋子\n厮\tsi1\t厮杀，厮混，厮守，厮打，小厮\n𪪞\tcoeng4\t𪪞崒\n廪\tlam5\t廪生，仓廪\n庐\tlou4\t庐山真面，初出茅庐，三顾草庐\n廯\tsin2\t仓廪\n廮\tjing2\t(1)安止；(2)古县名，故址在河北省\n廱\tjung1\t辟廱\n廲\tlai6\t廲廔(雕饰华丽的窗户)\n庉\tdeon6\t(1)楼墙；(2)房舍；(3)室中藏\n庉\ttyun4\t(1)居住；(2)火焰炽盛\n庍\tbaai3\t到别\n庍\tjan3\t疮中冷\n底\tdai2\t底部，底价，底线，底下，底层，底片，底薪\n底\tdik1\t同「的」字\n度\tdou6\t度量，度量衡，度外，度假，度越，度日如年，大度，风度，程度，温度\n度\tdok6\t量度，度长絜大，度德量力，忖度，揣度，测度，以己度人\n库\tse3\t同「厍」字，姓氏\n库\tfu3\t库房，库存量，仓库，库藏，库伦，库页岛\n庭\tting3\t大相径庭\n庭\tting4\t庭院，法庭\n庳\tbei1\t有庳古国名\n庳\tpei5\t宫室卑庳，堕高堙庳\n庴\tzik1\t古县名，故址在四川省\n庴\tzik6\t古县名，故址在河北省\n庰\tbing2\t(1)覆盖；(2)收藏；(3)薄也\n庰\tbing3\t隐蔽的地方\n廆\tgwai1\t廆山(古山名)\n廆\twai2\t人名用字\n庋\tgwai2\t庋藏，倾筐倒庋\n庋\tgei2\t「庋gwai2」的异读字\n庢\tzat1\t「庢zat6」的异读字\n庢\tzat6\t盩庢(县名)\n庪\tgwai2\t同「庋」字\n庪\tgei2\t「庪gwai2」的异读字\n庮\tjau4\t旧屋的朽木；朽木的臭气\n庮\tjau5\t「庮jau4」的异读字\n庬\tmong4\t「庬pong4」的异读字\n庬\tpong4\t同「厖」字\n座\tzo2\t「座zo6」的异读字，口语读音\n座\tzo6\t座位，座椅，座落，座标，座无虚席，座右铭，座次\n庵\tam1\t尼庵，庵堂，庵罗\n庵\tngam1\t「庵am1」的异读字\n庾\tjyu4\t「庾jyu5」的异读字\n庾\tjyu5\t庾积，大庾岭\n廌\tzaai6\t「廌zi6」的异读字\n廌\tzi6\t解廌(传说中能分辨是非的独角兽，又称獬豸)，廌史(往日对知县的尊称)；(1)古代传说中的独角兽；(2)同「豸」字\n廓\tgwok3\t「廓kwok3」的异读字\n廓\tkwok3\t廓土，廓清，廓张，廓开，廓落，空廓，寥廓，轮廓\n廙\tji6\t恭敬\n廙\tjik6\t「廙ji6」的异读字\n厨\tceoi4\t厨房，厨师，入厨，大厨，下厨\n厨\tcyu1\t「厨ceoi4」的异读字\n厨\tcyu4\t「厨ceoi4」的异读字\n廨\tgaai3\t廨宇，公廨，官廨\n廨\thaai6\t「廨gaai3」的异读字\n廥\tkui2\t「廥kui3」的异读字\n廥\tkui3\t(1)积存木柴、干草或粮食等的地方；(2)粮仓；(3)储藏\n廦\tbik1\t「廦pik1」的异读字\n廦\tpik1\t(1)同「壁」字；(2)室屋\n厅\tteng1\t厅房，厅堂，客厅\n厅\tting1\t「厅teng1」的异读字\n厕\tcak1\t厕足\n厕\tzak1\t「厕cak1」的异读字\n厕\tci3\t厕身，厕所，公厕，杂厕\n廑\tgan2\t(1)小屋；(2)覆盖；(3)同「仅」字\n廑\tgan6\t「廑gan2」的异读字\n廑\tkan4\t同「勤」字\n廷\tting4\t廷杖，廷尉，朝廷，宫廷\n延\tjin4\t延长，延至，延伸，延续，延后，延误，延宕，延平，延期，延迟，延揽，延缓，延烧，延请，延搁，延续到，延滞，延寿，延展，延年益寿，延吉，延接，延性，延年\n建\tgin3\t建设，建议，建筑，建功，建树，建制，建树，构建\n弅\tfan5\t山丘高起的样子\n弈\tjik6\t围棋\n弇\tjim2\t盖\n弊\tbai6\t弊病，弊政，作弊，流弊，利弊，时弊\n弁\tbin6\t弁言，武弁，马弁\n弁\tpun4\t弁桓\n异\tji4\t感叹词\n廿\tjaa6\t「二十」的合读\n廿\tjap6\t「廿jaa6」的异读字\n廿\tje6\t「廿jaa6」的异读字\n廿\tnim6\t「廿jaa6」的异读字\n弄\tlung6\t弄瓦，弄臣，弄璋，弄权，弄口鸣舌，弄巧成拙，弄假成真，弄虚作假，玩弄，戏弄\n弄\tnung6\t「弄lung6」的异读字\n廾\tjaa6\t「廾je6」的异读字\n廾\tje6\t同「廿」字\n廾\tgung2\t(1)部首；(2)两手相合作礼\n弋\tjik6\t弋获，游弋，巡弋\n式\tsik1\t式微，形式，各式各样，方程式，公式，仪式，格式，模式，方式，等式，电脑程式\n弑\tsi3\t弑君，篡弑，弑父\n弓\tgung1\t弓箭，弹弓，弓弦，杯弓蛇影，弓腰曲背，鸟尽弓藏，左右开弓\n引\tjan5\t引导，吸引，引人入胜，引进，引起，引爆，引擎，引诱，引渡，引申，引退，引咎，接引，引吭高歌，引狼入室，引经据典，引以为荣\n弗\tfat1\t自愧弗如，无远弗届\n弘\twang4\t弘大，弘愿，弘扬，宽弘，弝\tbaa3\t弓弝，剑弝，铜弰铁弝\n弨\tciu1\t(1)弓松弛的样子；(2)弓\n弤\tdai2\t雕弓\n弣\tfu2\t弓把的中央\n弩\tnou5\t弓弩，强弩之末，剑拔弩张，万弩齐发\n弢\ttou1\t弢迹匿光\n弧\twu4\t弧形，弧线，弧度，括弧\n弪\tging3\t弧度\n弱\tjoek6\t弱势，弱点，弱者，弱小，弱肉强食，弱不禁风\n弰\tsaau1\t弓之两端\n弼\tbat6\t弼亮，弼士，弼违，辅弼\n彀\tgau3\t彀中，机彀，英雄入彀\n彃\tbat1\t(1)弓弦；(2)射\n别\tbit3\t别扭\n彄\tkau1\t弓弩端\n弯\twaan1\t弯曲，转弯，弯路，弯弓\n张\tzoeng1\t张力，张本，张目，张狂，张扬，张罗，张口结舌，张牙舞爪，张冠李戴，张皇失措，开张，慌张，铺张\n张\tzoeng3\t(1)同「帐」字；(2)同「胀」字\n弹\tdaan2\t粤语用字\n弹\tdaan6\t弹弓，子弹，动弹不得，炸弹，枪弹\n弹\ttaan4\t弹劾，弹指，弹奏，弹射，弹琴，弹词，弹压，弹冠相庆，评弹\n吊\tdik1\t「吊diu3」的异读字\n吊\tdiu3\t吊唁，凭吊\n弛\tci2\t弛禁，弛缓，松弛，废弛\n弛\tci4\t「弛ci2」的异读字\n弦\tjin4\t弓弦，箭在弦上\n弦\tjyun4\t「弦jin4」的异读字\n弮\tgyun2\t「弮hyun1」的异读字\n弮\tgyun3\t「弮hyun1」的异读字\n弮\thyun1\t弩弓\n弭\tmai5\t「弭mei5」的异读字\n弭\tmei5\t弭兵，弭除，弭战，弭乱，消弭\n弶\tgoeng6\t捕雀工具\n弶\tkoeng5\t「弶goeng6」的异读字\n弶\tzoeng3\t「弶goeng6」的异读字\n弸\tbang1\t「弸pang4」的异读字\n弸\tpang4\t弸弓，弸中彪外\n彉\tfok3\t「彉kwok3」的异读字\n彉\tgwok3\t「彉kwok3」的异读字\n彉\tkwok3\t张开弓弩\n彋\tgwang1\t「彋wang4」的异读字\n彋\twang4\t弸彋\n弥\tmei4\t弥月，弥留，弥撒，弥天大罪，弥天大谎，弥天盖地，沙弥\n弥\tnei4\t「弥mei4」的异读字\n彏\tfok3\t弓急张\n彏\tgwok3\t「彏fok3」的异读字\n弟\tdai6\t弟子，弟子员，子弟，兄弟，表弟，堂弟，胞弟\n弟\ttai5\t同「悌」字\n弟\ttai6\t「弟tai5」的异读字\n弟\tteoi4\t弟靡\n强\tgoeng6\t倔强\n强\tkoeng3\t「强goeng6」的异读字\n强\tkoeng4\t强硬，富强，强弩之末，强人，强大，强化，强攻，强者，强固，强劲，强烈，强盗，强盛，强项，强调，强权\n强\tkoeng5\t强求，勉强，强颜欢笑，强迫，强辩，强出头，强人所难，强词夺理\n彊\tgoeng1\t鹊之彊彊(形容飞鸟结伴相随，见《诗经•鄘风》)同「疆」字\n彊\tgoeng6\t倔彊(同倔强)\n彊\tkoeng3\t「彊geong6」的异读字\n彊\tkoeng4\t同「强」字，用于「强健」等词\n彊\tkoeng5\t同「强」字，用于「勉强」等词\n彖\tteon3\t彖辞，彖传\n彘\tzi6\t狗彘不如，狗彘不食，人彘之酷野猪\n彝\tji4\t彝族，彝训，彝宪，彝伦，秉彝，鼎彝；(1)我国少数民族之一；(2)古代盛酒器具；(3)常道\n彗\twai6\t彗星，哈雷彗星\n彗\tseoi6\t「彗wai6」的异读字\n汇\twai6\t汇集，汇编，词汇，语汇；(1)聚集；(2)聚众而成的集合\n汇\twui6\t「汇wai6」的异读字\n形\tjing4\t形成，情形，形式，形容，形势，形状，形单影只\n彤\ttung4\t彤云，彤管，红彤彤\n彦\tjin6\t俊彦，硕彦名儒\n彧\tjuk1\t彧彧；(1)有文采；(2)同「郁」字；(3)同「戫」字\n彬\tban1\t彬彬有礼，文质彬彬\n彪\tbiu1\t彪炳，彪蒙(启迪心智，使见纹理)，彪子(粗野、不成熟的人)，彪形大汉；(1)老虎身上的斑纹；(2)文采显现\n彩\tcoi2\t彩色，彩绘，彩虹，彩画，彩排，彩陶，彩霞，彩釉，彩瓷\n彯\tpiu1\t彯摇\n彰\tzoeng1\t彰显，彰明，昭彰，表彰，相得益彰，恶名昭彰\n雕\tdiu1\t(1)绘饰；(2)通「凋」字；(3)同「雕」字\n雕\ttiu1\t「雕diu1」的异读字\n彭\tpaang4\t彭彭，彭祖，彭排\n彭\tbong1\t「彭paang4」的异读字\n彭\tpong4\t「彭paang4」的异读字\n影\tjeng2\t「影jing2」的异读字\n影\tjing2\t影子，影片，影印，影后，影帝，影星，影射，影象，影坛，影壁，影响，影子内阁，影影绰绰，倒影，摄影\n彳\tcik1\t彳亍(缓步慢行)左脚的步伐\n彴\tzoek3\t(1)独木桥；(2)石步，溪流中供渡涉的踏脚石\n役\tjik6\t役使，劳役，徭役\n彸\tzung1\t同「伀」字\n彶\tgap1\t急行\n彼\tbei2\t彼此，彼岸，彼等\n徂\tcou4\t徂暑，徂岁，汩徂，徂谢，溯流徂源\n彽\tdai1\t彽徊\n佛\tfat1\t仿佛\n往\twong5\t往来，往年，交往，往后，往返，往昔，往事\n征\tzing1\t征收，征服，征战，征伐，征途，征衣\n很\than2\t很是，很好\n后\thau6\t后来，后悔，后劲，后代，后世，后进，后备，后起之秀，后悔莫及，后埔，后裔，后继无力，后患无穷，后生可畏\n徉\tjoeng4\t徜徉，彷徉\n律\tleot6\t律师，法律，金科玉律，律例，律令，律诗，格律，规律，旋律，清规戒律，千篇一律，严以律己\n徊\twui4\t徘徊，低徊\n徆\tsai1\t行走\n徐\tceoi4\t徐缓，徐步，不疾不徐，清风徐来\n径\tging3\t途径，半径，田径比赛，大相径庭，曲径通幽\n徒\ttou4\t徒刑，徒增，徒步，徒然，徒手，徒劳无功，徒具，徒弟，徒劳，徒留，徒众，徒子徒孙，徒托空言，徒费\n得\tdak1\t得失，得心应手，得陇望蜀，得罪，得不偿失，得胜，得天独厚，得力，得道，得体，得过且过，得寸进尺，得意忘形，得志，得势\n徘\tpui4\t徘徊\n徙\tsaai2\t徙倚，流徙，迁徙\n徜\tsoeng4\t徜徉\n徟\tzau1\t用以形容人浪行的神态\n徖\tcung4\t安也\n循\tceon4\t循环，循序渐进，循规蹈矩，循循善诱，循例\n徨\twong4\t徬徨，徊徨，徬徨失措\n徫\twai5\t行貌\n徭\tjiu4\t徭役，轻徭薄税\n微\tmei4\t微细，微笑，微不足道，微妙，微乎其微，微积分，微弱，微粒，微波炉，微米，微生物，微言大义，微量，微小，微风，微醺，微缩，微尘，微血管，微辞，微末\n彻\tcit3\t彻底，彻查，彻夜，彻头彻尾\n徶\tpit3\t衣服飘动貌\n德\tdak1\t德政，德性，德行，德育，德高望重\n徽\tfai1\t徽章，徽号，校徽\n徾\tmei4\t徾徾(相随的样子)\n𪫌\tlung5\t直行\n忁\tbou3\t同「儤」字\n彷\tfong2\t仿佛\n彷\tpong4\t彷徉，彷徨\n彾\tling4\t用法与「伶」字一样\n彾\tling5\t雨后径\n御\tngaa6\t同「迓」字\n御\tjyu6\t御苑，御侮，御道，御敌，御赐，御医，御花园，御用文人，驾御，不御铅华\n徕\tloi4\t招徕\n徕\tloi6\t慰劳\n复\tfau6\t日复一日，复还，复来\n复\tfuk1\t同「覆」字\n复\tfuk6\t复苏，恢复，克己复礼，复活，复古，复辟，复兴，复国，复职，复雠，复出，复元，回复，报复，失而复得，反清复明\n徦\tgaa2\t(1)到达；(2)来到；(3)假借；(4)姓氏\n徦\thaa4\t同「遐」字\n徬\tbong6\t附行\n徬\tpong4\t徬徨\n征\tzi2\t徵调，变徵，杂以流徵宫、商、角、征、羽合称中国古代「五音」\n征\tcing4\t同「惩」字\n征\tzing1\t征召，象征，特征，征文，征引，征兆，征收，征兵，征求，征见，征信，征候，征集，征象，征聘，征询，征募，徵调，征购\n徲\ttai4\t(1)迟到；(2)久候\n徲\tci4\t徲徲(往来的样子)\n待\tdaai1\t「待doi6」的异读字\n待\tdoi6\t待遇，待命，待客，待价而沽，待人接物，待字闺中，待慢，对待，亏待\n徇\tseon1\t徇私，徇情枉法\n徇\tseon6\t「徇seon1」的异读字\n徛\tgei3\t方言用字，意谓站立\n徛\tkei5\t「徛gei3」的异读字\n徥\tsi6\t(1)依仗；(2)准则；(3)偕行；(4)苗条的样子\n徥\tzi6\t「徥si6」的异读字\n徯\thai4\t徯径，徯幸\n徯\thai5\t「徯hai4」的异读字\n徻\twai3\t徻徻(屋宇宽敞光亮)\n徻\twui3\t「徻wai3」的异读字\n忀\tsoeng1\t忀徉\n忀\tnong5\t「忀soeng1」的异读字\n从\tcung1\t「从sung1」的异读字，用于「从容」一词\n从\tcung4\t从事，从军，从速，从属，从一而终，从中作梗，从令如流，从长计议，从善如流，跟从，随从\n从\tsung1\t从容，从然，从颂\n从\tzung1\t(1)同「纵」字；(2)同「踪」字\n从\tzung3\t「从zung1」的异读字，用于「从横」一词\n从\tzung6\t从兄弟(即堂兄弟)，从三品(古官位)\n徼\tgiu1\t「徼giu3」的异读字\n徼\tgiu2\t「徼giu3」的异读字\n徼\tgiu3\t徼外，徼巡，行徼\n徼\thiu1\t徼幸\n徼\tjiu1\t求取\n心\tsam1\t心理，心态，心情，心灵，心声，心脏，心得，心愿，心血，心意，心境，心虚，心机，机心，心存侥幸，心有余悸，心灰意冷\n必\tbit1\t必须，必需品，必恭必敬，必要，必然，必定，必备，必得，必修，必罚，必要条件\n忖\tcyun2\t忖度，自忖\n忙\tmong4\t忙碌，匆忙，忙里偷闲，忙乱，忙迫，忙不迭，忙中有错\n忭\tbin6\t忭贺，忭懽，忭颂，忭悦，忭跃\n忡\tcung1\t怔忡，忧心忡忡\n快\tfaai3\t快慢，愉快，快马加鞭，快乐，快活，快慰，快意，快感，快速，快艇，快捷，快递，快门，快步，快攻，快餐，爽快，快人快语\n忣\tgap1\t同「急」字\n忌\tgei6\t忌讳，忌惮，嫉忌，顾忌\n忺\thim1\t高兴\n忷\thung1\t忷忷(喧扰)\n忻\tjan1\t同「欣」字\n忱\tsam4\t热忱，谢忱\n忐\ttaan2\t忐忑(心神不宁)\n忑\ttik1\t忐忑(心神不宁)，忐忑不安\n忒\ttik1\t忒长，忒甚，忒煞，四时不忒，凶忒；(1)过分、过甚；(2)失误；(3)凶恶\n怀\twaai4\t今为「怀」的简体字，但古时另有为一字，音「副」解「怒」。\n志\tzi3\t志愿，斗志，志同道合，志趣，志向，志气，志业，志士，志节，立志，励志，方言志，地方志，志在必得，志得意满，澹泊明志，凌云壮志，豪情壮志，鸿鹄之志\n怭\tbit1\t傲慢、不庄重\n怖\tbou3\t恐怖，可怖，怖惧\n怛\tdaat3\t悲忧\n怢\tdat6\t忽视、忽忘\n忽\tfat1\t忽视，忽略，忽然，疏忽\n怳\tfong2\t同「恍」字\n怪\tgwaai3\t怪异，怪事，怪诞，怪病，怪物，怪兽\n怯\thip3\t怯懦，怯场，胆怯\n怮\tjau1\t忧懑\n怡\tji4\t怡人，怡然，怡情，怡颜，神怡\n忞\tman4\t勉力自强\n怋\tman5\t同「愍」字\n怓\tnaau4\t惛怓，怓怓；(1)大乱；(2)讙哗\n怩\tnei4\t忸怩\n念\tnim6\t念头，念书，念珠，念念不忘，念著，念旧，念佛，念兹在兹，念起，念经\n怕\tpaa3\t害怕，怕人，怕死，怕事，怕热，怕冷，怕羞\n性\tsing3\t性质，性格，性情，性命\n怙\twu6\t怙恃，怙宠，失怙，年少失怙；(1)凭恃；(2)父亲\n怔\tzing1\t怔忡，楞怔\n怍\tzok6\t惭怍，愧怍惭愧\n忠\tzung1\t忠告，尽忠，忠肝义胆，忠恕，忠孝，忠贞，忠义，忠实，忠诚，忠信，忠勇，忠厚，忠烈，忠顺，忠臣，忠心耿耿，忠言逆耳，忠孝两全，忠于国家，忠厚老实\n忥\thei3\t(1)痴呆；(2)安静；(3)休息\n怌\tpei1\t(1)恐惧；(2)怠慢\n怬\thei3\t(1)欣喜；(2)休息\n怑\tbun6\t不顺\n怴\thyut3\t(1)愤怒；(2)憨愚；(3)怨恨\n恀\tci2\t持\n恮\tcyun4\t谨慎\n恍\tfong2\t恍惚，恍然大悟，恍然，恍如隔世，精神恍惚，朦胧恍惚\n恢\tfui1\t恢复，恢宏，恢复过来\n急\tgap1\t急迫，急促，急速，急需，急诊，急忙，急切，急起直追，急躁，急功近利，急转直下，急流勇退，急流，急进\n恔\thaau6\t快慰\n恨\than6\t恨怨，仇恨，恨之入骨，恨不得，恨事，饮恨，遗恨，憎恨，悔恨，报仇雪恨，愤恨不平，抱恨终天，相逢恨晚，深仇大恨\n恇\thong1\t恇骇，恇惧，恇怯，恇扰\n恟\thung1\t恟惧恐惧\n怨\tjyun3\t怨言，怨气，怨恨，怨怼，怨愤，怨声载道，怨天尤人，怨偶\n恪\tkok3\t恪遵，恪守，虔恪，恪固之心谨慎诚敬\n恅\tlou5\t寂静\n怒\tnou6\t怒发冲冠，心花怒放，狂风怒号，怒吼，怒火，怒气，怒骂，怒目，怒涛，怒潮，怒江，怒冲冲，怒不可遏，怒目相向\n恲\tpaang1\t(1)慷慨、激动；(2)显现、流露\n恓\tsai1\t恓惶，孤恓\n恂\tseon1\t恂达\n恤\tseot1\t怜恤，抚恤\n怹\ttaa1\t「他」的尊称\n恌\ttiu1\t同「佻」字\n恛\twui4\t恛恛(昏乱)\n恉\tzi2\t同「旨」字\n怷\tseot6\t细密\n怤\tfu1\t(1)思也；(2)喜悦\n恄\that1\t害怕\n恞\tji4\t喜悦\n恦\thoeng2\t念也\n恘\tcau4\t戾也\n耻\tci2\t耻辱，耻笑，羞耻\n悔\tfui3\t悔改，悔意，后悔，悔不当初，悔恨，悔悟，悔过，反悔，痛悔，悔之莫及\n恭\tgung1\t恭喜，恭贺，恭敬，出恭\n悕\thei1\t悲伤\n恐\thung2\t恐吓，恐怕，恐怖，恐惧，恐慌，恐龙\n恩\tjan1\t恩怨，恩爱，恩仇，恩典，恩泽，恩惠，恩宠，恩将仇报，恩怨分明，恩断义绝，刻薄寡恩，报恩\n悒\tjap1\t悒悒，悒愤，悒悒不乐，悒郁\n恙\tjoeng6\t安然无恙\n悦\tjyut6\t悦耳，悦目\n悃\tkwan2\t悃愊，谢悃\n悟\tng6\t悟性，悟道，觉悟，醒悟，领悟力\n恧\tnuk6\t惭愧\n悚\tsung2\t悚惧，毛骨悚然\n恕\tsyu3\t宽恕，饶恕，恕罪\n悇\ttou4\t悇憛\n悜\tcing2\t慏悜(意不尽)忧愁\n悀\tjung5\t(1)满溢；(2)愤怒；(3)欢喜\n凄\tcai1\t凄惨，凄厉，凄苦，凄然，凄怆，凄凄，凄凉\n惆\tcau4\t惆怅，惆然\n情\tcing4\t情感，事情，情有独钟，爱情，情势，情绪，情节，情境，情况，情投意合，情同手足，情不自禁\n惇\tdeon1\t敦厚\n惦\tdim3\t惦记，惦念思念\n悼\tdou6\t悼念，悼文\n惚\tfat1\t恍惚\n悱\tfei2\t悱愤\n惈\tgwo2\t韰惈\n悾\thung1\t悾悾，悾然\n悠\tjau4\t悠久，悠闲，悠扬，悠然，悠长，悠远\n惘\tmong5\t惘然，迷惘，怅惘\n您\tnei5\t「你」的敬称\n悴\tseoi6\t憔悴\n惜\tsik1\t惜福，惜别会，惜别，惜物，惜字\n悉\tsik1\t悉数，悉心，洞悉，知悉\n惕\ttik1\t惕厉，警惕，怵惕恻隐(孟子˙公孙丑上)；(1)谨慎；(2)警觉\n悐\ttik1\t同「惕」字\n患\twaan6\t患病，病患，祸患，患得患失\n惟\twai4\t惟恐，惟有，惟一，惟独，惟我独尊\n悊\tzit3\t同「哲」字\n惙\tzyut3\t惙惙\n悆\tjyu6\t(1)喜悦；(2)舒适；(3)忘记；(4)贪欲\n惃\tgwan2\t(1)混乱；(2)昏迷\n惍\tgam1\t利\n惤\tgin1\t(1)布名；(2)汉代县名\n悲\tbei1\t悲观，悲剧，悲哀，悲伤，悲惨，悲痛，悲愤，悲恸，悲壮，悲歌，悲苦，悲欢离合，悲从中来，悲悯，悲怆，悲喜交集，悲天悯人，悲喜交加，悲泣，悲鸣，悲凉，悲叹，悲悼\n愊\tbik1\t愊抑，悃愊，愊亿，悃愊\n惼\tbin2\t心胸狭窄、性情急躁\n惵\tdip6\t惧怕、恐惧的样子\n惰\tdo6\t惰性，懒惰，怠惰\n愅\tgaak3\t改变\n愔\tjam1\t愔愔\n惌\tjyun3\t同「怨」字\n惸\tking4\t无兄弟\n愘\tkok3\t(1)多心计；(2)神色不外露\n愐\tmin5\t(1)思；(2)劝勉\n闷\tmun6\t闷热，闷气，闷闷不乐，闷声不响，闷死，闷著，闷酒，闷葫芦\n愕\tngok6\t愕然，惊愕，愕视\n惄\tnik6\t惄思，惄饥，惄然；(1)忧思；(2)饥饿\n恼\tnou5\t恼怒，忧恼，恼懆\n愖\tsam4\t同「忱」字\n惢\tso2\t心疑、多虑\n惑\twaak6\t困惑，迷惑，解惑，妖言惑众，蛊惑人心\n惠\twai6\t惠顾，恩惠，惠及\n惶\twong4\t惶恐，惶惶，惶惑，惶惶然\n惉\tzim1\t惉懘\n惁\tsik3\t(1)忧愁；(2)恭敬\n悹\tgun2\t同「悺」字\n愝\tjin2\t愝惼(心地狭窄)\n愄\twui4\t中善\n愋\thyun1\t(1)智；(2)怨恨；(3)忘记；(4)同「援」字\n慈\tci4\t慈善，慈悲，慈祥，慈爱，慈母，慈父\n感\tgam2\t感到，感觉，感情，感染，感谢，感受，感动，感慨，感叹，感激，感冒，感人，感性，感想，感触，感应，感化，感恩，感同身受，感恩图报，感人肺腑，感情用事\n愲\tgwat1\t心乱\n愆\thin1\t愆尤，愆期，愆序\n恺\thoi2\t恺悌，恺切，爽恺和乐友善\n惹\tje5\t惹来，惹祸，惹火，惹出，惹得，惹事，惹起，惹事生非，惹眼，惹是生非\n意\tji3\t意见，愿意，意气风发，意愿，意思，意志，意外，意中人，主意，民意，满意，介意，得意，大意，不随意肌，意识形态，意气用事，意犹未尽，意兴阑珊，意想不到\n愮\tjiu4\t忧无所诉\n愚\tjyu4\t愚昧，愚人，愚弄，愚忠，愚民，愚公移山，愚夫愚妇，愚不可及，愚笨，愚见\n愈\tjyu6\t愈来愈，愈加，愈益\n栗\tleot6\t战栗，不寒而栗\n愍\tman5\t(1)怜悯；(2)忧愁；(3)同「悯」字\n慎\tsan6\t慎重，慎重其事，慎思，慎终追远，慎密，慎微，慎终，慎言，慎行\n愁\tsau4\t愁云惨雾，愁眉不展，愁容，愁眉苦脸，愁闷，愁云，愁思\n想\tsoeng2\t想像，思想，心想事成，想法，想念，推想，构想，联想，感想，幻想，梦想，遐想，理想，冥想，空想，朝思暮想，胡思乱想，想入非非\n愫\tsou3\t情愫真心、真情\n慆\ttou1\t慆慢，慆慆，慆淫\n愯\tsung2\t恐惧\n愶\thip3\t(1)威胁；(2)胆怯\n慏\tming5\t慏悜(意不尽/忧愁)\n惨\tcaam2\t惨剧，惨遭，惨重，惨案，惨痛，惨跌，惨不忍睹，惨死，惨烈，惨状，惨败，惨澹经营，惨淡，惨白，惨绝人寰，惨叫，惨澹，惨兮兮，惨酷，惨无人道\n惭\tcaam4\t惭愧，惭怍，惭德，大言不惭\n恸\tdung6\t恸哭，哀恸，悲恸\n惯\tgwaan3\t惯例，习惯，娇生惯养，惯性，惯常，惯坏\n悭\thaan1\t悭吝，缘悭一面，大破悭囊，粉吝红悭(喻少近女色)；(1)吝啬；(2)阻碍；(3)欠缺\n慇\tjan1\t慇懃\n慵\tjung4\t慵懒，慵惰，疏慵愚钝\n愿\tjyun6\t愿朴，乡愿(外表忠厚，但心思蔽塞的人)，咒愿忠厚、谨慎\n慬\tkan4\t(1)忧哀；(2)勇敢\n悫\tkok3\t悫士，忠悫\n慺\tlau4\t(1)悦；(2)恭谨\n憀\tliu4\t憀亮\n慢\tmaan6\t慢条斯理，缓慢，傲慢，怠慢，慢板，慢火，慢吞吞，慢性病\n愻\tseon3\t同「逊」字\n态\ttaai3\t态度，世态炎凉，故态复萌，形态，姿态，窘态，事态，状态，变态，老态龙钟，神态自若，生态平衡，惺惺作态\n慱\ttyun4\t忧劳的样子\n慁\twan6\t(1)忧思；(2)扰乱\n慞\tzoeng1\t慞惶，慞惶失次\n慒\tzou1\t乱\n慔\tmou6\t勉力，尽力\n慲\tmun4\t(1)糊涂不省事；(2)欺瞒\n慡\tsong2\t同「爽」字\n慖\tgwok3\t(1)心乱；(2)怨恨\n慛\tceoi4\t忧愁，悲伤\n憋\tbit3\t憋闷，憋气\n憯\tcaam2\t同「惨」字\n戚\tcik1\t忧戚，惨戚\n憔\tciu4\t憔悴，憔虑\n惮\tdaan6\t怕\n愤\tfan5\t愤怒，愤慨，愤恨，愤愤不平，愤懑，愤世嫉俗，公愤\n憬\tging2\t憬悟，憬然\n憍\tgiu1\t(1)同「骄」字；(2)高仰\n忧\tjau1\t忧虑，忧心，忧郁，忧伤，忧愁，忧愤，忧思，忧心忡忡，忧患意识，忧国忧民，担忧\n欲\tjuk6\t欲火，情欲，利欲薰心，欲望，欲念，食欲，欲海，欲令智昏\n怜\tlin4\t怜悯，怜爱，怜才，可怜\n悯\tman5\t怜悯，悲悯，垂悯，其情可悯，悲天悯人；(1)怜恤；(2)忧伤\n怃\tmou5\t怃然\n慕\tmou6\t慕名，羡慕，思慕\n憉\tpaang4\t憉惇\n怂\tsung2\t怂恿\n憛\ttaam4\t忧愁、忧思\n慰\twai3\t安慰，慰问，慰劳\n憓\twai6\t同「譓」字\n憎\tzang1\t憎恨，憎恶\n慦\tgau3\t(1)谨慎；(2)喜悦\n憢\thiu1\t(1)恐惧；(2)勇猛\n憟\tsuk1\t阿谀逢承\n憡\tcaak3\t疼痛\n憳\ttaam2\t憳忒(心不安)\n𪫺\tcim1\t𪫺佞，𪫺邪，𪫺人\n憺\tdaam6\t(1)安乐；(2)恬惔；(3)使人畏惧\n憝\tdeoi6\t(1)怨恨；(2)坏\n憨\tham1\t憨厚，憨直，娇憨\n憾\tham6\t憾事，遗憾\n憩\thei3\t憩息，休憩\n宪\thin3\t宪法，宪政，宪章，立宪\n忆\tjik1\t回忆，记忆，追忆，忆旧，忆测\n怿\tjik6\t怿怀，悦怿，不怿，闿怿喜悦\n懔\tlam5\t危惧\n憌\tking4\t忧愁\n憴\tsing4\t憴憴(戒慎)称誉\n懤\tcau4\t懮愁深重\n懂\tdung2\t懂事，懵懂，懂劲(太极拳术语)明白、了解\n憼\tging2\t(1)尊敬；(2)同「儆」字\n恳\than2\t恳求，诚恳，情词恳切，恳请，恳谈，恳托，恳辞，恳挚，勤恳\n恹\tjim1\t闷恹恹，病恹恹，恹恹欲睡，恹煎\n懃\tkan4\t慇懃\n懋\tmau6\t懋绩，懋功，懋典\n蒙\tmung5\t同「懵」字\n懦\tno6\t懦夫，懦弱，怯懦\n懧\tno6\t同「懦」字\n懥\tzi3\t忿懥\n憵\tpik1\t憵朴(急速)\n懪\tbok3\t烦闷\n懫\tzi3\t忿戾\n懖\tkut3\t愚蠢无知而自以为是\n懱\tmit6\t(1)轻慢；(2)微小；(3)拭灭\n懩\tjoeng5\t(1)心想逞能；(2)心忧不定\n惩\tcing4\t惩治，惩罚，惩处，惩戒，惩办\n懒\tlaan5\t懒惰，偷懒，懒洋洋，懒散，懒人，懒骨头\n怀\twaai4\t怀疑，怀孕，怀念，怀抱，怀恨，怀旧，情怀，胸怀，怀璧其罪，怀才不遇\n悬\tjyun4\t悬挂，悬疑，悬崖勒马，悬殊，悬案，悬浮，悬赏，悬崖，悬吊，悬空，悬腕，悬而未决，悬壶济世\n懻\tgei3\t强狠，强直\n懹\tjoeng6\t(1)畏惧；(2)忌惮\n懽\tfun1\t同「欢」字\n懿\tji3\t懿德，懿行，懿范，懿旨\n戄\tfok3\t戄然；(1)惊讶；(2)恭敬貌\n戁\tnaan5\t恐惧\n忕\ttaai3\t奢侈\n忕\tsi6\t习染\n忳\tzeon1\t同「谆」字\n忳\ttyun4\t忳忳(忧闷)\n忪\tsung1\t惺忪\n忪\tzung1\t怔忪(即征彸，意指惊惧)\n忴\tkam4\t健了貌\n忴\tkim4\t心急\n忯\tkei4\t忯忯(爱悦)敬也\n忯\tsi6\t恃也\n怜\tlin4\t可怜，怜爱\n怜\tling4\t怜伶\n怗\tzim1\t同「惉」字\n怗\ttip3\t怗伏，妥怗，俯首怗耳，安怗\n怉\tbaau2\t悖逆\n怉\tpou5\t怀也\n恫\tdung6\t恫喝，恫吓\n恫\ttung1\t恫瘝\n思\tsi1\t思想，构思，思慕，思忖，思索，思过，思凡，思维，思潮，思绪，思虑，思旧\n思\tsi3\t意思\n思\tsoi1\t于思(胡须浓密貌)\n悝\tlei5\t(1)忧虑；(2)悲伤\n悝\tfui1\t李悝嘲笑\n悢\tloeng6\t惆怅\n悢\tlong5\t懭悢\n悗\tmun4\t(1)迷惑；(2)心烦\n悗\tmun5\t心不在焉\n息\tsak1\t粤语用字，意指孙儿的子女\n息\tsik1\t休息，安息，气息，利息，平息，消息\n悈\tgaai3\t(1)警戒；(2)褊急；(3)急速；(4)慬；(5)衰老\n悈\thak1\t骇而自专\n悎\tgaau3\t惊\n悎\thou6\t(1)恐惧；(2)心动\n惛\tfan1\t惛惫，惛眊\n惛\tman5\t同「悯」字\n惊\tging1\t受惊，惊动\n惊\tloeng6\t悲\n惓\tgyun3\t病危\n惓\tkyun4\t惓惓(形容恳切)\n惏\tlaam4\t同「婪」字\n惏\tlam4\t惏悷\n惔\tdaam6\t同「憺」字\n惔\ttaam4\t火烧\n悿\ttim2\t弱也\n悿\ttin2\t心惑\n愓\tsoeng1\t愓愓\n愓\tdong6\t愓悍\n愃\thyun1\t方言用字，意谓「快速」\n愃\tsyun2\t宽娴貌\n惿\ttai4\t心怯\n惿\tsi6\t同「諟」字\n慅\tcou2\t同「懆」字\n慅\tsou1\t同「骚」字\n慌\tfong1\t慌张，慌乱\n慌\tfong2\t慌惚，戃慌\n忾\thei3\t叹息\n忾\tkoi3\t敌忾同仇\n愩\tgung1\t(1)心乱、烦乱；(2)恐惧\n愩\tgung3\t自我抬举\n愩\thung2\t心神恍惚\n慀\thaai4\t心不平\n慀\thai6\t怨恨\n愬\tsaak3\t泣愬，谗愬，告愬，诬愬，上愬；(1)诉说；(2)诋毁；(3)朝向；(4)惊惧\n愬\tsou3\t同「诉」字\n憧\tcung1\t憧憬\n憧\tzung1\t同「憃」字\n庆\thing3\t庆贺，喜庆，庆功宴，庆祝，庆典，庆幸，庆祝会，庆功，庆城\n庆\tgoeng1\t发语辞，同「羌」字\n虑\tleoi6\t顾虑，考虑，深谋远虑，疑虑，思虑\n虑\tlou4\t汉代县名\n虑\tluk6\t同「录」字\n憭\tliu4\t憭栗\n憭\tliu5\t明白\n慝\tnik1\t隐情以饰非\n慝\ttik1\t(1)邪恶；(2)灾害；(3)阴气\n憿\tgik1\t疾速\n憿\tgiu1\t侥幸\n憿\tgiu2\t憿憭(以诚相告)\n应\tjing1\t应分，应该，应然，应有尽有，理应\n应\tjing3\t应付，应用，应对，应卯，应承，应景，应酬，应征，应变，应验，应付自如，应接不暇，应运而生，回应，答应，适应，感应\n懮\tjau1\t懮懮\n懮\tjau2\t懮受\n懰\tlau4\t懰栗\n懰\tlau5\t佼人懰兮\n忉\tdou1\t「忉tou1」的异读字\n忉\ttou1\t忉怛悼恨忧心\n忔\that1\t「忔ngat6」的异读字\n忔\tngat6\t忔登，忔憎，忔戏\n忮\tgei6\t「忮zi3」的异读字\n忮\tzi3\t忮求\n忍\tjan2\t忍耐，忍心，忍受，不忍，忍让，忍痛，容忍\n忍\tjan5\t「忍jan2」的异读字\n忘\tmong4\t忘记，忘怀，遗忘，坐忘\n忘\tmong6\t「忘mong4」的异读字\n忤\tng5\t忤逆，忤旨，乖忤，违忤，不以为忤\n忤\tng6\t「忤ng5」的异读字\n忨\twun6\t(1)贪；(2)爱\n忨\tjyun4\t「忨wun6」的异读字\n怲\tbing2\t「怲bing3」的异读字\n怲\tbing3\t怲怲(忧虑的样子)\n怊\tciu1\t怊怅\n怊\ttiu4\t「怊ciu1」的异读字\n怞\tjau4\t怞怞\n怞\tzau6\t「怞jau6」的异读字\n怏\tjoeng2\t怏怏不乐，怏然不悦，怏然自足\n怏\tjoeng3\t「怏joeng2」的异读字\n怐\thau6\t「怐kau3」的异读字\n怐\tkau3\t愚忠\n怦\tpaang1\t「怦ping1」的异读字\n怦\tping1\t怦然心动\n忝\ttim2\t忝在至交\n忝\ttim5\t「忝tim2」的异读字\n怚\tzeoi6\t心不细\n怚\tcou1\t「怚zeoi6」的异读字\n恃\tci5\t恃才傲物，有恃无恐，恃强凌弱\n恃\tsi5\t「恃ci5」的异读字\n怠\tdoi6\t「怠toi6」的异读字\n怠\ttoi5\t怠工，怠忽，怠倦，怠惰，怠慢，懈怠\n恰\taam1\t「恰hap1」的异读字\n恰\thap1\t恰当，恰好，恰巧，恰到好处，恰似，恰如其分\n恬\ttim4\t恬淡，恬适，恬静，恬不知耻，恬然自安\n恬\ttim5\t「恬tim4」的异读字\n怎\tzaam2\t「怎zam2」的异读字\n怎\tzam2\t怎么，怎样，怎敢，怎生，怎肯\n怎\tdim2\t「怎zam2」的异读字\n恝\taat3\t「恝gaat3」的异读字，口语读音\n恝\tgaat3\t恝然(淡然)，恝置不顾\n恝\tgit3\t「恝gaat3」的异读字\n悄\tciu2\t悄然，悄悄话，静悄悄，忧心悄悄\n悄\tciu5\t「悄ciu2」的异读字\n悌\tdai6\t孝悌，恺悌\n悌\ttai5\t「悌dai6」的异读字\n悌\ttai6\t「悌dai6」的异读字\n悍\thon5\t「悍hon6」的异读字\n悍\thon6\t悍然，悍将，悍妻\n恁\tjam5\t「恁jam6」的异读字\n恁\tjam6\t(1)这；(2)那\n悛\tcyun1\t「悛syun1」的异读字\n悛\tsyun1\t悛改\n恚\twaai6\t「恚wai6」的异读字\n恚\twai3\t「恚wai6」的异读字\n恚\twai6\t恚愤，恚怒，瞋恚，恚碍\n怅\tcoeng3\t怅恨，怅望，怅怅，怅惘，怅然若失，惆怅\n怅\tzoeng3\t「怅coeng3」的异读字\n惝\tcong2\t「惝tong2」的异读字\n惝\ttong2\t惝怳，惝然\n悰\tcung4\t欢悰，离悰\n悰\tcung6\t「悰cung4」的异读字\n悺\tgun2\t「悺gun3」的异读字\n悺\tgun3\t忧虑\n悸\tgwai3\t惊悸，悸栗，犹有余悸\n悸\tgwai6\t「悸gwai3」的异读字\n悻\thang5\t「悻hang6」的异读字\n悻\thang6\t悻然，悻悻而去\n恿\tjung2\t怂恿\n恿\tjung5\t「恿jung2」的异读字\n惋\twun2\t惋惜，惋伤，叹惋\n惋\tjyun2\t「惋wun2」的异读字\n悷\tlai6\t悲伤\n悷\tleoi6\t「悷lai6」的异读字\n愎\tbik1\t刚愎自用\n愎\tfuk1\t「愎bik1」的异读字\n恻\tcaak1\t「恻cak1」的异读字\n恻\tcak1\t恻怛，恻恻，恻然，恻隐，凄恻\n愀\tcau5\t「愀ciu2」的异读字\n愀\tciu2\t愀然\n惎\tgei3\t「惎gei6」的异读字\n惎\tgei6\t惎间，惎诲\n惬\thip3\t惬心，惬意，惬当，惬怀合适、满足\n惬\thip6\t「惬hip3」的异读字\n愉\tjyu4\t愉快，愉悦，欢愉\n愉\tjyu6\t「愉jyu4」的异读字\n慨\tkoi2\t「慨koi3」的异读字\n慨\tkoi3\t慨允，慨然，慨叹，慨诺，慷慨\n惺\tsing1\t惺忪，惺惺作态\n惺\tsing2\t「惺sing1」的异读字\n恽\twan2\t「恽wan6」的异读字\n恽\twan6\t(1)姓氏；(2)浑厚；(3)筹划\n惴\tzeoi3\t惴惴不安，惴栗，惴恐，惴耎(虫蠕动貌。见《庄子˙胠箧》)忧虑､恐惧\n惴\tcyun2\t「惴zeoi3」的异读字\n惾\tsau3\t「惾zung1」的异读字\n惾\tzung1\t困惾\n怆\tcong2\t「怆cong3」的异读字，用于「怆怳」一词\n怆\tcong3\t悲怆，凄怆，怆然泪下，怆怳\n慉\tcuk1\t慉结\n慉\thuk1\t「慉cuk1」的异读字\n愧\tkwai3\t愧汗，愧色，愧疚，愧怍，愧服，愧恨，愧赧，愧歉，愧不敢当，惭愧\n愧\tkwai5\t「愧kwai3」的异读字\n爱\toi3\t爱心，爱情，爱护，爱惜，博爱，热爱，偏爱，疼爱\n爱\tngoi3\t「爱oi3」的异读字\n愠\twan2\t「愠wan3」的异读字\n愠\twan3\t愠怒，愠恨，面有愠色\n惷\tceon2\t惷才，惷动\n惷\tcyun2\t「惷ceon2」的异读字\n怄\tau1\t吝惜\n怄\tau3\t「怄au1」的异读字\n怄\tngau1\t「怄au1」的异读字\n慥\tcou3\t慥慥(忠厚诚恳的样子)\n慥\tzou6\t「慥cou3」的异读字\n慷\thong1\t慷慨，慷慨解囊，慷慨悲歌\n慷\thong2\t「慷hong1」的异读字\n慷\tkong2\t「慷hong1」的异读字\n慓\tpiu3\t「慓piu5」的异读字\n慓\tpiu5\t慓悍\n慴\tsip3\t「慴zip3」的异读字\n慴\tzip3\t同「慑」字\n憱\tcau3\t憱然心中不安\n憱\tcuk1\t「憱cau3」的异读字\n憃\tcung1\t「憃zung1」的异读字\n憃\tzung1\t憃愚\n憰\tgwat1\t「憰kyut3」的异读字\n憰\tkyut3\t同「谲」字\n愦\tkui2\t愦乱，昏愦\n愦\tkui3\t「愦kui2」的异读字\n慧\twai3\t「慧wai6」的异读字\n慧\twai6\t慧心，慧海，慧根，慧眼，慧剑，慧黠，慧觉，智慧，颖慧，聪慧，拾人牙慧\n慹\tzap1\t「慹zip3」的异读字\n慹\tzip3\t慹服\n惫\tbaai6\t惫乏，惫色，困惫，疲惫，昏惫极度疲乏\n惫\tbei6\t「惫baai6」的异读字\n凭\tbang6\t「凭pang4」的异读字\n凭\tpang4\t凭心，凭空，凭信，凭借，凭据，凭空杜撰，凭高望远\n懆\tcou2\t懆暴，恼懆，憋憋懆懆，憋懆\n懆\tcou3\t「懆cou2」的异读字\n懈\tgaai3\t「懈haai6」的异读字\n懈\thaai5\t「懈haai6」的异读字\n懈\thaai6\t懈弛，懈沮，懈怠，懈气，懈惰，松懈，坚持不懈\n懁\tgyun3\t「懁hyun1」的异读字\n懁\thyun1\t懁急急躁\n憖\tjan6\t(1)宁愿；(2)损伤\n憖\tngan6\t「憖jan6」的异读字\n懅\tgeoi6\t(1)惧怕；(2)羞惭\n懅\tkeoi4\t「懅geoi6」的异读字\n懊\tou3\t懊恼，懊悔，懊丧，懊闷\n懊\tngou3\t「懊ou3」的异读字\n懠\tcai4\t愤怒\n懠\tzai6\t「懠cai4」的异读字\n怼\tdeoi6\t怼怒，怨怼，愠怼，雠怼，忿怼，恚怼，力尽则怼(谷梁传)怨恨、埋怨\n怼\tzeoi6\t「怼deoi6」的异读字。颜师古:「怼音直类反」\n懭\tkong3\t「懭kong3」的异读字\n懭\tkwong3\t懭悢\n懑\tmun5\t「懑mun6」的异读字\n懑\tmun6\t愤懑，烦懑，中懑之症\n忏\tcaam3\t忏悔，忏礼，忏事，拜忏，水忏；(1)悔悟；(2)佛教僧侣为人祈祷悔过所诵的经文\n忏\tcim3\t「忏caam3」的异读字\n惧\tgeoi2\t「惧geoi6」的异读字\n惧\tgeoi6\t恐惧，惧内，惧怕\n慑\tsip3\t慑服，慑风屏迹，威慑，声慑四海\n慑\tzip3\t「慑sip3」的异读字\n戃\tcong2\t「戃tong2」的异读字\n戃\ttong2\t戃慌\n恋\tlyun2\t恋爱，眷恋\n恋\tlyun5\t「恋lyun2」的异读字\n戆\tngong6\t「戆zong3」的异读字\n戆\tzong3\t戆直，愚戆\n忸\tnau2\t习惯\n忸\tnau5\t「忸nau2」的异读字\n忸\tnuk6\t忸怩\n忿\tfan2\t「忿fan5」的异读字\n忿\tfan5\t忿怒，忿恨\n忿\tfan6\t心心不忿，气不忿\n怫\tfai3\t「怫fat6」的异读字\n怫\tfat6\t形容忧悉或愤怒\n怫\tbui6\t同「悖」字\n怵\tceot1\t「怵zeot1」的异读字\n怵\tseot1\t同「訹」字\n怵\tzeot1\t怵惕，怵然，怵惕恻隐(孟子•公孙丑上)，动心怵目；(1)害怕；(2)凄怆\n恒\tgang1\t「恒gang3」的异读字\n恒\tgang2\t「恒gang3」的异读字\n恒\tgang3\t月上弦之貌\n恒\thang4\t恒心，永恒，持之以恒\n悖\tbui3\t「悖bui6」的异读字\n悖\tbui6\t悖逆，悖谬，并行不悖\n悖\tbut6\t同「勃」字\n恣\tci1\t「恣zi1」的异读字\n恣\tci3\t「恣zi3」的异读字\n恣\tzi1\t暴戾恣雎\n恣\tzi3\t恣纵，放恣，恣意妄为，恣心，恣行，恣情，恣肆，恣饮\n悁\tgyun1\t「悁jyun1」的异读字\n悁\tgyun3\t悁急\n悁\tjyun1\t悁忿，悁悁，悁想，悁邑\n惀\tleon4\t想要知道某事\n惀\tleon6\t(1)愤懑；(2)「惀leon4」的异读字\n愒\tkai3\t「愒hei3」的异读字\n愒\thei3\t同「憩」字\n愒\tkoi3\t玩愒，愒日\n愒\thot3\t吓唬\n愣\tleng1\t愣儿\n愣\tling4\t「愣ling6」的异读字\n愣\tling6\t愣头愣脑，发愣，愣干\n恶\tok3\t丑恶，邪恶，恶劣，恶俗，恶化\n恶\tngok3\t「恶ok3」的异读字\n恶\tfu1\t恶池(山西省河名，又作滹沱)\n恶\twu1\t(1)疑问词；(2)叹词\n恶\twu3\t厌恶，好恶\n慊\thim2\t(1)「慊him3」的异读字；(2)「慊hip3」的异读字\n慊\thim3\t不满足\n慊\thip3\t满足\n憪\thaan4\t闲适\n憪\thaan5\t憪然\n憪\thaan6\t「憪haan5」的异读字\n懘\tdai3\t同「蒂」字\n懘\tding3\t「懘dai3」的异读字\n懘\tcit3\t怗懘不调和\n懵\tmung2\t「懵mung5」的异读字\n懵\tmung4\t懵然，懵愦\n懵\tmung5\t懵懂\n戈\tgwo1\t干戈，枕戈待旦，反戈一击，倒戈，止戈为武，入室操戈\n戉\tjyut6\t同「钺」字\n戊\tmou6\t十「天干」之一\n戎\tjung4\t戎装，兵戎，投笔从戎，戎马，戎机，蛮夷戎狄\n戌\tseot1\t地支第十一位\n戍\tsyu3\t戍守，戍卫，戍卒，戍角，戍边\n戒\tgaai3\t戒严，戒指，戒护，戒烟，戒备，戒除，戒心，戒烟，戒掉，戒慎，戒严法，戒严令，戒惧，戒具，戒酒，戒律，戒刀，戒赌，戒尺，戒严案\n我\tngo5\t我们，我国，我方，我行我素，我等，我俩，自我，无我，真我，依然故我，尔诈我虞，我醉欲眠\n戕\tcoeng4\t戕害，戕贼，自戕\n或\twaak6\t或是，或许，或者，或然率\n戋\tzin1\t戋戋微少\n戚\tcik1\t戚党，休戚与共，皇亲国戚，戚里，戚旧，外戚\n戟\tgik1\t画戟，巴戟天(中药品名)，驴生戟角，折戟沉沙；(1)古代武器名；(2)刺激\n戠\tzik1\t同「埴」字\n戤\tkoi3\t冒牌图利\n戣\tkwai4\t古代形状像戟的兵器\n戬\tzin2\t戬谷，戬灭\n截\tzit6\t截断，截获，截长补短，直截了当\n戮\tluk6\t戮力，杀戮\n战\tzin3\t战争，战火，战斗，战局，战术\n戴\tdaai3\t爱戴，负戴，戴上，推戴，担戴，顶戴\n戡\tham1\t戡乱时期，戡乱\n戡\tzam3\t同「揕」字\n戗\tcoeng1\t(1)逆、不顺；(2)意见抵触、不合\n戗\tcoeng3\t(1)支撑；(2)在器物图案上填金\n戫\twik6\t形容迅疾\n戫\tjuk1\t有文采，又写作「彧」\n戭\tjan5\t长枪\n戭\tjin2\t人名\n戏\tfai1\t同「麾」字\n戏\thei3\t戏子，戏曲，戏言，戏弄，戏法，戏笔，戏慢，戏剧，戏墨，戏谑，儿戏，游戏，嬉戏\n戏\tfu1\t於戏\n戙\tdong6\t「戙dung6」的异读字\n戙\tdung6\t戙篙(驾船用具)\n戛\taat3\t「戛gaat3」的异读字，口语读音\n戛\tgaat3\t戛然而止，戛玉敲金\n戛\tgit3\t「戛gaat3」的异读字\n戢\tcap1\t戢兵，戢翼\n戢\tzap1\t「戢cap1」的异读字\n戥\tdang2\t戥子，戥厘，戥头，戥银\n戥\tdang6\t「戥dang2」的异读字\n酨\tdoi6\t酨浆\n酨\tzoi6\t「酨doi6」的异读字\n戳\tcoek3\t戳破，邮戳，指指戳戳\n戳\tzoek3\t「戳ceok3」的异读字\n戳\tcok3\t「戳coek3」的异读字\n成\tseng4\t「成sing4」的异读字\n成\tcing4\t成数\n成\tsing4\t成分，成本，成功，成因，成年，成全，成色，成见，成长，成果，成家，成效，成员，成败，成就，成语，成熟，成绩，成药，成人之美，成竹在胸\n户\twu6\t户籍，门户，户外活动，户口，户主，户头，户内\n戺\tsi6\t(1)门槛；(2)台阶旁所砌的斜石\n戽\tfu3\t戽斗，戽水，戽田\n所\tso2\t所有，场所，所向披靡，所以，所谓，所在，所得，所幸，所长，所及，诊所，所得税，所在地，所作所为，所见所闻，各有所好，众望所归，心有所属\n扆\tji2\t扆座，黼扆，负扆(背窗南面而坐，以示君位)，负扆据图，帷扆，乘龙扆云；(1)门窗间的屏风；(2)门窗间的地方；(3)隐藏；(4)倚靠\n扇\tsin3\t扇子，扇形，扇舞，电扇\n扈\twu6\t扈从，飞扬跋扈\n扉\tfei1\t扉页，扉画，柴扉\n扊\tjim5\t扊\n摫\tkwai1\t剪裁\n房\tfong4\t房屋，厨房，远房亲戚，房舍，房间，房东，平房，楼房，书房\n房\tpong4\t阿房宫，房皇(徬徨)\n扁\tbin2\t扁平，扁豆，扁柏，扁桃\n扁\tpin1\t扁舟\n搫\tpo4\t(1)扫除；(2)歛聚；(3)披散\n搫\tpun4\t手不正\n戾\tlai6\t「戾leoi6」的异读字\n戾\tleoi6\t暴戾\n戾\tlit6\t「戾leoi6」的异读字\n扂\tdim3\t扂楔门闩\n扂\tdim6\t「扂dim3」的异读字\n扂\ttim5\t「扂dim3」的异读字\n扃\tgwing1\t扃户，扃门，扃绢，扃关，扃键，夜不扃户；(1)门闩或环钮；(2)门户；(3)关闭\n扃\tgwing2\t「扃gwing1」的异读字\n才\tcoi4\t才能，天才，多才多艺，才华，才艺，才干，通才，奴才，鬼才，秀才，博学多才，辩才无碍，德才兼备，郎才女貌，旷世奇才，怀才不遇，才貌双全；(1)姓氏；(2)副词\n手\tsau2\t手枪，手续，手段，手法，手术，手指，手掌\n扑\tpok3\t敲扑，扑打，鞭扑\n扦\tcin1\t扦子，扦脚，扦手，乔扦\n扜\tjyu1\t(1)指挥；(2)引或拉；(3)持\n扣\tkau3\t扣除，扣留，扣押，扣人心弦\n托\ttok3\t承托，烘托\n扙\tzoeng6\t伤也\n扥\tdeon6\t撼动\n抃\tbin6\t抃笑，抃掌，抃手，抃舞，抃悦，抃踊\n抄\tcaau1\t抄袭，包抄，抄录，抄写，抄家，抄小路\n扯\tce2\t扯平，扯破，扯谎，拉扯，扯开，扯裂，扯谈\n抌\tdam2\t(1)深击；(2)刺；(3)手抟\n抖\tdau2\t抖动，抖开，抖擞，发抖\n技\tgei6\t技术，技巧，技艺，技能，技工\n抑\tjik1\t抑制，抑或，抑低，抑郁，抑是，抑止，抑扬顿挫，抑恶扬善\n抈\tjyut6\t(1)动摇；(2)折断\n抗\tkong3\t抗衡，抵抗，分庭抗礼，抗拒，抗议，抗辩，抗争，抗暴，抗御，抗敌，抗毒，抗体，抗原，抗生素，抗日战争，公民抗命\n抉\tkyut3\t抉择，抉剔，抉摘\n抆\tman5\t抆泪\n批\tpai1\t批评，批发，批准，批判，批购，批示\n抔\tpau4\t抔土，抔饮；(1)双手捧取物件；(2)量词，指单位\n抒\tsyu1\t抒情，抒怀，各抒己见，抒发\n投\ttau4\t投资，投掷，投票，投入，投机，投诉，投降，投石问路\n抇\twat6\t(1)同「搰」字，挖掘；(2)搅动\n找\tzaau2\t找钱，寻找，找碴，找麻烦，找死\n扺\tzi2\t扺掌\n扷\tou3\t量度\n扴\tgit3\t(1)揩刮物件；(2)弹奏\n抸\tzaap3\t(1)持著；(2)挈著\n拔\tbat6\t拔掉，拔擢，拔河，拔除，拔牙，拔刀相助\n抪\tbou3\t(1)持；(2)布散；(3)击\n拆\tcaak3\t拆除，拆掉，拆卸，拆下，拆伙，拆开，拆散，拆封，拆穿，拆解，拆毁，拆去\n抻\tcan2\t同「捵」字\n抽\tcau1\t抽签，抽取，抽奖，抽查，抽出，抽象，抽税\n抶\tcik1\t鞭抶，怒抶其马\n拊\tfu2\t拊掌，拊慰，养拊\n拐\tgwaai2\t拐骗，拐杖，拐诱，拐弯，拐子，拐带，拐角\n抴\tjai6\t同「拽」字\n抭\tjiu5\t同「舀」字，用瓢、杓汲取液体\n抰\tjoeng2\t以车鞅击打\n拘\tkeoi1\t拘留，拘禁，拘捕，拘束，拘谨\n拒\tkeoi5\t拒绝，拒捕，拒缴\n拑\tkim4\t(1)同「箝」字；(2)同「钳」字\n拇\tmou5\t拇指，拇战\n拍\tpaak3\t拍卖，拍摄，拍照，拍片，拍手，拍打，拍掌\n抛\tpaau1\t抛掷，抛弃，抛砖引玉，抛开，抛锚，抛下，抛出，抛空，抛售，抛绣球，抛头露面\n披\tpei1\t披露，披挂，披荆斩棘，披麻带孝，披星戴月\n拖\tto1\t拖延，拖累，拖垮，拖欠，拖曳，拖泥带水\n抬\ttoi4\t抬杠\n招\tziu1\t招待，招募，招徕，招呼，招供，招认，招惹是非\n拄\tzyu2\t拄拐，拄杖，撑拄，撑肠拄肚\n抳\tni4\t以手指物而言，粤语用字\n抁\tjin5\t动摇\n抯\tzaa1\t挹取\n抩\tnaam4\t兼持两物\n拸\tci2\t拸画\n持\tci4\t持续，持平，持久，持之以恒，持盈保泰，持戒，持衡，矜持，胁持，秉持\n拯\tcing2\t拯救，拯溺，济时拯世\n挏\tdung6\t推引\n挌\tgaak3\t挌斗\n拱\tgung2\t拱手，拱抱，拱门\n拹\thip6\t摧折\n拽\tjai6\t拖拽，绷拽，连拖带拽，拽象拖犀\n拏\tnaa4\t(1)捉拿；(2)执取；(3)牵引\n拭\tsik1\t拭泪，拂拭，拭目以待，拭净，拭干，擦拭\n挓\tzaa1\t挓挲\n拶\tzaat3\t拶指\n挃\tzat6\t挃挃\n指\tzi2\t指示，戒指，了如指掌，指甲，指纹，指证，指控，指称，指责，指挥，指导，指派，指斥，指标，指数，指望，发指，千夫所指，指手划脚，弹指之间\n挍\tgaau3\t(1)比较；(2)考核\n挋\tzan3\t(1)赈济；(2)擦干；(3)缠束\n拵\tcyun4\t据也\n拻\tfui1\t相击\n挀\tbaak3\t(1)裂开；(2)破开\n挔\tleoi5\t同「旅」字，「挔」是「旅」的讹字\n拰\tnam5\t(1)搦也；(2)摇也\n捌\tbaat3\t「八l」字的大写\n捕\tbou6\t捕获，捕捉，捕杀，捕捞，捕手，捕风捉影，捕食，搜捕\n挫\tco3\t挫折，挫败，重挫，沉郁顿挫，受挫\n挭\tgaang3\t(1)搅；(2)大略\n捔\tgok3\t掎捔，捔巧骋奇，搀捔；(1)刺；(2)竞争\n拲\tgung2\t把双手铐在一起\n捐\tgyun1\t捐赠，捐款，捐血，捐助，捐出，捐献，捐弃，捐躯，唐捐(白费)\n挹\tjap1\t挹注，挹彼注兹，挹泪揉眵，㧑挹\n捆\tkwan2\t捆绑，捆扎\n拳\tkyun4\t拳头，打拳，磨拳擦掌，拳击，拳赛，拳术，抱拳，拳师狗，跆拳道，拳打脚踢，拳脚交加，花拳绣腿，赤手空拳\n挴\tmui5\t(1)贪求；(2)惭愧\n拿\tnaa4\t拿来，拿去，拿手，拿掉，拿主意，捉拿\n捏\tnip6\t捏造，捏著，捏碎，捏住，捏告，扭捏\n挪\tno4\t挪用，挪移，挪动，挪借，挪开，腾挪\n挼\tno4\t挼搓，挼挲\n捅\ttung2\t捅马蜂窝\n挽\twaan5\t挽救，挽回，挽留，力挽狂澜\n捊\tpau4\t引聚、聚集\n挬\tbut6\t拔\n捙\tjai6\t同「拽」字，「捙」是「拽」的讹字\n捚\tzaai1\t用手掌托起\n挸\tgaan2\t拭抹\n捑\tsik6\t小击\n捁\tgaau2\t同「搅」字\n捭\tbaai2\t捭阖，捭阖纵横，纵横捭阖\n掤\tbing1\t箭筒盖\n掁\tcaang4\t触，碰撞\n采\tcoi2\t采取，采用，采购，采行，采访，采纳，采信，采集，采矿，采茶，采下，采撷，采择，采桑，采伐，采料，采办\n措\tcou3\t措施，措手不及，措词，措辞，措手，措置\n掎\tgei2\t掎角，掎摭\n掬\tguk1\t掬水，掬饮，掬弄，笑容可掬\n掘\tgwat6\t掘出，掘起\n卷\tgyun2\t卷曲，龙卷风，卷土重来，卷帘，卷袖，卷尺，卷舌，卷轴，卷筒，卷烟，卷发，席卷，胶卷，卷入漩涡，风卷残云\n掐\thaap3\t掐住，掐诀，掐指一算\n控\thung3\t控制，控告，控诉，控罪，控名责实，遥控，检控，指控\n掩\tjim2\t掩护，掩饰，掩盖，掩体，掩人耳目，掩没，掩蔽，掩耳盗铃\n掯\tkang3\t勒掯\n掮\tkin4\t掮客\n抡\tleon4\t抡才，抡元\n掠\tloek6\t掠夺，掠过，掠取，掠地，掠美\n捺\tnaat6\t捺印\n挨\tngaai4\t挨打，挨苦，挨骂，挨肩擦背\n捼\tno4\t捼挲\n掽\tpung3\t同「碰」字\n授\tsau6\t授权，授课\n舍\tse2\t舍弃，舍身，舍命，舍本逐末，舍我其谁，舍己为人，舍生取义\n掞\tsim3\t掞张\n推\tteoi1\t推动，推论，推算，推理，推广，推销，推荐，推辞，推己及人，推陈出新\n捥\twun2\t同「腕」字\n掫\tzau1\t巡夜打更\n接\tzip3\t接受，接获，接触，接近，接著，接到，接任，接待，接见，接收，接洽，接管，接掌，接连，接纳，接力，接替，接应，接送，接驳，接办，接棒，接续，接通，接二连三，接头，接班，接运，接客，接触到，接种，接地，接踵而至，接线，接踵而来，接上，接缝，接合，接走，接济，接引，接生，接口，接来，接壤，接连不断，接受者，接踵，接吻，接枝，接杀，接境，接物\n掇\tzyut3\t掇拾，掇弄，掇拾；(1)拾取；(2)采摘；(3)选择；(4)搬；(5)扭转\n掑\tkei4\t扲掑(坚勇)\n捰\two2\t摘取\n掅\tcing3\t(1)揪住；(2)请人代自己做事，又写作「倩」\n捸\tdat6\t滑利\n揊\tbik1\t(1)击；(2)形容撞击声\n揹\tbui3\t揹负，揹黑锅\n插\tcaap3\t插花，插入，插上，插曲，插足，插枝，插画，插图，插嘴，插班\n捶\tceoi4\t捶背，顿足捶胸\n揰\tcung3\t推击\n挥\tfai1\t挥手，挥毫，挥舞，挥霍，挥之不去，指挥\n㧑\tfai1\t㧑谦\n拣\tgaan2\t拣选，拣去\n揩\thaai1\t揩油\n揶\tje4\t揶揄\n扬\tjoeng4\t扬手，宣扬，扬名，赞扬，趾高气扬\n掾\tjyun6\t掾吏，廷掾，狱掾\n描\tmiu4\t描述，描写，描绘，描出\n揇\tnaam5\t搦\n掱\tpaa4\t掱手(同扒手，意指小偷)\n揌\tsak1\t同「塞」字\n揎\tsyun1\t揎拳捋袖\n揓\tto1\t同「拖」字\n换\twun6\t换取，替换，变换，交换\n揕\tzam3\t同「戡」字\n揪\tzau1\t揪出来，揪住，不揪不睬\n掌\tzoeng2\t掌握，掌声，掌管，掌舵，掌权，掌政，掌印\n揋\twui1\t(1)牵引、牵制；(2)国名\n揨\tcaang4\t(1)撞击；(2)鼓槌\n搏\tbok3\t搏斗，搏击，搏动，肉搏，脉搏\n搬\tbun1\t搬运，搬迁，搬家，搬动，搬移，搬弄\n搽\tcaa4\t搽油，搽粉，搽灰抹土\n搊\tcau1\t搊扶，搊撮，搊搜\n搥\tceoi4\t同「捶」字\n搓\tco1\t搓揉，搓成，搓弄\n搭\tdaap3\t搭乘，搭建，搭讪，配搭\n捣\tdou2\t捣毁，捣蛋，捣碎，捣乱，捣衣，捣衣杵，直捣黄龙\n搞\tgaau2\t搞鬼，搞乱，搞垮，搞定，搞活\n摃\tgong1\t发摃(发交搬运)\n揅\tjin4\t同「研」字\n摇\tjiu4\t摇摆，动摇，摇头晃脑，摇手，摇篮，摇铃，摇船，摇桨，摇钱树，摇滚乐，摇曳生姿，摇摇欲坠，摇旗呐喊，摇尾乞怜，风雨飘摇\n搮\tleot6\t以手理物\n搧\tsin3\t搧风\n搠\tsok3\t刺\n搡\tsong2\t用力推\n搔\tsou1\t搔痒，搔首弄姿，搔头，搔扰\n搎\tsyun1\t扪搎\n损\tsyun2\t损失，损害，损坏，损伤，损毁，损益，损耗，损友\n搨\ttaap3\t搨本，搨摹，搨子以纸墨摹印碑帖。通「拓」\n搷\ttin4\t(1)急击；(2)播扬\n搪\ttong4\t搪塞，搪瓷，搪缸，搪饥，推搪；(1)抵御；(2)敷衍；(3)混骗；(4)涂抹\n搰\twat6\t搰搂，搰搰(用力貌，见《庄子》)，狐埋狐搰(喻人疑虑过甚，反复不定)挖掘\n搾\tzaa3\t同「榨」字\n揫\tzau1\t揫心\n搢\tzeon3\t搢绅\n搘\tzi1\t搘拄\n搌\tzin2\t搌布\n搟\thin2\t麾城搟邑\n揧\tlaat6\t研破\n撦\tce2\t挦撦，撦鼓夺旗\n摛\tci1\t摛翰，摛艳，镂彩摛文，摛翰振藻\n撤\tcit3\t撤销，撤离，撤回，撤退，撤换，撤除，撤职\n摓\tfung4\t(1)同「缝」字；(2)同「捀」字\n掼\tgwaan3\t粤语用字，意谓「跌倒」\n抠\tkau1\t(1)提起；(2)挖；(3)掏\n摝\tluk6\t振、摇\n撇\tpit3\t撇开，撇弃，撇脱(敏捷潇洒)\n𢫬\tsaat3\t侧手击\n摴\tsyu1\t摴蒱\n抟\ttyun4\t(1)盘旋；(2)同「团」字\n摦\twaa6\t宽大\n摘\tzaak6\t摘要，摘取，摘花，摘录，采摘\n摭\tzek3\t摭拾，掎摭，采摭\n摷\tziu6\t(1)拘击；(2)动；(3)断绝\n摠\tzung2\t同「总」字\n摥\ttong3\t推\n摿\tjiu4\t同「摇」字，「摿」是「摇」的讹字\n摬\tjing2\t击中\n摍\tsuk1\t抽、引\n播\tbo3\t播种，传播，播放，播送，播音，播下，播音员，播迁，播弄，播映\n撑\tcaang1\t撑竿跳，撑腰，撑伞，撑起，撑场面，撑不下去，撑开，撑下去，撑持，撑住，撑起来\n撮\tcyut3\t撮合，撮要\n抚\tfu2\t抚养，安抚，抚今追昔，抚琴，抚恤，抚掌，抚摸，抚慰，抚弄，抚顺\n揿\tgam6\t以手按物\n撠\tgik1\t(1)击刺；(2)接触；(3)抓住\n撌\tgwai6\t(1)槛；(2)排去\n摰\tjit6\t不安\n摹\tmou4\t摹拟，摹写，临摹\n摮\tngou4\t击\n撒\tsaat3\t撒手，撒谎，撒野，撒娇，撒手人寰\n挚\tzi3\t挚友，挚爱，真挚\n撙\tzyun2\t撙节，撙诎\n撘\tdaap3\t同「搭」字\n摨\tzi6\t摴蒱采名\n撗\tgwong3\t充也\n据\tgeoi3\t据说，盘据，占据，据点，证据，收据\n撽\tgik1\t从旁击打\n捡\tgim2\t拾取\n撼\tham6\t撼动\n擒\tkam4\t擒拿，就擒，生擒，欲擒故纵\n擏\tking4\t(1)同「擎」字；(2)同「檠」字\n擂\tleoi4\t擂台，擂鼓，擂起，自吹自擂\n掳\tlou5\t掳人勒赎，掳掠，掳获\n擙\tngou1\t磨\n擅\tsin6\t擅长，专擅，擅兵，擅离职守，擅自作主；(1)精长于某事；(2)独占；(3)专断\n挞\ttaat3\t挞伐，鞭挞\n择\tzaak6\t择偶，选择，择善固执，择吉，饥不择食\n擛\tjip6\t擛擛(动的样子)\n擃\tnong5\t(1)撞击；(2)戳刺\n摈\tban3\t摈弃，摈斥，摈黜，摈除，排摈\n擦\tcaat3\t擦伤，擦拭，摩擦\n击\tgik1\t击败，击中，击溃，击倒，击掌，击节赞赏\n搁\tgok3\t搁置，搁浅，搁下，耽搁，延搁\n擫\tjip3\t用手指按压\n擎\tking4\t擎受，引擎，一柱擎天，众擎易举，擎天架海；(1)高举；(2)拿取\n擤\tsang3\t擤鼻涕\n擭\twok6\t捕捉野兽的机关木笼\n挤\tzai1\t挤塞，排挤，挤眉弄眼，挤压，挤迫，挤拥，挤兑，挤奶\n擢\tzok6\t擢升，擢用，擢发难数拔取､抽取\n擨\tje4\t擨揄(同揶揄)\n摆\tbaai2\t摆布，摇摆，摆架子，摆脱，摆设，摆平，摆放，摆明，摆动，摆开，摆阵，摆摊子\n㧰\tlik1\t(1)击打；(2)冲击\n撵\tlin5\t撵走，倒撵猴(太极拳招式一)赶走\n摅\tsyu1\t摅怀，摅诚，摅愤，摅情\n掷\tzaak6\t掷地有声，抛掷，投掷，孤注一掷，一掷千金\n擳\tzit3\t挃擳\n撸\tlou5\t动也\n攁\tjoeng5\t发动\n攐\thin1\t(1)用手提起衣裳；(2)缩\n攀\tpaan1\t攀升，攀登，攀附，攀谈，攀缘，高攀\n攇\thin2\t震攇\n攍\tjing4\t用肩挑担\n搀\tcaam1\t搀扶，搀杂，搀话接舌，打搀，搀夺\n攓\thin1\t(1)同「搴」字；(2)用手提起衣裳；(3)怠慢；(4)缩\n撄\tjing1\t难撄其锋\n拦\tlaan4\t拦截，阻拦，遮拦\n携\tkwai4\t携带，携手，携枪，携眷，携款，携幼，携手同心，携伴\n攡\tci1\t同「摛」字\n攦\tlai6\t(1)折断；(2)扭转\n攠\tmei4\t钟受撞击之处\n摊\ttaan1\t摊位，摊开，摊还，摊子，摊派，书摊\n搅\tgaau2\t搅拌，搅乱，搅动，胡搅\n攭\tlai5\t云气旋转的样子\n攮\tnong5\t攮子\n打\tdaa1\t量词\n打\tdaa2\t打扮，打更，打坐，打岔，打烊，打动，打量，打发，打算，打击，打醮，打搅，打听，打交道，打油诗，打秋风，打圆场，打草惊蛇，打躬作揖，欧打，抱打不平\n打\tding2\t打头\n扒\tpaa1\t以手支撑\n扒\tpaa4\t扒手，扒窃，扒山越岭，扒草，扒坑，扒沟，扒饭，扒犁，扒灰\n扒\tbaat3\t扒皮，扒拉，扒头探脑，扒下衣裳，绷扒吊拷\n扤\tngaat6\t动、摇\n扤\tngat1\n扚\tdik1\t(1)拉开；(2)手掐\n扚\tlik6\t按压\n扚\tdiu2\t疾击\n扚\tjoek6\t手指节文\n扶\tpou4\t通「匍」字\n扶\tfu4\t扶助，扶植，扶持，扶老携幼，扶乩\n抏\twaan4\t同「玩」字\n抏\twun6\t同「玩」字\n抏\tjyun4\t抏弊消耗、耗损\n扱\tcaap3\t(1)插入；(2)挹取\n扱\tkap1\t收敛\n抎\twan5\t(1)失；(2)发声；(3)同「殒」字\n抎\tsin6\t同「擅」字\n折\tsit6\t折本，折耗，亏折\n折\tzit3\t折服，折衷，心折，挫折\n抵\tdai2\t抵达，抵制，抵抗，抵押，抵住，抵挡，抵消，抵触，抵御\n抵\tzi2\t击\n拂\tbat6\t同「弼」字\n拂\tfat1\t拂晓，照拂\n抾\tkeoi1\t(1)捕捉；(2)驱赶\n抾\tgip3\t通「劫」字\n抱\tpaau1\t同「抛」字\n抱\tbou6\t同「菢」字\n抱\tpou5\t抱负，怀抱，抱歉，抱怨\n承\tcing2\t通「拯」字\n承\tsing4\t承受，继承，承先启后，承欢膝下，承载，承接，承担，承当，承诺，承办，承包，承袭，承认，承租，承揽，承运，承印\n拓\ttaap3\t拓碑，拓本同「搨」字\n拓\tzek3\t同「摭」字\n拓\ttok3\t拓展，开拓，落拓不羁，拓荒，拓广，拓扑学\n挎\tkwaa3\t挎包\n挎\tfu1\t执持\n括\tgwaat3\t同「刮」字\n括\tkut3\t括弧，包括，概括，囊括\n挕\tdip6\t打也\n挕\tzip3\t拈取\n拺\tcaak3\t(1)马鞭；(2)搀扶\n拺\tsaak3\t拺择\n拺\tcuk1\t同「擉」字\n捄\tgau3\t同「救」字\n捄\tkau4\t长而弯曲的样子\n捄\tgeoi1\t以手揪聚\n挐\tnaa4\t同「拏」字\n挐\tnaau4\t船桨\n挐\tjyu4\t(1)连绵；(2)牵引；(3)乱\n捎\tsaau1\t捎带\n捎\tsiu1\t除去\n捝\tseoi3\t擦拭\n捝\ttyut3\t(1)解脱；(2)遗漏；(3)捶打\n振\tzan1\t振振\n振\tzan3\t振作，不振，振振有词\n捇\twaak6\t(1)裂开；(2)击打；(3)掘土\n捇\tcik3\t捇拔(赤犮)同「刺」字\n挳\thang1\t撞钟\n挳\thin1\t同「牵」字\n捗\tzik1\t打\n捗\tbou6\t捗摅(收歛)\n捗\tpou4\t捗攎(收乱草)\n捈\tcaa4\t投掷\n捈\ttou4\t(1)横引；(2)锐利\n捈\tsyu1\t同「摅」字\n捵\tcan2\t捵面，捵练\n捵\tdin2\t挣扎\n据\tgeoi1\t拮据\n掜\tngai5\t(1)模拟、比拟；(2)不从\n掜\tnip6\t姓氏\n排\tpaai4\t排除，排水，排名，排放，排水沟，排定，排斥，排队，排列，排球，排出，排行榜，排班，排行，排挤，排解，排球赛，排版，排开，排除万难，排泄物，排水管，排成，排到，排他性，排气管，排骨，排练，排场，排水量，排外，排上，排遣，排序，排山倒海，排泄，排球队，排卵，排难解纷，排湾族，排演，排水口，排字，排长，排印，排头，排下，排尿，排湾，排戏，排课，排笔，排除异己，排列成，排排坐，排比\n排\tbik1\t排子车\n挲\tsaa1\t挓挲(张开的样子)\n挲\tso1\t摩挲，挼挲\n探\ttaam1\t探汤\n探\ttaam3\t探子，探戈，探求，探究，探花，探讨，探案，探马，探原，探索，探访，探问，探测，探询，探险，探骑，探听，探幽索隐，探汤手烂，探囊取物\n掝\twaak6\t裂开\n掝\t6bwik1\t破裂时的声音\n揥\tdai3\t捐弃\n揥\ttai3\t象揥\n揖\tcap1\t揖揖\n揖\tjap1\t揖让，打躬作揖，开门揖盗\n揵\tgin6\t同「楗」字\n揵\tkin4\t(1)掮扛；(2)举起；(3)竖立\n提\ttai4\t手提，提倡，提议\n提\tsi4\t姓氏\n揃\tzin1\t通「笺」字\n揃\tzin2\t(1)剪断；(2)分割\n揘\twaang4\t揘毕(击刺)\n揘\twing4\t拔\n揂\tjau4\t掩盖\n揂\tzau1\t聚集\n揙\tpin1\t击打\n揙\tpin4\t(1)抚摸；(2)不咽；(3)扁形的\n揟\tseoi1\t滤水\n揟\tzeoi1\t取鱼\n搐\tcaau1\t搐风(即抽风，又称急惊风)\n搐\tcuk1\t搐动，搐缩，抽搐\n搛\tgim1\t用筷子夹菜\n搛\tlim4\t敲鼓\n搳\twaa1\t搳拳\n搳\that6\t(1)刮；(2)搔\n摎\tgau1\t摎蓼\n摎\tlau4\t姓氏\n搂\tlau1\t搂财，搂钱，搂搜\n搂\tlau4\t牵引\n搂\tlau5\t搂抱\n摽\tbiu1\t摽搒\n摽\tpiu1\t击\n摽\tpiu3\t同「僄」字\n摽\tpiu5\t(1)落下；(2)拊心貌\n掺\tcaam1\t同「搀」字\n掺\tsaam1\t掺掺(形容女手纤美)\n掺\tsaam2\t(1)执；(2)操\n掺\tcam3\t掺杂，掺和，渔阳掺挝(鼓曲名)\n摡\thei3\t取也\n摡\tgoi3\t(1)洗涤；(2)主也\n撜\tcaang4\t同「掁」字\n撜\tcing2\t同「拯」字\n挦\tcam4\t挦扯，挦撦，揪挦，挦毛捣鬓，挦绵扯絮\n挦\tcim4\t拔\n掸\tdaan6\t拂尘\n掸\tsin6\t掸族\n撅\tgwat6\t通「掘」字\n撅\tkyut3\t撅嘴\n撩\tliu1\t撩起\n撩\tliu4\t撩拨，春色撩人，眼花撩乱\n撩\tliu6\t掷\n扑\tpok3\t扑打，扑粉，扑救，反扑\n扑\tpuk1\t同「仆」字\n撕\tsai1\t提撕\n撕\tsi1\t撕破，撕毁，撕裂，撕掉，撕开，撕碎\n撱\twai5\t抛弃\n撱\tto2\t(1)椭圆形；(2)使成椭圆形\n操\tcou1\t操心，体操，同室操戈，操纵，操作，操刀，操舟，操练，操之过急，稳操胜券\n操\tcou3\t操守，节操，操行，情操\n担\tdaam1\t担任，担负，担保，担待，担当，担忧，承担\n担\tdaam3\t担子，重担\n挡\tdong2\t挡光，挡风，挡驾，挡箭牌，阻挡，抵挡\n挡\tdong3\t摒挡\n拥\tung2\t粤语用字\n拥\tjung2\t拥抱，拥戴，拥挤，拥护，拥遏不通，拥经问疾，蜂拥\n擘\tbaai1\t同「掰」字\n擘\tmaak3\t巨擘，擘画，擘开(用手分开)，擘划(安排、策划)，擘肌分理，分星擘两；(1)大拇指；(2)喻为特别优秀的人物；(3)分开\n擸\tlaap3\t包取\n擸\tlaap6\t(1)折断；(2)碾碎\n擸\tlip6\t(1)理持；(2)执持\n擞\tsau2\t抖擞精神\n擞\tsau3\n擿\tzaak6\t(1)同「掷」字；(2)同「摘」字\n擿\tzek3\t搔\n擿\ttik1\t擿伏，擿奸发伏，擿抉，擿校\n攃\tcaat3\t(1)摩擦；(2)足动草声\n攃\tsaat3\t(1)象声词；(2)同「撒」字\n攎\tlo4\t拣选\n攎\tlou4\t(1)拏持；(2)张或引；(3)收歛\n摄\tnip6\t安定\n摄\tsip3\t摄影，摄氏，摄政，摄制\n攩\tdong2\t(1)同「党」字；(2)同「挡」字\n攩\tdong3\t同「挡」字，用于「摒挡」一词\n扎\tzaap3\t「扎zaat3」的异读字\n扎\tzaat3\t扎手，扎针，挣扎\n扔\tjing4\t扔下，扔掉\n扔\twing1\t「扔jing4」的异读字\n扐\tlak6\t扐掯，扐闰成爻\n扐\tlik1\t「扐lak6」的异读字\n扠\tcaa1\t同「叉」字\n扠\tzaa3\t「扠caa1」的异读字，张开拇指和食指而量得的尺寸\n扡\tci2\t「扡to1」的异读字\n扡\tto1\t同「拖」字\n扛\tgong1\t扛鼎，扛夫，扛头，扛活，扛丧，拔山扛鼎\n扛\tkong1\t「扛gong1」的异读字\n扼\taak1\t「扼ak1」的异读字\n扼\tak1\t扼腕，扼杀，扼险，扼守，扼要；(1)捉、持、握；(2)据守、控制；(3)堵住、阻塞\n扼\tngak1\t「扼ak1」的异读字\n抓\tzaa1\t「抓zaau2」的异读字\n抓\taau1\t「抓zaau2」的异读字\n抓\tzaau2\t抓举，抓贼，抓耳挠腮，抓痒，抓药，抓紧时机\n把\tbaa2\t把握，把柄，把戏，把手\n把\tbaa3\t「把baa2」的异读字\n扽\tdan3\t「扽dan6」的异读字\n扽\tdan6\t扽平，扽直\n扽\tdeon6\t「扽dan6」的异读字\n扭\tnau2\t扭曲，别扭，扭转乾坤，扭捏\n扭\tnau5\t「扭nau2」的异读字\n扲\tgam6\t同「揿」字\n扲\tngam4\t「扲gam6」的异读字\n押\taap3\t押解，押店，押司，扣押，抵押\n押\tngaap3\t「押aap3」的异读字\n押\taat3\t「押aap3」的异读字\n押\tngaat3\t「押aap3」的异读字\n拎\tling1\t用手提起\n拎\tling4\t「拎ling4」的异读字\n拎\tning1\t「拎ling1」的异读字\n抿\tman4\t「抿man5」的异读字\n抿\tman5\t抿嘴\n抨\tpaang1\t「抨ping1」的异读字\n抨\tping1\t抨击，抨劾，抨弹\n抨\tping4\t「抨ping1」的异读字\n抮\tcan2\t「抮hin2」的异读字\n抮\tzan2\t「抮hin2」的异读字\n抮\thin2\t转\n拙\tzyut3\t拙劣，笨拙，勤能补拙，拙作，拙荆，拙手钝脚，拙嘴笨腮\n拙\tzyut6\t「拙zyut3」的异读字\n拜\tbaai1\t「拜baai3」的异读字\n拜\tbaai3\t拜年，拜见，拜师，拜倒，拜堂，拜会，拜谒，朝拜，参拜，跪拜，礼拜，拜托\n拮\tgat1\t「拮git3」的异读字\n拮\tgit3\t拮据，拮抗\n拷\thaau1\t「拷haau2」的异读字\n拷\thaau2\t拷打，拷问\n拫\than4\t(1)排斥；(2)牵引\n拫\than6\t「拫han4」的异读字\n按\ton3\t复按，按摩，按语，按兵不动，按部就班，按图索骥\n按\tngon3\t「按on3」的异读字\n拼\tping1\t拼音，拼贴，东拼西凑，拼合，拼命，拼盘，拼图，七拼八凑\n拼\tping3\t「拼ping1」的异读字\n拴\tsaan1\t拴车，拴马，拴缚，打拴\n拴\tcyun4\t「拴saan1」的异读字\n拾\tsap6\t拾获，拾起，拾取，拾穗，拾人牙慧，拾级而上，俯拾即是，道不拾遗\n拾\tsip3\t「拾sap3」的异读字\n挖\twaa1\t「挖waat3」的异读字\n挖\twaat3\t挖苦，挖掘，挖角，挖空心思\n挶\tguk1\t「挶guk6」的异读字\n挶\tguk6\t土器\n捖\tgwaat3\t「捖jyun4」的异读字\n捖\tjyun4\t(1)刮摩；(2)打或击\n捍\thon2\t「捍hon6」的异读字\n捍\thon5\t「捍hon6」的异读字\n捍\thon6\t捍戍，捍城，捍患，捍御，捍卫\n挈\thit3\t「挈kit3」的异读字，口语读音\n挈\tkit3\t挈眷，带挈，提纲挈领，携男挈女，挈瓶之知(喻见识浅)；(1)提；(2)携带；(3)带领\n捃\tgwan3\t「捃kwan2」的异读字\n捃\tkwan2\t捃摭\n捋\tlyut3\t以手持物，顺其移动\n捋\tlyut6\t「捋lyut3」的异读字\n挺\tting2\t「挺ting5」的异读字\n挺\tting5\t挺立，挺秀，挺拔，挺括，挺直，挺进，挺举，挺身而出，英挺，笔挺，昂首挺胸\n捂\tng6\t「捂wu2」的异读字\n捂\twu2\t捂盖\n揤\tzat1\t(1)捽；(2)拭\n揤\tzeot1\t「揤zat1」的异读字\n捉\tzuk1\t「捉zuk3」的异读字\n捉\tzuk3\t捉刀，捉弄，捉拿，捉摸，捉迷藏，捉襟见肘\n捘\tzeoi3\t(1)推挤；(2)按、捏\n捘\tzeon3\t「捘zeoi3」的异读字\n捘\tzyun3\t「捘zeoi3」的异读字\n捀\tfung4\t(1)两手托物；(2)两手分而数之\n捀\tfung6\t「捀fung4」的异读字\n捧\tbung2\t「捧pung2」的异读字\n捧\tfung2\t「捧pung2」的异读字\n捧\tpung2\t捧杯，捧场，捧腹，捧头鼠窜，吹捧\n捽\tzeot1\t交捽\n捽\tcyut3\t「捽zeot1」的异读字\n捽\tzyut6\t捽扯，捽脱，纽捽「捽zeot1」的异读字\n掟\tdeng3\t粤语用字，意指抛掷\n掟\tdeng6\t「掟deng3」的异读字\n掂\tdim1\t掂提，掂量，掂详，掂对，掂斤估两\n掂\tdim6\t「掂dim1」的异读字，口语读音\n捯\tdou2\t捯线\n捯\tdou3\t「捯dou2」的异读字\n挂\tgwaa3\t挂心，悬挂，牵肠挂肚，挂念，挂虑，挂失，挂名，挂单，挂一漏万\n挂\tkwaa3\t「挂gwaa3」的异读字\n掍\tgwan2\t「掍wan6」的异读字\n掍\twan6\t(1)混合；(2)边缘\n掀\thin1\t掀起，掀开，掀动\n掀\thin3\t「掀hin1」的异读字\n掖\tjat6\t「掖jik6」的异读字\n掖\tjik6\t扶掖，提掖，奖掖\n扪\tmun1\t「扪mun4」的异读字\n扪\tmun4\t扪心自问\n挻\tsaan1\t「挻sin1」的异读字\n挻\tsin1\t(1)篡取；(2)同「埏」字\n扫\tsou2\t「扫sou3」的异读字\n扫\tsou3\t扫平，扫尾，扫盲，扫射，扫除，扫黄，扫描，扫墓，扫荡，扫兴，扫愁帚，扫眉才子\n掭\ttim3\t掭笔\n掭\ttim5\t「掭tim3」的异读字\n掏\ttou1\t「掏tou4」的异读字\n掏\ttou4\t掏出，掏腰包，掏空，掏钱\n捷\tzit3\t「捷zit6」的异读字\n捷\tzit6\t捷径，捷报，捷足先登，快捷，敏捷\n握\taak1\t「握ak1」的异读字\n握\tak1\t握手，握管\n握\tngak1\t「握ak1」的异读字\n揠\taat3\t揠苗助长\n揠\tngaat3\t「揠aat3」的异读字\n掰\tbaai1\t掰开，分斤掰两，瞎掰；(1)双手使劲把东西分开；(2)胡扯瞎说\n掰\tbaai2\t「掰baai1」的异读字\n掰\tmak3\t「掰baai1」的异读字\n摒\tbing2\t「摒bing3」的异读字\n摒\tbing3\t摒弃，摒挡，摒诸门外，摒绝妄念，摒除\n揣\tceoi2\t揣度，揣测，揣摩\n揣\tcyun2\t「揣ceoi2」的异读字\n掣\tzai3\t掣曳，掣肘，掣剑，风驰电掣\n掣\tcit3\t「掣zai3」的异读字\n揈\tfang4\t「揈gwang1」的异读字\n揈\tgwang1\t赶走\n掔\thaan1\t「掔hin1」的异读字\n掔\thin1\t掔强，掔制，掔连\n揉\tjau4\t揉搓，矫揉造作\n揉\tjau6\t「揉jau4」的异读字\n揜\tam2\t「揜jim2」的异读字\n揜\tngam2\t「揜jim2」的异读字\n揜\tjim2\t关闭\n援\twun4\t援手，援引，援用，援助，援例，援笔立成，支援，声援\n援\tjyun4\t「援wun4」的异读字\n援\tjyun6\t「援wun4」的异读字\n揆\tkwai4\t「揆kwai5」的异读字\n揆\tkwai5\t揆一，揆度，揆情度理，道揆，阁揆\n搜\tsau1\t「搜sau2」的异读字\n搜\tsau2\t搜刮，搜查，搜捕，搜索，搜掠，搜罗，搜索枯肠，搜章摘句，搜岩采干\n揳\tsip3\t「揳sit3」的异读字\n揳\tgit3\t「揳sit3」的异读字\n揳\tsit3\t(1)弹奏；(2)敲打\n揗\ttan4\t「揗seon6」的异读字\n揗\ttang4\t「揗seon6」的异读字\n揗\tseon5\t「揗seon6」的异读字\n揗\tseon6\t(1)抚摩；(2)顺从\n揝\tzaan6\t同「攥」字\n揝\tzyut3\t「揝zaan6」的异读字\n揍\tcau3\t「揍zau3」的异读字\n揍\tzau3\t打\n搯\ttou1\t(1)挖取；(2)叩\n搯\ttou4\t「搯tou1」的异读字\n揯\tgang1\t(1)引急；(2)横贯\n揯\tgang3\t「揯gang1」的异读字\n搹\tak1\t同「扼」字\n搹\tngak1\t「搹ak1」的异读字\n搤\tak1\t同「扼」字\n搤\tngak1\t「搤ak1」的异读字\n搋\tcaai1\t搋面，搋手儿\n搋\tci2\t「搋caai1」的异读字\n搆\tgau3\t搆思，搆怨，搆和\n搆\tkau3\t「搆gau3」的异读字\n搕\thap1\t「搕hap6」的异读字\n搕\thap6\t搕打，撞头搕脑\n搚\tlap6\t折断\n搚\thip6\t「搚lap6」的异读字\n搣\tmit1\t「搣mit6」的异读字\n搣\tmit6\t揪、拔\n搦\tnik1\t搦翰(执笔)，抟搦(揉捏)，搦战；(1)握；(2)压抑；(3)抚摩；(4)挑衅\n搦\tnok6\t「搦nik1」的异读字\n摁\tjan1\t「摁on3」的异读字\n摁\ton3\t按\n摁\tngon3\t「摁on3」的异读字\n揱\tsiu1\t「揱sok3」的异读字\n揱\tsok3\t细长削尖的样子\n摀\tng6\t「摀wu2」的异读字\n摀\twu2\t摀盖(同捂盖，意指遮掩)\n摧\tceoi1\t摧残，摧毁，摧枯拉朽，摧陷廓清\n摧\tceoi4\t「摧ceoi1」的异读字\n𪭢\tcoeng1\t撞击\n𪭢\tcung1\t「𪭢coeng1」的异读字\n搿\tgaap3\t搿著口儿，搿手搿脚(粤方言)；(1)两手合抱；(2)协力从事\n搿\tgap3\t「搿gaap3」的异读字\n掴\tgwaak3\t掌掴，掴耳光\n掴\tgwok3\t「掴gwaak3」的异读字\n搴\tgin2\t「搴hin1」的异读字\n搴\thin1\t斩将搴旗\n摙\tlin4\t「摙lin5」的异读字\n摙\tlin5\t运、担\n撂\tliu1\t「撂loek6」的异读字\n撂\tloek6\t撂了，撂跤\n摞\tlo3\t「摞lo4」的异读字\n摞\tlo4\t堆起来\n摲\tcaam3\t芟除\n摲\tsaam3\t「摲caam3」的异读字\n摲\tsaan3\t「摲caam3」的异读字\n摔\tseoi1\t「摔seot1」的异读字\n摔\tseot1\t摔手，摔打，摔交，摔角，摔跤，摔倒\n折\tzaap3\t「折zip3」的异读字\n折\tzip3\t折子，折扇，折纸，折叠，存折\n撞\tcong4\t「撞zong6」的异读字\n撞\tzong6\t撞车，撞见，撞破，撞针，撞磕，撞骗，撞击，莽撞，碰撞\n挢\tgiu2\t钳口挢舌，挢捷\n挢\tgiu6\t「挢giu2」的异读字\n𪭾\thaan5\t凶猛\n𪭾\thaan6\t「𪭾haan5」的异读字\n撖\tham1\t姓氏\n撖\thon6\t「撖ham1」的异读字\n撋\tjeon6\t「撋no4」的异读字\n撋\tno4\t撋就，撋纵\n撋\tjyun4\t「撋no4」的异读字\n捞\tlaau1\t「捞lou4」的异读字\n捞\tlaau4\t「捞lou4」的异读字\n捞\tlou1\t「捞lou4」的异读字，口语用字\n捞\tlou4\t捞鱼，捞本，捞漉，捞摸，捞稻草，打捞，大海捞针\n摩\tmo1\t摩擦，摩拳擦掌，摩肩接踵\n摩\tmo4\t「摩mo1」的异读字\n挠\tnaau4\t不挠，阻挠，不屈不挠\n挠\tnaau5\t「挠naau4」的异读字\n挠\tnaau6\t「挠naau4」的异读字\n撚\tnan2\t「撚nin2」的异读字，口语读音\n撚\tnin2\t撚纱(纺织术语)，轻拢慢撚(出自白居易〈琵琶行〉)；(1)执持；(2)搓揉；(3)弹琵琶的一种指法\n撚\tnin5\t「撚nin2」的异读字\n撰\tzaan3\t「撰zaan6」的异读字\n撰\tzaan6\t撰文，撰次，撰述，撰写，撰录，杜撰\n擉\tcok3\t「擉cuk1」的异读字\n擉\tcuk1\t戳刺\n擉\tzuk1\t「擉cuk1」的异读字\n撉\tdan3\t「撉deon1」的异读字\n撉\tdeon1\t猛地往下放，著地很重\n擐\tgwaan3\t擐甲执兵，擐系，躬擐甲胄\n擐\twaan6\t「擐gwaan3」的异读字\n擖\tgaa3\t「擖jip6」的异读字\n擖\tkaa1\t「擖jip6」的异读字\n擖\tjip6\t(1)刀刮；(2)箕舌，畚箕前伸出的部分\n拟\tji4\t「拟ji5」的异读字\n拟\tji5\t拟订，模拟，拟人法，草拟，摹拟，虚拟，拟规画圆\n撷\tgit3\t「撷kit3」的异读字\n撷\tkit3\t撷芳，撷取，撷华，采撷；(1)以衣衽扱物谓之襭；(2)摘取\n扩\tgwok3\t「扩kwok3」的异读字\n扩\tkwok3\t扩展，扩建，扩张势力，扩散，扩充，扩音器\n扩\tkong3\t「扩kwok3」的异读字\n扩\tkwong3\t「扩kwok3」的异读字\n扰\tjiu2\t「扰jiu5」的异读字\n扰\tjiu5\t扰乱，扰攘，干扰，打扰\n攉\tfok3\t攉土，挥攉，挑三攉四，攉煤机\n攉\twok6\t「攉fok3」的异读字\n拢\tlung4\t「拢lung5」的异读字\n拢\tlung5\t共拢，拉拢，拢络，靠拢，轻拢慢撚，谈不拢聚集、靠近\n攌\twaan5\t大木栅，引申为拘系\n攌\twaan6\t「攌waan5」的异读字\n攕\tsaam1\t纤细柔美\n攕\tcim1\t「攕saam1」的异读字\n攗\tkwan2\t「攗mei4」的异读字\n攗\tmei4\t蕨攗(菱角)\n撺\tcyun1\t「撺cyun3」的异读字\n撺\tcyun3\t撺掇\n攫\tfok3\t攫取，攫夺\n攫\tgwok3\t「攫fok3」的异读字\n挛\tlyun1\t「挛lyun4」的异读字\n挛\tlyun4\t痉挛，挛缩\n攥\tzaan6\t用手抓紧\n攥\tzyut3\t「攥zaan6」的异读字\n揽\tlaam2\t「揽laam5」的异读字\n揽\tlaam5\t揽秀，招揽，独揽大权，揽持，揽辔，包揽，承揽，揽权纳贿\n扢\tgwat1\t擦拭\n扢\tngat6\t扢搭\n扢\thei3\t振奋\n扢\tgoi3\t「扢gwat1」的异读字\n扞\tgon2\t辗轧\n扞\thon2\t「扞hon6」的异读字\n扞\thon6\t扞格\n扮\tbaan3\t打扮，装扮\n扮\tbaan6\t「扮baan3」的异读字\n扮\tfan5\t握\n扻\tham2\t粤语用字，磕的意思\n扻\tham6\t「扻ham2」的异读字\n扻\tzit3\t同「栉」字\n扳\tbaan1\t扳回使位置固定的东西改变方向或转动\n扳\tbaan2\t「扳paan1」的异读字\n扳\tpaan1\t同「攀」字\n拗\taau2\t拗折，拗断\n拗\taau3\t拗句，执拗，拗口令，违拗\n拗\tngaau2\t「拗aau2」的异读字\n拗\tngaau3\t「拗aau3」的异读字\n拗\tjuk6\t拗怒\n拌\tbun6\t拌和，搅拌，拌嘴，拌蒜\n拌\tpun1\t「拌pun3」的异读字\n拌\tpun3\t舍弃\n拉\tlaa1\t阿拉同「剌」字\n拉\tlaai1\t拉手，拉扯，拉锯，拉倒，拉票，拉拢，拉三扯四，拉不开栓，拉家带口，摧枯拉朽\n拉\tlaap6\t「拉laai1」的异读字\n拉\tlaat6\t「拉laa1」的异读字\n抹\tmaat3\t擦\n抹\tmut3\t抹煞，涂抹，转湾抹角\n抹\tmut6\t「抹mut3」的异读字\n拈\tnim1\t拈弄，拈香，拈花惹草，拈花微笑，信手拈来\n拈\tnim4\t「拈nim1」的异读字\n拈\tnin2\t同「撚」字\n拚\tfaan1\t拚飞\n拚\tfan3\t扫除\n拚\tping1\t同「拼」字\n拚\tpun1\t「拚pun3」的异读字\n拚\tpun2\t「拚pun3」的异读字\n拚\tpun3\t拚命\n挑\ttiu1\t挑战，担挑，挑拨离间，挑毛病，挑夫，挑剔，挑唆，挑逗，挑衅，单挑，高挑，挑灯夜读，精挑细选，独挑大梁\n挑\ttiu5\t「挑tiu1」的异读字\n挑\ttou1\t挑达(轻儇跳跃的样子)\n挨\taai1\t挨近，挨家挨户，挨肩搭背，挨次\n挨\tngaai1\t「挨aai1」的异读字\n挨\tngaai4\t挨磨，挨骂，忍饥挨饿\n挨\toi2\t「挨aai1」的异读字\n挨\tngoi2\t「挨aai1」的异读字\n挟\tgaap3\t挟带(同夹带)\n挟\thaap6\t「挟hip6」的异读字\n挟\thip3\t「挟hip6」的异读字\n挟\thip6\t挟持，要挟，挟恨，挟制，挟势凌人，挟嫌报复，裹挟\n挜\taa2\t(1)挥动；(2)舀取\n挜\taa3\t挜贾\n挜\tngaa2\t「挜aa2」的异读字\n挜\tngaa3\t「挜aa3」的异读字\n挜\tngaa6\t粤语用字\n掉\tzaau6\t同「棹」字，方言用字，意指划船\n掉\tdeu6\t「掉diu6」的异读字\n掉\tdiu6\t掉包，掉舌，掉首，掉换，掉膘，掉书袋，掉眼泪，掉以轻心，改掉，卖掉，尾大不掉\n捩\tlai6\t琵琶拨法\n捩\tleoi6\t「捩lit6」的异读字\n捩\tlit6\t捩手，转捩点\n捻\tnan2\t捻线\n捻\tnim1\t以指取细物\n捻\tnim2\t捻军\n捻\tnim5\t「捻nim2」的异读字\n捻\tnin2\t捻死木虱，捻喉\n捻\tnip6\t以指拈紧\n掊\tfau2\t「掊pau2」的异读字\n掊\tpau2\t掊击，掊斗折衡打破\n掊\tpau4\t掊沙，掊克(苛税敛财)；(1)以手挖土；(2)敛聚\n挣\tzaang1\t「挣zang1」的异读字\n挣\tzaang6\t挣钱\n挣\tzang1\t挣扎，挣揣，挣脱枷锁\n揲\tdip6\t揲贯，揲贯万物(语出《淮南子》)\n揲\tsip3\t「揲sit6」的异读字\n揲\tsit3\t「揲dip6」的异读字\n揲\tsit6\t揲蓍，运策揲蓍(易占时搬弄蓍草的动作)，揲法用手数物\n揄\tjau4\t舀取\n揄\tjiu5\t「揄jau4」的异读字\n揄\tjyu4\t揄扬，揶揄\n揭\tgai6\t揭衣涉水\n揭\thei3\t「揭gai6」的异读字\n揭\tkit3\t揭露，揭发，揭竿起义，揭开，揭晓，揭示，揭穿，揭橥，揭幕，揭疮疤，揭竿，揭扬，揭榜，昭然若揭\n抢\tcoeng1\t呼天抢地，抢风，抢水\n抢\tcoeng2\t抢掠，抢购，抢白，抢劫，抢救，抢修，抢夺，抢火，抢水，抢手，抢占，抢步，抢眼，抢嘴，抢险\n抢\tcong1\t抢攘，搀抢\n抢\tcong2\t「抢coeng1」的异读字\n搉\tgok3\t扬搉\n搉\tkok1\t「搉gok3」的异读字\n搉\tkok3\t商搉敲打\n搒\tpang4\t拷打\n搒\tbong2\t摽搒，搒样，出搒\n搒\tbong3\t「搒pong3」的异读字\n搒\tpong3\t摇橹使船进前\n揾\tman5\t「揾wan3」的异读字\n揾\twan2\t粤语用字，意谓「找寻」\n揾\twan3\t(1)揩拭；(2)擦\n摵\tsaak3\t落叶摵摵\n摵\tcik1\t粤语用字，意谓「提高」\n摵\tsik1\t「摵saak3」的异读字\n摸\tmo2\t摸索，浑水摸鱼，捉摸\n摸\tmok3\t「摸mo2」的异读字\n摸\tmok6\t「摸mo2」的异读字\n摸\tmou4\t同「摹」字\n拨\tbut3\t「拨but6」的异读字\n拨\tbut6\t拨火，拨弄，拨开，挑拨，调拨\n拨\tput3\t粤语用字\n撬\tgiu6\t撬起，撬开，撬杠\n撬\thiu3\t(1)举起；(2)「撬giu6」的异读字\n撢\ttaam1\t「撢taam3」的异读字\n撢\ttaam2\t「撢taam3」的异读字\n撢\ttaam3\t同「探」字\n撢\tdaan6\t打去尘土\n擗\tpek6\t粤语用字\n擗\tbik1\t「擗pik1」的异读字\n擗\tpik1\t擗摽，擗踊，擗转\n挝\tzaa1\t挝鼓骂曹\n挝\tgwo1\t「挝wo1」的异读字\n挝\two1\t老挝\n擩\tjau4\t方言用字，意指插\n擩\tjeoi5\t调拌\n擩\tjyu4\t沾染\n擩\tjyu5\t「擩jyu4」的异读字\n拧\tling2\t「拧ning4」的异读字\n拧\tling6\t「拧ning6」的异读字\n拧\tning1\t粤语用字\n拧\tning4\t拧手巾，拧眉立目\n拧\tning6\t拧转，拧性\n攘\tjoeng4\t攘除，攘夺，熙来攘往，攘善，攘臂，安内攘外，尊王攘夷\n攘\tjoeng5\t扰攘\n攘\tjoeng6\t(1)同「让」字；(2)「攘joeng5」的异读字\n攒\tzaan2\t积攒\n攒\tzaan6\t「攒cyun4」的异读字\n攒\tcyun4\t攒钱，攒凑，怒目攒眉，攒盒，攒宫，攒聚\n攒\tzyun1\t同「钻」字\n攒\tzyun6\t「攒cyun4」的异读字\n支\tzi1\t支持，收支，支离破碎，支柱，支援，支出，支票，支线，支流，支气管，透支，地支，支吾其辞，乐不可支\n攲\tkei1\t攲器，攲侧\n攳\tcam4\t修长\n收\tsau1\t收入，收费，收购，收获，没收，美不胜收\n改\tgoi2\t改善，改革，改变，改进，改造，改观，改正，改弦易辙，改头换面，改过自新，改邪归正\n攻\tgung1\t攻击，攻势，攻占，攻守，攻打\n攷\thaau2\t同「考」字\n攸\tjau4\t攸关，生死攸关\n故\tgu3\t故事，故意，故障，故乡，掌故，典故，世故\n敃\tman5\t同「暋」字\n政\tzing3\t政府，政治，政策，政党，政权，政局\n敊\tcuk1\t病痛貌\n效\thaau6\t效果，效率，效益，效应，效忠，效劳，效法，效力，收效，实效，失效；(1)摹仿；(2)功用；(3)致送；(4)征验\n敆\tgap3\t会合、并集\n败\tbaai6\t败坏，败诉，败北，败露，败笔，败阵，败仗，败类，败落，败局，败军，败德，失败\n敝\tbai6\t敝帚自珍，弃若敝屣，敝处，敝国；(1)破旧；(2)疲倦；(3)对别人指称和自己相关事物时的自谦之词\n敕\tcik1\t敕命，敕令，敕勒，敕厉，敕旨，敕使，敕身，敕书，圣敕，敕戒，口敕，奉敕；(1)帝王的诏书，诰令；(2)告诫、命令\n敚\tdyut6\t同「夺」字\n救\tgau3\t救济，救援，救助，救灾，救护，救急，救活，救赎，救星，救国救民，拯救\n敔\tjyu5\t柷敔(古时两种木制敲击乐器)古乐器\n敏\tman5\t敏感，敏锐，敏捷，敏慧，敏达，聪敏\n叙\tzeoi6\t叙述，叙旧，记叙，叙事，叙说，叙别，铨叙\n敞\tcong2\t敞开，敞亮，宽敞\n敢\tgam2\t勇敢，敢当，愧不敢当\n敜\tnip6\t塞著\n敪\tzyut3\t敁敪\n敨\tdau2\t方言用字，意谓展开包著或卷著的东西\n敬\tging3\t敬重，恭敬，敬业乐群，敬佩，敬爱，敬仰，敬畏，敬礼，敬贺，敬拜，敬老尊贤，敬而远之，敬谢不敏\n敲\thaau1\t敲诈，敲打，敲击\n敌\tdik6\t敌人，敌对，敌意，敌视，敌手，敌忾同仇，夙敌，树敌\n敷\tfu1\t敷衍，敷药，入不敷支，敷面，敷设路轨\n敹\tliu4\t缝纫、修补\n敶\tzan6\t同「陈」字，陈列的意思\n敿\tgiu2\t系连\n整\tzing2\t整齐，整理，整装待发，整顿，整体，整合，整治，整洁，整整有条，整数，整编，整饬，整肃，整容，整流，整军经武，完整\n敼\thei2\t嬉戏\n毙\tbai6\t毙命，击毙，坐而待毙，作法自毙；(1)死；(2)倾覆\n放\tfong2\t(1)仿效；(2)依据；(3)到达\n放\tfong3\t放松，解放，放虎归山，放声大哭，放映，放心，放牧，放宽，放置，放开，放学，放假，放任，放肆，放纵，放弃，放逐，流放，释放，放大镜，放射线，放风筝\n教\tgaau1\t悔教\n教\tgaau3\t教化，教坊，教材，教育，教官，教皇，教师，教训，教益，教唆，教授，教堂，教习，教条，教程，教义，教诲，教养，教练，教学，教导，教谕，教猱升木，教学相长，名教，身教，宗教，请教\n敖\tngou4\t(1)姓氏；(2)同「遨」字\n敖\tngou6\t同「傲」字\n散\tsaan2\t散文，散套，散发，散儒，散体，懒散，散兵游勇，一盘散沙，投闲置散\n散\tsaan3\t散心，散步，散场，散发，散落，散置，散播，散伙，分散，扩散\n敧\tgei1\t以竹箸取物\n敧\tji2\t参差不齐\n敥\tgaau2\t古时燃木祭神\n敥\tjim6\t以手散物\n敳\tngoi4\t(1)治理得宜；(2)姓氏\n敳\tzuk1\t击鼓\n敻\thing3\t敻古，幽敻\n敻\thyun3\t营求\n数\tsok3\t频数，数见不鲜\n数\tsou2\t数一数二，数落，数典忘祖，不可胜数，数说，数九寒天，数不胜数，数白论黄，数米而炊，数米量柴，数往知来\n数\tsou3\t数目，总数，数学，数字，数列，数据，数额，定数，劫数\n数\tcuk1\t细密\n斁\tjik6\t无斁，眷念无斁厌倦\n斁\tdou3\t攸斁，耗斁，彝伦攸斁(伦常败坏)败坏\n斄\tlei4\t旄牛\n斄\ttoi4\t古地名\n攽\tbaan1\t发给\n攽\tban1\t「攽baan1」的异读字\n敁\tdim1\t敁掇\n敁\tdim6\t「敁dim1」的异读字\n敉\tmai5\t敉平；(1)安抚；(2)平定\n敉\tmei5\t「敉mai5」的异读字\n敤\tfo2\t(1)研治；(2)椎打；(3)人名用字\n敤\tfo3\t「敤fo2」的异读字\n敯\tfan1\t「敯man4」的异读字\n敯\tman4\t(1)冒也；(2)闷也\n敯\tman5\t「敯man4」的异读字\n敛\tlim5\t敛足，敛财，敛迹，收敛，赋敛，暴敛\n敛\tlim6\t「敛lim5」的异读字\n敦\tdeoi1\t(1)独处不移的样子；(2)逼迫；(3)治理\n敦\tdeoi3\t盛黍稷的器具\n敦\tdeoi6\t「敦deoi3」的异读字\n敦\tdeon1\t敦朴，敦促，温柔敦厚，敦伦，敦请，敦嘱，敦勉，敦品励学，敦亲睦邻\n敦\tdeon6\t混敦(同混沌)\n敦\tdiu1\t敦弓(同雕弓，用彩画修饰的弓)\n敦\ttyun4\t丛聚的样子\n敺\tau2\t同「殴」字\n敺\tngau2\t「敺au2」的异读字\n敺\tkeoi1\t同「驱」字\n斀\tdoek3\t「斀zoek3」的异读字\n斀\tzoek3\t宫刑的别称\n斀\tzuk1\t击打\n斑\tbaan1\t斑白，省班，七彩斑斓，斑马，斑鸠，斑驳，斑点，斑剥，斑纹，斑痕\n斌\tban1\t斌斌，颁斌\n斐\tfei2\t斐然，成绩斐然\n斒\tbaan1\t斒斓(文彩鲜明貌)\n斔\tjyu5\t同「斞」字，古代容量单位\n斓\tlaan4\t斑斓颜色驳杂\n斖\tmei5\t同「亹」字\n文\tman1\t(1)「文man4」的异读字；(2)在粤语中用作货币单位，即「圆」\n文\tman4\t文明，天文，文质彬彬，文化，文章，文件，文字，文才，文采，文具，文风，文书，文豪，文凭，文学，文艺，文献，语文，不值一文\n文\tman6\t文过饰非\n斝\tgaa2\t斝彝，走斝飞觞(形容宴饮气氛热烈)玉制的盛酒器具\n斞\tjyu5\t同「庾」字\n斟\tzam1\t斟酒，斟酌，斟满；(1)注入；(2)审度情理\n斢\ttau2\t(1)黄色；(2)即「黈纩」，古代君主以黄绵为丸，用丝带悬之于冕，垂两耳旁，示不妄听\n斗\tdau2\t斗篷，北斗，斗转星移，斗笠，斗斛，斗箕，斗室，斗拱，斗胆，墨斗，翻跟斗，才高八斗\n斜\tce4\t斜坡，倾斜，斜风细雨，斜阳，斜晖，斜路，斜照，斜汉，斜签\n斜\tje4\t褒斜谷(陕西省山谷名)\n斠\tgaau3\t斠订，斠补\n斠\tgok3\t斠斛\n斡\twaat3\t斡旋，斡运\n斡\tgun2\t(1)主管；(2)掌握\n料\tliu2\t「料liu6」的异读字\n料\tliu6\t材料，资料，料想，料中，料到，料定\n斛\tfuk6\t「斛huk6」的异读字\n斛\thuk6\t石斛(植物名，属兰科)，斗斛之禄古代容量单位\n斥\tcik1\t斥资，斥责，斥喝，斥骂，斥退\n斨\tcoeng1\t斧的一种\n斧\tfu2\t斧头，斧凿，大刀阔斧\n斪\tkeoi4\t锄属\n斫\tzoek3\t斫柴，斫斩\n斩\tzaam2\t斩首，斩断，斩草除根\n斯\tsi1\t斯文，斯人，斯文扫地\n斮\tzoek3\t斮戮，刳斮，斮涉刳孕(传说中商纣的恶行)，剖斮忠贤；(1)斩；(2)古代一种截肢刑罚\n新\tsan1\t新旧，创新，新陈代谢，新闻，新鲜，新年，新春，新娘，新秀，新婚，新近，新奇，新手，新潮，贪新忘旧，旧雨新知，推陈出新，耳目一新\n斳\tkan4\t同「芹」字\n斶\tcuk1\t人名用字\n斸\tzuk1\t(1)砍伐；(2)锄类\n斤\tgan1\t斤斧，公斤，斤斤计较，半斤八两\n斤\tgan3\t「斤gan1」的异读字，用于「斤斤计较」一词\n斲\tdoek3\t斲琴(造古琴)，斲轮老手(巧匠，见庄子˙天道)，斲丧(损伤)砍削\n斲\tzoek3\t「斲deok3」的异读字\n断\tdyun3\t断定，判断，独断独行，断言，断语，诊断，明断，断无此理\n断\tdyun6\t断绝，折断，断章取义，断奶，断交，断念，断肠，断气，断送，断裂，断崖，断头台，断代史，片断，买断，断断续续，断篇残简，当机立断，梦断黄粱\n断\ttyun5\t「断dyun6」的异读字，口语读音\n方\tfong1\t方正，地方，方兴未艾，方程式，方向，方式，方面，方案，方法，方便，方针，方才，方位，方圆，方丈，方块，方士，方言，方格，方寸，方略，方阵，方外\n斻\thong4\t(1)两船相并；(2)同「航」字\n旃\tzin1\t旃檀(檀香)，旃裘(毡毛衣服)，戎旃；(1)毛织品、通毡；(2)旌旗\n旎\tnei5\t旖旎\n旋\tsyun4\t旋风，旋转，旋律，旋涡，盘旋，凯旋，周旋\n族\tzuk6\t族群，族人，族裔，族谱，民族，贵族\n旒\tlau4\t旒冕，宸旒(帝冠，借指皇帝)；(1)旗子上的飘带；(2)冠冕上垂悬的饰物\n旐\tsiu6\t古代的一种旗子\n旓\tsaau1\t古代装饰旌旗的飘带\n旖\tji2\t旖旎\n旗\tkei4\t旗下，旗号，旗子，旗开得胜，旗鼓相当，旗竿，旗手，旗语，旗舰，旗杆，旗人，旗标，国旗\n旚\tpiu1\t旌旗飘摇的样子\n旛\tfaan1\t旗旛，旛胜\n旞\tseoi6\t古代系在导车旗杆上的一种装饰物，为完整的五色鸟羽\n旟\tjyu4\t古代的一种军旗\n于\twu1\t於菟\n于\tjyu1\t于是，由于，声闻于今\n于\tjyu4\t姓氏\n旄\tmou4\t旄牛，旄丘，旄头，旄钺，旄骑，白旄，羽旄，拥旄\n旄\tmou6\t同「耄」字\n旁\tbong6\t旁午\n旁\tpong4\t偏旁，旁边，旁听，旁白，旁若无人，旁门左道，旁敲侧击\n旅\tleoi3\t「旅leoi5」的异读字\n旅\tleoi5\t旅游，旅行，旅程\n旆\tbui3\t「旆pui3」的异读字\n旆\tpui3\t旆旆，反旆，酒旆，征旆，文旆(即今所谓「尊驾」)；(1)旌旗末端下垂饰物；(2)旗；(3)别人行踪的尊称\n旌\tsing1\t「旌zing1」的异读字\n旌\tzing1\t旌别，旌表，旌旗，旌麾，文旌，心旌摇曳；(1)饰著五彩羽毛的旗子；(2)尊称他人的行踪\n旍\tsing1\t「旍zing1」的异读字\n旍\tzing1\t同「旌」字\n旝\tkui2\t旌旗\n旝\tkui3\t「旝kui2」的异读字\n斿\tjau4\t遨游\n斿\tjau6\t「斿lau4」的异读字\n斿\tlau4\t同「旒」字\n施\tji6\t蔓延\n施\tsi1\t施工，施行，施政，施教，施药，实施\n施\tsi3\t「施si1」的异读字\n旡\tgei3\t饮食气逆不得息\n既\tgei3\t既然，既得利益，既定政策，既成事实，既往不咎\n旬\tceon4\t旬日，上旬，旬岁(足一年)，兼旬(二十天)；(1)十天；(2)十年；(3)满、足够\n旮\tgo1\t旮旯(角落)\n旭\tjuk1\t旭日，旭日初升\n旯\tlo1\t旮旯(不受注意的偏僻角落)\n旨\tzi2\t旨意，旨趣\n早\tzou2\t早上，早期，早餐，早先，早晚，早安，早起，早出晚归，早课，赶早\n旳\tdik1\t旳知，旳据，旳言(均见史记索隐)，旳皪；(1)明显、明确；(2)妇人面饰\n旴\theoi1\t(1)日出的样子；(2)姓氏\n旱\thon5\t旱灾，旱季，天旱，旱田\n昌\tcoeng1\t昌明，昌盛，昌隆，五世其昌\n昏\tfan1\t昏睡，黄昏，昏迷不醒，昏庸，昏暗，昏厥，昏昏欲睡，昏沉，昏君，昏花，昏天暗地，昏眩，昏头转向\n昒\tfat1\t昒爽\n曶\tfat1\t忽视貌\n昉\tfong2\t(1)天刚发亮；(2)开始\n昊\thou6\t昊天，昊天罔极，苍昊；(1)广大无边；(2)指天\n昕\tjan1\t(1)黎明；(2)明亮\n旼\tman4\t旼旼(和蔼)\n旻\tman4\t(1)秋天；(2)天空\n明\tming4\t明显，明确，明天，明白，明星，明知，明朗，明智，明亮，明珠，明志，明言，明度，明察秋毫，明鉴，明镜高悬，明艳照人\n昔\tsik1\t昔日，昔时，昔年\n昀\twan4\t日光\n旺\twong6\t旺季，旺盛，兴旺，旺地\n昃\tzak1\t日过午\n昋\tgwai3\t姓氏\n昅\tgip3\t晒干\n昍\thyun1\t光明\n昐\tfan1\t日光\n昈\twu6\t(1)分明；(2)有文采；(3)红色花纹、红光\n昑\tjam2\t明亮\n昺\tbing2\t明亮\n春\tceon1\t春节，春天，春季，春风\n昲\tfai3\t(1)曝晒；(2)日光\n昦\thou6\t同「皞」字\n昜\tjoeng4\t同「阳」字\n昱\tjuk1\t(1)日光；(2)照耀\n昡\tjyun6\t日光\n昴\tmaau5\t昴宿(二十八宿中的西方七宿之一，俗称「白虎宿」)，昴毕(西方庚酉之地)，昴降\n昧\tmui6\t昧旦，愚昧，昧心\n昢\tpui3\t日始出光未盛明貌\n是\tsi6\t是否，是以，是非，是故，是非曲直，是是非非，是非自有公论\n昤\tling4\t昤昽(日光)\n昹\toi2\t星名\n昮\tcung6\t功人\n晃\tfong2\t晃动，晃来晃去，摇晃\n晌\thoeng2\t晌午\n时\tsi4\t时间，时代，时机，时刻，时常，时光，时空，时速，时势，时装，时事，时尚，不合时宜，风靡一时，废时失事\n晋\tzeon3\t晋见，晋级\n晑\thoeng2\t光明\n晊\tzat1\t(1)形容大的东西；(2)明亮\n晡\tbou1\t晡夕，晡食，晡时，日晡，三晡\n晦\tfui3\t晦暗，晦气，晦涩，隐晦，风雨如晦，韬光养晦\n晞\thei1\t蒸发、干燥\n晚\tmaan5\t晚上，晚间，晚会，晚餐，晚宴，晚年，晚报，晚辈，晚近，晚景，晚安，晚霞，晚节\n晤\tng6\t晤面，晤谈，晤见，会晤\n晨\tsan4\t晨光，晨曦，晨间，晨昏，晨操，晨星\n晥\twun5\t同「皖」字\n昼\tzau3\t昼夜，昼分，昼伏夜出，昼日\n晙\tzeon3\t早也、明也\n朁\tcaam2\t曾经\n晷\tgwai2\t日晷，晷刻，昃晷(过了正午)，焚膏继晷(夜以继日)；(1)日影；(2)以日影定时刻的仪器\n晾\tlong6\t晾干，晾晒\n普\tpou2\t普遍，普通，普及，普选，普渡众生，普天同庆\n晱\tsim2\t同「闪」字\n暑\tsyu2\t暑假，暑气，暑热，处暑，大暑\n晬\tzeoi3\t晬盘\n智\tzi3\t智慧，明智，见仁见智，智能，智力，智囊，智商，智者，智识，智谋，睿智，理智，机智，智勇双全，大智若愚，情急智生\n晶\tzing1\t晶片，水晶，晶莹剔透，晶体，晶状体，晶粒\n晪\ttin2\t明也\n晲\tngai6\t午后偏西的太阳\n晸\tzing2\t旭日初升的样子\n晖\tfai1\t春晖，落晖，余晖\n暄\thyun1\t暄暖，寒暄\n旸\tjoeng4\t旸谷\n暌\tkwai4\t暌违，暌索，暌合\n暋\tman5\t强横\n暐\twai5\t光明\n暙\tceon1\t人名用字\n暔\tnaam4\t古代国名\n暊\tfu2\t光明\n暆\tji4\t暆暆(形容太阳缓缓西移)\n畅\tcoeng3\t畅通，畅销，畅旺，畅游，畅谈，畅所欲言，畅饮，畅快，畅通无阻，畅所欲为\n暟\thoi2\t(1)日照；(2)美德\n暡\tjung2\t暡曚(天色不明朗)\n暮\tmou6\t暮年，暮色，暮气，暮霭，暮气沉沉，暮鼓晨钟，日暮途远，美人迟暮\n暂\tzaam6\t暂时，短暂，暂停，暂定，暂且，暂别\n暯\tmok6\t(1)昏暗；(2)虚无\n暪\tmun5\t昏暗\n暷\tcyun4\t日光移动\n暰\tcung1\t电光\n暲\tzoeng1\t(1)日光上进；(2)同「章」字，意指明亮\n晓\thiu2\t晓得，晓谕，破晓，拂晓，晓以大义\n向\thoeng3\t从前\n晔\tjip6\t韡晔，晔晔；(1)光明的样子；(2)繁盛的样子\n历\tlik6\t历法，日历\n暸\tliu5\t明\n昙\ttaam4\t昙花，昙花一现；(1)云气；(2)云气布于天空\n暾\ttan1\t朝暾，温暾\n曈\ttung4\t曈昽\n曌\tziu3\t武则天为自己名字造的字\n暻\tging2\t(1)光明；(2)同「景」字，「暻」是「景」的俗字\n暺\tdaan6\t明亮\n暽\tleon4\t人名用字\n曋\tcam2\t日所次隅\n曒\tgiu2\t光明\n曛\tfan1\t曛黄，夕曛，曛黑；(1)黄昏时分；(2)夕照；(3)昏暗\n曜\tjiu6\t(1)照耀；(2)日、月及金、木、水、火、土五星总名\n曚\tmung4\t曚昽\n曘\tjyu4\t(1)日色；(2)暗晦\n曞\tlai6\t阳光充沛\n曦\thei1\t晨曦，曦光，曦轩\n曣\tjin3\t晴朗无云\n昽\tlung4\t曚昽，曈昽\n曤\tfok3\t明亮\n曩\tnong5\t曩日，曩者\n晒\tsaai3\t晒干，晒场，暴晒\n曫\tlyun4\t黄昏\n曭\ttong2\t不明\n曮\tjim5\t太阳运行，也指日行的度数\n旦\tdaan2\t花旦\n旦\tdaan3\t旦夕，元旦\n旲\tjing2\t形容大的东西\n旲\ttoi4\t日光\n昄\tbaan2\t昄章\n昄\tbaan6\t大\n易\tji6\t易如反掌，容易，平易近人，轻而易举\n易\tjik6\t易手，易经，易传，周易，贸易，易筋经\n旽\ttan1\t同「暾」字，意指初升的太阳\n旽\tzan3\t旽旽(形容诚貌)\n昳\tjat6\t昳丽\n昳\tdit6\t太阳偏西\n映\tjing2\t映照，辉映\n映\tjoeng2\t掩映\n晇\tkwaa1\t人名用字\n晇\theoi1\t同「旴」字，意谓旭日初升\n景\tging2\t景仰，风景，良辰美景，景物，景致，景气，景象，景遇，景慕，景星凤凰，晚景\n景\tjing2\t同「影」字\n暀\twong5\t(1)光美；(2)有品德；(3)是也\n暀\twong6\t同「旺」字\n暖\thyun1\t同「暄」字\n暖\tnyun5\t暖和，温暖，暖流\n晕\tjan3\t血晕\n晕\twan4\t晕厥，头晕\n晕\twan6\t晕珥，晕气，晕场，日晕，月晕\n暕\tgaan2\t重阴积雨后见晴天\n暕\tlaan4\t阴干\n暠\tgou2\t暠然明白\n暠\thou6\t同「皓」字\n暴\tbou6\t暴力，粗暴，暴殄天物，暴利，暴卒，暴政，暴虐，暴病，暴徒，暴动，暴发，暴乱，暴涨，暴躁，残暴，暴戾恣雎，暴虎冯河，暴饮暴食，暴跳如雷，自暴自弃\n暴\tbuk6\t一暴十寒，暴露\n日\tjat6\t日新月异，日晒雨淋，日理万机，日期，日报，日夜，日记，日历，日落，日薪，日寇，日用品，日光灯，日常生活，日以继夜，日出而作，日久生情\n日\tmik6\t「日jat6」的异读字\n旰\tgon3\t旰食\n旰\thon5\t「旰gon3」的异读字\n旰\thon6\t「旰gon3」的异读字\n旵\tcaam2\t日光照耀，多用于人名\n旵\tcaam3\t「旵caam2」的异读字\n昆\tgwan1\t「昆kwan1」的异读字\n昆\tkwan1\t昆仲，昆虫，后昆\n昂\tngong4\t昂贵，昂藏七尺\n昂\tngong5\t「昂ngong4」的异读字\n昭\tciu1\t昭述，昭昭，昭雪，昭如日月，昭然若揭，昭德塞违，罪恶昭彰\n昭\tziu1\t「昭ciu1」的异读字\n昶\tcoeng3\t「昶cong2」的异读字\n昶\tcong2\t(1)姓氏；(2)日长；(3)舒畅\n昫\theoi2\t温暖\n昫\theoi3\t「昫heoi2」的异读字\n昵\tnik1\t昵称，亲昵\n昵\tnik6\t「昵nik1」的异读字\n星\tseng1\t「星sing1」的异读字\n星\tsing1\t星宿，星火燎原，星罗棋布，行星，恒星，星云，星际，星辰，星系，星河，星夜，星空，星相，星座，斗转星移，歌星，影星，星散，零星\n昝\tzaam2\t「昝zaan2」的异读字\n昝\tzaan2\t姓氏\n昨\tzok3\t「昨zok6」的异读字\n昨\tzok6\t昨日，昨天，昨晚\n晏\taan3\t晏安，晏如，晏食，晏起，晏驾，晏然自若，晏安酖毒\n晏\tngaan3\t「晏aan3」的异读字\n晁\tciu4\t姓氏\n晁\tsiu6\t「晁ciu4」的异读字\n晅\thyun1\t(1)日气；(2)晒干\n晅\thyun2\t「晅hyun1」的异读字\n晟\tsing4\t大晟府；(1)光明；(2)古人名字多用之\n晟\tsing6\t「晟sing4」的异读字\n晜\tgwan1\t后晜，晜仲，晜弟\n晜\tkwan1\t「晜gwan1」的异读字\n晛\tjin5\t日出\n晛\tnin6\t「晛jin5」的异读字\n晢\tzai3\t昭晢，明星晢晢(《诗经•陈风•东门之杨》)明亮\n晢\tzit3\t「晢zai3」的异读字\n晴\tceng4\t「晴cing4」的异读字\n晴\tcing4\t天晴，晴朗，晴天霹雳，晴川，晴和，晴空，晴虹，放晴，晴霁，晴空万里，晴云秋月\n晼\twun2\t「晼jyun2」的异读字\n晼\tjyun2\t晼晚\n晰\tcik1\t「晰sik1」的异读字\n晰\tsik1\t明晰，清晰，清晰可见，条分缕晰\n晹\tjik6\t「晹sik1」的异读字\n晹\tsik1\t(1)白云蔽日，太阳忽隐忽现；(2)太阳光全被遮挡\n暗\tam3\t黑暗，暗示，明争暗斗，光暗，暗渡陈仓，暗箭\n暗\tngam3\t「暗am3」的异读字\n暇\thaa4\t「暇haa6」的异读字\n暇\thaa6\t暇日，暇逸，不暇，休暇，闲暇，无暇，余暇，目不暇给，应接不暇\n暍\tjit3\t「暍hot3」的异读字\n暍\thot3\t炎暍，暍死\n暨\tgei6\t「暨kei3」的异读字\n暨\tkei3\t(1)与及；(2)至\n暵\thon2\t「暵hon3」的异读字\n暵\thon3\t晒干\n暱\tnik1\t暱称，暱爱，亲暱亲近\n暱\tnik6\t「暱nik1」的异读字\n暩\tgwai3\t「暩zai3」的异读字\n暩\tzai3\t日光\n曀\tai3\t道曀不行(晋书˙卷十九˙礼志上)；(1)天色阴暗；(2)暗晦不明\n曀\tngai3\t「曀ai3」的异读字\n暹\tcim1\t「暹cim3」的异读字\n暹\tcim3\t暹罗\n𪰶\tfai3\t「𪰶fei1」的异读字\n𪰶\tfei1\t曝晒、晒干\n曙\tcyu5\t曙光，曙色\n曙\tsyu5\t「曙cyu5」的异读字\n曙\tsyu6\t「曙cyu5」的异读字\n暧\toi2\t「暧oi3」的异读字\n暧\toi3\t暧昧，堙暧(埋藏隐晦)昏暗、不明\n暧\tngoi3\t「暧oi3」的异读字\n曝\tbou6\t「曝buk6」的异读字\n曝\tbuk6\t曝光，曝晒，曝露\n旷\tkong3\t「旷kwong3」的异读字\n旷\tkwong3\t旷野，空旷，心旷神怡，旷日长久，旷世奇才，旷古未闻，旷达，旷职，旷课，鳏旷\n晻\tam2\t晻蔼\n晻\tam3\t同「暗」字\n晻\tngam2\t「晻am2」的异读字\n晻\tngam3\t「晻am3」的异读字\n晻\tjim2\t晻晻(形容阴暗无光)\n暝\tming4\t暝色，暝茫，暝烟\n暝\tming5\t(1)「暝ming4」的异读字；(2)「暝ming6」的异读字\n暝\tming6\t黑夜\n曲\tkuk1\t曲折，曲线，曲调，曲解，曲高和寡，曲终人散，曲谱，盘曲，歌曲\n书\tsyu1\t书记，书法，书籍，书包，书店，书写，书院，书本\n曹\tcou4\t尔曹，阴曹\n替\ttai3\t替代，替身，替换，兴替，交替\n最\tzeoi3\t最近，最后，最佳，最好，最少，最后通牒\n朄\tjan5\t小鼓\n朅\tkit3\t朅来，朅休\n更\tgaang1\t更鼓，更漏，看更，打更，报更，巡更，值更\n更\tgang1\t更改，更迭，更新，更换，更动，更替，变更\n更\tgang3\t更加，更且，更甚\n曼\tmaan4\t曼胡，戎曼\n曼\tmaan6\t轻歌曼舞，妙曼\n曼\tmun5\t曼漶\n曾\tcang4\t曾经，不曾\n曾\tzang1\t姓氏\n曰\tjoek6\t「曰jyut6」的异读字，口语读音\n曰\tjyut6\t子曰诗云\n曳\tjai5\t「曳jai6」的异读字\n曳\tjai6\t曳白，曳影，曳裾王门，摇曳，弃甲曳兵\n曷\thot3\t曷鼻；(1)蝎虫，桑树上的寄生虫；(2)怎么；(3)何时。古时为「何」的通假字\n曷\thot6\t「曷hot3」的异读字\n会\tkui2\t会计\n会\tkui3\t「会kui2」的异读字\n会\twui3\t「会wui5」的异读字\n会\twui5\t懂得\n会\twui6\t会考，会社，会面，会客，会诊，会意，会盟，会聚，会战，会馆，机会，体会\n月\tjyut6\t月薪，月刊，月光，月亮，月桂，明月\n服\tfuk6\t服务，衣服，贴贴服服，服从，服饰，服装，服役，服刑，服用，服气，服侍，服毒，服丧，制服，便服，报服，信服，水土不服，愿赌服输，心服口服\n朋\tpang4\t朋友，朋党，朋比为奸，朋辈，良朋益友\n朏\tfei2\t朏明，朏朒，月朏星堕\n朐\tkeoi4\t同「軥」字，意指车轭\n朗\tlong5\t朗读，朗诵，明朗\n朒\tnuk6\t欠缺\n朔\tsok3\t朔日，朔方\n朕\tzam6\t朕兆，朕命，朕躬\n朠\tjing1\t月色\n朡\tzung1\t(1)狂病；(2)以刑具敛足；(3)同「艐」字\n朣\ttung4\t朣朦\n朦\tmung4\t朦胧，朣朦\n胧\tlung4\t朦胧，胧光\n有\tjau5\t有心，有为，有限，有关\n有\tjau6\t同「又」字\n朊\tgun2\t胃\n朊\tjyun2\t(1)人的阴部；(2)蛋白质\n朝\tciu4\t朝廷，朝政，朝贡，朝顶，朝野，朝圣，朝纲，朝觐\n朝\tziu1\t朝夕，朝气，朝阳，朝露，朝三暮四，朝令夕改，朝思暮想，朝秦暮楚，朝乾夕惕，今朝\n朝\tzyu1\t朝那\n期\tgei1\t期月，期年，期颐\n期\tkei4\t期刊，期求，期限，期盼，期待，期许，期望，期票，期货，期期艾艾\n朓\ttiu2\t「朓tiu3」的异读字\n朓\ttiu3\t农历月底月亮在西方出现\n朓\ttiu5\t「朓tiu3」的异读字\n望\tmong4\t「望mong6」的异读字\n望\tmong6\t望见，期望，观望，望而却步，望尘莫及\n朢\tmong4\t「朢mong6」的异读字\n朢\tmong6\t同「望」字\n朘\tzeoi1\t男孩的生殖器\n朘\tzeon1\t「朘syun1」的异读字\n朘\tzeon3\t「朘syun1」的异读字\n朘\tsyun1\t朘削，日削月朘\n朘\tzyun1\t「朘syun1」的异读字\n木\tmuk6\t树木，木材，木头，草木\n本\tbun2\t本人，本来，本土，本地，本钱，本份，本分\n未\tmei6\t未来，未必，未知\n末\tmut6\t末代，末端，末了，末路，末日\n术\tseot6\t苍术，白术\n札\tzaat3\t札记，信札\n朿\tci3\t木芒，树木枝叶上最尖锐的部位\n朻\tgau1\t同「樛」字，意指树木向下弯曲\n朳\tpaa4\t无齿耙\n朼\tbei2\t古代祭祀中使用的大木匙\n材\tcoi4\t材料，材质，材略，木材\n束\tcuk1\t束缚，约束，束花，束手无策，束手就擒，束手，束装，束紧，束之高阁，束成，束带，束腹，束发\n村\tcyun1\t村民，村庄，乡村\n杕\tdai6\t毁舟为杕(比喻愚蠢行为，参见「毁钟为铎」)；(1)独生之树；(2)船舵\n杜\tdou6\t杜绝，杜撰，杜弊，杜康(酒之比喻)杜绝后患\n杆\tgon1\t旗杆，栏杆\n杏\thang6\t杏坛，杏仁，杏林，杏花，杏眼，杏树\n李\tlei5\t李树，桃李满门，李白，李商隐\n杗\tmong4\t屋的大梁\n杌\tngat6\t杌陧，杌子\n杇\twu1\t涂墙用的瓦刀\n杖\tzoeng6\t手杖，拐杖\n杋\tfaan4\t树木名，其树皮俗称为水桴\n杍\tzi2\t同「梓」字\n板\tbaan2\t板凳，板车，板材，板起，板儿，板球，板荡，板子，板画，板斧，板本\n杯\tbui1\t杯葛，茶杯，杯弓蛇影，杯中物，倾杯，杯水车薪，杯盘狼藉\n杶\tceon1\t木名\n杼\tcyu5\t杼轴，机杼，投杼\n东\tdung1\t东西，东道主，东瀛\n杹\tfaa3\t树木名，即木芙蓉\n枌\tfan4\t木名\n枋\tfong1\t枋寮，枋山，枋子\n枎\tfu4\t枎栘(植物名，即唐棣)\n枅\tgai1\t柱上方木\n杲\tgou2\t(1)姓氏；(2)明亮\n杭\thong4\t杭州，一苇杭之\n枍\tjai6\t枍栺(树木名，即檍树/汉代宫殿名)\n枘\tjeoi6\t圆凿方枘\n林\tlam4\t林园，林口，林地，林立，林木，林森，林务，林班，林边，林业，林场，林间，林荫大道，林产，林彪，林荫，林泉，林野，林下，林壑，林木森森，林表\n杪\tmiu5\t岁杪，树杪，月杪\n枚\tmui4\t枚举\n杷\tpaa4\t枇杷\n枇\tpei4\t枇杷\n杸\tsyu4\t同「殳」字，古代兵器\n枟\ttaan4\t同「檀」字\n枉\twong2\t枉法，枉然，枉费，枉死，枉己正人\n枑\twu6\t梐枑\n杽\tcau2\t同「杻」字\n枆\tmou4\t冬天成熟的桃子\n枔\tcam4\t木叶\n柉\tfaan4\t树木名称，树皮可以制绳\n枃\tzeon3\t用来梳理丝线的工具\n杺\tsam1\t(1)树木名称，该品种树心呈黄色；(2)车钩心木\n柀\tbei2\t(1)树木名，即榧；(2)离析；(3)一部份\n柲\tbei3\t戈戟等武器的柄\n柈\tbun6\t方言用字，大块的木柴\n柒\tcat1\t同「七」字\n柱\tcyu5\t柱子，柱石，支柱\n柢\tdai2\t根柢\n枯\tfu1\t枯竭，枯萎，枯死，枯燥，枯树\n枷\tgaa1\t枷锁\n架\tgaa3\t架构，书架，摆架子，架设，架势，架式，架上，架空，架起，架屋，架住，架走，架开，架桥，招架，打架，吵架\n柬\tgaan2\t柬帖，请柬\n柩\tgau6\t棺柩，灵柩装著尸体的棺木\n柧\tgu1\t棱角，也指有棱之木\n拐\tgwaai2\t拐杖，拐棍\n枵\thiu1\t枵腹，枵然，枵肠辘辘空腹\n柔\tjau4\t柔和，柔软，柔弱\n染\tjim5\t染料，染色，染缸，纺染\n柳\tlau5\t柳营(军营)，柳丁，柳树，柳叶，柳州，柳枝，柳絮，寻花问柳，霸陵折柳\n柃\tling4\t(1)树木名；(2)栏杆的横木\n某\tmau5\t某日，某人，某甲，某某，某事，某年，某月\n柅\tnei5\t(1)置于车下阻止车子行进的木头；(2)阻止、遏止\n柰\tnoi6\t柰子，柰何；(1)即苹果；(2)同「奈」字\n枰\tping4\t棋盘\n柸\tpui1\t柸治(郁郁不乐)\n柝\ttok3\t古打更具\n柘\tze3\t柘树\n枺\tmut6\t(1)树木名称；(2)柱类\n桏\tkung4\t树木名称\n柦\tdaan6\t一种好像茶几而无脚的木器\n柛\tsan1\t树木自毙\n柋\tdoi6\t架蚕箔的立柱\n柆\tlaap6\t(1)折木；(2)栅栏\n柌\tci4\t镰刀的把柄\n柫\tfat1\t一种名为连枷的打谷用具\n柼\tjiu2\t抭拽物\n格\tgaak3\t格外，格局，格调，格式，格子，格言，格斗\n根\tgan1\t根据，树根，根深蒂固，根本，根苗，根柢，根基，根究，根茎，根绝，根器，根源，根除，病根，命根，劣根性，平方根，盘根错节，老树盘根，六根清净，连根拔起，落地生根，落叶归根\n桀\tgit6\t桀骜不驯\n栱\tgung2\t枓栱\n桂\tgwai3\t桂冠，桂花，月桂，丹桂，桂馥兰芳\n栲\thaau2\t栲栳，栲树\n栩\theoi2\t栩栩如生\n栘\tji4\t枎栘\n桋\tji4\t树木名\n栭\tji4\t柱上承托大梁的方木\n栔\tkai3\t同「契」字\n栵\tlai6\t木名\n栗\tleot6\t栗子，栗色\n栳\tlou5\t栲栳\n栓\tsaan1\t门栓，栓剂，栓塞，音栓\n梳\tso1\t梳洗，梳理，梳妆，梳子，梳头\n桑\tsong1\t桑树，沧海桑田，指桑骂槐，桑梓，桑叶，农桑，暮景桑榆，历尽沧桑\n桃\ttou4\t桃树，扁桃腺，投桃报李，蟠桃，桃花源，胡桃夹，桃园结义，桃李满门，桃红柳绿，桃色新闻，艳如桃李，命带桃花，断袖分桃\n桐\ttung4\t桐油，梧桐，桐棺三寸\n桓\twun4\t盘桓，桓桓(威武貌)，桓表，乌桓(古东胡民族一)姓氏\n栚\tzam6\t(1)搁架蚕箔的横木；(2)树木名\n栴\tzin1\t栴檀\n栫\tzin3\t用迆木堵塞\n栽\tzoi1\t栽培，栽种，栽花，盆栽\n株\tzyu1\t株连，守株待兔\n栥\tzi1\t欂栌\n栜\tsaak3\t桋木的别称\n栮\tji5\t木耳\n桍\tfu1\t(1)树木名称；(2)空空如也\n栠\tjam5\t柔弱的样子\n栨\tci3\t楣栨(门窗上下框的横木)\n栦\tcau4\t木名\n梛\tno4\t树木名称\n梐\tbai6\t梐梱，梐枑木头制成的障碍物\n梆\tbong1\t梆子，梆笛，梆鼓，木梆\n桮\tbui1\t桮棬，桮杓同「杯」字\n桲\tbut6\t木名\n桼\tcat1\t同「漆」字\n梪\tdau6\t(1)古代盛食品的器皿；(2)古代量度单位\n梡\tfun2\t陈列祭品的礼器，形如几案\n桱\tging3\t一种似杉树的乔木名称\n桷\tgok3\t桁桷方形的屋椽\n梏\tguk1\t桎梏\n械\thaai6\t械弹，械斗\n弃\thei3\t弃置，弃权，抛弃，遗弃，离弃，见弃，弃市(古执行死刑后，将尸体弃置街头示众)\n枭\thiu1\t枭雄，私枭，毒枭，枭首\n桵\tjeoi4\t白桵树名，又作「棫」\n梂\tkau4\t(1)栎树的果实；(2)凿子柄；(3)器物的底座\n梱\tkwan2\t梐梱(官署用以遮挡平民的屏障)门坎、门槛\n梨\tlei4\t梨园，梨树，凤梨，梨花大鼓，梨花带雨\n梩\tlei4\t锹臿一类的起土器具\n梠\tleoi5\t楣树\n梁\tloeng4\t梁柱，鼻梁，悬梁刺股，梁上君子，桥梁，栋梁\n桹\tlong4\t桹桹驱鱼用的长木棒\n梅\tmui4\t梅花，梅子，梅雨季节，梅红，梅毒，梅开二度，梅香，寒梅\n梢\tsaau1\t梢头，树梢\n桭\tsan4\t屋檐\n梭\tso1\t梭巡，穿梭，日月如梭\n桫\tso1\t桫椤\n桯\tting1\t桯子，桯凳，门桯\n梃\tting5\t梃猪\n桶\ttung2\t桶子，桶盖\n栀\tzi1\t栀子植物名，俗称鸡蛋花，可入药，亦可做染料\n梓\tzi2\t梓里，付梓，桑梓，梓器\n𪱷\tbui3\t𪱷多(贝叶树)\n梇\tlung6\t梇栋(古县名)\n梋\thyun1\t(1)碗类器具；(2)制作规的模子\n梬\tjing5\t梬枣(树木名称，即黑枣树)\n梤\tfan4\t香木\n梌\ttou4\t梌木(树木名，即楸木)\n桸\thei1\t树木名称，其汁可供饮用\n桽\twan2\t隐也\n梒\tham4\t梒桃(树木名，即樱桃)\n梑\tdik6\t树木名称\n桻\tfung1\t树梢\n桾\tgwan1\t桾櫏(树木名，即黑枣树)\n梉\tzong1\t树木名称\n枨\tcaang4\t枨拨，枨触\n梴\tcin1\t林木长貌\n椊\tcyut3\t柱头枘\n棣\tdai6\t唐棣，棠棣，贤棣，万物棣通\n椗\tding3\t同「碇」字\n椓\tdoek3\t(1)敲打；(2)宫刑\n棻\tfan1\t桑麻铺棻；(1)芬芳；(2)香木；(3)茂盛；(4)现多只用作名字\n棔\tfan1\t树木名\n棐\tfei2\t辅助\n椐\tgeoi1\t木名\n椇\tgeoi2\t枳椇\n椈\tguk1\t柏树\n棍\tgwan3\t棍棒，棍子，棍球，恶棍\n椌\thong1\t古乐器\n棬\thyun1\t曲木制成的饭器\n棜\tjyu3\t古代祭祀时用来置放酒杯的承盘\n棨\tkai2\t棨信\n棋\tkei4\t棋盘，棋子，棋士，棋局，棋艺，棋社，棋王，棋逢敌手\n棱\tling4\t棱角，模棱两可\n椋\tloeng4\t椋鸟\n梾\tloi4\t一种落叶乔木\n棉\tmin4\t棉花，棉袄，棉被，棉纸，棉纺，棉布，棉纱，棉质，棉絮，棉田，棉织品，棉条\n棑\tpaai4\t木棑筏子\n棚\tpaang4\t棚架，棚子，竹棚\n棒\tpaang5\t棒球，棒坛，棒子，棒槌，棒打，棒委会，棒棒糖\n椪\tpung3\t椪柑(柑的一种)\n森\tsam1\t森林，森严，森林区\n棠\ttong4\t海棠，秋海棠，棠棣竞秀，德懋棠荫\n棫\twik6\t棫朴(《诗经•大雅》篇名；亦指贤才众多)树木名称；《尔雅˙释木》：「棫，白桵」\n棸\tzau1\t姓氏\n椥\tzi1\t槟椥(越南地名)\n植\tzik6\t植物，植树，植物人，植物园，植物油，植物区，植树节\n椄\tzip3\t椄槢\n椒\tziu1\t辣椒，花椒\n枣\tzou2\t枣子，红枣，枣泥，蜜枣，囫囵吞枣\n棕\tzung1\t棕色，棕榈\n棳\tzyut3\t梁上短柱\n楰\tjyu4\t树木名，即鼠梓\n棌\tcoi3\t柞木，即麻栎\n棪\tjim5\t树木名\n棈\tsin3\t树木名称\n棝\tgu3\t棝斗(一种射鼠器)\n棞\twan4\t树木名称\n棆\tleon4\t树木名，即大叶钓樟\n椕\tban1\t木分也\n棇\tcung1\t尖头的担挑\n棎\tsim4\t水果名称，似柰而带酸味\n椔\tzi1\t直立不倒的枯木\n楅\tbik1\t楅衡\n楸\tcau1\t楸枰，刺楸，弈楸，楸树\n椿\tceon1\t椿树姓氏\n楚\tco2\t楚河汉界，痛楚，衣冠楚楚，楚辞，清楚，楚楚可怜，楚楚动人，朝秦暮楚，楚馆秦楼\n椴\tdyun6\t椴树\n枫\tfung1\t枫树，枫叶\n椷\tgaam1\t(1)信封；(2)木箧\n极\tgik6\t极端，太极，登峰造极，极度，极限，极权，极刑，极点，极致，极品，北极光\n楗\tgin6\t(1)关门的木闩；(2)堵塞河堤决口所用的竹木石等材料；(3)马疲累跛行的样子\n楦\thyun3\t同「楥」字\n楢\tjau4\t一种落叶乔木\n楺\tjau4\t屈木\n椰\tje4\t椰子，椰油\n椸\tji4\t椸枷，楎椸衣架\n楹\tjing4\t楹联，门楹，丹楹刻桷柱子\n业\tjip6\t业务，事业，雄图霸业，业余，业主，业绩，业已，业师，业障，业报，业务员，营业部，学业，农业，专业，职业，不务正业，兢兢业业\n楉\tjoek6\t楉榴(石榴)\n杨\tjoeng4\t杨柳，白杨，百步穿杨，杨梅，杨桃，垂杨，绿杨垂柳\n榆\tjyu4\t榆树\n楀\tjyu5\t(1)树木名；(2)姓氏\n楝\tlin6\t木名\n榔\tlong4\t榔头，槟榔，榔榆，桄榔\n楙\tmau6\t同「茂」字\n楣\tmei4\t门框上边的横木\n楠\tnaam4\t楠梓，楠木\n楩\tpin4\t楩楠\n楄\tpin4\t(1)方木；(2)扁额；(3)一种古书上的树木\n楈\tseoi1\t楈枒\n楔\tsit3\t楔子，绰楔，楔形文字\n楟\tting4\t树木名，即棠梨\n楜\twu4\t楜椒\n椳\twui1\t门枢\n楱\tcau3\t一种橘子之类的果树\n桢\tzing1\t(1)古代筑墙时立在两端的木柱；(2)支柱、主干；(3)植物名\n楫\tzip3\t舟楫(船只)，击楫中流划船用的桨\n楶\tzit3\t柱上支持横梁的方木\n椻\tjin2\t堆积木头以作为障碍物\n楋\tlaat6\t树木名称\n楒\tsi1\t相楒(树木名称，即相思树)\n棩\tjyun1\t弯曲的木\n楌\tngaan4\t树木名称\n楁\that6\t鞍楁(马鞍)衣架\n槎\tcaa4\t槎桎，槎枒，浮槎，乘槎\n槌\tceoi4\t槌球，棒槌\n榧\tfei2\t香榧\n榥\tfong2\t(1)窗棂；(2)量词\n榑\tfu4\t榑桑(传说中的神木，生长于日出的地方)\n榎\tgaa2\t榎草，榎楚楸树别名\n榤\tgit6\t鸡栖息的横木\n槔\tgou1\t桔槔\n槁\tgou2\t槁木，枯槁\n榖\tguk1\t榖树，榖物，五榖，不榖(古代君主自称)\n榾\tgwat1\t榾柮\n榣\tjiu4\t(1)树动；(2)大树\n榕\tjung4\t榕树\n榬\tjyun4\t(1)古代络丝的工具；(2)古时悬挂钟磬的架子；(3)姓氏\n榴\tlau4\t石榴，榴梿，手榴弹\n榠\tming4\t榠樝(一种落叶桥木)\n槃\tpun4\t槃才，涅槃\n榫\tseon2\t榫头\n榯\tsi4\t木直坚貌\n榍\tsit3\t榍石(矿物的一种)\n槊\tsok3\t长矛\n槂\tsan1\t公槂(树木名，即银杏)\n榻\ttaap3\t下榻，卧榻，病榻狭长的矮床\n槄\ttou1\t树木名\n槐\twaai4\t槐树，指桑骂槐\n荣\twing4\t荣誉，荣获，荣华，荣耀，荣幸，荣华富贵，光荣\n榨\tzaa3\t榨取，压榨\n榭\tze6\t水榭，歌台舞榭\n榛\tzeon1\t榛莽\n榰\tzi1\t基石、柱脚\n榡\tsou3\t同「素」字，指器物未加装饰\n榵\tjung4\t一种似檀的树木\n槆\tseon1\t同「橁」字，杶木的别名\n榞\tjyun4\t树木名称，该树的果实外形似甘蕉\n榩\tkin4\t(1)砍木的砧櫍；(2)仓廪\n槏\tlim4\t同「廉」字\n榹\tsi1\t榹桃(又称山桃或毛桃)\n榳\tting4\t用以形容长木的字眼\n槉\tzat6\t屋枅，梁柱间的承重结构\n榶\ttong4\t(1)树木名称；(2)木碗\n榓\tmat6\t一种似槐树的香木\n樄\tcan4\t樄椽(经营驰逐，也作陈椽)\n榚\tjiu5\t木长的样子\n标\tbiu1\t目标，标题\n槽\tcou4\t马槽，河槽\n樕\tcuk1\t朴樕\n槿\tgan2\t木槿，朱槿\n椁\tgwok3\t棺椁\n槲\thuk6\t槲叶，槲树，槲樕\n槱\tjau5\t聚集\n槷\tjit6\t同「臬」字\n样\tjoeng6\t样子，样本，样貌，样式，样板，模样，榜样\n槻\tkwai1\t乔木名\n椝\tkwai1\t同「规」字\n楼\tlau4\t楼梯，楼房，楼宇，阁楼\n樏\tleoi4\t登山的轿\n模\tmou4\t模式，模范，模样，模拟，模糊，模型，模板，模印\n樠\tmun4\t树木名称\n槸\tngai6\t树枝相切磨\n樖\tpo1\t粤语用字\n樧\tsaat3\t茱萸\n枢\tsyu1\t枢纽，中枢\n樗\tsyu1\t樗栎庸材，樗朽之材\n樘\ttong4\t门樘\n槬\twaa6\t同「摦」字\n樝\tzaa1\t山樝(果名，又写作山柤)\n槢\tzaap6\t(1)坚木；(2)楔，指接合之木\n樟\tzoeng1\t樟树，樟脑，樟木\n桨\tzoeng2\t划桨，螺旋桨\n桩\tzong1\t木桩，打桩\n樀\tdik1\t樀樀(叩门的声音)\n梿\tlin4\t榴梿，梿枷\n樥\tpung4\t梁上的隔板\n槫\ttyun4\t(1)屋栋；(2)结聚团圆\n樉\tsong2\t(1)木名；(2)树木茂盛地生长\n椢\tkui3\t(1)器物的内腔；(2)古时妇女穿带的头饰，又称为帼\n樦\tcyu5\t琴瑟上系弦的旋扭，用以调音\n樇\tsau1\t树木名称。一说同「修」字，意谓长木\n槦\tjung4\t(1)榕树的别名；(2)箭杆；(3)兵器架\n樈\tking4\t凿子的手柄\n槴\twu6\t(1)书匣、书函；(2)捕鱼工具\n橕\tcaang1\t(1)斜木柱；(2)支持\n橁\tceon1\t树木名，即香椿\n樵\tciu4\t樵夫，渔樵，买妻耻樵，樵牧，薪樵，樵苏不爨\n机\tgei1\t机心，飞机，机不可失，机构，机关，机会，机械，机智，机率，机密，机要，机警，先机，动机，机缘，机灵，机遇\n樻\tgwai6\t木名\n橤\tjeoi5\t(1)形容下垂；(2)同「蕊」字\n樲\tji6\t樲棘\n樾\tjyut6\t树阴\n桥\tkiu4\t桥梁，独木桥，过桥抽板，桥头堡，桥墩，桥身，奈何桥，桥牌，桥艺，陈桥兵变\n橉\tleon6\t(1)树木名；(2)门槛\n橆\tmou4\t同「无」字\n樨\tsai1\t木樨\n橚\tsuk1\t木名\n树\tsyu6\t树林，树木，树立，树干，树敌，树梢\n橝\ttaam4\t橉木\n橐\ttok3\t橐驼(骆驼别称)，囊橐，橐笔(喻笔墨生涯)；(1)袋子；(2)用袋子装藏\n橞\twai6\t木名\n橧\tzang1\t橧巢\n樽\tzeon1\t樽酒论文，移樽就教\n樼\tzeon1\t同「榛」字\n樴\tzik1\t桩子\n橡\tzoeng6\t橡胶，橡皮艇，橡皮图章，橡树\n檖\tseoi6\t一种果树，果实似梨而较小，可食\n橔\tdeon1\t枯\n橖\ttong4\t车橖(车木)\n橎\tfaan2\t树木名称\n橯\tlou6\t农具名称\n橍\tjeon6\t树木名称\n橶\tgik1\t拘持\n檨\tce1\t果木名，即芒果\n柽\tcing1\t柽柏，柽柳\n檚\tco2\t榎檚(古代对学生施体罚的鞭杖)\n樯\tcoeng4\t樯橹，桅樯，风樯阵马，樯帆，连樯船的桅杆\n槚\tgaa2\t楸树或茶树\n检\tgim2\t检定，检查，检验，检讨\n橿\tgoeng1\t(1)锄柄；(2)树木名\n檕\thai6\t辘轳上横木用以系汲水之绳索者\n檄\that6\t檄文，檄召，羽檄，传檄征召或声讨的公文\n檃\tjan2\t檃栝\n檍\tjik1\t木名\n檎\tkam4\t蜜林檎\n檠\tking4\t(1)灯架；(2)矫正弓弩的器具\n檩\tlam5\t脊檩\n檥\tngai5\t同「舣」字\n檀\ttaan4\t檀香，紫檀\n檛\tzaa1\t修檛\n檇\tzeoi3\t以棒捣物\n栉\tzit3\t栉风沐雨，鳞次栉比\n檦\tbiu2\t(1)表一类建筑物；(2)柱类\n檌\tzeoi6\t倒损\n檓\twai2\t大椒的别名\n檤\tdou6\t树木名称\n橩\tking4\t博子、骰子\n櫆\tfui1\t北斗星\n柜\tgwai6\t柜台，柜台，柜子\n檽\tnau6\t树木名\n台\ttoi4\t台面，台灯，柜台\n梼\ttou4\t梼杌\n檴\twok6\t古代树木名\n櫂\tzaau6\t同「棹」字\n𪲎\tzai1\t树木名称\n檶\thim1\t同「锨」字，一种排水的装置\n𣘴\tngan4\t银杏的别名，又名白果\n檺\tgou2\t树木名称\n檹\tji1\t檹施(形容树木茂盛或枝条修长)\n櫇\tpo4\t果名用字\n椟\tduk6\t买椟还珠，韫椟；(1)木制的盒子；(2)棺材；(3)封藏\n𪲮\tfai3\t果木名\n櫜\tgou1\t(1)藏兵器之用具；(2)收藏\n櫌\tjau1\t用来铲平田地或击碎石块的农具\n橼\tjyun4\t香橼，枸橼\n櫐\tleoi5\t蔓草名\n橹\tlou5\t橹桨，橹棹，摇橹\n櫋\tmin4\t屋檐口椽端的横板，即楣\n櫍\tzat1\t同「锧」字\n橥\tzyu1\t揭橥\n槠\tzyu1\t一种常绿乔木\n櫙\tau1\t(1)刺榆树的别名；(2)树木枯死\n櫏\tcin1\t桾櫏(黑枣的别名)\n榇\tcan3\t灵榇，爇榇，舆榇棺材\n栌\tlou4\t黄栌，欂栌\n栊\tlung4\t(1)窗户；(2)养兽的笼槛\n櫮\tngok6\t(1)花盛貌；(2)同「萼」字\n櫹\tsiu1\t櫹椮(草木茂盛/花叶已落，茎独立貌)\n櫰\twaai4\t同「槐」字\n櫯\tsou1\t櫯枋(树木名称，可制染料)\n欃\tcaam4\t欃枪\n榉\tgeoi2\t山毛榉\n樱\tjing1\t樱花，樱唇，樱桃小嘴\n栏\tlaan4\t栏干，勾栏，木栏，花栏，牛栏\n棂\tling4\t旧式房屋的窗\n欀\tsoeng1\t(1)树木名称；(2)木器里衬；(3)支撑屋架的部件\n权\tkyun4\t权利，权力，特权，兵权\n欋\tkeoi4\t四齿耙\n𪴙\tcyun4\t同「攒」字\n𪲔\tlai6\t(1)屋梁；(2)树木名；(3)小船\n椤\tlo4\t桫椤\n栾\tlyun4\t栾树，团栾(团聚)；(1)植物名；(2)柱子上用以承载横梁重量的弓形曲木；(3)钟口的两角\n𣗋\tdong2\t(1)果木名；(2)木桶\n榄\tlaam5\t橄榄\n欙\tleoi4\t古代登山所乘坐的轿\n欘\tzuk1\t(1)古代锄头一类的农具；(2)斧、锄等器具的把手；(3)角度单位，指六十七度三十分的角度；(4)树枝上曲\n欗\tlaan4\t树木名称\n欚\tlai5\t(1)船只的通称；(2)捕鸟兽的网\n朾\tcaang4\t朾螘\n朾\tting1\t虚朾\n朹\tgwai2\t「簋」的古字\n朹\tkau4\t朹子\n朱\tsyu4\t朱提(古代四川地名)\n朱\tzyu1\t朱丹，朱阁，丹朱，朱唇，朱砂\n杈\tcaa1\t挑柴草等之农具\n杈\tcaa3\t杈子，打杈，树杈\n杠\tgong1\t杠梁，杠毂\n杠\tgong3\t台杠\n松\tcung4\t松树，松鼠\n松\tsung1\t同「忪」字\n枓\tdau2\t枓栱\n枓\tzyu2\t勺子，舀水用具\n极\tkap1\t放在驴背上用以载物的木架\n极\tgik6\t「极」的简体字\n枝\tkei4\t枝指\n枝\tzi1\t枝叶，荔枝，花枝招展，枝干，枝桠，树枝，折枝，接枝，比翼连枝，同气连枝，金枝玉叶，节外生枝，细枝末节，枝叶扶疏\n枕\tzam2\t枕巾，枕头，枕藉，枕木，枕席，枕中鸿宝\n枕\tzam3\t枕戈待旦，枕石漱流，曲肱而枕\n枙\tak1\t(1)驾车时套在牲口颈上的器具；(2)驾车\n枙\tngo4\t科枙(木节，也写作科厄)\n查\tcaa4\t查询，检查，明查暗访，查问，查考，查收，查究，查抄，查封，查看，查禁，查点，查验，查获，调查，侦查，追查，革职查办\n查\tzaa1\t(1)姓氏；(2)同「楂」字\n柎\tfu1\t花萼\n柎\tfu2\t(1)弓把中；(2)据\n柑\tgam1\t柑桔，柑橘\n柑\tkim4\t柑口不言\n枸\tgau1\t枸橘\n枸\tgau2\t枸杞\n枸\tgeoi2\t枸橼\n柜\tgeoi2\t柜柳\n柙\tgaap3\t香木名\n柙\thaap6\t剑柙，出柙之虎\n柂\tji4\t同「杝」字\n柂\tto4\t(1)同「舵」字；(2)导、引\n柍\tjoeng1\t柍枨\n柍\tjoeng2\t树木名\n柤\tzaa1\t山柤(果名，即山樝)\n柤\tzo2\t通「俎」字\n枮\tzam1\t同「椹」字，意谓「砧板」\n枮\tcim1\t树木名称\n柪\taau1\t曲木\n柪\taau3\t木材屈曲纠结\n栟\tban1\t栟茶(江苏地名)\n栟\tbing1\t栟柑，栟榈(即棕榈)\n柴\tcaai4\t柴扉，柴薪，火柴，瘦骨如柴\n柴\tzaai6\t编木维护四周；篱障\n校\tgaau3\t校正，校改，校订，校书，校勘，校准，校实，校对，校阅，参校，校尉，雠校\n校\thaau6\t校友，校刊，校舍，校花，校规，学校\n核\that6\t核子，核心，核定，核实，核酸，核算，核武器，考核，审核\n核\twat6\t果核，枣核，苹果核\n栺\tngai6\t枍栺\n栺\tzi1\t栺栭\n栺\tzi2\t木名\n栯\tjau5\t栯木(树木名称)\n栯\tjuk1\t栯李(果树名称，又名郁李)\n桴\tfau4\t同「枹」字\n桴\tfu1\t桴鼓(战鼓)，乘桴小筏子\n梧\tng4\t梧桐\n梧\tng6\t魁梧\n梀\tjan3\t束缚\n梀\tsuk1\t短椽\n梯\ttai1\t楼梯，梯田，梯形\n梯\ttai2\t梯己(同体己)\n棁\tjeoi6\t同「锐」字\n棁\ttyut3\t杖\n棁\tzyut3\t梁上的短柱\n梊\tdai3\t掠取\n梊\tdai6\t两指急持\n椑\tbei1\t椑柿\n椑\tpei4\t椑榼\n棓\tpaang5\t棍棓，棓子\n棓\tpau2\t自高而下所用蹑板\n棓\tbui6\t棓酸\n棓\tpui4\t姓氏\n棓\tpui5\t五棓子\n椎\tceoi4\t(1)同「槌」字；(2)同「捶」字\n椎\tzeoi1\t椎骨，脊椎，颈椎，胸椎，椎间盘\n棼\tfan1\t棼棼\n棼\tfan4\t治丝益棼\n棺\tgun1\t棺材，盖棺定论\n棺\tgun3\t以棺殓尸\n椅\tji1\t树木名，又叫山桐子\n椅\tji2\t椅子，交椅，轮椅，椅披，桌椅\n棯\tnim1\t岗棯\n棯\tnim6\t木名\n棯\tnin2\t棯枣\n棷\tsau2\t通「薮」\n棷\tzau1\t木柴\n棹\tzaau6\t棹歌，买棹\n棹\tzoek3\t桌子，桌布，桌面，书桌，饭桌\n棴\tfuk6\t一种生长于昆仑山的树木\n棴\tsuk1\t棴常(树木名称)\n椆\tcau4\t椆木(寒而不凋的树木)，椆水(古河流名)\n椆\tzau3\t木椆(船篙木)\n椆\tdiu1\t椆苕(树木名称)\n楂\tcaa4\t盘楂\n楂\tzaa1\t山楂\n楪\tdip6\t(1)床板；(2)同「碟」字\n楪\tjip6\t窗牖\n楎\tfai1\t悬挂衣服的架子\n楎\twan4\t六叉犁\n楛\tfu2\t楛僈，楛耕伤稼\n楛\twu6\t树名\n椵\tgaa1\t通「枷」字\n椵\tgaa2\t果木名\n楷\tgaai1\t楷木，强楷坚劲，楷树\n楷\tkaai2\t楷式，楷则，楷书，楷模，楷体，大楷，小楷，正楷\n楞\tling4\t同「棱」字\n楞\tling6\t楞头楞脑，发楞\n椹\tsam6\t同「葚」字\n椹\tzam1\t(1)同「砧」字；(2)古刑具\n楯\tseon5\t栏楯\n楯\tteon5\t同「盾」字\n楴\tdai3\t树根\n楴\tsai3\t树木名称\n楴\ttai3\t楴枝(理发钗)\n㭏\tfai1\t同「楎」字，指悬挂衣服的木橛\n㭏\twai5\t树木名称\n楑\tkwai4\t柊楑(用来击打物件的椎，又写作终葵)\n楑\tkwai5\t同「揆」字\n榜\tpang4\t(1)矫正弓弩的器具；(2)同「搒」字，意指拷打\n榜\tbong2\t榜文，榜首，榜眼，榜样，榜上有名，标榜\n榜\tbong3\t同「搒」字\n榜\tpong3\t榜人，榜掠\n枪\tcaang1\t欃枪\n枪\tcoeng1\t枪林弹雨，请枪，唇枪舌剑，手枪，单枪匹马\n干\thon4\t井干(井上的木栏)\n杠\tgong3\t杠杆，杠铃，木杠，竹杠，单杠\n杠\tlung5\t粤语用字\n榷\tgok3\t榷税，榷盐，榷茶，榷酤\n榷\tkok3\t商榷\n榗\tzeon3\t鼓名\n榗\tzin3\t树木名称\n樆\tlei4\t山樆(野生在山的梨树)\n樆\tci1\t布木\n榐\tzan6\t树木名称\n榐\tcin2\t橏榐(形容树长的样子)\n榐\tnin6\t同「碾」字\n榐\tzin2\t(1)树木名称；(2)杯盏\n樔\tcaau4\t同「巢」字\n樔\tziu2\t通「剿」字\n乐\tngaau6\t乐业，仁者乐山，敬业乐群\n乐\tlok3\t乐亭(地名)，乐陵(县名)姓氏\n乐\tlok6\t乐土，乐事，乐意，乐趣，乐观，乐天知命，乐不可支，乐不思蜀，乐此不疲，乐极生悲，快乐，安乐\n乐\tngok6\t音乐，乐器，乐谱，乐府，奏乐，乐坛，乐章\n椮\tsam1\t形容树木高耸\n椮\tsam2\t水中积架柴木以围捕鱼群\n橦\tcong4\t帐柱\n橦\ttung4\t橦布\n横\twaang4\t横行，纵横，横征暴敛，横向，天才横溢，横竖，横刀立马\n横\twaang6\t横逆，骄横，横民，横流，横恣，横祸，横肆，横议\n横\tgwong1\t横门古长安城门之一\n橨\tfan4\t枰仲木的别名\n橨\tfan5\t器物的脚\n橠\tno4\t用以形容枝叶柔弱\n橠\tno5\t用以形容树木茂盛\n橏\tgin2\t橏榐(形容树长的样子)\n橏\tzin2\t(1)树木名称；(2)木瘤\n档\tdong2\t档册，档案，存档\n档\tdong3\t摊档，拍档，搭档，档次\n橾\tciu1\t同「锹」字，意谓铁锹\n橾\tsou1\t櫹橾(形容木长的样子)\n橾\tsyu1\t车毂中贯轴的空腔\n槛\thaam5\t槛羊，槛阱，槛车\n槛\tlaam6\t门槛\n櫡\tzoek3\t大锄\n櫡\tzyu6\t同「箸」字\n櫑\tleoi4\t(1)古代盛酒的容器；(2)饰有饕餮纹的食物容器\n櫑\tleoi5\t櫑具剑\n欈\twai4\t木名\n欈\tzeoi3\t同「檇」字\n欉\tcung3\t草木丛生\n欉\tcung4\t同「丛」字，「欉」是「丛」的俗字\n朵\tdo2\t朵云，朵殿，朵楼，花朵\n朵\tdoe2\t「朵do2」的异读字\n机\tgei2\t「机gei1」的异读字\n朽\tjau2\t朽木，腐朽，永垂不朽，朽败，老朽，枯朽，朽木粪墙，樗朽之材，摧枯拉朽\n朽\tnau2\t「朽jau2」的异读字，口语读音\n朽\tnau5\t「朽jau2」的异读字\n朸\tlak6\t「朸lik6」的异读字\n朸\tlik6\t木材的纹理\n朴\tpiu4\t「朴pok3」的异读字，用于姓氏\n朴\tpo1\t「朴pok3」的异读字，用于「朴刀」一词\n朴\tpok3\t朴树，厚朴，朴刀，抱朴，朴实\n杉\tcaam3\t杉树，红杉，水杉，云杉\n杉\tsaam1\t「杉caam3」的异读字\n杞\tgei2\t枸杞，杞人忧天，荆杞(荒芜景象，也比喻奸臣)\n杞\thei2\t「杞gei2」的异读字\n杙\tdak6\t「杙jik6」的异读字\n杙\tjik6\t小木桩\n杅\tjyu1\t「杅jyu4」的异读字\n杅\tjyu4\t(1)浴盆；(2)盛汤浆的器皿\n杚\tgwat1\t量谷物时用以刮平斗斛的器具\n杚\tkoi3\t「杚gwat1」的异读字\n析\tcik1\t「析sik1」的异读字\n析\tsik1\t析出，析居，析烟，析爨，析疑，分析，辨析\n杵\tcyu2\t杵臼\n杵\tcyu5\t「杵cyu2」的异读字\n果\tgwo2\t果实，成果，果断，果决，果冻，果敢，果脯，果报，果腹，效果，结果\n果\tgu2\t「果gwo2」的异读字\n锨\thin1\t挖土或铲东西的用具\n锨\thin3\t「锨hin1」的异读字\n杳\tjiu2\t「杳miu5」的异读字\n杳\tmiu5\t杳然，杳如黄鹤，杳无人迹，杳无音信\n枒\taa1\t「枒ngaa4」的异读字\n枒\tngaa4\t枒杈\n柏\tbaak3\t柏树，柏油路，老如松柏\n柏\tpaak3\t「柏baak3」的异读字\n柄\tbeng3\t「柄bing3」的异读字\n柄\tbing3\t柄子，柄政，柄国，刀柄，斧柄，笑柄，话柄，权柄\n柿\tci2\t「柿ci5」的异读字\n柿\tci5\t柿子，柿酒，柿饼\n柮\tdeot1\t「柮zyut3」的异读字\n柮\tzyut3\t榾柮\n柣\tcit3\t「柣dit6」的异读字\n柣\tdit6\t门槛\n柊\tdung1\t「柊zung1」的异读字\n柊\tzung1\t柊树，柊叶\n枻\tjai6\t桨\n枻\tji6\t「枻jai6」的异读字\n柯\to1\t(1)姓氏；(2)草木枝茎；(3)斧柄\n柯\tngo1\t「柯o1」的异读字\n枲\tsaai2\t枲麻\n枲\tsai2\t「枲saai2」的异读字\n柶\tsei3\t「柶si3」的异读字\n柶\tsi3\t古代礼器名\n柁\ttaai5\t「柁to4」的异读字\n柁\tto4\t同「舵」字\n柁\tto5\t「柁to4」的异读字\n柷\tcuk1\t「柷zuk1」的异读字\n柷\tzuk1\t柷敔\n栖\tsai1\t「栖cai1」的异读字\n桌\tcoek3\t「桌zoek3」的异读字\n桌\tzoek3\t桌子，桌布，桌面，书桌，饭桌\n框\tkwaang1\t「框hong1」的异读字\n框\thong1\t框架，门框，窗框，画框，镜框\n栝\tgwaa1\t「栝kut3」的异读字\n栝\tkut3\t机栝，檃栝，栝楼\n桅\tngai4\t「桅wai4」的异读字\n桅\twai4\t桅杆，桅樯\n案\ton3\t答案，档案，案件，备案，保案，办案，个案，图案，公案\n案\tngon3\t「案on3」的异读字\n栻\tcik1\t古代占卜用的器具，形状像罗盘\n栻\tsik1\t「栻cik1」的异读字\n桎\tzat1\t「桎zat6」的异读字\n桎\tzat6\t桎梏(脚镣手铐，喻束缚)，槎桎古时一种刑具，即脚镣\n梫\tcaam1\t「梫cam1」的异读字\n梫\tcam1\t桂的一种\n梵\tfaan4\t「梵faan6」的异读字\n梵\tfaan6\t梵天，梵文，梵宇，梵音，梵呗，梵书，梵语；(1)为梵语brahma的音译；(2)古印度婆罗门教义中无所不在的最高实体；(3)泛指古印度\n梜\tgaap3\t梜提(筷子在古时的称谓)木筷\n梜\tzit6\t「梜gaap3」的异读字\n梗\tgwaang2\t「梗gang2」的异读字\n梗\tgang2\t梗概，梗直，从中作梗，梗死，梗泛，梗阻，梗塞，梗滞，菜梗；(1)植物的枝茎；(2)大概；(3)阻塞；(4)挺直\n杆\tgon1\t杆菌，杆棒，笔杆，枪杆，杠杆\n杆\tgon2\t「杆gon1」的异读字\n杆\tgon3\t「杆gon1」的异读字\n梮\tguk1\t走山路乘坐的东西\n梮\tguk6\t「梮guk1」的异读字\n梣\tsam4\t乔木名\n梣\tzam1\t「梣sam4」的异读字\n条\ttiu4\t条子，条目，便条，条令，条件，条约，条陈，条款，条理，条贯，条幅，条畅，条分缕析，条件反射，木条，戒条\n条\ttiu5\t「条tiu4」的异读字\n楖\tzat1\t楖栗\n楖\tzik1\t「楖zat1」的异读字\n桠\taa1\t桠杈，枝桠\n桠\tngaa1\t「桠aa1」的异读字\n栖\tcai1\t栖身之处，两栖动物\n栖\tsai1\t「栖cai1」的异读字\n棽\tcam1\t棽棽(繁华茂盛的样子)\n棽\tsam1\t「棽cam1」的异读字\n楮\tcyu2\t楮币，楮墨，楮钱，楮纸，片楮，寸楮\n楮\tcyu5\t「楮cyu2」的异读字\n栋\tdung3\t栋梁，栋桴，汗牛充栋，栋干，栋宇，画栋雕梁，栋折榱崩\n栋\tdung6\t「栋dung3」的异读字\n棵\tfo1\t「棵fo2」的异读字\n棵\tfo2\t量词，用于植物\n棵\tpo1\t「棵fo2」的异读字\n棘\tgik1\t棘手，荆棘，披荆斩棘\n棘\tkik1\t「棘gik1」的异读字\n㭎\tgong1\t青㭎\n㭎\tgong3\t「㭎gong1」的异读字\n栈\tzaan2\t「栈zaan6」的异读字\n栈\tzaan6\t栈道，客栈，栈桥，货栈，栈山航海\n棦\tzaang1\t「棦zang1」的异读字\n棦\tzang1\t木朿\n棤\tsik1\t树皮粗皱\n棤\tcoek3\t「棤sik1」的异读字\n棰\tceoi4\t棰楚(古代的杖刑)，棰打\n棰\tzeoi1\t「棰ceoi4」的异读字\n椽\tcyun4\t椽子，大笔如椽\n椽\tjyun4\t「椽cyun4」的异读字\n楥\thyun3\t楥子，楥头\n楥\tjyun4\t「楥hyun3」的异读字\n概\tgoi3\t「概koi3」的异读字\n概\tkoi3\t概念，概况，概括，概要，概论，大概\n楘\tmou6\t「楘muk6」的异读字\n楘\tmuk6\t车辕上绑扎加固的皮青带\n椼\tjin2\t木名\n椼\tjin5\t「椼jin2」的异读字\n楏\tkwai1\t锄柄\n楏\tfui1\t「楏kwai1」的异读字\n楻\thang4\t「楻wong4」的异读字\n楻\twong4\t同「艎」字，指船只或船舱\n榱\tceoi1\t榱题，栋折榱崩椽子\n榱\tseoi1\t「榱ceoi1」的异读字\n构\tgau3\t构兵，构思，构怨，构造，构想，构置，构图，构难，佳构，结构\n构\tkau3\t「构gau3」的异读字\n榼\thap1\t「榼hap6」的异读字\n榼\thap6\t盛酒的器具\n桤\thei1\t桤木\n桤\tkei1\t「桤hei1」的异读字\n杩\tmaa5\t「杩maa6」的异读字\n杩\tmaa6\t杩槎\n榙\tdaap3\t一种似李子的水果\n榙\thap6\t「榙daap3」的异读字\n榽\thaai4\t「榽hai4」的异读字\n榽\thai4\t榽橀(一种似檀木的细叶植物)\n槙\tcan2\t同「稹」字，见《周礼•冬官考工记•注疏》\n槙\tzan2\t「槙can2」的异读字\n椠\tcim3\t(1)书的刻本；(2)古代记事用的木板\n椠\tcim5\t「椠cim3」的异读字\n枞\tcung1\t冷杉\n枞\tzung1\t「枞cung1」的异读字\n樊\tfaan4\t樊篱\n樊\tfaan6\t「樊faan4」的异读字\n樛\tgau1\t樛曲，樛结，樛流\n樛\tkau1\t「樛gau1」的异读字\n槾\tmaan4\n槥\twai6\t「槥seoi6」的异读字\n槥\tseoi6\t槥具，槥车相望\n槭\tcik1\t槭树\n槭\tzuk1\t「槭cik1」的异读字\n樍\tzaak3\t「樍zik1」的异读字\n樍\tzik1\t樍木(柽木的别名)\n橇\tceoi3\t「橇hiu1」的异读字\n橇\thiu1\t雪橇\n橇\tzyut3\t「橇hiu1」的异读字\n橄\tgaam3\t「橄gam2」的异读字\n橄\tgam2\t橄榄，橄榄球\n橘\tgat1\t「橘gwat1」的异读字\n橘\tgwat1\t橘子，橘色，橘树，橘酒，橘皮，柑橘\n橛\tgyut6\t橛竖，桩橛(木钉)，衔橛之变(事情进行中有变卦)；(1)短木头；(2)马口中所衔的横木\n橛\tkyut3\t「橛gyut6」的异读字\n橪\tjim5\t「橪jin4」的异读字\n橪\tjin4\t酸小枣\n橑\tliu4\t「橑lou5」的异读字\n橑\tlou5\t橑盖辐轮，桂栋兰橑\n椫\tsin6\t椫傍\n椫\tzin2\t「椫sin6」的异读字\n椭\tto2\t「椭to5」的异读字\n椭\tto5\t椭圆\n桦\twaa4\t「桦waa6」的异读字\n桦\twaa6\t白桦，黑桦\n橭\tfu1\t「橭gu1」的异读字\n橭\tgu1\t(1)山榆的别名，又写作「枯」；(2)树枝四面分散\n橀\thei1\t榽橀(一种似檀木的细叶植物)\n橀\thoi2\t「橀hei1」的异读字\n檞\tgaai2\t一种松樠之类的树木\n檞\thaai5\t「檞gaai2」的异读字\n檐\tjam4\t「檐jim4」的异读字\n檐\tjim4\t檐牙，檐马，檐沟，檐铃，檐溜，檐头，屋檐，飞檐走壁\n檐\tsim4\t「檐jim4」的异读字\n桧\tkui2\t木名\n桧\tkui3\t「桧kui2」的异读字\n檑\tleoi4\t「檑leoi6」的异读字\n檑\tleoi6\t城防用的滚木\n檗\tbaak3\t黄檗\n檗\tpaak3\t「檗baak3」的异读字\n檡\tzaak6\t「檡zaak6」的异读字\n檡\ttou4\t于檡\n檅\twai6\t「檅seoi6」的异读字\n檅\tseoi6\t同「槥」字\n槟\tban1\t槟城，槟榔，香槟\n槟\tbing1\t「槟ban1」的异读字\n柠\tling4\t「柠ning4」的异读字\n柠\tning4\t柠檬\n檬\tmung1\t「檬mung4」的异读字\n檬\tmung4\t柠檬\n檷\tnai5\t(1)一种络丝工具，俗名络子；(2)制动工具\n檷\tnei5\t「檷nai5」的异读字\n橱\tceoi4\t「橱cyu4」的异读字\n橱\tcyu1\t「橱cyu4」的异读字\n橱\tcyu4\t橱窗，衣橱，书橱\n榈\tleoi3\t「榈leoi4」的异读字\n榈\tleoi4\t棕榈\n枥\tlik1\t老骥伏枥\n枥\tlik6\t「枥lik1」的异读字\n欂\tbok3\t欂栌，栌欂\n欂\tbok6\t「欂bok3」的异读字\n櫼\tcim1\t木楔子\n櫼\tzim1\t「櫼cim1」的异读字\n杓\tbiu1\t斗杓东指，斗杓转势\n杓\tsoek3\t马杓，杯杓，桮杓\n杓\tzoek3\t「杓soek3」的异读字\n杝\tlei4\t同「篱」字\n杝\tci2\t「杝ji4」的异读字\n杝\tji4\t树木名，即椴本\n杝\tto4\t同「舵」字\n杻\tcau2\t一种古代刑具，类似手铐\n杻\tnau2\t树木名称\n杻\tnau5\t「杻nau2」的异读字\n杬\tlaam2\t粤语用字，同「榄」字\n杬\tlaam5\t「杬laam2」的异读字\n杬\twun6\t按摩\n杬\tjyun4\t杬子，杬树\n栅\tcaak3\t栅栏，栅门\n栅\tsaan1\t栅极\n栅\tzaap3\t「栅caak3」的异读字\n枹\tbaau1\t枹树\n枹\tfau4\t「枹fu1」的异读字\n枹\tfu1\t鼓槌\n柚\tjau2\t「柚jau6」的异读字\n柚\tjau4\t柚木\n柚\tjau6\t柚子\n柚\tzuk6\t杼柚\n柟\tnaam1\t「柟naam4」的异读字\n柟\tnaam4\t同「楠」字\n柟\tjim4\t树木名，即梅\n柞\tzaa3\t「柞zaak3」的异读字\n柞\tzaak3\t砍伐树木\n柞\tzok3\t「柞zok6」的异读字\n柞\tzok6\t柞木，柞树，柞蚕\n枳\tzat1\t枳椇\n枳\tzeot1\t「枳zat1」的异读字\n枳\tzi2\t枳实，枳壳\n柭\tbaat3\t木杖\n柭\tbat6\t箭杪\n柭\tfat1\t「柭but6」的异读字\n柭\tbut6\t同「柫」字，一种名叫「连枷」的农具\n栒\tceon4\t「栒seon1」的异读字\n栒\tseon1\t栒子木\n栒\tseon2\t栒虡；(1)树木的枝干；(2)悬挂器物用的横木\n桔\tgat1\t桔梗\n桔\tgit3\t「桔gat1」的异读字\n桔\tkit3\t桔柣(春秋时郑国的城门名)\n桄\tgwong1\t桄榔，门桄\n桄\tgwong3\t桄子，线桄子\n桄\tkwong3\t「桄gwong3」的异读字\n桁\thaang4\t「桁hong4」的异读字\n桁\thang4\t桁架，桥桁，桁桷，桁条\n桁\thong4\t桁杨(古时夹颈项或脚胫的刑具)\n桁\thong6\t衣架\n桉\ton1\t桉树\n桉\ton3\t同「案」字\n桉\tngon1\t「桉on1」的异读字\n桉\tngon3\t「桉on3」的异读字\n楬\thap1\t「楬hat1」的异读字\n楬\that1\t古代木制乐器，又名「敔」\n楬\tkit3\t楬橥\n椯\tdo2\t(1)鞭打；(2)切割；(3)度量\n椯\tcyun4\t「椯syun4」的异读字\n椯\tsyun4\t(1)树木名称；(2)一种古代盛酒的器具\n朴\tpok3\t朴直，朴茂，朴陋，朴素，朴钝，朴讷，朴实，纯朴，俭朴\n朴\tbuk1\t「朴buk6」的异读字\n朴\tbuk6\t丛生的树木\n橙\tcaang2\t「橙caang4」的异读字\n橙\tcaang4\t橙黄，橙子，香橙\n橙\tdang3\t同「凳」字\n桡\tnaau4\t桡骨\n桡\tnaau6\t枉桡；(1)弯曲；(2)屈服；(3)冤屈\n桡\tling4\t穆桡县\n桡\tjiu4\t「桡naau4」的异读字\n栎\tlik1\t樗栎，栎散\n栎\tlik6\t「栎lik1」的异读字\n栎\tngok6\t陕西省县名\n蘖\tbaak3\t(1)同「柏」字；(2)同「檗」字\n蘖\tpaak3\t「蘖baak3」的异读字\n蘖\tjip6\t「蘖jit6」的异读字\n蘖\tjit6\t树木砍伐后长出的新芽\n欠\thim3\t呵欠，欠缺，欠佳，欠税，欠债，欠缴，欠款，欠妥，欠资，欠当，欠安，欠身\n欣\tjan1\t欣慰，欢欣，欣欣向荣，欣赏，欣喜若狂\n欨\theoi2\t(1)吹气；(2)欣喜\n欷\thei1\t欷歔，欷吁\n欲\tjuk6\t欲望，意欲，欲盖弥彰，欲求，物欲，纵欲，欲罢不能，欲擒故纵，欲语还休，无欲则刚\n欳\tfaai3\t同「喟」字，意指叹息\n欴\tlong4\t贪求的样子\n款\tfun2\t款项，款式，款待，款款，款曲\n欿\tham2\t欿憾，欿傺\n欺\thei1\t欺骗，欺压，欺负，欺凌，欺人太甚，欺善怕恶\n钦\tjam1\t钦佩，钦羡，钦慕，钦赐，钦命，钦犯，钦定；(1)尊敬、佩服；(2)古代对皇帝尊称的用语\n歇\thit3\t歇息，间歇，歇斯底里，歇后语，歇脚，歇业，歇工\n歆\tjam1\t歆羡，歆慕，歆动，歆歆；(1)感动；(2)悦服；(3)羡慕\n歅\tjan1\t九方歅(春秋时人名，善相马)\n歈\tjyu4\t歌\n歁\tham3\t食不满\n歌\tgo1\t歌唱，歌曲，歌手，歌舞，歌剧，歌词，歌王\n歊\thiu1\t(1)热气；(2)气上升\n歋\tje4\t嘲弄、轻笑\n歍\twu1\t心有所恶若吐\n歑\tfu1\t同「呼」字\n歔\theoi1\t欷歔\n欼\tzyut3\t欼茗，欼粥，欼泣\n歖\thei2\t同「喜」字\n歜\tcuk1\t盛怒\n欤\tjyu4\t文言助词，表示疑问\n歞\tngap6\t歁歞(痴貌)\n欢\tfun1\t欢喜，狂欢，悲欢离合，欢迎，欢送，联欢会，合家欢，尽欢，欢天喜地，欢喜冤家，强颜欢笑，不欢而散，男欢女爱，寻欢作乐\n欭\tjan1\t喑欭(叹息)\n欭\tji3\t气逆\n欯\that1\t欢笑、欢喜\n欯\tkoi3\t声音\n欻\tcaa3\t象声词，形容急促或有节奏的声音\n欻\tfat1\t欻吸(俄顷)，欻忽，欻翕，奄欻(来去不定貌)\n欻\tcuk1\t(1)动；(2)有所吹起\n欹\tkei1\t欹午，欹案，欹器\n欹\tji1\t赞美\n欥\tjat6\t「欥jyut6」的异读字\n欥\tjyut6\t辞别\n欱\thap1\t(1)饮；(2)吸\n欱\thap6\t「欱hap1」的异读字\n欱\thot3\t「欱hap1」的异读字\n欶\tsok3\t吮吸\n欶\tcuk1\t「欶sok3」的异读字\n歃\tsaap3\t歃血，歃血为盟\n歃\tsip3\t「歃saap3」的异读字\n歉\thim3\t「歉hip3」的异读字\n歉\thip3\t歉意，歉绌，歉岁，抱歉，道歉\n歕\tfan5\t「歕pan3」的异读字\n歕\tpan1\t「歕pan3」的异读字\n歕\tpan3\t同「喷」字\n歛\tlim5\t同「敛」字\n歛\tlim6\t「歛lim5」的异读字\n歠\tcyut3\t「歠zyut3」的异读字\n歠\tzyut3\t歠茗，歠粥，歠泣，𫗦歠，𫗦糟歠醨(语本《楚辞•渔父》，指随波逐流)；(1)饮、喝；(2)羹汤\n次\tci1\t次且(趑趄)\n次\tci3\t次序，班次，鳞次栉比，次货，人次，主次，目次，渐次，屡次三番\n次\tzi1\t「次ci1」的异读字\n欬\thaai1\t同「嗨」字，表示忧愁或后悔\n欬\tkat1\t同「咳」字\n欬\thoi4\t小孩的笑声\n欬\tkoi3\t「欬kat1」的异读字\n欸\taai2\t欸乃\n欸\tai2\t「欸aai2」的异读字\n欸\te6\t「欸ei6」的异读字\n欸\tei6\t语助词，表示答应\n欸\toi1\t语助词，表示感叹\n欸\toi2\t「欸aai2」的异读字\n欸\tngoi1\t「欸oi1」的异读字\n欸\tngoi2\t「欸aai2」的异读字\n歂\tcyun2\t同「喘」字\n歂\tcyun4\t姓氏\n歂\tsyun4\t「歂cyun4」的异读字\n欧\tau1\t欧洲\n欧\tau2\t同「呕」字\n欧\tngau1\t「欧au1」的异读字\n欧\tngau2\t「欧au2」的异读字\n歙\thap1\t「歙kap1」的异读字\n歙\tjap1\t「歙kap1」的异读字\n歙\tkap1\t同「吸」字\n歙\tsip3\t安徽省县名\n止\tzi2\t止痛，静止，望梅止渴，止步，止血，止咳，防止，停止，劝止，学无止境，叹为观止，高山仰止，举止言谈，饮鸩止渴\n此\tci2\t此外，此后，因此，此起彼落\n歧\tkei4\t歧见，歧视，歧异，歧途，歧路，歧出\n武\tmou5\t武器，武力，武装，武士，武术，武侠，武打，武功，武官，武生，武断，武学，武艺，武师，武夷山，武人，武旦\n岁\tseoi3\t岁月，年岁，岁出，岁入，去岁，富岁，歉岁\n歶\tjyu4\t装饰丧车的铜鱼\n历\tlik6\t历史，历程，历时，历来，历练，历险，历劫，历久弥新，历历可见，履历，经历\n步\tfau6\t同「埠」字\n步\tbou6\t步骤，步行，步枪，步军，步光\n歭\tci4\t歭躇(徘徊不前的样子)\n歭\tzi6\t同「偫」字\n归\tgwai1\t归还，当归，宾至如归，归帆，归国，归家，归宿，归期，归纳，归类，归咎，归罪，归功，归化，归根究柢，改邪归正，落叶归根，殊途同归，天与人归，放虎归山，满载而归，反璞归真\n归\tgwai6\t同「馈」字\n归\tkwai3\t同「愧」字\n歪\twaai1\t歪风，歪曲，歪歪斜斜，歪七扭八，歪斜\n歪\tme2\t「歪waai1」的异读字\n正\tzeng3\t「正zing3」的异读字，口语用字\n正\tzing1\t正月，新正\n正\tzing3\t正方，正史，正字，正式，正名，正宗，正果，正规，正常，正统，正义，正当，正路，正确，正比例，正人君子，正本清源，正言厉色，正襟危坐\n殀\tjiu2\t殀折，殀昏，殀寿，殀札少壮而身死\n殁\tmut6\t亡殁，存殁，赍志而殁死\n殂\tcou4\t殂落，殂谢，夭殂，崩殂\n殃\tjoeng1\t遭殃\n殄\ttin5\t暴殄天物\n殈\tgwik1\t鸟卵破裂\n肂\tsi3\t(1)寄殡，暂时埋葬于路旁；(2)埋棺的坑\n殊\tsyu4\t殊荣，殊胜，殊俗，特殊，殊荣，悬殊，殊功，殊途同归\n殍\tpiu5\t饿殍\n殏\tkau4\t终结\n殎\thap1\t干枯\n殌\tkyut3\t死亡\n残\tcaan4\t伤残，凶残，残而不废，残缺不全，残冬，残忍，残酷，残局\n殙\tfan1\t(1)昏乱；(2)病亡\n殗\tjip3\t(1)微病的样子；(2)重叠的样子\n殖\tzik6\t殖民地，殖民，殖民主义，殖民者，殖产\n殔\tji6\t埋葬灵柩\n殛\tgik1\t殛毙，电殛，雷殛，诛殛；(1)杀死；(2)惩罚\n殠\tcau3\t同「臭」字\n殟\twan1\t突然失去知觉\n殒\twan5\t殒落，殒命，殒石，殒灭，香消玉殒\n殥\tjan4\t八殥(淮南子˙墬形)偏远的地方\n殇\tsoeng1\t未成年而死\n殢\ttai3\t殢留，殢酒，殢雨尤云\n殦\tdiu1\t殦雕(鸟名)\n殚\tdaan1\t殚力，殚心，殚心竭虑，殚思极虑\n僵\tgoeng1\t僵尸\n殓\tlim6\t大殓，殡殓，殓衣\n殡\tban3\t殡仪，殓殡，出殡\n㱩\tduk6\t胎儿死于腹中\n歼\tcim1\t歼灭，围歼，歼敌，歼击机，歼灭战；(1)消灭；(2)杀尽\n歾\tman5\t同「刎」字\n歾\tmut6\t同「殁」字\n死\tsei2\t死士，死亡，死角，死忌，死寂，死结，死伤，死党，死不悔改，死去活来，死灰复燃，死无对证，生死，黑死病\n死\tsi2\t「死sei2」的异读字\n殆\tdoi6\t「殆toi5」的异读字\n殆\ttoi5\t殆尽，危殆\n殉\tseon1\t殉名，殉情，殉国，殉道，殉葬，殉节，殉职，殉难\n殉\tseon6\t「殉seon1」的异读字\n殣\tgan2\t道殣(饿死在道旁的人)，道殣相望；(1)饿死；(2)埋葬；(3)坟墓\n殣\tgan6\t「殣gan2」的异读字\n殪\tai3\t「殪ji3」的异读字\n殪\tngai3\t「殪ji3」的异读字\n殪\tji3\t摧坚殪敌；(1)死亡；(2)杀戳；(3)灭绝\n殧\tzau6\t殧殄(灭绝)\n殧\tzuk1\t「殧zau6」的异读字\n歹\tdaai2\t歹徒，歹毒，不识好歹，为非作歹，做好做歹坏事\n歹\taat3\t「歹daai2」的异读字\n歹\tngaat6\t二一四部首之一\n殑\tcing4\t「殑king4」的异读字\n殑\tging6\t殑伽\n殑\tking4\t(1)病困欲死貌；(2)旧谓魂魄出体\n殕\tbaak6\t同「踣」字，意谓僵毙\n殕\tak1\t殪殕(跌倒、僵毙)\n殕\tfau2\t物件腐坏而生白膜\n殕\tfu2\t「殕fau2」的异读字\n殳\tsyu4\t(1)一种兵器；(2)姓氏\n段\tdyun6\t段落，阶段，手段，身段\n殶\tzyu3\t投注\n壳\thok3\t贝壳，甲壳，躯壳，地壳，枳壳，外壳\n殿\tdin6\t殿堂，殿军，殿后，宝殿，神殿\n毁\twai2\t毁灭，毁坏，毁掉，毁誉，毁伤，毁害\n毃\thaau1\t同「敲」字\n毄\thek3\t(1)打击；(2)勤苦用力\n毅\tngai6\t毅然，毅力，刚毅，坚毅，弘毅\n毈\tdyun6\t卵坏了，孵不成幼雏\n毇\twai2\t(1)舂米使其精；(2)稠粥\n毉\tji1\t同「医」字\n杀\tsaai3\t杀哀，隆杀\n杀\tsaat3\t杀生，杀伐，杀戒，杀青，杀气，杀掠，杀价，杀戮，杀机，杀一儆百，杀人如麻，杀人越货，杀伐用张，杀身成仁，杀鸡取卵，自杀，刺杀，厮杀，谋杀，自相残杀\n殽\thaau6\t效法\n殽\tngaau4\t混殽不清，混殽，殽乱\n嗀\tfo3\t「嗀hok3」的异读字\n嗀\thok3\t呕吐\n殴\tau2\t殴打，殴伤，互殴\n殴\tngau2\t「殴au2」的异读字\n𪵑\thiu1\t乐器名，即大磬\n𪵑\tkiu4\t「𪵑hiu1」的异读字\n殷\taan1\t「殷jin1」的异读字\n殷\tjan1\t殷墟，殷鉴，殷盛，殷切，殷勤，殷实，殷富，殷轸；(1)朝代名（即商代）；(2)富足；(3)深情\n殷\tjan2\t象声词\n殷\tjin1\t殷红，血迹殷殷红黑色\n毌\tgun3\t毌丘(山东地名)；(1)姓氏；(2)贯穿\n毋\tmou4\t毋庸，毋宁，宁缺毋滥\n每\tmui5\t每每，每下愈况，每年，每回，每战必胜\n毒\tduk1\t身毒(印度的旧称)\n毒\tduk6\t毒药，中毒，阴毒，狼毒\n母\tmau4\t「母mou5」的异读字\n母\tmou5\t母亲，母爱，母性，母仪天下\n毐\taai2\t「毐oi2」的异读字\n毐\toi2\t嫪毐(战国时秦人)\n毐\tngoi2\t「毐oi2」的异读字\n毓\tjuk1\t孕毓(即孕育)，钟灵毓秀；(1)孕育、养育，通「育」；(2)姓氏\n毓\tjuk6\t「毓juk1」的异读字\n毖\tbei3\t谨慎\n毚\tcaam4\t毚兔，毚微，毚欲，毚檀；(1)贪婪；(2)狡狯\n毗\tbei2\t「毗pei4」的异读字\n毗\tpei4\t毗连，毗倚，毗连\n毘\tbei2\t「毘pei4」的异读字\n毘\tpei4\t同「毗」字\n比\tbei2\t比丘，比方，比例，比附，比较，比照，比试，比喻，比价\n比\tbei3\t「比bei6」的异读字\n比\tbei6\t朋比，比邻\n比\tpei4\t皋比\n毞\tpei4\t我国古代西北、西南氐人所织的种兽毛布\n毠\tgaa1\t同「袈」字\n毧\tjung4\t驼毧，鸭毧被\n毣\tmuk6\t毣毣(恭谨诚恳的样子/风吹拂的样子/物小而好的样子)\n毨\tsin2\t毛新生，整齐美丽的样子\n毢\tsoi1\t毰毢(鸟羽奋张貌)\n毤\tto3\t同「毻」字，雀鸟换毛\n毫\thou4\t毫升，毫发，毫米，毫厘，毫发未伤，明察秋毫\n毬\tkau4\t古代球状游戏用品\n毰\tpui4\t毰毸(形容羽毛披散)\n毲\tzyut3\t(1)刺；(2)削；(3)古代西南民族毛织品名\n毷\tmou6\t毷氉\n毻\tto3\t鸟兽换毛\n毾\ttaap3\t一种质地细密的毛毡\n氀\tleoi4\t毛织的毡类\n毵\tsaam1\t毵毵(垂拂纷披的样子/散乱的样子)\n氁\tmou4\t(1)一种毛织品，即毛缎；(2)翻毛衫\n氅\tcong2\t氅衣，白氅，披氅，大氅\n氄\tjung5\t毛细而软\n氆\tpou2\t氆氇\n氃\ttung4\t氃氋\n毡\tzin1\t毡毯，毡帽，毛毡，如坐针毡\n氋\tmung4\t氋氃\n氇\tlou5\t氆氇\n氍\tkeoi4\t氍毹\n毛\tmaau4\t粤语用字，意指意气用事\n毛\tmou4\t毛发，羽毛，毛遂自荐，毛病，毛巾，毛衣，毛笔，毛毯，眉毛，毛茸茸，毛毛雨，毛骨耸然，不毛之地\n毳\tceoi3\t鸟兽的细毛\n毳\tzyut3\t同「橇」字\n毦\tnei6\t「毦ji6」的异读字\n毦\tji6\t用鸟羽或兽毛做的装饰物\n毯\ttaam2\t「毯taan2」的异读字\n毯\ttaan2\t毛毯，地毯，壁毯\n毽\tgin3\t毽子，花毽，毽球\n毽\tjin2\t「毽gin3」的异读字\n毼\thot3\t「毼hot6」的异读字\n毼\thot6\t氀毼(一种毛织物)\n毹\tjyu4\t「毹syu1」的异读字\n毹\tsyu1\t氍毹(毛织的地毯)\n毸\tseoi1\t「毸soi1」的异读字\n毸\tsoi1\t毰毸\n牦\tlei4\t牦牛，牦缨，毫牦\n牦\tmou4\t「牦lei4」的异读字，用于「牦牛」一词\n氉\tcou3\t毷氉\n氉\tsou3\t「氉cou3」的异读字\n民\tman4\t民众，民间，民主，民意，民族，民生，民权，民生\n氏\tsi6\t氏族，氏，摄氏温度\n氏\tzi1\t阏氏，月氏\n氐\tdai1\t氐宿，氐族\n氐\tdai2\t根氐\n氓\tmaang4\t「氓man4」的异读字\n氓\tman4\t氓俗，流氓，氓黎，氓隶\n氓\tmang4\t「氓man4」的异读字\n氓\tmong4\t「氓man4」的异读字，用于「流氓」一词\n氓\tmong5\t「氓mong4」的异读字\n氕\tpit3\t氢同位数之一，质量数1\n氘\tdou1\t氢的同位素之一，符号D\n氖\tnaai5\t气体元素\n氚\tcyun1\t氢的同位素之一，符号T\n氙\tsin1\t一种稀有惰性气体元素，符号Xe\n氛\tfan1\t氛厉，氛昏，氛围，氛氲，气氛\n氝\tnoi6\t气体元素之一，现改称为「氖」\n氡\tdung1\t一种放射性气体元素，符号Rn\n氟\tfat1\t一种气体元素\n氠\tsan1\t氙的旧称\n气\thei3\t气候，志气，气势磅礡，气氛，气息，气愤，气温，气体，气质，气功，气味，气派，气枪，气球，骨气，脾气，名气，霉气，煤气，排气，屏气凝神，平心静气，气急败坏，颐指气使\n氦\thoi6\t一种气体元素\n氤\tjan1\t氤氲(阴阳和合、祥瑞之气)，氤郁\n氧\tjoeng5\t氧化，氧气氧体元素\n氥\tsai1\t一种化学元素\n氪\thak1\t气体元素，符号Kr\n氢\thing1\t氢气，氢弹，氢氧化钠\n氮\tdaam6\t氮肥，氮素\n氯\tluk6\t氯气，氯离子，氯化钠\n氲\twan1\t氤氲，氛氲\n氨\ton1\t氮和氢的化合物\n氨\tngon1\t「氨on1」的异读字\n氩\taa3\t一种气体元素\n氩\tngaa3\t「氩aa3」的异读字\n氰\tcing1\t「氰cing4」的异读字\n氰\tcing4\t碳氮化合物\n水\tseoi2\t水源，清水，水落石出，水果，水库，水患，水流，水塔，水乡，水池，水草，水泥，水电，水饺，水准，水晶，水彩，水痘，水族馆，水龙头，水墨画，水涨船高，水泄不通，水到渠成\n氿\tgwai2\t(1)水旁出；(2)水边枯土\n永\twing5\t永远，永久，永恒，永别，永无宁日，永垂不朽，永无休止\n汁\tzap1\t汁液，墨汁，果汁\n氻\tlak6\t用以形容泉水声的象声词\n汊\tcaa3\t汊流，汊港\n汜\tci5\t汜水，蒙汜\n汏\tdaai6\t水波\n江\tgong1\t江山，江湖，江苏(地名)，江宁(地名)\n汝\tjyu5\t汝曹，汝辈\n汍\tjyun4\t汍澜\n汒\tmong4\t同「茫」字\n汕\tsaan3\t汕头\n汛\tseon3\t汛期，防汛\n汐\tzik6\t汐止，潮汐\n汌\tzyun6\t汌水(河流名称)\n沘\tbei2\t沘源河川名，在河南省泌阳县\n汴\tbin6\t汴京(河南省开封市的别名)，汴水，汴堤，汴州\n汳\tbin6\t古代河流名\n冲\tcung1\t冲洗，谦冲，一飞冲天，冲刷，冲印，冲淡，冲蚀，冲积，冲击，冲销，冲压，冲倒，冲出，冲喜，冲激，冲掉，冲犯，冲坏\n汾\tfan4\t汾河(山西河道名)，汾酒\n汽\thei3\t汽车，汽油，汽水，汽缸，汽球\n汧\thin1\t汧阳(陜西省地名)\n沋\tjau4\t山东省河川名\n汭\tjeoi6\t河流弯曲的地方\n沂\tji4\t沂河(水名)\n沇\tjin5\t古水名，又名济\n沃\tjuk1\t沃土，沃野，沃壤，沃腴\n沅\tjyun4\t沅江(湖南省河流名)\n汲\tkap1\t汲取，汲水，汲汲营营\n求\tkau4\t求助，求援，求救，求学，求证，求情，求饶，求婚，求变，求和，求教，求助无门，求之不得\n沕\tmat6\t沕然，沕穆深邃\n汨\tmik6\t汨罗江(湖南省河流名称)\n沔\tmin5\t沔水(水名)，沔县(地名)\n沐\tmuk6\t沐浴\n沛\tpui3\t沛然，充沛，颠沛流离\n沜\tpun3\t(1)水流；(2)水边；(3)同「泮」字\n沙\tsaa1\t沙石，泥沙，含沙射影，沙漠，沙滩，沙堆，沙粒，沙场，沙漏，沙包，沙哑，沙龙，豆沙，流沙，浪淘沙，恒河沙数，飞沙走石，平沙落雁\n沁\tsam3\t沁人心脾\n汰\ttaai3\t淘汰，甄汰，汰弱留强\n沄\twan4\t沄沄(形容水流动)\n汯\twang4\t泓汯水流急速\n汪\twong1\t汪洋，水汪汪，汪洋大海\n沍\twu6\t沍寒\n汫\tzeng2\t(1)小水貌；(2)同「阱」字\n沚\tzi2\t水中的小块陆地\n汱\tgyun2\t水向下坠的状态\n汦\tzi2\t有所附著而停止\n沎\tfo3\t沎水(河流名称)\n波\tbo1\t波动，波折，波浪，波涛\n沓\tdaap6\t拖沓，杂沓，纷至沓来，纷沓；(1)相合；(2)重复\n沊\tdam2\t沊沊(水声)\n沸\tfai3\t沸腾，沸点，沸水，人声鼎沸\n沷\tfat3\t通流\n况\tfong3\t况且，情况，每下愈况，以古况今，何况，境况，状况，病况\n泭\tfu1\t木筏或竹筏\n泇\tgaa1\t泇河(山东省河流名)\n泔\tgam1\t泔水\n泂\tgwing2\t深远\n河\tho4\t河道，河流，河水，河堤，河运\n泣\tjap1\t泣诉，泣然，哭泣，泣下如雨\n泆\tjat6\t(1)放纵；(2)同「溢」字\n油\tjau4\t油画，油田，油漆，油轮\n沿\tjyun4\t沿海，沿途，沿线，沿岸，沿路\n泫\tjyun5\t泫然泪下\n泐\tlak6\t手泐，泐覆\n泠\tling4\t泠风，清泠，西泠桥(西湖十景之一)\n泖\tmaau5\t泖湖，泖桥\n泯\tman5\t泯灭，泯没，泯然，童心未泯消除幻灭\n沬\tmui6\t沬血\n泙\tpaang1\t泙泙(水声)，泙湃(水声)\n泮\tpun3\t冰泮，泮宫(古代诸侯所设的学校)\n沭\tseot6\t沭河(水名)\n沺\ttin4\t沺沺(水势广大无际)\n沱\tto4\t沱茶，滂沱大雨，涕泗滂沱；(1)水湾；(2)水势盛大；(3)流泪貌\n沰\ttok3\t落\n泓\twang4\t泓泓，泓宏，泓汯，陶泓\n泳\twing6\t游泳，泳装，泳池\n沼\tziu2\t沼气，沼泽\n注\tzyu3\t注意，注射，注视，注重，注音\n泒\tgu1\t泒水(山西省河流名称)\n泀\tsi1\t泀水(古水名)\n洰\tgeoi6\t水中物多\n泩\tsang1\t(1)水涨；(2)形容水既深且广\n涻\tse3\t水名\n沀\tzeoi6\t水沟\n泹\tdaan6\n泵\tbam1\t水泵\n泉\tcyun4\t泉水，泉源，喷泉，温泉\n洸\tgwong1\t水涌生光\n洭\thong1\t洭水(广东省河名)\n汹\thung1\t汹涌\n洪\thung4\t洪水，山洪\n洇\tjan1\t同「湮」字\n洏\tji4\t涟洏\n洋\tjoeng4\t洋溢，海洋，洋洋得意，洋洋大观\n洳\tjyu6\t沮洳\n流\tlau4\t流动，河流，颠沛流离，流行，流水，流失，流氓，风流，漂流\n洌\tlit6\t洌清，泉香酒洌；(1)清澄；(2)寒冷\n洺\tming4\t洺河(水名)\n派\tpaai3\t派别，气派，党派，派出所\n洴\tping4\t洴澼(漂絮声)\n洿\twu1\t洿池\n洄\twui4\t洄洑，潆洄，湾洄，溯洄\n洲\tzau1\t绿洲，沙洲，洲际\n津\tzeon1\t津贴，迷津，津津乐道，津梁，津津有味，生津解渴，无人问津\n浂\tjat6\t同「泆」字\n洘\thaau2\t水干涸\n洃\tfui1\t以水调和面粉\n浀\tkuk1\t浀池(即曲池)\n洠\tmaau4\t陴洠(涯岸)\n洢\tji1\t洢河(即河南省伊河)\n洉\thau6\t沾湿\n洐\thang4\t沟水流行\n浿\tbui3\t古河流名\n浡\tbut6\t浡然，浡滃\n浺\tcung1\t浺瀜(水深广貌)\n浢\tdau6\t古河流名\n浮\tfau4\t浮动，浮雕，浮躁，浮标，浮沉\n泾\tging1\t泾水(陕西河名)，泾渭分明\n涓\tgyun1\t涓涓，涓滴，涓流，涓滴归公，涓洁\n浠\thei1\t浠水(湖北省地名)\n海\thoi2\t海峡，海岸，海洋，海运，海防，海盗，海滨，海鲜，海湾，海滩，海鸥，海难，海风，海浪，海港，海员，海景，海阔天空\n涆\thon6\t涆涆(水速流貌)\n浩\thou6\t浩劫，浩瀚，浩然，浩繁，浩然正气，浩气，浩浩荡荡\n浥\tjap1\t浥注，浥浥\n浴\tjuk6\t浴室，浴池，浴血，沐浴，淋浴\n淯\tjuk6\t淯河\n浬\tlei5\t海里的旧称\n浶\tlou4\t浶浪(惊扰的样子)\n浼\tmui5\t(1)玷污；(2)请托、请求\n浯\tng4\t浯河山东省河流名称\n涅\tnip6\t涅白，涅面，涅齿，涅槃(梵语nirvana的音译)\n涔\tsam4\t涔涔\n涚\tseoi3\t(1)温水；(2)清澈\n涉\tsip3\t涉猎，涉嫌，涉足，跋涉，涉险，涉及，交涉，干涉，牵涉，隔涉\n消\tsiu1\t消息，取消，烟消云散，消费，消除，消失，消化，消毒，消灭，消弭，消极，消耗，消遣，消暑，消磨，消瘦，消逝，意志消沈，冰消瓦解，无福消受，消化不良，此消彼长\n泰\ttaai3\t泰然，泰山压顶，康泰，安泰，否极泰来\n涕\ttai3\t鼻涕，涕泗，涕泣\n涒\ttan1\t涒滩，涒邻\n浤\twang4\t浤浤(形容波浪腾涌)\n涘\tzi6\t涯涘\n浙\tzit3\t浙江\n浨\tlam5\t藏梨汁\n浾\tzaa1\t棠枣汁\n浻\tgwing2\t浻澋(形容水流回旋)\n涋\ttuk1\t滑涋\n涄\tping1\t水貌\n洖\tng4\t译音用字\n涃\tkwan3\t涃水(河流名称)\n浵\ttung4\t浵水(河流名称)\n涐\tngo4\t涐水(大渡河的旧名)\n湴\tbaan6\t深泥、烂泥\n凄\tcai1\t凄凉，凄惨，凄厉，凄然，凄凄，凄楚，凄冷，凄迷\n淀\tdin6\t浅水湖泊\n涿\tdoek3\t涿鹿(河北省县名)，涿县(河北省县名)河北省地名\n涽\tfan1\t滑涽\n淴\tfat1\t淴泱\n涪\tfau4\t涪江(水名)\n淈\tgwat1\t淈没，淈淈\n涵\thaam4\t涵管，涵洞，涵养，涵义，涵蕴，涵意，涵育\n淏\thou6\t水清的样子\n涳\thung1\t涳蒙\n淫\tjam4\t淫威，淫秽，淫荡，淫欲，淫业，淫妇，淫戒，淫书\n淹\tjim1\t淹没，淹水，淹死\n淊\tjim1\t同「淹」字\n涎\tjin4\t涎沫\n渊\tjyun1\t渊博，渊源，天渊之别，渊薮，渊谷，深渊\n淇\tkei4\t淇河\n淋\tlam4\t淋漓尽致，淋浴，淋漓，淋雨，淋湿，淋巴，淋巴腺，淋病\n泪\tleoi6\t泪水，泪痕，泪流满面，泪眼，泪滴，泪珠，泪雨，泪汪汪，泪如雨下，泪人儿，泪人，泪管\n沦\tleon4\t沦为，沦落，沦丧，沦陷，沦入，沦陷区，沦亡\n涞\tloi4\t涞水\n渌\tluk6\t淘渌，波波渌渌\n淆\tngaau4\t混淆不清\n淠\tpei3\t淠河\n深\tsam1\t深入，深夜，深刻，深受，深感，深远，深思，深厚，深度，深信，深切，深究，深浅，深思熟虑\n淳\tseon4\t淳朴，淳厚\n淅\tsik1\t淅沥\n淑\tsuk6\t淑女，淑媛，淑德\n淞\tsung1\t淞江(水名)\n添\ttim1\t添加，添购，添丁，添加物，添置，添上，添油加醋，添设\n淟\ttin2\t污浊\n淌\ttong2\t淌水，淌泪\n淘\ttou4\t淘汰，淘金，淘空，淘气，淘淘\n淮\twaai4\t淮南，淮河，淮军黄河、长江之间大川名，流经河南、安徽、江苏三省\n淄\tzi1\t淄河，淄蠹，临淄\n淛\tzit3\t同「浙」字\n渚\tzyu2\t江渚，洲渚，烟渚\n淲\tpiu4\t同「滮」字，水流貌\n浘\tmei5\t(1)水流盛貌；(2)泉底\n淔\tcik1\t淔灌(草名)，淔泉(泉名)\n淭\tkeoi4\t淭挐(即渠挐)\n涺\tgeoi1\t涺水(河流)\n淕\tluk6\t(1)凝雨；(2)水泽名称\n淂\tdak1\t(1)河流名称；(2)同「得」字，「淂」是「得」的俗写\n淐\tcoeng1\t淐水(河流名称)\n淓\tfong1\t淓水(河流名称)\n淽\tzi2\t淽水(河流名称)\n淗\tguk1\t水波纹\n淍\tzau1\t(1)同「周」字；(2)水回旋\n渤\tbut6\t渤海\n凑\tcau3\t凑足，凑巧，凑合，拼凑，紧凑\n渡\tdou6\t渡过，渡海，渡船，引渡，普渡众生\n湝\tgaai1\t湝湝\n减\tgaam2\t减少，减轻，减低，减弱，减退，减价，减小，减数\n港\tgong2\t港口，海港，港务，港埠，港湾\n沩\tgwai1\t湖南省河流名\n渹\tgwang1\t浪涛相击的声音\n湨\tgwik1\t水名\n湆\tjap1\t(1)幽显；(2)羹汁\n湇\tjap1\t同「湆」字\n渃\tjoek6\t河川名，位于四川省\n渝\tjyu4\t不渝\n湡\tjyu4\t(1)古河流名；(2)古沼泽名\n渠\tkeoi4\t渠道\n湅\tlin6\t煮熟丝绢\n渳\tmai5\t(1)饮歃；(2)浴尸\n湄\tmei4\t(1)水边；(2)岸旁\n渼\tmei5\t波纹\n湎\tmin5\t沈湎\n渺\tmiu5\t渺小，渺茫\n淼\tmiu5\t淼茫，烟波浩淼\n渫\tsit3\t(1)姓氏；(2)除去；(3)歇止\n湘\tsoeng1\t湘江，湘南\n湉\ttim4\t澶湉，湉湉(形容水流平静)\n渟\tting4\t渊渟岳立，山峙渊渟\n湱\twaak6\t渹湱\n渭\twai6\t渭水(陕西河名)，泾渭分明\n湟\twong4\t湟水\n湖\twu4\t湖泊，江湖\n渨\twui1\t山水弯曲处\n涣\twun6\t涣散，涣然冰释\n渣\tzaa1\t渣滓，煤渣，残渣余孽，人渣，药渣，蔗渣，酒渣鼻\n滋\tzi1\t滋生，滋味，树德务滋，滋养，滋长，滋补，滋润，滋事，滋扰，爱滋病\n浈\tzing1\t浈水\n渽\tzoi1\t古代河流名\n湚\tjan6\t湚水(河流名称)\n渶\tjing1\t渶水(山东省古河流名)\n渵\tmaau4\t大水的样子\n湦\tsang1\t人名用字\n渿\tnoi6\t渿沛(水波貌)\n湁\tcap1\t湁湒(形容水沸腾的样子)，湁潗鼎沸\n湳\tnaam5\t湳水(古河流名称)\n湠\ttaan3\t湠漫(水广大的样子)\n湥\tdat6\t水流动的样子\n湸\tloeng6\t大水\n湤\tsi1\t湤水(即合肥县的施水)\n湷\tceoi4\t象声词，形容水深的声音\n湕\tgin2\t湕水(湖北省河流名称)\n湹\tcin4\t同「瀍」字，「湹」是「瀍」的讹字\n溴\tcau3\t一种非金属元素，符号Br\n沧\tcong1\t沧桑，沧海，沧浪，沧海桑田\n滀\tcuk1\t水停聚\n滉\tfong2\t水深而广\n滏\tfu2\t滏阳河(河北省河名)\n滆\tgaak3\t滆湖\n滘\tgaau3\t大埔滘，滘西州(均香港地名)粤语用字，河道相通处，多用作地名\n溎\tgwai3\t大水\n滈\thou6\t陜西省河流名\n溢\tjat6\t溢出，溢于言表，满溢，洋溢，天才横溢，溢美；(1)液体泛出外流；(2)充满；(3)过度\n溽\tjuk6\t溽暑\n溶\tjung4\t溶剂，溶入，溶解，溶液，溶化，溶合\n源\tjyun4\t源自，源源不绝，源于，根源\n溪\tkai1\t溪水，溪流，溪涧，溪流\n溧\tleot6\t溧水，溧阳\n溦\tmei4\t细雨\n灭\tmit6\t灭亡，消灭，大义灭亲，灭绝，灭顶，灭口，灭火，灭种，毁灭，灭音器，毁尸灭迹，天诛地灭\n溥\tpou2\t溥博，溥被\n浉\tsi1\t浉河(河名)\n溯\tsou3\t溯源，追溯，上溯\n溏\ttong4\t溏心，溏便\n滔\ttou1\t滔滔不绝，滔天大罪，滔天大祸\n温\twan1\t温暖，温故知新，温柔敦厚，温馨，温泉，温度，温和，温室，温情，温床，温饱，温差，温驯，温文儒雅，温带，温婉，温存，温习\n涢\twan4\t涢水(湖北省水名)\n溷\twan6\t溷所，溷浊，溷肴(混淆)，飘茵落溷；(1)混乱；(2)厕所；(3)猪圈\n溠\tzaa3\t溠水(河名)\n滓\tzi2\t渣滓\n漍\tgwok3\t北漍(江苏省地名)\n溣\tleon6\t水中拖船\n溗\tsing4\t凌溗(水波前后相叠)\n滐\tgit6\t(1)形容水流激荡回旋；(2)形容波浪高涌\n溿\tpun3\t同「沜」字\n𪶄\tsi4\t𪶄水(古河流名称)\n溤\tmaa5\t溤水(河流名称)\n溍\tzeon3\t溍水(河流名称)\n溒\tjyun4\t(1)形容水流流动；(2)姓氏\n溙\ttaai3\t同「汰」字\n滜\tgou1\t水泽\n溰\tji4\t溰溰(同皑皑，洁白的样子)\n溞\tsou1\t溞溞(形容淘米声的象声词)\n滒\tgo1\t(1)多汁；(2)粘稠\n溹\tsok3\t溹水(河南省河流名称)\n滖\tseoi1\t滖灖(霜雪的样子)\n溛\twaa1\t溛瀤(凹凸不平)\n湒\tzap1\t同「濈」字\n滭\tbat1\t(1)泉水涌出的样子；(2)泉水\n浐\tcaan2\t浐浐，浐河\n漆\tcat1\t漆黑，油漆，如胶如漆，漆器，漆成，漆画，漆树，漆书\n澈\tcit3\t清澈\n漕\tcou4\t漕运\n涤\tdik6\t涤荡，涤除，洗涤，冲涤\n滹\tfu1\t滹沱(山西省河流名)\n漧\tgon1\t干燥\n滚\tgwan2\t滚筒，滚落，滚动，滚滚而来，翻滚\n汉\thon3\t汉语，罗汉，楚河汉界，汉族，汉化，汉赋，满汉全席，汉白玉，男子汉，英雄好汉\n漮\thong1\t(1)空地；(2)河流名\n荥\tjing4\t荥经，荥阳\n漾\tjoeng6\t荡漾，漾舟；(1)水波摇动貌；(2)摇动船只；(3)抛掷(如「漾将过来」)\n渔\tjyu4\t渔船，渔民，渔港，渔获，渔具，渔网\n滱\tkau3\t山西省河流名\n漏\tlau6\t漏税，漏洞，漏夜，漏水，漏气，漏网之鱼，漏报，漏网，漏雨，漏出，漏电，漏失，漏尽，漏斗\n漓\tlei4\t淋漓尽致，痛快淋漓\n涟\tlin4\t涟漪，涟洏\n溇\tlau4\t溇水(水名)\n卤\tlou5\t卤蛋，卤菜，卤肉以酱油及其他佐料烹煮的烹饪方法\n漉\tluk6\t渗漉，淘漉，扑漉，湿漉漉；(1)水慢慢下渗；(2)过滤\n滵\tmat6\t水急湍流的样子\n漠\tmok6\t漠视，漠然，漠不关心，沙漠，淡漠\n漭\tmong5\t溟漭，沆漭\n滶\tngou4\t古河流名\n渗\tsam3\t渗透，渗入，渗漏，渗出，渗透压，渗透性\n潃\tsau2\t同「滫」字，「潃」是「滫」的讹字\n漘\tseon4\t水涯\n漩\tsyun4\t漩涡，泡漩\n漙\ttyun4\t形容露水多\n漥\twaa1\t同「洼」字\n沪\twu6\t沪江，沪渎\n漈\tzai3\t水边\n滞\tzai6\t滞留，阻滞，停滞不前，滞闷，滞销，滞碍难行\n溆\tzeoi6\t溆浦(湖南省地名)\n漃\tzik6\t(1)水净；(2)同「寂」字\n漳\tzoeng1\t漳州，漳江，漳绒\n漅\tcaau4\t湖泊名\n漇\tsaai2\t润泽\n漡\tsoeng1\t同「汤」字\n漞\tmik6\t(1)同「汨」字；(2)一种可以作砚的石材\n漟\ttong4\t溪涧\n漺\tsong2\t冰冷洁净\n滼\tfaan6\t形容浮起的状态\n漜\tje5\t泥淖\n滽\tjung4\t滽滽水(古河流名称)\n漒\tkoeng4\t漒水(河南省河流名称)\n浔\tcam4\t江浔，江浔海裔，浔江(水名)水边\n潜\tcim4\t潜水，潜能，潜移默化，潜力，潜入，潜在，潜逃，潜藏，潜伏，潜心，潜艇，潜伏期，潜修，潜行，潜匿，潜近\n澂\tcing4\t清澂，澂彻\n潮\tciu4\t潮流，潮湿，潮汐，潮水，潮声，高潮，涨潮，热潮\n潒\tdong6\t通「荡」字\n澉\tgam2\t澉浦\n洁\tgit3\t洁白，清洁，洁身自爱，洁净，洁癖，廉洁，光洁，皎洁，简洁，贞洁，整洁，纯洁，圣洁，心诚意洁，冰清玉洁\n澔\thou6\t澔汗(玉石光彩照人)\n澒\thung6\t澒洞，澒蒙\n润\tjeon6\t润滑，润泽，光润，利润\n潩\tji6\t潩水(河流名)\n溃\tkui2\t溃疡，溃烂，溃决，溃散，溃败，溃不成军\n潾\tleon4\t形容水清\n潕\tmou5\t湖南省河流名称\n潘\tpun1\t姓氏\n泼\tput3\t泼水，泼辣，泼墨，泼妇骂街\n潺\tsaan4\t潺潺，潺湲\n潠\tseon3\t同「噀」字\n潟\tsik1\t潟卤，咸潟，潟湖，新潟(日本城市名)咸而贫瘠的土地\n潚\tsiu1\t同「潇」字\n澍\tsyu6\t澍濡，嘉澍\n潭\ttaam4\t潭水，碧潭，龙潭虎穴\n滕\ttang4\t(1)姓氏；(2)周代国名\n潼\ttung4\t潼关\n潫\twaan1\t水深的样子\n涠\twai4\t涠州\n沄\twan4\t江中大波浪\n颍\twing6\t颍河(河名)\n潢\twong4\t潢池，装潢，断港绝潢，天潢贵胄\n浆\tzoeng1\t浆糊，豆浆，玉液琼浆，浆汁，血浆，灌浆，泥浆摔角\n澖\thaan4\n潻\tsyu2\t潻水(河流名称)\n澕\two4\t形容水深\n澋\tging2\t浻澋(形容水流回旋)\n潓\twai6\t潓水(安徽省河流名称)\n潧\tzeon1\t同「溱」字\n潽\tpou2\t河流名称\n潡\tdeon6\t形容水流大\n澓\tfuk6\t(1)回流；(2)同「洑」字\n潗\tzap1\t湁潗鼎沸，湁潗(形容泉水像沸腾一般涌出)\n潶\thak1\t潶水(古雍州境内的河流名称)\n𣶩\twaa6\t𣶩水(山东省河流名称)\n澯\tcaan3\t清\n濋\tco2\t山东省河流名称\n淀\tdin6\t淀粉，沉淀\n激\tgik1\t激烈，激动，激励，激发，激进，激情，激昂\n澥\thaai5\t渤澥\n澺\tjik1\t古代河流名\n澭\tjung1\t河川名\n滪\tjyu6\t滟滪堆(瞿塘峡口的巨石)\n澧\tlai5\t湖南省河流名称\n濂\tlim4\t濂江(江西省南部水名)\n澰\tlim6\t(1)清；(2)浸渍\n潞\tlou6\t潞水(水名)\n澼\tpik1\t洴澼\n澨\tsai6\t水边\n濉\tseoi1\t濉河安徽省河流名称\n澴\twaan4\t澴波，漩澴，湾澴\n㳡\two1\t水流回旋\n澣\twun5\t同「浣」字\n泽\tzaak6\t泽深恩重，光泽，竭泽而渔，沼泽，山泽，水乡泽国，色泽，芳泽，福泽\n浊\tzuk6\t浊世，污浊，激浊扬清，浊水，浊流，浑浊\n澲\tjip6\t横水大板\n濍\tsung1\t象声词，用以形容水声\n澿\tkam4\t澿水(河流名称)\n濨\tci4\t濨水(河北省河流名称)\n澢\tdong1\t水也\n澸\tdam2\t水洼\n濏\tsat1\t濏濏水(古河流名称)\n澪\tling4\t同「泠」字\n澞\tjyu4\t丘陵间的溪水\n滨\tban1\t海滨\n濲\tguk1\t同「瀔」字，「濲」是「瀔」的讹字\n泶\thok6\t(1)夏有水冬无水的溪泽；(2)涸泉；(3)河川名，渭水的支流\n濠\thou4\t濠梁，濠濮间想\n濦\tjan2\t古河流名\n濴\tjing4\t(1)水泉的样子；(2)水波回旋的样子\n濡\tjyu4\t濡湿，耳濡目染\n蒙\tmung4\t蒙蒙细雨，溟蒙\n泞\tning6\t泥泞，泞滞，泞淖路上淤积的污水烂泥\n湿\tsap1\t湿润，潮湿，湿漉漉，湿度，湿透，湿气，湿热，湿疹，湿地\n涛\ttou4\t涛声，怒涛，惊涛骇浪\n潍\twai4\t山东省河流名称\n浕\tzeon6\t湖北省河流名称\n濯\tzok6\t濯足，洗濯\n濣\twaat3\t取水\n㳔\tdeoi6\t浸渍\n濝\tkei4\t濝水(河南省河流名)\n濢\tzeoi2\t小湿\n濌\tdaap6\t濌濌，濌伯；(1)堆积；(2)放纵豁达；(3)用人分不清好坏\n瀍\tcin4\t湖南省河流名称\n瀔\tguk1\t瀔水\n𪵱\tlai6\t槌骨𪵱髓\n浏\tlau4\t浏览，浏亮，浏海\n滤\tleoi6\t滤纸，过滤，滤水器，滤水池，滤液\n沈\tsam2\t沈阳市，安沈铁路，墨沈未干\n㲿\twong2\t水深广的样子\n潴\tzyu1\t潴泽，停潴\n濻\twai5\t同「瀢」字\n瀊\tpun4\t水流回旋\n濷\tfai3\t增益\n瀀\tjau1\t(1)沾润；(2)壅积；(3)宽和\n瀙\tcan3\t古河流名\n瀣\thaai6\t沆瀣，沆瀣一气(喻气味相投)\n瀚\thon6\t瀚海，浩瀚，瀚瀚\n瀫\thuk6\t(1)水声；(2)河流名\n瀛\tjing4\t瀛海，瀛台，瀛表，蓬瀛仙境\n潆\tjing4\t潆洄，潆潆\n瀜\tjung4\t冲瀜(水深广的样子)\n濑\tlaai6\t(1)急流；(2)湍急\n泸\tlou4\t四川省市名\n瀡\tseoi5\t滫瀡(用淅米水使食物柔滑)\n潇\tsiu1\t潇洒，潇洒，潇潇\n瀩\tdeoi6\t澹瀩\n瀢\twai5\t瀢瀢(鱼相随而行)\n瀖\tfok3\t(1)水渍；(2)河流名称\n瀗\thin3\t瀗水(河流名称)\n瀿\tfaan4\t水大量流溢\n瀵\tfan3\t水自地下喷涌而出\n瀱\tgai3\t井水\n瀷\tjik6\t(1)河流名；(2)雨后地面积水；(3)水急流\n瀯\tjing4\t水流声\n瀹\tjoek6\t瀹茗，潭瀹，疏瀹\n灁\tjyun1\t同「渊」字\n瀻\tdaai3\t酒不清\n灀\tsoeng1\t杀物\n瀪\tfaan4\t河南省泉名\n沣\tfung1\t沣水(水名)\n灌\tgun3\t灌输，浇灌，灌醉，灌木\n灉\tjung1\t(1)山东省河流名；(2)河水决出复还入者\n灈\tkeoi4\t古水名\n灅\tleoi5\t灅水(水名)\n滠\tsip3\t滠口(地名)水名\n灆\tlaam4\t(1)水流清澈；(2)腌制的瓜菜\n漓\tlei4\t漓江(水名)\n洒\tsaa2\t洒脱，洒水，洒落，洒扫应对，潇洒，挥洒自如\n滩\ttaan1\t河滩，海滩，暗滩\n𪷽\tzaan3\t用水挥洒\n灖\tmei5\t水流貌\n灗\tsin5\t蜿灗(形容水流回旋)\n灛\tzin2\t大水溢出别为小水之名\n灚\tgaau2\t象声词，用以形容挠水声\n灞\tbaa3\t灞桥，灞水，灞陵呵夜，灞陵醉尉，灞陵夜猎\n灏\thou6\t(1)同「浩」字；(2)同「皓」字\n㳕\tlaan4\t同「澜」字\n灟\tzuk1\t泪水\n灢\tnong5\t泱灢\n灨\tgam3\t灨江\n滦\tlyun4\t滦河(河名)，滦县(县名，位于唐山市东北，滦河西岸)\n灦\thin2\t灦涣(水深而清澈)\n滟\tjim6\t潋滟\n灪\twat1\t灪滃(水势大)\n汃\tpaak3\t形容波涛相激荡的声音\n汃\tban1\t(1)古代传说中西方极远处的河川；(2)古代西方极远的国家\n泛\tfaan4\t姓氏\n氶\tcing2\t氶水河(山东省河流名称)\n氶\tsing4\t姓氏\n氶\tzing3\t氶乡(汉代侯国名)\n池\tci4\t池塘，水池，殃及池鱼，终非池中物\n池\tto4\t同「沱」字\n汗\thon4\t可汗，汗国，成吉思汗\n汗\thon6\t汗水，汗青，汗漫，汗颜，汗牛充栋，汗流浃背，汗马功劳，血汗\n污\twaa1\t污尊\n污\twaa1\t下陷\n污\twu1\t污染，贪污\n污\twu3\t酒污\n沉\tcam4\t同「沈」字，指事物没入水中\n沉\tzam6\t同「沈」字，口语读音\n沌\tdeon6\t混沌\n沌\tcyun5\t沌河(水名)，沌口(地名)\n汸\tfong1\t古代河流名称\n汸\tpong4\t形容水势盛大\n汩\tgwat1\t汩乱，汩没\n汩\twat6\t行动迅速的样子\n决\thyut3\t迅疾急速的样子\n决\tkyut3\t决策，解决，一决雌雄，决定，决心，决议，决赛，决战，决斗，决断，决绝，处决，斩立决，悬而未决\n汶\tman4\t同「岷」字\n汶\tman6\t汶莱，汶水(山东省河流名称)\n汥\tkei3\t水泽分流\n汥\tzi1\t水泽积聚的地方\n治\tci4\t治家，治国\n治\tzi6\t治下，治本，治世，治安，治兵，治病，治理，治丧，治装，治罪，治标，治学，治疗，救治，惩治\n沽\tgu1\t沽酒，沽名钓誉，待价而沽\n沽\tgu2\t(1)卖酒者；(2)粗劣\n沽\tgu3\t同「酤」字\n泄\tjai6\t泄沓\n泄\tsit3\t泄底，泄劲，泄恨，泄气，泄漏，泄愤，泄露，发泄\n泧\twut6\t泧漷\n泧\tjyut6\t大水貌\n泡\tpaau1\t泡幻，泡影\n泡\tpaau3\t泡茶，泡饭，浸泡\n泡\tpaau4\t泡溲\n泡\tpou5\t水泡，肥皂泡\n沶\tci4\t同「坻」字\n沶\tji4\t沶水[湖北省河流名称]\n沶\tsi6\t沶乡(古县名)\n泍\tban1\t水流急速\n泍\tban6\t形容泉水涌出的样子\n洞\tdung6\t洞穴，漏洞，洞若观火，洞窟，洞箫，洞穿，洞察，洞悉，洞房，山洞，石洞，空洞，黑洞，仙洞，别有洞天\n洞\ttung4\t澒洞\n洑\tfu3\t洑水\n洑\tfuk6\t回流\n泄\tjai6\t泄泄(和乐的样子)\n洀\tzau1\t水波纹\n洀\tpun4\t同「盘」字\n洒\tsai2\t同「洗」字\n洒\tceoi1\t高峻貌\n洒\tsin2\t(1)整齐、肃敬；(2)深峻、陡峭；(3)寒貌\n洗\tsai2\t洗刷，洗澡，洗净，洗涤\n洗\tsin2\t太子洗马(古代官名)同「冼」字，姓氏\n洵\tseon1\t诚然\n洵\thyun3\t久远\n洼\tgwai1\t姓氏\n活\tkut3\t活活(流水声)\n活\twut6\t生活，活力，快活，天真活泼，苟活，干活，活动\n洝\taan3\t洝水(河流名称)\n洝\taat3\t窏洝(湿润)\n洝\ton3\t温水\n洬\tsok3\t形容风急雨大的样子\n洬\tsuk1\t洬洬(象声词)\n浟\tjau4\t浟浟(水流的样子)\n浟\tdik6\t急速\n浃\tgaap3\t浃渫\n浃\tzip3\t浃洽，汗流浃背\n浭\tgaang3\t涉水口语用字\n浭\tgang1\t浭水河流名\n浪\tlong4\t沧浪\n浪\tlong6\t浪人，浪子，浪花，浪笑，浪费，浪漫，浪语，浪潮，浪荡，波浪，放浪，流浪\n涂\tceoi4\t涂河(安徽省水名)\n浸\tcam1\t浸淫，浸潭\n浸\tzam3\t浸入，浸透，浸渍，浸湿\n浧\tcing2\t涂泥\n浧\tjing5\t泥滓\n洯\tgit3\t同「洁」字\n洯\tkit3\t洯水(河流名称)\n浽\tneoi5\t溾浽(污秽)\n浽\tseoi1\t浽微(小雨)\n浅\tcin2\t深浅，肤浅，轻谈浅唱，浅薄，浅陋，浅色\n浅\tzin1\t流水声\n凉\tloeng4\t天凉，凉快\n凉\tloeng6\t辅佐\n淖\tnaau6\t淖冰，泥淖烂泥\n淖\tzoek3\t淖约姓氏\n混\tgwan2\t同「滚」字\n混\twan4\t同「浑」字\n混\twan6\t混沌，混凝土，龙蛇混杂，混合，混乱\n涴\two3\t(1)污染；(2)弄脏\n涴\tjyun1\t涴市(地名)\n涴\tjyun2\t涴演\n渀\tban1\t同「奔」字\n渀\tban3\t入水\n淉\tgwo2\t淉水(河流名称)\n淉\tgun3\t同「祼」字\n淣\tngaai4\t极际\n淣\tngai4\t水的边际\n湢\tseon4\t湢朴，湢厚\n湢\tbik1\t湢然，湢测\n湛\tdaam1\t湛沔\n湛\tzaam3\t湛清，湛深，湛碧，湛蓝，精湛\n湛\tcam4\t湛渐\n涡\tgwo1\t安徽省河流名称\n涡\two1\t旋涡，涡轮，梨涡浅笑，涡流，水涡，酒涡\n渴\tkit3\t渴泽\n渴\thot3\t饥渴，渴望，望梅止渴，口渴，渴求，渴死，饮鸩止渴，求才若渴\n湣\tfan1\t同「涽」字\n湣\tman5\t同「闵」字，古谥号用字\n汤\tjoeng4\t汤谷\n汤\tsoeng1\t汤汤\n汤\ttong1\t汤池，汤药，汤镬，米汤，肉汤，热汤，赴汤蹈火\n汤\ttong3\t同「烫」字\n浑\tgwan2\t浑浑(同滚滚，水流畅盛的样子)\n浑\twan4\t浑人，雄浑，浑身是胆，浑水，浑厚，浑然，浑圆，浑天仪，浑水摸鱼，浑然天成，浑浑噩噩\n浑\twan6\t浑沌(同混沌)\n湫\tcau1\t湫底\n湫\tzau1\t湫水河\n湫\tziu2\t湫隘\n湔\tzin1\t湔雪，湔洗\n湔\tzin3\t通「溅」字\n渱\tgung3\t水貌\n渱\thung4\t溃渱\n滑\twaat6\t滑行，滑坡，滑翔，滑轮，光滑，润滑，油腔滑调\n滑\tgwat1\t滑稽\n滃\tjung1\t滃江(水名)\n滃\tjung2\t(1)大水沸的样子；(2)云起的样子\n溓\tlim4\t溓溓(水初结冰的样子)\n溓\tlim5\t水平静貌\n溟\tming4\t溟渤，沧溟\n溟\tming5\t溟涬，溟蒙，溟漭\n溱\tceon4\t溱潼，溱水(水名)\n溱\tzeon1\t溱头河\n准\tzeon2\t准备，准则，准时，准确，标准\n准\tzyut3\t隆准\n漎\tcung4\t水流声\n漎\tsung2\t漎漎(迅速)\n漻\tlau4\t漻然清澈\n漻\tliu4\t漻泪，寂漻\n满\tmun5\t满载而归，自满，满目疮痍，满州，心满意足，满怀，密云满布，满城风雨，满月，满腹牢骚，满头大汗，满座，满腔热血，满腹经纶\n满\tmun6\t通「懑」字\n潎\tpik1\t于水中击絮\n潎\tpit3\t水流轻疾的样子\n潎\tpiu3\t同「漂」字\n漂\tpiu1\t漂泊，漂流，漂浮，漂沦，漂鸟，漂萍，漂洋过海\n漂\tpiu3\t漂白，漂亮，漂染\n渐\tcaam4\t渐渐之石\n渐\tzim1\t渐染，渐渍，渐泽，渐仁摩谊，西风东渐\n渐\tzim6\t渐进，渐渐，渐变，渐入佳境，逐渐，防微杜渐\n漹\tjin1\t同「鄢」字\n漹\tjin4\t漹水(古河流名称)\n潳\tzaa1\t用于形容东西沾湿气的状态\n潳\ttou4\t潳山(湖北省山名)\n澄\tdang6\t使液体中的杂质沉淀分离\n澄\tcing4\t澄清，澄澈\n𣸣\tfan4\t水边\n𣸣\tpan3\t𣸣泉\n涝\tlou4\t(1)水名；(2)大波\n涝\tlou6\t涝灾，涝害，涝倒\n潲\tsaau3\t潲水，猪潲\n潲\tsiu6\t风吹雨斜洒\n潬\ttaan1\t水中沙堆\n潬\tsin5\t宛潬\n潪\tzi3\t潪水(河流名称)\n潪\tzik6\t水稍为渗入土中\n潐\tciu4\t潐水(河流名称)\n潐\tziu2\t滤酒\n潐\tziu3\t水尽\n濎\tding2\t濎泞\n濎\tting5\t濎濴\n濊\twai3\t汪濊\n濊\tkut3\t濊濊\n瀄\tzit1\t粤语用字，意为挤水射出\n瀄\tzit3\t瀄汨，泌瀄\n𫞚\tci4\t𫞚水(古河流名称)\n𫞚\tzi1\t(1)久雨积水；(2)湖南省河流「资水」的别称\n滥\thaam5\t滥泉\n滥\tlaam6\t滥用，泛滥，滥调，滥竽充数，宁缺勿滥\n濞\tbai3\t漾濞，澎濞，滂濞象声词\n濞\tpei3\t象声词，形容水暴至声\n濩\twok6\t煮\n濩\twu6\t布散\n济\tzai2\t济南，济济一堂\n济\tzai3\t济世，经济，和衷共济，济时，济贫，接济，刚柔并济，缓不济急\n濭\thap1\t依据\n濭\toi3\t晻濭(云气郁阴)\n濭\tkoi3\t船遇沙搁浅\n瀑\tbou6\t河北省河流名称\n瀑\tbuk6\t瀑布，飞瀑\n渎\tdau6\t通「窦」字\n渎\tduk6\t渎神，渎职，亵渎，轻渎，自渎；(1)轻慢、不敬；(2)小沟；(3)弄污\n瀁\tjoeng5\t沆瀁\n瀁\tjoeng6\t同「漾」字\n溅\tzin1\t溅溅即「浅浅」的意思\n溅\tzin3\t飞溅，水花四溅\n瀎\tmit6\t瀎泧(即瀎潏)\n瀎\tmut6\t同「抹」字\n濒\tban1\t同「滨」字\n濒\tpan4\t濒临，濒危\n瀼\tjoeng4\t甘露瀼瀼，瀼瀼湿湿\n瀼\tjoeng6\t四川省河流名称\n澜\tlaan4\t波澜，波澜壮阔，推波助澜\n澜\tlaan6\t澜漫\n瀤\twaai1\t溛瀤(流水起伏不平)\n瀤\twaai4\t瀤水(北方河流名称)\n漤\tlaam5\t(1)把柿子放于热水或石灰水中泡几天，去掉涩味；(2)用盐腌\n漤\tlaam6\t同「滥」字\n汀\tding1\t「汀ting1」的异读字\n汀\tting1\t汀洲，沙汀，绿汀\n汆\tmei6\t「汆cyun1」的异读字，粤语用字，意谓「潜水」\n汆\tcyun1\t汆汤，汆丸子，汆黄瓜片\n泛\tfaan4\t「泛faan3」的异读字\n汔\that1\t「汔ngat6」的异读字\n汔\tngat6\t(1)庶几；(2)差不多\n沆\thong4\t沆瀣一气\n沆\thong6\t「沆hong4」的异读字\n汞\thung3\t「汞hung6」的异读字\n汞\thung6\t水银的别名\n没\tmei6\t「没mut6」的异读字\n没\tmut6\t没收，没落，没用，没头没脑，没精打采，没没无闻\n泊\tbaak3\t「泊bok6」的异读字\n泊\tpaak3\t「泊bok6」的异读字\n泊\tbok6\t水泊，停泊，湖泊，澹泊，飘泊，落泊，血泊\n泅\tcau4\t泅水，泅渡\n泅\tjau4\t「泅cau4」的异读字\n法\tfaat3\t法律，法院，法案，法官，法庭，法网，法术\n法\tfat3\t「法faat3」的异读字\n泃\tgau1\t「泃geoi3」的异读字\n泃\tgeoi3\t泃河(河名)\n泃\tkeoi1\t「泃geoi3」的异读字\n泑\tjau2\t窑器虫之幼体\n泑\tjau3\t「泑jau2」的异读字\n泱\tjoeng1\t泱泱\n泱\tong1\t「泱joeng1」的异读字\n泱\tngong1\t「泱joeng1」的异读字\n沴\tlai6\t「沴leoi6」的异读字\n沴\tleoi6\t沴孽，沴气，灾沴\n沫\tmut3\t「沫mut6」的异读字\n沫\tmut6\t泡沫，唾沫\n泗\tsei3\t「泗si3」的异读字\n泗\tsi3\t鼻泗，涕泗，涕泗交流，悲泗淋漓鼻涕\n泲\tzai2\t「泲zai3」的异读字\n泲\tzai3\t泲水(水名)\n泲\tzi2\t「泲zai3」的异读字\n沾\tzim1\t沾染，沾光，沾沾自喜，沾水，沾湿，沾污，沾上，沾粘，沾湿，沾污\n沾\ttip3\t「沾zim1」的异读字\n沝\tceoi4\t「沝zeoi2」的异读字\n沝\tzeoi2\t二水\n泚\tcai2\t「泚ci2」的异读字\n泚\tci2\t泚笔\n洧\twai5\t「洧fui2」的异读字\n洧\tfui2\t洧川(地名)\n洎\tgei3\t到\n洎\tgei6\t「洎gei3」的异读字\n洎\tkei3\t「洎gei3」的异读字\n洫\tgwik1\t田间小道\n洫\tkwik1\t「洫gwik1」的异读字\n洽\thaap6\t「洽hap6」的异读字\n洽\tap1\t「洽hap6」的异读字\n洽\thap1\t「洽hap6」的异读字\n洽\thap6\t洽谈，洽闻，洽比其邻，和洽，面洽，融洽\n洨\thaau4\t「洨ngaau4」的异读字\n洨\tngaau4\t洨河(水名)\n洟\ttai3\t「洟ji4」的异读字\n洟\tji4\t涕洟\n洱\tnei2\t「洱ji5」的异读字\n洱\tji5\t普洱，洱海(云南湖名)\n洹\twun4\t洹水(河南省水名)\n洹\tjyun4\t「洹wun4」的异读字\n洛\tlok3\t洛阳(地名)，洛河(水名)\n洛\tlok6\t「洛lok3」的异读字\n洙\tsyu4\t「洙zyu1」的异读字\n洙\tzyu1\t洙水(水名)\n洊\tzin3\t屡次\n洊\tzin6\t「洊zin3」的异读字\n洈\tgwai2\t「洈ngai4」的异读字\n洈\tngai4\t洈水(河流名称)\n涑\tcuk1\t涑水，涑水先生(司马光别号)山西省河流名称\n涑\tsuk1\t「涑cuk1」的异读字\n洚\tgong3\t洚水\n洚\thong4\t「洚gong3」的异读字\n洚\thung4\t「洚gong3」的异读字\n浰\tlei6\t「浰lin6」的异读字\n浰\tlin6\t凄浰\n涊\tnan2\t「涊nin5」的异读字\n涊\tnin5\t形容出汗\n浦\tpou2\t浦口，浦东，合浦还珠\n浦\tpou4\t「浦pou2」的异读字\n浣\twun2\t「浣wun5」的异读字\n浣\twun5\t浣衣，浣纱，浣熊，浣涤\n浚\tseon3\t「浚zeon3」的异读字\n浚\tzeon3\t同「濬」字\n浞\tzok6\t寒浞\n浞\tzuk1\t「浞zok6」的异读字\n洍\tci5\t通「汜」字\n洍\tji4\t「洍ci5」的异读字\n涍\thaau1\t「涍haau3」的异读字\n涍\thaau3\t涍水(古河流名称)\n清\tceng1\t「清cing1」的异读字\n清\tcing1\t清水，澄清，清明节，清静，清洁，清楚，清廉\n淬\tceoi3\t淬火，淬火磨砺\n淬\tseoi6\t「淬ceoi3」的异读字\n淙\tcung4\t淙淙，淙琤\n淙\tcung6\t「淙cung4」的异读字\n淙\tzung1\t「淙cung4」的异读字\n涷\tdung1\t涷雨\n涷\tdung3\t「涷dung1」的异读字\n淝\tfai6\t「淝fei4」的异读字\n淝\tfei4\t淝水，淝水之战\n淦\tgaam3\t「淦gam3」的异读字\n淦\tgam3\t淦水姓氏\n涫\tgun1\t「涫gun3」的异读字\n涫\tgun3\t滚沸\n涬\thang5\t「涬hang6」的异读字\n涬\thang6\t涬溟\n液\tjat6\t「液jik6」的异读字\n液\tjik6\t液化，液态，液体，汁液，血液，唾液\n淤\tjyu1\t淤泥，淤塞，淤滞\n淤\tjyu2\t「淤jyu1」的异读字\n淤\tjyu3\t「淤jyu1」的异读字\n涸\thok6\t「涸kok3」的异读字\n涸\tkok3\t涸干，涸鲋，涸辙\n涯\tngaai4\t涯涘，生涯\n涯\tji4\t「涯ngaai4」的异读字\n涾\tdaap6\t涾沱(水波推涌的样子)\n涾\ttaap3\t「涾daap6」的异读字\n净\tzeng6\t「净zeng6」的异读字，用于「干净」一词\n净\tzing6\t净土，净化，净重，干净\n渥\tak1\t渥味，优渥\n渥\tngak1\t「渥ak1」的异读字\n湃\tbaai3\t「湃paai3」的异读字\n湃\tpaai3\t澎湃，心情澎湃，淘涌澎湃，浪涛澎湃象声词，形容波涛相冲击的声势\n测\tcaak1\t「测cak1」的异读字\n测\tcak1\t测字，测度，测量，测试，测验，推测，预测\n渧\tdai3\t(1)水慢慢渗下；(2)滴水；(3)哭泣\n渧\tdik6\t「渧dai3」的异读字\n湩\tdung3\t(1)浮汁；(2)鼓声\n湩\tdung6\t「湩dung3」的异读字\n湩\tzung3\t「湩dung3」的异读字\n沨\tfung1\t「沨fung4」的异读字\n沨\tfung4\t(1)水声；(2)风声；(3)形容乐声婉转悠扬\n渲\thyun1\t「渲syun3」的异读字\n渲\tsyun1\t「渲syun3」的异读字\n渲\tsyun3\t渲染，渲房，打渲\n湮\tjan1\t湮没，湮灭，湮没无闻\n湮\tjin1\t「湮jan1」的异读字\n游\tjau4\t游泳，游离，游刃有余，游手好闲，上游，优游\n游\tjau6\t「游jau4」的异读字\n渰\tjim1\t「渰jim2」的异读字\n渰\tjim2\t渰博\n湲\twun4\t潺湲，湲湲\n湲\tjyun4\t「湲wun4」的异读字\n溉\tgoi3\t「溉koi3」的异读字\n溉\tkoi3\t溉田，灌溉\n渜\tnyun5\t热水\n渜\tnyun6\t「渜nyun5」的异读字\n湓\tpun4\t(1)水名，在江西省；(2)水往上涌\n湓\tpun6\t「湓pun4」的异读字\n渻\tsaang2\t(1)减少；(2)水门；(3)水名；(4)姓氏\n渻\tsing2\t「渻saang2」的异读字\n湜\tsat6\t「湜zik6」的异读字\n湜\tzik6\t湜湜(水清澈貌)，皇甫湜(唐古文家)\n溲\tsau1\t小便\n溲\tsau2\t「溲sau1」的异读字\n湑\tseoi1\t「湑seoi2」的异读字\n湑\tseoi2\t(1)露貌；(2)盛貌\n湍\tteon1\t湍急，湍流\n湍\tcyun2\t「湍teon1」的异读字\n湍\ttyun1\t「湍teon1」的异读字\n湍\tzyun2\t「湍teon1」的异读字\n湋\twai4\t湋水，湋源口\n湋\twai5\t「湋wai4」的异读字\n湀\tgwai2\t「湀kwai5」的异读字\n湀\tkwai1\t「湀kwai5」的异读字\n湀\tkwai5\t湀辟(通流大川)\n渮\tgo1\t渮水(山东省古河流名称)\n渮\tho4\t「渮go1」的异读字\n滁\tceoi4\t滁县(安徽省县名)\n滁\tcyu4\t「滁ceoi4」的异读字\n滇\tdin1\t「滇tin4」的异读字\n滇\ttin4\t滇池，滇红，滇剧\n沟\tgau1\t「沟kau1」的异读字\n沟\tkau1\t沟洫，沟通，沟渠，沟壑，阴沟\n溘\thap1\t「溘hap6」的异读字\n溘\thap6\t溘然，溘逝\n溔\tngaau5\t「溔ngaau5」的异读字\n溔\tjiu5\t灏溔\n溜\tlau4\t「溜lau6」的异读字\n溜\tlau6\t溜口，溜子，溜走，溜冰，溜糟，溜之大吉，溜须拍马，滑溜\n溜\tliu1\t「溜lau6」的异读字\n滂\tpong1\t滂洋，滂沛，滂渤，滂泽，滂濞，滂湃，滂沱大雨\n滂\tpong4\t「滂pong1」的异读字\n滍\tzi3\t「滍zi6」的异读字\n滍\tzi6\t滍阳(河南省地名)\n溾\twaai1\t溾浽(污秽)\n溾\twui6\t「溾waai1」的异读字\n滮\tbiu1\t「滮piu4」的异读字\n滮\tpiu4\t水流动的样子\n漼\tceoi1\t「漼ceoi2」的异读字\n漼\tceoi2\t(1)水深貌；(2)涕泪流下的样子\n滴\tdik1\t滴水，滴血，滴水不漏，滴酒不沾，水滴石穿\n滴\tdik6\t「滴dik1」的异读字\n漷\tgwok3\t「漷kwok3」的异读字\n漷\tkwok3\t河流名\n漪\tji1\t漪澜，清漪，涟漪水面的波纹\n漪\tji2\t「漪ji1」的异读字\n演\tjin2\t「演jin5」的异读字\n演\tjin5\t演变，表演，演武修文，演化，演说，演讲，演奏，演习，演义，演绎，演算，饰演，推演，扮演，导演，历史重演，自导自演\n漫\tmaan4\t「漫maan6」的异读字，用于「漫漫」和「漫天」等词\n漫\tmaan6\t漫步，散漫，浪漫主义，漫画，漫长，弥漫，漫山遍野，漫不经意\n漰\tpaang1\t漰沛，漰泙，漰渤\n漰\tpeng1\t「漰paang1」的异读字\n滫\tsau1\t「滫sau2」的异读字\n滫\tsau2\t滫瀡，兰芷渐滫酸臭的淘米水\n滫\tsau3\t「滫sau2」的异读字\n漱\tsau3\n漶\twaan6\t曼漶\n漶\twun6\t「漶waan6」的异读字\n渍\tzi3\t血渍，浸渍，渍麻\n渍\tzi6\t「渍zi3」的异读字\n渍\tzik1\t「渍zi3」的异读字，口语读音\n涨\tzoeng2\t「涨zoeng3」的异读字\n涨\tzoeng3\t涨潮，水涨船高，涨价，高涨\n潨\tcung4\t水汇流的地方\n潨\tzung1\t「潨cung4」的异读字\n滗\tbat1\t滤去渣滓\n滗\tbei3\t「滗bat1」的异读字\n涧\tgaan2\t「涧gaan3」的异读字\n涧\tgaan3\t溪涧，山涧\n潝\thap1\t「潝jap1」的异读字\n潝\tjap1\t潝潝訿訿(朋比为奸，众口附和。出《诗．小雅．小旻》)水流快速貌\n潝\tkap1\t「潝jap1」的异读字\n澎\tpaang1\t「澎paang4」的异读字\n澎\tpaang4\t澎湃，澎濞，澎湖(县名)象声词，形容波涛相冲击的声势\n潸\tsaan1\t潸潸，潸然泪下\n潸\tsaan2\t「潸saan1」的异读字\n潸\tsim2\t「潸saan1」的异读字\n澌\tsi1\t澌灭，澌尽，流澌，澌尽泯灭竭尽､灭绝\n澌\tsi3\t「澌si1」的异读字\n𫞗\tman5\t「𫞗mui5」的异读字\n𫞗\tmui5\t(1)同「浼」字；(2)形容水流平缓\n濈\tcap1\t濈濈\n濈\tzap1\t「濈cap1」的异读字\n澡\tcou3\t「澡zou2」的异读字\n澡\tzou2\t洗澡，澡堂，澡盆，洗澡\n澽\tgeoi3\t「澽geoi6」的异读字\n澽\tgeoi6\t澽水(水名)\n浓\tjung4\t「浓nung4」的异读字\n浓\tnung4\t浓淡，浓郁，浓妆艳抹，浓密，浓缩\n浍\tkui2\t田间的水沟\n浍\tkui3\t「浍kui2」的异读字\n濇\tsaap3\t「濇sik1」的异读字\n濇\tsap1\t「濇sik1」的异读字\n濇\tsik1\t濇滞，羞濇，濇脉，濇讷\n濇\tgip3\t「濇sik1」的异读字\n濮\tbuk1\t「濮buk1」的异读字\n濮\tbuk6\t濮阳县\n涩\tsaap3\t涩味，涩讷，涩体，苦涩，晦涩，艰涩\n涩\tsap1\t「涩saap3」的异读字\n涩\tsik1\t「涩saap3」的异读字\n涩\tgip3\t「涩saap3」的异读字\n濔\tmei4\t「濔mei5」的异读字\n濔\tmei5\t濔迤\n瀌\tbiu1\t雨雪瀌瀌(诗经˙小雅˙角弓)雨雪盛多貌\n瀌\tpiu4\t「瀌biu1」的异读字\n滢\tjing3\t「滢jing4」的异读字\n滢\tjing4\t水清澈的样子\n泻\tse2\t「泻se3」的异读字\n泻\tse3\t泻药，倾泻，一泻千里，泻肚，腹泻，满泻，崩泻，银河倒泻\n沥\tlik1\t「沥lik6」的异读字\n沥\tlik6\t沥血，沥青，沥陈，沥胆披肝，呕心沥血\n瀺\tcaam4\t瀺灂\n瀺\tzaam6\t「瀺caam4」的异读字\n瀴\tjing1\t瀴溟\n瀴\tjing2\t「瀴jing1」的异读字\n潋\tlim5\t「潋lim6」的异读字\n潋\tlim6\t潋滟\n弥\tmei4\t「弥nei4」的异读字\n弥\tmei5\t「弥nei4」的异读字\n弥\tnei4\t弥迤，弥漫，弥弥，弥山遍野\n瀸\tcim1\t「瀸zim1」的异读字\n瀸\tzim1\t(1)浸渍；(2)和洽；(3)泉水时有时无\n灊\tcam4\t「灊cim4」的异读字\n灊\tcim4\t浅水貌\n瀳\tzin1\t「瀳zin6」的异读字\n瀳\tzin6\t(1)水流涌至；(2)河流名\n湾\twaan1\t河湾，海湾，港湾\n湾\twaan4\t「湾waan1」的异读字\n汋\tcoek3\t同「婥」字\n汋\tjoek6\t「汋zoek3」的异读字\n汋\tzoek3\t(1)井；(2)水声\n沏\tcai1\t「沏cai3」的异读字\n沏\tcai3\t沏茶\n沏\tkeoi1\t「沏cai3」的异读字\n沏\tcit3\t水声\n沈\tcam4\t沉没，浮沈\n沈\tsam2\t姓氏\n沈\tzam3\t「沈cam4」的异读字\n汻\tgon1\t姓氏\n汻\thong5\t「汻gon1」的异读字\n汻\tfu2\t同「浒」字\n泌\tbai3\t「泌bat6」的异读字\n泌\tbat1\t泌瀄(水流貌)\n泌\tbat6\t泌水(河南省河流名)，泌阳(河南省县名)\n泌\tbei3\t泌尿，分泌，泌乳\n泜\tci4\t「泜zi1」的异读字\n泜\tzi1\t泜河(河北省水名)\n泜\tzi6\t河南省水名\n泛\tfaan3\t泛滥，空泛，泛泛之交，泛音，泛论\n泛\tfung2\t同「覂」字\n泛\tfung3\t「泛fung2」的异读字\n泬\thyut3\t泬寥\n泬\tjyut6\t「泬hyut3」的异读字\n泬\tkyut3\t回泬\n泥\tnai4\t泥土，印泥\n泥\tnai5\t泥泥(形容露水浓重)\n泥\tnai6\t「泥nei6」的异读字\n泥\tnei6\t拘泥\n沮\tceoi1\t「沮zeoi1」的异读字\n沮\tzeoi1\t沮诵\n沮\tzeoi2\t沮丧\n沮\tzeoi3\t沮洳，沮泽\n沮\tzeoi6\t「沮zeoi2」的异读字\n泏\tfat1\t蓄水池\n泏\tzeot1\t「泏zyut3」的异读字\n泏\tzyut3\t水向外流出\n洮\tjiu4\t洮湖(即江苏省长塘湖)\n洮\ttou1\t「洮tou4」的异读字\n洮\ttou4\t洮汰，洮砚，临洮县(甘肃省地名)\n洷\tzat6\t魏渎洷(河流名称)\n洷\tzi3\t湿润\n洷\tdit6\t「洷zat6」的异读字\n涌\tcung1\t小河\n涌\tjung2\t涌泉，涌现，汹涌\n涌\tjung5\t涌裔「涌jung2」的异读字\n涀\tgaan2\t「涀gin2」的异读字\n涀\tgin2\t小水沟\n涀\tjin6\t涀水(古河流名称)\n淡\tdaam6\t淡漠，暗淡，冷淡，淡季，淡泊名利，浓装淡抹\n淡\ttaam4\t同「痰」字\n淡\ttaam5\t「淡daam6」的异读字，特别用于「咸淡」及其衍生的词语\n淡\tjim5\t流水淡淡\n淢\tgwik1\t同「洫」字\n淢\tkwik1\t「淢gwik1」的异读字\n淢\twik6\t急流\n淰\tnaam5\t农具\n淰\tnam4\t口语用字\n淰\tsam2\t淰淰\n淰\tnim2\t(1)「淰naam5」的异读字；(2)「淰sam2」的异读字\n淜\tpaang1\t「淜ping1」的异读字\n淜\tpang4\t涉水过河\n淜\tping1\t淜滂\n涮\tsaan3\t涮羊肉，涮涮手\n涮\thyun1\t同「谖」字\n涮\tsyun3\t「涮saan3」的异读字\n涌\tcung1\t小河\n涌\tjung2\t涌泉，涌现，汹涌\n涌\tjung5\t「涌jung2」的异读字\n溺\tnik1\t「溺nik6」的异读字\n溺\tnik6\t溺志，溺信，溺爱，溺职，沉溺\n溺\tniu6\t同「尿」字\n滊\thei3\t滊水(河流名称)\n滊\thit3\t盐地\n滊\tkit3\t「滊hit3」的异读字\n沤\tau1\t浮沤\n沤\tau3\t沤麻\n沤\tngau1\t「沤au1」的异读字\n沤\tngau3\t「沤au3」的异读字\n漯\ttaap3\t漯河(古时黄河一支流，今不复存)\n漯\tleoi5\t水名\n漯\tlo4\t漯河(市名，于今河省南)\n漯\tlok3\t「漯lo4」的异读字\n浒\theoi2\t浒墅关\n浒\tfu2\t「浒wu2」的异读字\n浒\twu2\t水边\n浇\tgiu1\t浇水，浇漓，浇筑，浇灌，浇铸，浇薄\n浇\thiu1\t「浇giu1」的异读字\n浇\tjiu6\t「浇ngou6」的异读字\n浇\tngou6\t姓氏\n潏\twat6\t潏湟，潏露\n潏\tjyut6\t「潏wat6」的异读字\n潏\tkyut3\t河流名\n漦\tlei4\t龙的涎沫\n漦\tci4\t「漦lei4」的异读字\n漦\ttoi1\t陕西省地名\n潦\tliu2\t「潦liu4」的异读字\n潦\tliu4\t潦草\n潦\tliu5\t「潦liu4」的异读字\n潦\tlou5\t潦倒，潦水，水潦(积水)，旱潦(二灾)\n潦\tlou6\t同「涝」字\n漀\thing1\t「漀king1」的异读字\n漀\tking1\t斜倾器具把酒倒出来\n漀\tking2\t侧出的泉水\n澹\tdaam6\t澹泊，澹然，澹淡\n澹\ttaam4\t姓氏，「澹台」、「澹台」\n澹\ttaam5\t「澹daam6」的异读字\n澳\tou3\t澳门\n澳\tngou3\t「澳ou3」的异读字\n澳\tjuk1\t水边弯曲的地方\n渑\tman5\t渑池\n渑\tmin5\t「渑man5」的异读字\n渑\tsing4\t山东省河流名称\n澶\tdaan6\t澶漫\n澶\tsim4\t「澶sin4」的异读字\n澶\tsin4\t澶渊\n澫\tmaan4\t「澫maan6」的异读字\n澫\tmaan6\t同「漫」字\n澫\tngaau5\t同「藕」字\n濬\tseon3\t河南省县名\n濬\tzeon3\t濬井，疏濬\n濬\tzeon6\t「濬zeon3」的异读字\n泺\tbaak3\t「泺pok3」的异读字\n泺\tbok6\t「泺pok3」的异读字\n泺\tlok6\t山东省河流名称\n泺\tpok3\t同「泊」字\n泷\tsoeng1\t泷冈，泷水河川名。源出湖南省临武县西，流入广东省，合于东江\n泷\tlong4\t「泷lung4」的异读字\n泷\tlung4\t泷夫，泷船；(1)下雨貌；(2)湍急的河流\n灂\tziu3\t眼睛昏蒙\n灂\tcoek3\t「灂zok6」的异读字\n灂\tzok6\t瀺灂，霰雨灂灂，漰湱泶灂\n灥\tceon4\t(1)三泉；(2)众流\n灥\tcyun1\t「灥ceon4」的异读字\n灥\tcyun4\t同「泉」字\n火\tfo2\t火焰，军火，薪火相传，火药，火警，火灾，火锅，火山，火箭，火化，火花，火腿，火鸡，火舌，火炬，火光，火炉，火海，火石，火柴，火种，火把，砲火，火并，火坑，火候，火星，火堆，火车站，火葬场，导火线，火上加油，火冒三丈，火树银花，打得火热\n灰\tfui1\t灰色，灰尘，灰烬，灰心，灰暗，灰复，灰头土脸，心灰意冷，灰飞烟灭\n灱\thaau1\t(1)干枯；(2)暴；(3)热\n灸\tgau3\t针灸\n灴\thung3\t烤干\n灾\tzoi1\t灾害，灾难，天灾人祸，灾厄，灾情，灾变，灾区，灾民，灾胞，灾殃\n灶\tzou3\t炉\n炒\tcaau2\t炒菜，炒饭，炒地皮，炒蛋，炒作\n炎\tjim4\t炎热，炎夏，炎黄子孙，炎炎夏日，世态炎凉\n炆\tman1\t方言用字，意指「用微火炖食物」\n炓\ttau3\t粤语用字，意为起火于炉中\n炑\tmuk6\t火炽盛\n炚\tgwong1\t同「光」字\n炂\tzung1\t(1)热化；(2)暍仆；(3)熟汁\n炄\tnau5\t半干\n炳\tbing2\t光明\n炵\tdung1\t火威貌\n炬\tgeoi6\t火炬\n炯\tgwing2\t炯然，炯诫，炯鉴，炯心，炯炯有神明亮\n炭\ttaan3\t木炭，炭化，炭精\n炱\ttoi4\t松炱\n炸\tzaa3\t炸弹，炸药，炸毁，炸掉\n炷\tzyu3\t炷香\n炡\tzing1\t炡爚(火光)\n炟\tdaat3\t(1)人名用字；(2)爆；(3)火起\n炴\tjoeng2\t火光\n炩\tling6\t炩火\n炾\tfong2\t爌炾(宽阔明亮)\n缹\tfau2\t缹粥\n烚\thap6\t火的样子\n烈\tlit6\t烈酒，烈士，烈火，烈日\n烔\ttung4\t烔炀河(安徽省地名)\n乌\twu1\t乌鱼，乌合之众，乌天黑地\n烢\tzaak6\t裂开\n烝\tzing1\t烝民，烝黎，熏烝；(1)众多；(2)同「蒸」字；(3)与长辈妇女通奸\n烡\tgwong1\t同「光」字\n烎\tjam4\t光明\n烒\tsik1\t火的样子\n烓\tgwing2\t(1)古时一种可移动的火炉；(2)光明；(3)姓氏\n烞\tpok3\t象声词，形容爆裂声\n烠\twui4\t光\n烍\tsin2\t火烧杂草\n烅\tkwik1\t火光\n烆\thang4\t火炬\n烇\tcyun3\t火貌\n烑\tjiu4\t光，明亮\n烗\thoi1\t炽热\n焄\tfan1\t焄蒿\n烰\tfau4\t气出盛貌\n烽\tfung1\t烽火，烽烟，烽火连天\n焗\tguk6\t一种烹饪方法\n焓\tham4\t焓洸(广东省地名)\n烯\thei1\t一种有机化合物\n烺\tlong5\t明朗\n焐\tng6\t偎暖\n烹\tpaang1\t烹饪，烹调，烹煮\n焂\tsuk1\t火光晃动的样子\n烳\tpou2\t(1)火貌；(2)持灯、炬等行进\n烼\tfat1\t(1)干；(2)煴；(3)火煨起的样子\n焆\tgyun1\t明亮\n烸\thoi2\t干燥\n焀\thuk6\t火貌\n烿\tjung4\t(1)火气；(2)火红色\n焍\tdai6\t灼龟木。古代用荆枝灼龟，以占卜吉凶\n焋\tzong3\t(1)装米入甑；(2)熏蒸\n烶\tting5\t火貌\n焎\tcit3\t火焰燃烧\n焙\tbui6\t焙干\n焱\tjim6\t火花\n烻\tjin3\t火光炽盛\n然\tjin4\t然而，当然，道法自然，然后，忽然，勃然大怒，不以为然，庞然大物，毛骨耸然，茫然若失\n焦\tziu1\t焦点，心焦，焦头烂额，焦虑，焦急，焦黑，焦躁，焦距，焦炭，焦黄，焦油，焦耳，焦灼，焦土政策\n煮\tzyu2\t煮饭，煮沸，煮酒，煮鹤焚琴\n焟\tsik1\t干\n焲\tjik6\t火光\n焢\thung1\t火气貌\n焛\tleon6\t火貌\n焨\tfung3\t火焰燃烧时发放的热气\n焺\tsing1\t焺点(鼓铸)\n煲\tbou1\t瓦煲，煲饭\n煍\tciu2\t烟董黑了\n烦\tfaan4\t烦恼，烦琐，心烦意乱，烦躁，烦闷，烦言，烦忧，烦心，烦扰，烦请，烦难\n煚\tgwing2\t日光\n烟\tjin1\t烟雾，烟草，烟斗，烟消云散，烟幕，烟花，烟雾迷漫\n茕\tking4\t茕独，茕茕\n炼\tlin6\t炼油，炼制，炼狱\n煝\tmei6\t(1)酷热；(2)以质粗易燃的纸搓成圆条，供引火之用\n煤\tmui4\t煤气，煤炭，煤焦\n煞\tsaat3\t煞费苦心，煞气，煞星，恶煞\n煔\tsim2\t闪烁\n煋\tsing1\t(1)火热；(2)火烈\n炜\twai5\t光明\n煟\twai6\t(1)光明的样子；(2)火光；(3)旺盛\n煌\twong4\t煌煌，辉煌\n煨\twui1\t煨白薯，煨鸡\n焕\twun6\t焕然一新，焕发，炳焕\n煎\tzin1\t煎熬，煎药\n照\tziu3\t照顾，照片，照料，照拂，照本宣科\n煂\thaak1\t燃烧\n煡\tzeon6\t同「烬」字，，「煡」是「烬」的俗字\n煐\tjing1\t人名用字\n煃\tkwai2\t火貌\n煰\tcou3\t同「燥」字，「煰」是「燥」的俗字\n煓\ttyun1\t火炽盛的样子\n煄\tzung2\t火烧起\n煪\tcau4\t火貌\n炝\tcoeng3\t一种烹饪方法\n熀\tfong2\t爌熀\n熙\thei1\t熙来攘往，熙攘，熙熙攘攘；(1)光明；(2)和乐；(3)兴起；(4)嬉戏\n熊\thung4\t火光熊熊，虎背熊腰，梦熊之喜，狗熊，熊猫，熊掌，熊心豹胆\n荧\tjing4\t荧光，荧屏\n熔\tjung4\t同「镕」字\n熄\tsik1\t熄灭，熄火，熄灯\n煽\tsin3\t煽动，煽情，煽火，煽风点火\n煻\ttong4\t煻煨\n熆\thap6\t吹火\n𤈶\twan4\t形容黄色的样子\n𪸕\thei3\t放火烧除野草\n熐\tmik6\t熐蠡(匈奴村落)\n熁\thip3\t熏烤\n熛\tbiu1\t熛风，熛炭，熛起\n颎\tgwing2\t光明\n热\tjit6\t热闹，热心，热情，热爱，热忱，热诚，热衷\n熳\tmaan6\t烂熳\n熵\tsoeng1\t熵定律，热力熵，信息熵；(1)物理学名词，指绝对温度除热能秏损所得之商，以衡量热力体系热能的散离程度；(2)科学名词，用以表示某些物质系统状态的一种量度，或说明其可能出现的程度\n熟\tsuk6\t熟悉，熟知，熟练，熟稔，熟谙，熟络，熟手，熟能生巧，成熟\n熥\ttung1\t蒸热已熟的食物\n熞\tgin1\t把烧红的铁浸入水中淬火\n𤋏\tlau4\t火炎\n熚\tbat1\t象声词，形容火爆裂声\n熪\tji4\t火不绝貌\n熧\tzung1\t火行穴中\n熝\tluk6\t提炼\n熩\twu6\t光\n熤\tjik6\t人名用字\n燖\tcam4\t沈肉于汤；以汤沃毛令脱\n炽\tci3\t炽烈，炽热，炽盛\n灯\tdang1\t灯光，灯塔，灯笼，灯火，灯谜，灯芯\n燔\tfaan4\t(1)焚烧；(2)烤\n熹\thei1\t熹微，熹平\n燃\tjin4\t燃烧，点燃，燃眉之急，燃料，燃油，煮豆燃萁\n烨\tjip6\t烨然，烨煜，炜烨\n燐\tleon4\t同「磷」字\n燊\tsan1\t炽盛\n烧\tsiu1\t烧毁，烧毁，烧伤，烧死，烧掉，烧饭\n烫\ttong3\t烫伤，烫手山芋，烫发，烫手，烫金，烫洗，烫斗\n熸\tzim1\t(1)火熄灭；(2)军队溃败\n熼\tjik6\t火光\n燆\thiu1\t(1)火行；(2)炎热之气\n燛\tgwing2\t同「煚」字\n熽\tsiu3\t火炽盛貌\n燇\tzeon3\t同「焌」字，意指燃烧的火焰\n灿\tcaan3\t灿烂\n燥\tcou3\t燥热，干燥\n燡\tjik6\t光明的样子\n营\tjing4\t营业，营养，营救，营役，营生，营火，营利，结党营私，钻营\n燧\tseoi6\t燧人氏，燧石，烽燧，边燧；(1)古代取火用的器具；(2)古时边防举烟警示的讯号\n毁\twai2\t焚毁\n烩\twui6\t烩饭，大杂烩，烩三鲜\n烛\tzuk1\t烛光，蜡烛，烛火，烛台\n燢\thok6\t燥\n燰\twui1\t同「煨」字，，「燰」是「煨」的俗字\n燱\tjik1\t人名用字\n燨\thei1\t同「爔」字，「燨」是「爔」的俗字\n燲\thip3\t火气\n熏\tfan1\t熏炙，烟熏，熏鱼儿，熏肉，熏赫\n爁\tlaam6\t(1)焚烧；(2)火的样子；(3)烤炙\n燹\tsin2\t兵燹\n燽\tcau4\t显著\n爂\tbiu1\t轻脆\n𫞡\twing4\t人名用字\n爅\tmak6\t火貌、光貌\n爔\thei1\t(1)火；(2)同「曦」字\n炉\tlou4\t炉灶，炭炉，炉火纯青，炉床，炉渣\n爚\tjoek6\t煜爚，灼爚\n烂\tlaan6\t烂漫，腐烂，破烂，溃烂\n爙\tjoeng5\t火、火星\n爞\tcung4\t旱热之气\n爟\tgun3\t举火\n爢\tmei4\t同「糜」字\n爣\ttong2\t爣烺(火光明亮的样子)\n爦\tlaam5\t大乱\n爩\twat1\t(1)烟出；(2)烟气\n𫞠\tling4\t形容火光的样子\n爨\tcyun3\t分爨，爨室(厨房)，执爨，爨妇，炊爨，另起烟爨；(1)以火煮食；(2)炉灶\n炔\tgai3\t姓氏\n炔\tkyut3\t乙炔，炔烃\n炅\tgwai3\t姓氏\n炅\tgwing2\t(1)火光；(2)明亮\n炃\tban6\t火艳\n炃\tfan4\t同「焚」字\n炰\tpaau3\t同「炮」字\n炰\tpaau4\t炰烋\n烋\thaau1\t咆烋(咆烋)\n烋\tjau1\t同「休」字\n焉\tjin1\t焉能；焉得疑问代词\n焉\tjin4\t语焉不详，心不在焉，罪莫大焉；(1)原本是某一种鸟的象形字，后被假借他用；(2)表状态，用于形词或副词词尾\n焚\tfan3\t同「偾」字\n焚\tfan4\t焚烧\n无\tmo4\t南无\n无\tmou4\t无奈，有无，无可厚非，无线电，无法，无论，无疑，无关，无意，无数，无辜，无限，无聊，无条件，无故，无需，无须，无非，无期徒刑，无论如何，无可奈何，无所适从，无利可图\n焥\twaat3\t烟火升起的样子\n焥\toi3\t燤焥(烟气)\n焣\tcaau2\t同「炒」字\n焣\tzeoi6\t(1)同「聚」字；(2)姓氏\n炀\tjoeng4\t熔化金属\n炀\tjoeng6\t隋炀帝火旺\n煁\tnam4\t粤语方言\n煁\tsam4\t一种可移动的火炉\n熏\tfan1\t熏习，三熏三沐，利欲熏心，熏草纸，熏风，众口熏天\n熏\tfan3\t方言用字，意指「中煤气毒」\n熜\tcung1\t(1)微火；(2)热气\n熜\tzung2\t用麻茎捆扎成的火炬\n燋\tciu4\t通「樵」字\n燋\tziu1\t燋铄，燋烂，近火先燋，燋金流石，燋头烂额\n燕\tjin1\t燕山，燕京\n燕\tjin3\t燕窝，劳燕分飞，燕语莺声，燕子，燕好，燕侣，燕麦，燕尔，燕尾服，燕妒莺惭，燕雀相贺，燕雀处堂，燕巢幕上\n熿\tfong2\t同「晃」字\n熿\twong4\t同「煌」字，意谓火光\n燤\ttaai3\t燤焥(烟貌)\n燤\tlit6\t火断\n燿\tjiu6\t同「耀」字\n燿\tsoek3\t通「铄」字\n燸\tjyu4\t(1)温也；(2)烧也\n燸\tnyun6\t弱也\n灼\tcoek3\t「灼zoek3」的异读字\n灼\tzoek3\t灼伤，灼热，灼然无疑，心如火灼，目光灼灼，真知灼见\n灺\tse2\t灯烛余烬\n灺\tse3\t「灺se2」的异读字\n炊\tceoi1\t炊具，炊烟，炊事，无米之炊\n炊\tceoi3\t「炊ceoi1」的异读字\n炖\tdeon6\t「炖dan6」的异读字\n炕\thong3\t「炕kong3」的异读字，口语读音\n炕\tkong3\t炕床，炕桌，火炕\n炘\tjan1\t炘炘(光亮显著而盛大的样子)同「焮」字\n炘\tjan3\t「炘jan1」的异读字\n炙\tzek3\t炙手可热，亲炙，脍炙人口，炙背，炙啖，熏炙，炙冰使燥烧烤、烧灼\n炙\tzik3\t「炙zek3」的异读字\n炫\tjyun4\t「炫jyun6」的异读字\n炫\tjyun6\t炫示，炫耀，炫弄，炫怪，炫惑，炫玉贾石\n烤\thaau1\t「烤haau2」的异读字\n烤\thaau2\t烤火，烤肉，烤炙，烤烟，烤鸭，烘烤\n烘\thong3\t「烘hung1」的异读字\n烘\thung1\t烘手，烘托，烘焙，烘云托月\n烘\thung3\t「烘hung1」的异读字\n烘\thung4\t「烘hung1」的异读字\n烜\thyun1\t「烜hyun2」的异读字\n烜\thyun2\t烜赫\n烊\tjoeng4\t打烊同「炀」字\n烊\tjoeng6\t「烊joeng4」的异读字\n烙\tlok3\t烙印，烙饼，烙铁\n烙\tlok6\t「烙lok3」的异读字\n焊\thon2\t「焊hon6」的异读字\n焊\thon6\t焊接，烧焊\n烷\tjyun2\t「烷jyun4」的异读字\n烷\tjyun4\t(1)火；(2)有机化合物\n烃\tging2\t「烃ting1」的异读字\n烃\tting1\t碳氢化合物之总称\n焠\tceoi3\t焠掌\n焠\tseoi6\t「焠ceoi6」的异读字\n焯\tcoek3\t焯熟，焯著，焯焯\n焯\tzoek3\t「焯coek3」的异读字\n焜\tgwan1\t「焜kwan1」的异读字\n焜\tkwan1\t焜燿\n焜\twan6\t「焜kwan1」的异读字\n焮\tjan1\t「焮jan3」的异读字\n焮\tjan3\t焮天\n焰\tjim4\t「焰jim6」的异读字\n焰\tjim6\t火焰，气焰，烈焰，光焰万丈，气焰嚣张\n煆\thaa1\t火气猛烈\n煆\thaa6\t「煆haa1」的异读字\n煦\theoi2\t煦煦，煦伏之恩，和煦，温煦\n煦\theoi3\t「煦heoi2」的异读字\n煦\tjyu2\t「煦heoi2」的异读字\n煦\tjyu3\t「煦heoi2」的异读字\n煖\thyun1\t「煖nyun5」的异读字\n煖\tnyun5\t同「暖」字\n煣\tjau2\t煣木为耒\n煣\tjau5\t「煣jau2」的异读字\n煜\tjap6\t「煜juk1」的异读字\n煜\tjuk1\t(1)照耀；(2)盛貌\n煸\tbin1\t干煸，生煸烹煮之前把菜肴炒到半熟\n煸\tpin1\t「煸bin1」的异读字\n煠\tzaa3\t油煠，煠鱼\n煠\tsaap6\t「煠zaa3」的异读字\n煘\tgaam2\t火箝\n煘\ttim4\t「煘gaam2」的异读字\n熰\tau1\t极热\n熰\tngau1\t「熰au1」的异读字\n熬\tngaau4\t「熬ngou4」的异读字\n熬\tngou4\t熬夜，熬药，熬煎\n燅\tcam4\t燅猪，燅鸡豚\n燅\tcim4\t「燅cam4」的异读字\n燂\ttaam4\t燂烁\n燂\tcim4\t「燂taam4」的异读字\n炖\tdan6\t炖肉，炖酒，炖药，清炖\n炖\tdeon6\t「炖dan6」的异读字\n燚\tngai6\t「燚jik6」的异读字\n燚\tjik6\t火貌\n燄\tjim4\t「燄jim6」的异读字\n燄\tjim6\t火燄，气燄\n燎\tliu4\t庭燎，星火燎原\n燎\tliu5\t「燎liu4」的异读字\n燎\tliu6\t「燎liu4」的异读字\n焖\tman1\t「焖man1」的异读字\n焖\tmun6\t一种煮食方法\n燏\twat6\t火光\n燏\tleot6\t「燏wat6」的异读字\n燏\tjyut6\t「燏wat6」的异读字\n燘\tfui2\t「燘mui5」的异读字\n燘\tmui5\t烂熟\n燮\tsip3\t「燮sit3」的异读字\n燮\tsit3\t燮和，叠燮，燮理阴阳，燮友，贴燮调和\n焘\tdou6\t「焘tou4」的异读字\n焘\ttou4\t焘育\n烬\tzeon2\t「烬zeon6」的异读字\n烬\tzeon6\t灰烬，余烬，兰艾同烬\n爆\tbaau3\t爆炸，引爆，爆竹，爆发，爆裂，爆满，爆破，爆出，爆冷门，爆笑，爆米花\n爆\tpaau3\t「爆baau3」的异读字\n爆\tbok3\t「爆baau3」的异读字\n爇\tjoek6\t「爇jyut3」的异读字\n爇\tjyut3\t爇榇(焚烧棺材，古战后胜方对败方表示饶恕之举)焚烧\n爇\tjyut6\t「爇jyut3」的异读字\n爌\tkong3\t爌炾\n爌\tkwong3\t「爌kong3」的异读字\n爊\tngaau4\t「爊ou1」的异读字\n爊\tou1\t(1)把食物放在微火上煨熟；(2)把食物埋在灰火中煨熟\n爊\tngou1\t「爊ou1」的异读字\n爊\tngou4\t「爊ou1」的异读字\n爝\tziu3\t「爝zoek3」的异读字\n爝\tzoek3\t爝火\n爝\tzoek6\t「爝zoek3」的异读字\n炮\tbaau1\t「炮baau3」的异读字\n炮\tbaau3\t炮羊肉\n炮\tpaau3\t炮竹，炮灰，炮楼，炮弹，炮垒，发炮\n炮\tpaau4\t炮食，炮烙，炮制\n炤\tciu1\t「炤ziu1」的异读字，口语读音\n炤\tziu1\t同「昭」字\n炤\tziu3\t同「照」字\n焌\tkeoi1\t「焌ceot1」的异读字\n焌\tzeon3\t用火烧\n焌\tceot1\t(1)把燃烧物放入水中弄熄；(2)一种烹调方法\n焞\ttan1\t焞焞(光线暗弱)\n焞\tteoi1\t焞焞(形容盛大)\n焞\tseon4\t「焞tan1」的异读字\n𪸩\tfai1\t同「辉」字\n𪸩\twai1\t「𪸩fai1」的异读字\n𪸩\twan6\t同「晕」字，指日月周围的光圈\n熇\thaau2\t烘烤，同「烤」字\n熇\thiu1\t热气\n熇\thok3\t熇暑，熇熇，熇燥；(1)火热；(2)炽盛\n熇\thok6\t「熇hok3」的异读字\n熇\thuk6\t「熇hok3」的异读字\n煴\twan1\t不煴不火\n煴\twan2\t(1)「煴wan1」的异读字；(2)「煴wat1」的异读字\n煴\twat1\t煴斗(即熨斗)\n熯\tnaan5\t通「戁」字\n熯\tjin5\t恭敬\n熯\thon2\t「熯hon3」的异读字\n熯\thon3\t同「暵」字\n熠\tsaap6\t粤语用字，意指煮食\n熠\tjap1\t熠燿\n熠\tjap6\t「熠jap1」的异读字\n熨\twan6\t熨斗\n熨\twat1\t熨帖\n熨\ttong3\t「熨wan6」的异读字\n燀\tdaan6\t厚\n燀\tcin2\t炊\n燀\tzin2\t「燀cin2」的异读字\n燠\tjau1\t燠咻\n燠\tou2\t「燠juk1」的异读字\n燠\tou3\t极热\n燠\tjuk1\t燠热\n烁\tlik1\t「烁soek3」的异读字\n烁\tsoek3\t闪烁，烁金，烁亮，烁石流金，闪烁其词\n烁\tlok6\t爆烁\n爓\tcam4\t同「燖」字\n爓\tjim4\t「爓jim6」的异读字\n爓\tjim6\t同「焰」字\n爪\tzaau2\t爪牙，一鳞半爪，张牙舞爪，爪痕，凤爪，魔爪，禄山之爪\n爬\tpaa4\t爬虫，爬山，爬升，爬墙，爬行\n爵\tzoek3\t爵禄，爵士乐，加官进爵\n为\twai4\t行为，为难，为富不仁，为人，为所欲为，为首\n为\twai6\t为何，因为，为虎作伥，为国捐躯\n争\tcaang1\t「争zang1」的异读字\n争\tzaang1\t「争zang1」的异读字\n争\tzang1\t争执，战争，争权夺利，争吵，争斗，争鸣，争议，争霸，竞争，争风吃醋\n爰\twun4\t爰居，爰书\n爰\tjyun4\t「爰wun4」的异读字\n爸\tbaa1\t爸爸\n爹\tde1\t爹娘，老爹，干爹，亲爹，阿爹\n爷\tje4\t爷爷，老爷\n父\tfu2\t田父，渔父\n父\tfu6\t父母，父老，父亲，父执，父母官，祖父\n爻\tngaau4\t六爻，爻象，爻辞\n爽\tsong2\t爽约，爽快，爽朗，爽口，爽脆，爽直，豪爽\n尔\tji5\t尔后，尔来，尔雅，尔虞我诈\n牂\tzong1\t牂羊，牂牂(枝叶茂盛貌)，牂牁(停泊船只用以系绳的木桩，汉时郡名)母羊\n牄\tcoeng1\t(1)鸟兽来食声；(2)古人名\n墙\tcoeng4\t墙壁，阋墙，隔墙有耳，骑墙派，墙头草，墙垣，城墙，变起萧墙，铜墙铁壁，路柳墙花，红杏出墙\n爿\tbaan6\t(1)方言用字，用作量词；(2)整体中的部分\n爿\tcoeng4\t(1)部首；(2)劈木而成的木片\n牁\to1\t「牁go1」的异读字\n牁\tgo1\t牂牁(系舟用的木桩，汉时郡名)；(1)系舟用的木桩；(2)停泊船只\n牁\tho1\t「牁go1」的异读字\n版\tbaan2\t版本，版权，版画，版面，版图，出版\n牉\tpun3\t牉合\n牊\tciu4\t(1)几；(2)床的别名\n牌\tpaai4\t牌照，招牌，牌楼，牌坊，牌价，品牌，牌位，牌九，牌桌，牌局\n牋\tzin1\t同「笺」字\n牒\tdip6\t牒文，牒状，度牒，通牒，讼牒；(1)古代书写用的的小竹简或木片；(2)官方文书或证件；(3)讼诉状子\n牓\tbong2\t牓帖，牓示，牓书，牓子，标牓，门牓\n牖\tjau5\t户牖，窗牖，瓮牖，瓮牖绳枢窗户\n牍\tduk6\t案牍，尺牍，文牍，连篇累牍，案牍劳形；(1)古时用作书写的木片；(2)文书；(3)信札\n片\tpin2\t口语用字\n片\tpin3\t片面，片刻，片段\n牏\ttau4\t厕牏「牏jyu4」的异读字\n牏\tjyu4\t筑墙短板\n牙\tngaa4\t牙齿，牙科，牙刷，牙牙学语\n牚\tcaang1\t同「撑」字\n牚\tcaang3\t《广韵》：斜柱也\n牛\tngau4\t牛肉，牛奶，牛群，牛油，牛马\n牣\tjan6\t充牣\n牢\tlou4\t牢骚，牢狱，牢固，牢房\n物\tmat6\t物价，物品，物质，物资，物美价廉，物尽其用，物竞天择，物极必反，物换星移，物以类聚\n牧\tmuk6\t牧场，牧师，牧草，牧民，牧羊\n牪\tjin6\t牛伴\n牬\tbui3\t形容牛只身长\n牴\tdai2\t抵触，抵牾\n牯\tgu2\t牯牛\n牮\tzin3\t(1)斜著支撑；(2)用土石挡水\n牳\tmau5\t牛名\n牷\tcyun4\t纯色的牛\n特\tdak6\t特别，特殊，特色，特权，特征，特点\n牸\tzi6\t牸牛\n牶\thyun3\t(1)牛鼻木；(2)牛鼻绳\n牿\tguk1\t(1)绑在牛角上使牛不得抵人的横木；(2)圈养牛马的地方\n牼\thang1\t牛膝下的直骨\n牵\thin1\t牵涉，牵连，牵扯，牵制，牵动，牵引，牵强，牵挂\n犁\tlai4\t爬犁，犁地，犁庭扫穴，锄犁\n牻\tmong4\t黑白杂色的牛\n犋\tgeoi6\t畜力单位，多指两头牲口\n犅\tgong1\t公牛\n犀\tsai1\t犀利，犀角，犀牛\n犎\tfung1\t一种背部隆起的野牛\n犌\tgaa1\t牛有力\n犑\tgwik1\t犑牛(牛名)\n犐\tfo1\t无角牛\n犓\tco1\t(1)用草料喂牛羊；(2)泛指牛羊\n犗\tgaai3\t骟过之牛\n犒\thou3\t犒赏，犒劳，犒军，犒师\n犕\tbei6\t(1)八岁牛；(2)套车；(3)牛具齿\n犚\twai3\t黑耳之牛\n犘\tmaa4\t(1)大牛；(2)千斤牛\n犝\ttung4\t无角牛\n𪺭\tkiu4\t干肉\n犤\tbei1\t矮小短足的牛\n犦\tbok6\t即犎牛，背脊上有肉隆起如橐驼，据说可健行三百余里而不须休息\n犊\tduk6\t牛犊，舐犊情深，初生之犊小牛\n犣\tlip6\t(1)髀膝尾皆有长毛的牛；(2)旄牛；(3)公牛\n犥\tpiu1\t(1)黄白色的牛；(2)白苍色的牛；(3)禽畜毛羽变色\n牺\thei1\t牺牲，牺尊，伏牺氏\n犩\tngai4\t(1)我国古代西南山区一种很大的野牛；(2)数千斤\n犪\tkwai4\t(1)我国古代西南山区一种很大的野牛；(2)数千斤牛\n牟\tmau4\t牟利，牟取\n牟\tmuk6\t牟平(县名)\n犆\tdat6\t单独\n犆\tzik6\t缘饰\n犍\tgin1\t犍牛\n犍\tkin4\t犍为\n牝\tfan5\t「牝pan5」的异读字\n牝\tpan5\t牝牡，牝牛，牝户，牝牡骊黄，牝鸡司晨雌性鸟兽\n牞\tgau1\t形容牛只力大\n牞\tkau1\t「牞gau1」的异读字\n牡\tmaau5\t牡牛，牡丹，牡马，牡蛎，牝牡，求牡雄性鸟兽\n牡\tmau5\t「牡mau5」的异读字\n牠\ttaa1\t同「它」字，指动物的第三人身代名词\n牠\tto1\t「牠taa1」的异读字\n牲\tsaang1\t牲口，牲畜，牲杀，牲头，牺牲\n牲\tsang1\t「牲saang1」的异读字\n牾\tng5\t抵牾\n牾\tng6\t「牾ng5」的异读字\n犄\tgei1\t犄角\n犄\tgei2\t「犄gei1」的异读字\n犉\tseon4\t黄毛黑唇的牛\n犉\tjyun4\t「犉seon4」的异读字\n犈\tgyun3\t「犈kyun4」的异读字\n犈\tkyun4\t(1)黑脚牛；(2)黑耳牛\n荦\tlok3\t「荦lok6」的异读字\n荦\tlok6\t荦荦大者，卓荦(卓绝不凡)，卓荦不羁，荦确；(1)毛色不纯的牛；(2)色彩斑烂；(3)显著\n牦\tmaau4\t「牦lei4」的异读字\n牦\tlei4\t牦牛\n牦\tmou4\t「牦lei4」的异读字\n犡\tlaai6\t「犡lai6」的异读字\n犡\tlai6\t(1)白色背部的牛只；(2)牛病\n犨\tcau1\t「犨cau4」的异读字\n犨\tcau4\t(1)牛喘息声；(2)突出\n犨\tsau4\t「犨cau4」的异读字\n牰\tcau1\t求子牛\n牰\tjau6\t黑眼眶的牛只\n牰\tzau6\t「牰jau6」的异读字\n犬\thyun2\t犬齿，犬牙，犬儒(cynic)\n犮\tbat6\t刺狗使之走\n犯\tfaan6\t犯法，侵犯，作奸犯科，犯规，犯忌，犯戒，犯贱，犯境，犯禁，犯罪，犯错，犯案，盗犯，逃犯，犯不著，以下犯上，冒险犯难，明知故犯\n犰\tkau4\t犰狳(动物名)\n狄\tdik6\t夷狄，北狄，蛮夷戎狄\n犺\tkong3\t犺狼\n狁\twan5\t𤞤狁(匈奴于周朝时的名称)\n犽\tngaa6\t(1)一种似獾的野兽；(2)中国少数民族之一\n狆\tzung6\t布依族的旧称，也写作「仲」\n狅\tkwong4\t同「狂」字，「狅」是「狂」的讹字\n狗\tgau2\t走狗，狗肉，狗吠，狗头\n狎\thaap6\t相狎，狎暱，狎弄，狎妓，玩狎；(1)亲暱；(2)轻慢；(3)戏弄\n狖\tjau6\t兽名\n狑\tling4\t良犬\n狉\tpei1\t狉獉，狉狉(形容野兽蠢动)，榛狉(草木丛生，野兽横行)狸子，见《集韵》\n狐\twu4\t狐疑，狐狸，狐臭，狐惑，狐假虎威，野狐禅\n狙\tzeoi1\t狙公，狙击，狙伺；(1)猕猴属动物；(2)狡猾；(3)伺机\n状\tzong6\t状况，状态，状元\n狜\tgu2\t少数民族族名用字\n狔\tnei5\t猗狔(柔弱、随风飘扬的样子)\n狡\tgaau2\t狡猾，狡辩，狡诈，狡黠，狡狯，狡兔，狡兔三窟\n狊\tgwik1\t狊狊\n狠\than2\t狠毒，凶狠，心狠手辣，狠恶，面善心狠\n狨\tjung4\t(1)金丝猴；(2)同「绒」字\n狫\tlou5\t犵狫(族名)\n狪\tdung6\t少数民放名\n狈\tbui3\t狼狈，狼狈不堪，狼狈为奸\n狳\tjyu4\t犰狳\n狸\tlei4\t狸猫，狐狸\n猁\tlei6\t猞猁\n狼\tlong4\t狼狈，狼藉，狼狈\n狺\tngan4\t狺狺\n狻\tsyun1\t狻猊\n狾\tzai3\t(1)同「猘」字；(2)同「瘈」字\n猀\tsaa1\t猀族(南方少数民族之一)\n猜\tcaai1\t猜测，猜疑，两小无猜，猜忌，猜谜，猜想，猜拳，猜中，猜不透\n猖\tcoeng1\t猖獗，猖狂，猖乱\n猝\tcyut3\t猝然，猝不及防，仓猝\n猓\tgwo2\t猓然\n猇\thaau1\t猇亭\n狿\tjin4\t獌狿(兽名)\n猑\tkwan1\t猑蹄\n猛\tmaang5\t猛烈，猛攻，猛然，猛虎，猛击，猛追，猛将，猛拍，猛兽，猛撞，猛进，猛士，猛勇，猛吃，猛袭，猛火，猛推\n猊\tngai4\t狻猊\n猞\tse3\t猞猁\n猏\tgin1\t同「豜」字，「猏」是「豜」的俗字\n猵\tbin1\t猵獭，猵狙传说中的野兽\n猋\tbiu1\t同「飙」字\n猴\thau4\t猴子，猿猴，沐猴而冠，杀鸡警猴\n犹\tjau4\t犹疑，过犹不及，犹可，犹豫，犹如，犹自，犹豫不决\n獀\tsau1\t獿獀(狗名)\n猩\tsing1\t猩红，黑猩猩\n猧\two1\t小狗\n猢\twu4\t猢狲\n猳\tgaa1\t(1)猴子一类的动物；(2)同「豭」字\n𪺽\tngan6\t狗怒张牙的样子\n猦\tfung1\t猦母(一种似猿的野兽)\n猭\tsin1\t一种似兔的动物\n猷\tjau4\t鸿猷，献新犹\n猺\tjiu4\t青猺，黄猺\n猿\tjyun4\t猿猴，猿人，心猿意马\n狮\tsi1\t狮子\n狲\tsyun1\t猢狲\n猾\twaat6\t狡猾，老奸巨猾\n獉\tzeon1\t狉獉\n𪺷\tcong1\t𪺷囊(纷乱的样子)\n獑\tcaam4\t獑胡\n獍\tging3\t枭獍，衣冠枭獍\n狱\tjuk6\t狱卒，监狱，牢狱之灾，狱吏，冤狱\n獐\tzoeng1\t獐子，獐头鼠目，弄獐宰相\n獌\tmaan6\t古代的一种猛兽\n獘\tbai6\t(1)同「弊」字；(2)同「毙」字\n獟\thiu1\t獟悍(健捷勇悍)\n獢\thiu1\t猲獢，獢勇\n獗\tkyut3\t猖獗\n獒\tngou4\t獒犬；(1)狗的一种，今多出于西藏；(2)《尔雅•释畜》：「狗四尺为獒」\n獛\tbuk1\t獛铅\n獚\twong4\t出色的猎犬品种之一\n獙\tbai6\t獙獙(传说中的异兽)\n独\tduk6\t独特，单独，独善其身，独木舟，独脚戏，独立，独奏，独白，独裁，独断，独资，独创，独身，独一无二，独树一帜，独当一面，独占鳌头，独排众议，独断独行；(1)单一；(2)仅；(3)\n獧\tgyun3\t同「狷」字\n獬\thaai5\t獬豸(传说中能分辨是非的异兽)\n猃\thim2\t猃狁\n狯\tkui2\t狡狯\n獩\twai3\t同「濊」字\n獯\tfan1\t獯鬻，獯戎\n獳\tnau6\t(1)狗发怒的样子；(2)姓氏\n狞\tning4\t狞笑，狞视，面目狰狞\n狝\tsin2\t古称秋天打猎\n犷\tgwong2\t犷悍，粗犷\n猎\tlip6\t猎犬，涉猎，猎奇，猎取，狩猎，猎物，猎枪，猎人，猎装，猎鹰，猎获，猎艳\n兽\tsau3\t兽医，兽性，兽皮\n献\thin3\t献礼，贡献，献殷勤，献艺，献金，献上，献技，献策，献媚，献计，献丑，献酒，献身，献花\n獽\tjoeng4\t(1)一种猿属动物；(2)少数民族名称\n獾\tfun1\t野兽名\n猡\tlo4\t猪猡\n獿\tnaau4\t同「獶」字\n𤞤\thim2\t𤞤狁\n玂\tkei4\t母犬产下一只小狗\n猲\thit3\t猲獢(一种短嘴的猎狗)\n猲\thot3\t恫疑虚猲吓唬\n猼\tbok3\t猼𫍙\n猼\tpok3\t猼且\n獠\tliu4\t獠牙，獠面，獦獠(古时华南民族一种称谓，见六祖《坛经》)\n獠\tlou5\t古时骂人语\n獡\tsik1\t古代传说中一种象熊的兽\n獡\tcoek3\t良犬名\n獡\tsoek3\t惊惧的样子\n獦\tlip6\t(1)姓氏；(2)同「猎」字「獦null」的异读字\n獦\tgot3\t獦狚(大野狼，又名猲狚)，獦獠(古时华南民族一种贬称)\n獦\thot3\t同「猲」字，指短嘴的狗\n获\twaai4\t获鹿(河北地名)\n获\twok6\t获悉，获得，获胜，捕获，破获，擒获\n犵\that1\t犵狫(同仡佬，少数民族名)\n犵\tgo1\t「犵hat1」的异读字\n犿\tfaan1\t连犿\n犿\tfun1\t「犿faan1」的异读字\n狂\tkong4\t「狂kwong4」的异读字\n狂\tkwong4\t狂人，狂妄，狂热，狂放，狂奔，狂狷，狂欢，疯狂，癫狂\n狃\tnau2\t(1)因袭；(2)拘泥\n狃\tnau5\t「狃nau5」的异读字\n狒\tfai3\t「狒fei6」的异读字\n狒\tfai6\t「狒fei6」的异读字\n狒\tfat1\t「狒fei6」的异读字\n狒\tfei6\t狒狒(动物名)\n狘\thyut3\t兽走貌\n狘\tjyut6\t「狘hyut3」的异读字\n狋\tngan4\t「狋ji4」的异读字\n狋\tji4\t犬怒的样子\n狚\tdaam3\t獦狚(一种巨狼)，狚族(小数民族名)，狚末(即旦末，戏剧行当名)\n狚\ttaan2\t「狚daam3」的异读字\n狚\tdaat3\t「狚daam3」的异读字\n狩\tsau2\t「狩sau3」的异读字\n狩\tsau3\n狟\twun4\t大狗\n狟\thyun1\t「狟wun4」的异读字\n狦\tsaan1\t(1)凶恶的大狗；(2)一种似狼的野兽\n狦\tsaan3\t「狦saan1」的异读字\n狣\tsiu6\t体形壮大的狗\n狣\tziu6\t「狣siu6」的异读字\n狴\tbai1\t「狴bai6」的异读字\n狴\tbai6\t狴牢，狴犴\n狭\thaap6\t狭隘，狭义，狭路相逢，狭小，狭窄，狭斜，狭韵\n狭\tgip6\t「狭haap6」的异读字\n狷\tgyun1\t「狷gyun3」的异读字\n狷\tgyun3\t狷介，狷忿，狷急，狷狭，狷傲\n狶\thei1\t(1)猪；(2)同「豨」字\n狶\thei2\t「狶hei1」的异读字\n狰\tzaang1\t「狰zang1」的异读字\n狰\tzang1\t狰狞\n猘\tgai3\t「猘zai3」的异读字\n猘\tzai3\t同「瘈」字\n猰\tjaak3\t「猰aat3」的异读字\n猰\taat3\t猰貐(传说中的凶兽)\n猰\tngaat3\t「猰aat3」的异读字\n猰\tzaat3\t「猰aat3」的异读字\n猱\tnaau4\t兽名\n猱\tnou4\t「猱naau4」的异读字\n猥\twai2\t猥琐，猥亵语，猥滥，猥人，猥官，猥酒\n猥\twui1\t「猥wai2」的异读字\n猥\twui2\t「猥wai2」的异读字\n猣\tzung1\t犬只生下三胞胎\n猣\tzung2\t「猣zung1」的异读字\n獂\twun4\t「獂jyun4」的异读字\n獂\tjyun4\t同「豲」字\n呆\tdaai1\t「呆ngoi4」的异读字\n呆\tngoi4\t呆头呆脑，发呆，书呆子，呆板，呆话\n獞\tzong3\t「獞tung4」的异读字\n獞\tzong6\t「獞tung4」的异读字\n獞\ttung4\t少数民族名，后作「僮」或「壮」\n獝\twat6\t鸟兽惊慌\n獝\tleot6\t「獝wat6」的异读字\n獥\that6\t(1)幼狼；(2)牝狼\n獥\tgik1\t「獥giu3」的异读字\n獥\tgiu3\t「獥giu3」的异读字\n獶\tnaau4\t「獶nou4」的异读字\n獶\tnou4\t同「猱」字\n獭\tcaat3\t獭祭鱼，海獭，水獭，旱獭\n獭\ttaat3\t「獭caat3」的异读字\n猕\tmei4\t猕猴\n猕\tnei4\t「猕mei4」的异读字\n玃\tfok3\t大母猴\n玃\tgwok3\t「玃fok3」的异读字\n犴\thon4\t驼鹿\n犴\thon6\t「犴ngon6」的异读字\n犴\tngon6\t犴圄，陛犴，狱犴\n狌\tsaang1\t「狌sang1」的异读字\n狌\tsang1\t同「鼪」字\n狌\tsing1\t同「猩」字\n狤\tgwaai3\t同「狯」字\n狤\tgat1\t狂狤(狂放)\n狤\tgit3\t古兽名，又名风貍\n狤\tgit6\t「狤gat1」的异读字\n猗\tji1\t赞美\n猗\tji2\t「猗ji1」的异读字\n猗\to2\t猗傩\n猗\tngo2\t「猗o2」的异读字\n猗\tngo5\t「猗o2」的异读字\n猈\tbaa6\t(1)短脚狗；(2)案下狗\n猈\tpaai4\t「猈baa6」的异读字\n猈\tpei4\t人名用字\n猒\taat3\t通「压」字\n猒\tngaat3\t「猒aat3」的异读字\n猒\tjim1\t同「厌」字，意指安闲、安稳\n猒\tjim2\t阻塞\n猒\tjim3\t君臣弥久而不相猒(淮南子˙主术)；(1)欺瞒；(2)同「餍」字\n玄\tjyun4\t玄机，玄妙，玄关，玄学，玄奥\n玅\tmiu6\t同「妙」字\n玈\tlou4\t黑色\n率\tseoi3\t同「帅」字\n率\tleot6\t比率，利率，效率，税率\n率\tseot1\t率先，率直，率性，率真，率领，率土之滨，率由旧章，率马以骥，率兽食人，率尔操觚，草率，轻率\n玆\tzi1\t同「兹」字\n玆\tjyun4\t「玆zi1」的异读字\n玉\tjuk6\t玉米，玉女，玉器，玉石俱焚\n玊\tsuk1\t(1)朽玉；(2)琢玉的工人；(3)古西域国名；(4)姓氏\n玎\tding1\t玎玲\n玔\tcyun3\t玉环\n玓\tdik1\t玓瓅(明珠的光泽，亦作的皪、旳皪)\n玖\tgau2\t(1)「九」的大写；(2)像玉的浅黑色石头\n玕\tgon1\t琅玕\n玗\tjyu1\t似玉之石\n玠\tgaai3\t大圭\n玨\tgok3\t相合的两块玉\n玥\tjyut6\t一种神珠\n玦\tkyut3\t半环形玉佩\n玟\tman4\t美石\n玫\tmui4\t玫瑰\n玭\tpan4\t玭珠(珠名，出自淮水)\n玝\tng5\t人名用字\n玬\ttaan2\t玉名\n玻\tbo1\t玻璃\n珫\tcung1\t珫耳(古代悬挂在冠冕两旁当耳处的玉)\n玳\tdoi6\t玳瑁(海龟科动物名，甲壳可作装饰品)\n珈\tgaa1\t古代妇女的一种首饰\n玲\tling4\t玲珑\n珀\tpaak3\t琥珀\n珊\tsaan1\t珊瑚，意兴阑珊\n珅\tsan1\t玉名\n珍\tzan1\t珍贵，珍惜，珍藏，珍品，珍重，珍爱，袖珍\n玿\tsiu4\t美玉\n珋\tlau5\t放光石\n玴\tjai6\t似玉的石头\n玶\tping4\t玉名\n玾\tgaap3\t玉名\n珃\tjim5\t玉也\n玸\tfu4\t(1)玉名；(2)玉石的纹理\n玵\tngam4\t美玉\n班\tbaan1\t班级，航班，按部就班，班次，班长，班别，班会，班师回朝，上班，戏班\n珓\tgaau3\t杯珓，卜珓，圣珓(又作圣杯)占卜吉凶用的器具\n珙\tgung2\t珙桐\n珪\tgwai1\t同「圭」字\n珩\thang4\t玉佩\n珧\tjiu4\t江珧(一种软体动物)，江珧柱(即干贝)\n琉\tlau4\t琉璃\n珮\tpui3\t玉珮\n珣\tseon1\t玉名\n珠\tzyu1\t珠宝，珠算，珍珠，珠帘，珠光宝气，珠泪，珠胎暗结，妙语如珠\n珛\tcau3\t有瑕疵的玉\n珔\tzin6\t玉名\n珖\tgwong1\t珖琯(玉制的笛子)\n珚\tjin1\t珚玉(玉名)\n珗\tsin1\t次于玉的石头\n珘\tzau1\t玉名\n珜\tjoeng4\t地名用字\n珒\tzeon1\t玉名\n珝\theoi2\t玉名\n琈\tfau4\t美玉\n现\tjin6\t现场，现在，现象，现代，现实，现况，现状，现成，现身说法，现形\n琄\tjyun6\t佩玉貌\n球\tkau4\t球场，球队，球赛，球类，球状，球形，球面，星球，地球\n琍\tlei4\t同「璃」字\n理\tlei5\t理由，理想，理事，理念，理论，理性，理解，理会，理财，理发厅，理发，理智，理所当然，理直气壮，理亏，理屈\n琅\tlong4\t琅琅，琳琅，玲琅，琳琅满目，琅琊；(1)姓氐；(2)洁白\n珸\tng4\t美玉\n琇\tsau3\t美石\n琁\tsyun4\t同「璿」字\n珵\tcing4\t一种美玉\n𫞥\tbui3\t贝饰\n珿\tcuk1\t整齐\n琌\tling4\t同「陵」字，「琌」是「陵」的讹字\n珴\tngo4\t捧珪璋的样子\n琋\thei1\t人名用字\n琫\tbung2\t鞞琫佩刀鞘口上的饰物\n琢\tdoek3\t琢磨，琢句，雕琢，精雕细琢\n琥\tfu2\t琥珀，琥珀色\n琚\tgeoi1\t(1)姓氏；(2)佩玉\n琯\tgun2\t玉琯玉制的管乐器\n琰\tjim5\t琰圭，琬琰\n琬\tjyun2\t琬圭\n琴\tkam4\t琴弦，钢琴，琴瑟和鸣，琴艺，琴键，琴音，琴技，剑胆琴心\n琪\tkei4\t琪花\n琦\tkei4\t琦玮，瑰意琦行\n琳\tlam4\t琳瑯满目，琳琅满目，琳瑯\n琭\tluk6\t琭琭(形容稀少)\n琶\tpaa4\t琵琶，琵琶骨\n琵\tpei4\t琵琶\n琖\tzaan2\t同「盏」字\n琡\tzyut3\t玉名\n琩\tcoeng1\t琩珫(玉制的耳饰，又作琩玩)\n琝\tman4\t似玉的美石\n琣\tbung2\t同「琫」字\n瑕\thaa4\t瑕疵，瑕不掩瑜，瑕瑜互见，白璧无瑕\n瑛\tjing1\t美玉\n瑜\tjyu4\t瑜伽，瑜珈\n瑀\tjyu5\t像玉的石头\n瑗\tjyun6\t大孔的璧\n瑯\tlong4\t珐瑯\n瑙\tnou5\t玛瑙\n瑟\tsat1\t瑟缩，琴瑟和谐，瑟瑟风声\n瑞\tseoi6\t瑞云，瑞气，瑞兆，人瑞，祥瑞\n瑆\tsing1\t玉光\n瑄\tsyun1\t祭天用的璧玉\n玮\twai5\t玮质，玮奇美玉\n瑚\twu4\t珊瑚\n瑊\tzam1\t次玉\n瑎\thaai4\t似玉的黑石\n瑔\tcyun4\t(1)玉名；(2)贝名\n瑍\twun6\t文彩\n瑐\tzin2\t玉名\n瑏\tcyun1\t玉也\n瑂\tmei4\t似玉的美石\n玱\tcoeng1\t玉器相击的响声\n瑶\tjiu4\t瑶池，琼瑶，苗瑶语族，瑶函，瑶琴\n瑢\tjung4\t𪻐瑢\n瑮\tleot6\t美玉罗列貌\n玛\tmaa5\t玛瑙\n琐\tso2\t琐碎，繁琐，琐事，琐细，琐言\n瑭\ttong4\t玉名\n瑵\tzou2\t古代车盖弓端伸出的爪形部份，常以金玉为饰\n瑧\tzeon1\t玉名\n璁\tcung1\t璁珑，璁琤，珑璁\n莹\tjing4\t晶莹，澄莹\n璆\tkau4\t璆琳，璆然\n璃\tlei4\t玻璃，琉璃，万顷琉璃\n𫞩\tmun4\t赤色的玉\n璈\tngou4\t古乐器名\n璅\tso2\t同「琐」字\n璇\tsyun4\t璇玑，天璇\n璋\tzoeng1\t珪璋，弄璋\n瑹\tsyu1\t古代朝会时所持的笏\n瑼\tzyun1\t玉名\n璠\tfaan4\t美玉\n玑\tgei1\t玑琲，珠玑，璇玑\n璟\tging2\t玉的光彩\n瑿\tji1\t(1)黑色的玉石；(2)黑色的琥珀\n璘\tleon4\t玉的色泽、光彩\n璞\tpok3\t璞玉\n璜\twong4\t半璧形的玉\n琎\tzeon3\t象玉的石头\n璥\tging2\t玉名\n璔\tzang1\t玉貌\n璕\tcam4\t次于玉的美石\n璒\tdang1\t似玉的石\n璨\tcaan3\t璨璨，璀璨\n珰\tdong1\t耳饰\n璗\tdong6\t(1)黄金；(2)玉名\n璩\tkeoi4\t(1)姓氏；(2)玉环\n璐\tlou6\t美玉\n璱\tsat1\t外貌鲜洁的玉石\n璲\tseoi6\t一种瑞玉\n环\twaan4\t环节，循环，燕瘦环肥，环球，环境，环绕，环顾，花环，连环画，山环水抱，豹头环眼，结草衔环，强敌环伺\n璪\tzou2\t古代王冠前下垂的装饰\n璭\tgun2\t同「琯」字\n瑸\tban1\t同「玢」字，美玉的纹理\n玙\tjyu4\t玙璠\n瓀\tjyun5\t次于玉的石\n璿\tsyun4\t璿玑，璿图\n瓁\twok6\t玉璞，未雕琢的玉\n瓂\tgoi3\t人名用字\n璶\tzeon6\t似玉的石\n璻\tzeoi2\t玉色\n琼\tking4\t琼瑶，玉液琼浆，琼楼玉宇，琼麻，琼音；(1)琼，玉之美者；(2)泛指美好\n玺\tsaai2\t玉玺，国玺，符玺\n瓋\ttik1\t瑕瓋(玉器上的班点)\n珑\tlung4\t珑璁，玲珑，娇小玲珑\n璎\tjing1\t璎珞\n瓖\tsoeng1\t同「镶」字\n瓘\tgun3\t玉名\n瓙\tdou6\t玉也\n瓛\twun4\t玉圭名称\n王\twong4\t王父，王公，王考，王后，王法，王室，王孙，王国，王朝，王牌，王道，王储，王佐之材，帝王\n王\twong6\t王天下当动词用\n玩\twaan4\t玩耍，玩笑\n玩\twun6\t玩弄，玩味，玩物，玩意，玩艺，玩世不恭，玩物丧志，古玩，珍玩\n珇\tzeoi2\t(1)玉石的纹理；(2)玉名\n珇\tzou2\t(1)琮玉上的浮雕花纹；(2)美好\n玹\tjin4\t姓氏\n玹\tjyun4\t(1)玉色；(2)次于玉的石头\n玹\tjyun6\t玉名\n珆\tji4\t似玉的石头\n珆\ttoi1\t玉名\n珶\tdai6\t佩玉\n珶\ttai4\t珶瑭(玉名)\n琠\ttin2\t玉名\n琠\ttin3\t同「瑱」字\n玚\tcoeng3\t古祭祀用之一种圭\n玚\tjoeng4\t(1)玉名；(2)花名\n玚\tdong6\t人名\n瑁\tmou6\t天子所执之玉，用以合诸侯之圭者\n瑁\tmui6\t玳瑁(海龟科动物名，甲壳可作装饰品)\n珲\tfai1\t瑷珲条约\n珲\twan4\t玉名\n瑰\tgwai1\t瑰奇，瑰岸，瑰姿，瑰异，瑰伟，瑰玮，瑰宝，瑰丽，瑰意琦行，琼瑰\n瑰\tgwai3\t玫瑰\n璚\tking4\t同「琼」字\n璚\tkyut3\t同「玦」字\n㻅\tfaai3\t人名用字\n㻅\twui6\t玉饰冠缝\n𫞦\tcai5\t玉病\n𫞦\tzi1\t(1)同「齍」字；(2)似玉的石\n璷\tlou4\t玉名\n璷\tfu1\t琨璷(美玉)\n𤦀\tsaai2\t弛弓\n𤦀\tmei4\t玉名\n玒\tgong1\t「玒hung4」的异读字\n玒\tgung1\t「玒hung4」的异读字\n玒\thung4\t美玉名\n玢\tban1\t玢岩，玢璘\n玢\tfan1\t「玢ban1」的异读字\n玤\tpong5\t次于玉的美石\n玤\tbung2\t「玤pong5」的异读字\n玡\tngaa4\t「玡je4」的异读字\n玡\tje4\t同「琊」字\n珌\tbat1\t佩刀下饰\n珌\tbei3\t「珌bat1」的异读字\n珌\tbit1\t「珌bat1」的异读字\n玷\tdim2\t「玷dim3」的异读字\n玷\tdim3\t玷辱，玷污，瑕玷，白圭之玷(见《诗•大雅》)，圣母无玷；(1)玉上的瑕疵；(2)缺点、过失；(3)弄污\n珂\to1\t白色似玉的石\n珂\tngo1\t「珂o1」的异读字\n珞\tlok3\t璎珞\n珞\tlok6\t「珞lok3」的异读字\n珥\tnei6\t用珠玉作成的耳环\n珥\tji6\t「珥nei6」的异读字\n珨\thaap6\t「珨hap6」的异读字\n珨\thap6\t蜃饰器\n珺\tgwan6\t「珺kwan2」的异读字\n珺\tkwan2\t一种美玉\n琀\tham3\t琀玉古代置于死者口中的玉、贝等物\n琀\tham6\t「琀ham3」的异读字\n琊\tngaa4\t「琊je4」的异读字\n琊\tje4\t琅琊(地名)\n珽\tting2\t「珽ting5」的异读字\n珽\tting5\t玉笏\n琮\tcung4\t琮琤，黄琮\n琮\tcung6\t「琮cung4」的异读字\n珐\tfaat3\t珐瑯\n珐\tfat3\t「珐faat3」的异读字\n琨\tgwan1\t「琨kwan1」的异读字\n琨\tkwan1\t似玉的美石，玉佩\n琲\tbei3\t「琲pui3」的异读字\n琲\tpui3\t珠五百枚\n琛\tcam1\t「琛sam1」的异读字\n琛\tsam1\t珍宝\n琤\tcaang1\t「琤zaang1」的异读字\n琤\tzaang1\t(1)玉器相击声；(2)琴声；(3)水流声\n琤\tzang1\t「琤zaang1」的异读字\n瑑\tcyun5\t「瑑syun6」的异读字\n瑑\tsyun6\t玉器上所雕刻的花纹\n瑳\tco1\t(1)玉色鲜白；(2)笑貌\n瑳\tco2\t「瑳co1」的异读字\n瑱\tzan3\t瑱圭，象瑱，以规为瑱\n瑱\tdin3\t「瑱zan3」的异读字\n瑱\ttin3\t「瑱zan3」的异读字\n璀\tceoi1\t「璀ceoi2」的异读字\n璀\tceoi2\t璀错，璀璨\n𪻐\tcung1\t𪻐瑢，琤𪻐\n𪻐\tcung4\t「𪻐cung1」的异读字\n瑾\tgan2\t瑾瑜，怀瑾握瑜美玉\n瑾\tgan6\t「瑾gan2」的异读字\n琏\tlin4\t「琏lin5」的异读字\n琏\tlin5\t瑚琏\n瑷\toi3\t瑷珲(县名)，瑷珲条约美玉\n瑷\tngoi3\t「瑷oi3」的异读字\n璧\tbik1\t璧人，璧玉，白璧无瑕，完璧归赵\n璧\tbik3\t「璧bik1」的异读字\n瓅\tlik1\t玓瓅\n瓅\tlik6\t「瓅lik1」的异读字\n瓃\tleoi4\t玉器\n瓃\tleoi6\t「瓃leoi4」的异读字\n璺\tman4\t「璺man6」的异读字\n璺\tman6\t裂璺器皿上的裂纹\n瓗\tkwai4\t「瓗king4」的异读字\n瓗\tking4\t同「琼」字\n瓒\tzaan3\t古代祭祀用的玉制酒勺\n瓒\tzaan6\t「瓒zaan3」的异读字\n玼\tcai2\t「玼ci2」的异读字\n玼\tci1\t同「疵」字\n玼\tci2\t玼玼(鲜明的样子)\n瓜\tgwaa1\t瓜分，瓜果，瓜葛，瓜田李下，瓜熟蒂落\n瓞\tdit6\t瓜瓞绵绵(语出《诗经•大雅》，喻子孙繁盛)小瓜\n瓡\tzap1\t古侯国家名及古县名，在今山东省\n瓢\tpiu4\t瓢虫\n瓤\tnong4\t瓜果的肉或瓣\n瓥\tlai6\t瓠勺\n瓟\tpaau4\t同「匏」字\n瓟\tbok6\t小瓜\n瓠\twok6\t瓠落\n瓠\twu4\t瓠芦\n瓠\twu6\t瓠子，瓠果，瓠肥，瓠犀\n瓝\tpaau4\t「瓝bok6」的异读字\n瓝\tbok6\t(1)小瓜；(2)草名\n瓣\tbaan6\t瓣膜，花瓣，豆瓣酱，心瓣，唇瓣，鳃瓣\n瓣\tfaan6\t「瓣baan6」的异读字\n瓨\tgong1\t同「缸」字\n瓮\tung3\t瓮城\n瓬\tfong2\t制造陶、瓦器的人\n瓴\tling4\t瓴甋，瓴甓；(1)盛水瓶；(2)屋顶有沟的瓦片\n瓵\tji4\t瓮缶类器具\n瓷\tci4\t瓷器，陶瓷，瓷砖，瓷片，瓷窑，白瓷\n瓻\tci1\t陶制的酒壶\n瓾\tmaang5\t甑的索带\n甃\tzau3\t井壁\n甀\tzeoi6\t甖、瓮之类的陶器\n甈\thei3\t(1)破瓦壶；(2)盎、缶一类的瓦器；(3)燥裂、破裂\n甇\tang1\t同「罂」字，意谓长颈的瓶子\n甋\tdik1\t瓴甋(砖块)\n甍\tmang4\t甍标，飞甍，层甍，碧瓦朱甍屋脊\n甏\tbong3\t弄甏\n甒\tmou5\t古代盛酒的瓦器\n甐\tleon6\t(1)器具；(2)器具坚硬；(3)器具因磨损而变薄\n甗\tjin5\t(1)殷周时盛行的炊器；(2)甑形的山\n瓦\tngaa5\t弄瓦，瓦解，瓦特\n瓦\tngaa6\t「瓦ngaa5」的异读字\n瓶\tpeng4\t「瓶ping4」的异读字\n瓶\tping4\t瓶颈，花瓶，新瓶旧酒，瓶塞，瓶口，瓶装，保温瓶，奶瓶，守口如瓶\n瓽\tdong2\t「瓽dong6」的异读字\n瓽\tdong6\t大盆\n瓿\tbau6\t「瓿pau2」的异读字\n瓿\tpau2\t小瓮\n瓿\tbou6\t「瓿pau2」的异读字\n甄\tjan1\t甄陶，甄别，甄选，甄拔，甄品，甄录，甄陶天下，甄陶国风；(1)制陶、化育；(2)察别、选拔\n甄\tzan1\t「甄jan1」的异读字\n甂\tbin1\t小瓦盆\n甂\tpin1\t「甂bin1」的异读字\n瓯\tau1\t茶瓯\n瓯\tngau1\t「瓯au1」的异读字\n甑\tzang3\t「甑zang6」的异读字\n甑\tzang6\t古代做饭用瓦器\n甔\tdaam1\t可容一石的瓦器\n甔\tdaam3\t「甔daam1」的异读字\n甓\tbik1\t「甓pik1」的异读字\n甓\tpik1\t砖的一种名称\n瓮\tung3\t瓮中捉鳖，酒瓮\n瓮\tngung3\t「瓮ung3」的异读字\n甖\taang1\t同「罂」字，盛水酒的瓦器\n甖\tngaang1\t「甖aang1」的异读字\n甘\tgam1\t甘心，甘愿，甘草，甘苦，甘霖，甘露\n甜\ttim4\t甜美，甜蜜，甜头，甜心\n甝\thon4\t(1)白虎；(2)凶暴\n甚\tsam6\t甚至，甚么，甚嚣尘土，日甚一日，不求甚解\n甚\tsap6\t「甚sam6」的异读字\n甡\tsan1\t甡甡(形容众多)\n产\tcaan2\t产品，产生，生产，破产，财产，特产\n苏\tsou1\t苏醒，复苏，民生以苏\n生\tsaang1\t生平，生存，生肖，生物，生活，生计，生前，生息，生动，生殖，生产，生态，生趣，生机，生不逢时，生老病死，生死之交，生死攸关，生离死别\n生\tsang1\t「生saang1」的异读字\n甥\tsaang1\t甥馆，外甥\n甥\tsang1\t「甥saang1」的异读字\n用\tjung6\t用地，用户，用品，用途，用心，用意，用具，用力，作用，动用，体用，费用，用心良苦，用膳，通用，聘用\n甩\tlat1\t甩掉，甩开，甩脱，甩手\n甪\tluk6\t甪直(地名)，甪里(复姓)，甪里堰(地名)\n甮\tfung6\t方言字，意指「不用」\n甫\tpou2\t甫里\n甫\tpou3\t一甫路长度单位，指十里\n甫\tfu2\t杜甫，甫能，台甫，惊魂甫定，年甫弱冠\n宁\tning6\t姓氏\n甬\tjung2\t甬道，甬江\n甬\tjung5\t「甬jung2」的异读字\n甭\tbang2\t(1)「甭bat1」的异读字；(2)本为北方方言，乃「不用」二字合音成文的新字\n甭\tbat1\t方言用字，意谓「不用」\n甭\tbung2\t「甭bat1」的异读字\n甲\tgaap3\t甲板，甲子，甲兵，甲状腺，甲苯，甲鱼，甲烷，甲虫，甲骨十「天干」之一\n由\tjau4\t自由，由于，由此，由来\n申\tsan1\t申请，申报，申诉，申冤，申辩，申述\n田\ttin4\t田径，田园，田地，田野，田螺，田鸡\n男\tnaam4\t男子，男女，男人，男性，男士，男孩\n甹\tping1\t轻财之侠\n畈\tfaan3\t田\n界\tgaai3\t界定，界限，界线，界石，界面\n畋\ttin4\t畋猎\n畏\twai3\t畏惧，敬畏，畏首畏尾，畏途，畏死，畏缩，畏怯，畏罪潜逃\n畇\twan4\t畇畇(田地平整的样子)\n畚\tbun2\t畚箕\n畔\tbun6\t河畔，畔奂，枕畔，畔约，畔援，倍畔，让畔\n畜\tcuk1\t畜牧，畜养，畜生，畜牲，六畜\n留\tlau4\t留意，留待，留守，留连，留难\n亩\tmau5\t亩产，田亩\n毕\tbat1\t毕业，完毕，锋芒毕露，毕命，毕竟，毕恭毕敬，原形毕露\n畣\tdaap3\t同「答」字\n异\tji6\t异议，异才，离异，异常，奇异\n畦\tkwai4\t畦田，畦畛，畦丁，菜畦，花畦；(1)古代面积单位，五十亩为一畦；(2)长方形田地；(3)田园；(4)姓\n略\tloek6\t略为，略微，略加，略过，略逊一筹\n畯\tzeon3\t古代掌农事的官\n畹\tjyun2\t三十亩为一畹\n畷\tzyut3\t田间的小路\n畾\tleoi4\t田间的土地\n疀\tcaap3\t古农具，即锹\n疄\tleon4\t田垄\n畴\tcau4\t范畴，田畴\n疆\tgoeng1\t疆域，疆土，疆场\n甽\tzan3\t山下小沟\n甽\thyun2\t(1)同「畎」字；(2)古田制，一亩的三分之一\n甾\tzi1\t同「淄」字\n甾\tzoi1\t化合物名称\n番\tfaan1\t番邦，番茄，番商，番号，三番五次\n番\tbo1\t番番[勇武的样子]\n番\tpo4\t形容白色，姓氏\n番\tpun1\t番禺(地名)\n当\tdong1\t当代，相当，当仁不让，当然，当前，当地，当局，当值，当政，当道，当权，担当，应当，正当(指示时间)，当时得令，当之无愧，当务之急，当机立断，门当户对，当头棒喝\n当\tdong3\t当票，适当，大而无当，当作，恰当，得当，正当，用词不当，非法勾当，典当，便当\n畀\tbei2\t「畀bei3」的异读字\n畀\tbei3\t付畀(交托)，赋畀给予\n畎\tgyun2\t「畎hyun2」的异读字\n畎\thyun2\t畎亩，畎亩之中(乡野、民间)，塍畎田沟\n畟\tcak1\t「畟cik1」的异读字\n畟\tcik1\t畟畟\n畟\tzik1\t「畟cik1」的异读字\n畛\tcan2\t畛域\n畛\tzan2\t「畛can2」的异读字\n畤\tsi5\t「畤zi6」的异读字\n畤\tzi2\t「畤zi6」的异读字\n畤\tzi6\t古代祭祀天地、五帝的祭坛\n榃\ttaan4\t榃濮\n榃\tdam4\t「榃taan4」的异读字\n畸\tgei1\t畸形，畸轻，畸重，畸人，畸行，畸零\n畸\tkei1\t「畸gei1」的异读字\n畽\tteon2\t町畽(禽兽践踏的地方/田舍旁边的空地)\n畽\tdung2\t「畽teon2」的异读字\n畿\tgei1\t京畿，畿辅，畿甸\n畿\tkei4\t「畿gei1」的异读字\n叠\tdaap6\t「叠dip6」的异读字\n叠\tdip6\t叠字，叠印，叠韵，叠嶂，叠床架屋，重叠，堆叠，折叠\n甸\tdin1\t「甸din6」的异读字\n甸\tdin6\t甸儿，甸匣，芳甸，郊甸，缅甸，伊甸园\n甸\ttin4\t甸甸\n町\ttin2\t町畽\n町\tding1\t畹町云南省镇名\n町\tting1\t「町ting5」的异读字\n町\tting2\t「町ting5」的异读字\n町\tting5\t町畦，西门町(台北市商业区)\n甿\tman4\t「甿mong4」的异读字\n甿\tmang4\t(1)同「萌」字；(2)「甿mong4」的异读字\n甿\tmong4\t农村居民\n畬\tse1\t畬傜(少数民族族名)；(1)用刀耕火种方法种田；(2)姓氏\n畬\tse4\t(1)「畬se1」的异读字；(2)「畬jyu4」的异读字\n畬\tjyu4\t菑畬(耕田种植。见《周易˙无妄》)开垦过两年的土地\n画\twaa2\t「画waa6」的异读字\n画\twaa6\t画皮，画苑，画眉，画廊，画谱，画栋雕梁，书画\n画\twaak6\t画一，画卯，画押，画地而趋，画地为牢，画虎类狗，画蛇添足，画饼充饥，画龙点睛\n疑\tji4\t疑问，怀疑，半信半疑，疑心病，疑虑，疑惑，疑窦，疑难，嫌疑犯，猜疑，疑神疑鬼，满布疑云\n疋\tngaa5\t同「雅」字\n疋\tpat1\t同「匹」字\n疋\tso1\t部首\n疏\tso1\t疏忽，疏通，粗疏，疏密，疏散，疏狂，疏放，疏阔，疏导\n疏\tso3\t疏记，疏证，注疏\n疐\tdai3\t通「蒂」字\n疐\tzi3\t跋前疐后\n疌\tzit3\t「疌zit6」的异读字\n疌\tzit6\t同「捷」字\n疚\tgau3\t内疚，负疚，歉疚\n疘\tgong1\t脱疘\n疝\tsaan3\t疝气\n疤\tbaa1\t疤痕，刀疤，疤瘌，伤疤\n疥\tgaai3\t疥癣，疥疮，疥虫\n疣\tjau4\t赘疣\n疫\tjik6\t疫苗，疫病，瘟疫\n疪\tbei3\t湿病\n疺\tfat6\t疲乏\n疳\tgam1\t疳积(中医上指小孩面黄肌瘦、肚腹膨胀的症状)，下疳(初期梅毒的症状)，牙疳(齿槽脓漏)\n疲\tpei4\t疲劳，疲倦，疲乏，疲惫不堪，疲于奔命\n疶\tsit3\t痢\n痄\tzaa3\t痄腮\n疰\tzyu3\t疰夏\n痊\tcyun4\t痊愈\n痎\tgaai1\t两天发作一次的疟疾\n痕\than4\t痕迹，伤痕，踏雪无痕，疤痕，泪痕，裂痕，折痕，爪痕\n痍\tji4\t疮痍满目\n痌\ttung1\t同「恫」字\n痐\twui4\t同「蛔」字\n痔\tzi6\t痔疮，内痔\n痑\ttaan1\t马疲乏，又泛指疲乏\n痤\tco4\t痤疮\n痘\tdau6\t痘疮，水痘，牛痘\n痉\tging6\t痉挛\n痚\thaau1\t喉病\n痢\tlei6\t痢疾，白痢，赤痢\n痦\tng6\t痦子\n痧\tsaa1\t绞肠痧，刮痧，发痧\n痟\tsiu1\t(1)头痛；(2)消渴病的简称\n酸\tsyun1\t酸痛，酸软\n痛\ttung3\t痛苦，痛心，痛恨，痛哭，痛斥，痛心疾首，痛楚，痛快，痛定思痛，痛哭失声，痛不欲生，痛责，痛骂，痛惜，痛击，痛改前非，痛感，痛哭流涕，痛打，痛恶，痛处，痛风，痛饮，痛觉，痛痒\n痣\tzi3\t黑痣，朱砂痣\n痝\tmong4\t(1)为病所困的样子；(2)饮酒过量，为酒所困；(3)浮肿的样子\n痭\tbang1\t妇人血崩病\n痹\tbei3\t寒痹，痿痹\n痴\tci1\t痴心，痴人，痴痴\n痶\tdin2\t痶痪\n痼\tgu3\t痼疾\n痯\tgun2\t(1)疲劳；(2)病\n痵\tgwai3\t因害怕而心疾跳\n瘐\tjyu5\t瘐死，瘐毙囚犯因饥寒致死\n痲\tmaa4\t痲疹，痲疯，痲痹\n痻\tman4\t昏忽之病\n瘁\tseoi6\t尽瘁，劳瘁，心力交瘁\n痰\ttaam4\t吐痰，痰涎\n瘏\ttou4\t瘏悴\n痸\tcai3\t(1)痴病；(2)癞病；(3)同「瘛」字\n痽\tdeoi1\t病名\n疯\tfung1\t疯子，疯狂，疯癫，疯话\n瘊\thau4\t瘊子\n瘖\tjam1\t瘖哑(同喑哑)，嚚瘖嗓哑不能出声\n疟\tjoek6\t疟疾，疟蚊\n疡\tjoeng4\t溃疡，脓疡\n瘉\tjyu6\t病好\n瘌\tlaat6\t瘌痢\n瘦\tsau3\t瘦小，瘦弱，瘦削，瘦长，瘦肉，瘦骨嶙峋\n痪\twun6\t瘫痪\n瘔\tfu3\t瘔车(病不善乘)\n瘑\tgwo1\t(1)疽疮；(2)生病\n疮\tcong1\t疮疤，疮痍，疮痍满目\n瘨\tdin1\t同「癫」字\n瘝\tgwaan1\t同「矜」字\n瘚\tkyut3\t(1)雕刻；(2)刻书\n瘤\tlau4\t肿瘤，肉瘤，毒瘤\n瘜\tsik1\t瘜肉\n瘙\tsou3\t瘙疹\n瘣\twaai6\t木病无枝\n瘟\twan1\t瘟神，瘟疫，春瘟，鸡瘟，瘟病人或畜的急性传染病\n瘭\tbiu1\t瘭疽\n瘳\tcau1\t夷瘳，厥疾勿瘳\n瘽\tgan2\t病\n瘘\tlau6\t瘘管\n瘼\tmok6\t民瘼\n瘵\tzaai3\t痨瘵(肺痨)，羸瘵(瘦弱)病\n瘴\tzoeng3\t瘴气，瘴疠，乌烟瘴气\n疭\tzung3\t瘛疭中医所云一种小儿惊风症状\n癈\tfai3\t残废的疾病\n痨\tlou4\t肺痨，痨病，馋痨(贪涎美食或女色)，话痨\n癃\tlung4\t癃闭\n癌\tngaam4\t癌症，癌肿\n癜\tdin6\t中医上指皮肤出现紫色或白色的小点，久而蔓延成疔\n癐\tgui6\t病、心悸\n愈\tjyu6\t愈合，痊愈，大病初愈，不药而愈\n癗\tleoi5\t皮肤上的小疙瘩\n癖\tpik1\t癖好，癖性，怪癖，洁癖\n癙\tsyu2\t因忧闷而产生的疾病\n疖\tzit3\t疖子\n癓\tmei4\t足疮\n癚\tdaam3\t痴貌\n瘪\tbit6\t瘪子，瘪三(流氓)，干瘪，吃瘪(吃亏)；(1)下陷、委缩；(2)倒闭；(3)窘迫\n痴\tci1\t痴情，白痴，痴人说梦，痴𫘤，痴呆，痴心，书痴\n痒\tjoeng5\t痛痒，技痒，隔靴搔痒\n癪\tzik1\t日文汉字\n瘿\tjing2\t瘿瘤，虫瘿，颏下瘿\n癣\tsin2\t癣疥，顽癣，头癣，脚癣\n癫\tdin1\t癫痫，癫狂，疯癫\n癵\tlyun1\t病体拘曲\n症\tzing3\t症状，症候\n痒\tjoeng4\t病\n痋\tcung4\t生病\n痋\ttung4\t同「疼」字\n痹\tbei1\t雌鹑\n痳\tmaa4\t痳痹，痳疹\n痳\tlam4\t同「淋」字\n痷\tam1\t痷婪(浮泛)\n痷\tjip3\t(1)同「殗」字；(2)瘦病\n疕\tbei2\t「疕pei2」的异读字\n疕\tpei2\t头疮\n疔\tdeng1\t「疔ding1」的异读字，口语读音\n疔\tding1\t疔疮，疔毒，眼中疔，面疔，羊毛疔\n疙\tgat1\t「疙ngat6」的异读字\n疙\tgat6\t「疙ngat6」的异读字\n疙\tngat6\t疙搭，鸡皮疙瘩\n疢\tcan2\t「疢can3」的异读字\n疢\tcan3\t疢疾\n疧\tkei4\t病\n疧\tzi1\t「疧kei4」的异读字\n病\tbeng6\t「病bing6」的异读字\n病\tbing6\t病夫，病例，病殁，病毒，病容，病根，病菌，病痛，病态，病征，病笃，病魔，病变，病入膏肓，生病，通病，疾病，语病\n疹\tcan2\t疹疾，疹粟，风疹，麻疹，显疹\n疹\tzan2\t「疹can2」的异读字\n痁\tdim3\t痁泄；(1)疟疾；(2)濒危\n痁\tsim1\t「痁sim1」的异读字\n疿\tfai2\t「疿fai3」的异读字\n疿\tfai3\t痱子\n疿\tfai6\t「疿fai3」的异读字\n疿\tfei2\t「疿fai3」的异读字\n痂\tgaa1\t疮痂，结痂\n痂\tge1\t「痂gaa1」的异读字\n痀\tkeoi1\t「痀jyu2」的异读字\n痀\tkeoi4\t「痀jyu2」的异读字\n痀\tjyu2\t痀偻\n疸\tdaam2\t「疸taan2」的异读字\n疸\tdaan3\t「疸taan2」的异读字\n疸\ttaan2\t黄疸\n疼\ttang4\t疼惜，疼痛，疼爱，心疼，头疼\n疼\ttung3\t「疼tang4」的异读字\n疼\ttung4\t「疼tang4」的异读字\n疾\tzaat6\t「疾zat6」的异读字\n疾\tzat6\t疾病，疾苦，疾呼，疾驰，疾风，疾言厉色，疾走\n疽\tceoi1\t「疽zeoi1」的异读字\n疽\tzeoi1\t痈疽\n疻\tzi1\t「疻zi2」的异读字\n疻\tzi2\t痏疻(遭殴伤后的创痕)\n疵\tci1\t疵病，疵物，疵毁，疵点，瑕疵，吹毛求疵\n疵\tci4\t「疵ci1」的异读字\n痏\twai5\t「痏fui2」的异读字\n痏\tfui2\t伤口\n痡\tpou1\t财殚力痡\n痡\tfu1\t「痡pou1」的异读字\n痗\tfui3\t「痗mui6」的异读字\n痗\tmui6\t(1)忧伤；(2)病\n瘀\tjyu1\t瘀血，瘀伤\n瘀\tjyu2\t「瘀jyu1」的异读字\n瘀\tjyu3\t「瘀jyu1」的异读字\n疴\to1\t沉疴，养疴\n疴\tngo1\t「疴o1」的异读字\n痿\twai1\t「痿wai2」的异读字\n痿\twai2\t痿痹\n瘃\tzuk1\t皲瘃\n瘃\tzuk6\t「瘃zuk1」的异读字\n瘢\tbaan1\t雀瘢，瘢痕，洗垢求瘢；(1)疮痕、疤痕；(2)过失、缺点\n瘢\tpun4\t「瘢baan1」的异读字\n瘩\tdaap3\t瘩背(生在背部的痈)，鸡皮疙瘩\n瘩\tdaat6\t「瘩daap3」的异读字\n瘗\tai3\t「瘗ji3」的异读字\n瘗\tngai3\t「瘗ji3」的异读字\n瘗\tji3\t瘗埋，瘗钱(陪葬的钱)，瘗玉埋香，敛瘗；(1)掩埋；(2)埋藏\n瘛\tcai3\t瘛疭中医所云一种小儿惊风症状\n瘛\tkai3\t「瘛cai3」的异读字\n瘛\tzai3\t「瘛cai3」的异读字\n瘠\tzek3\t「瘠zik3」的异读字\n瘠\tzik3\t瘠田，贫瘠\n瘠\tzik6\t「瘠zik3」的异读字\n瘯\tcuk1\t瘯蠡(六畜的瘟疫)疥癣之类的皮肤病\n瘯\tzuk6\t「瘯cuk1」的异读字\n𪽷\tai3\t「𪽷ji3」的异读字\n𪽷\tngai3\t「𪽷ji3」的异读字\n𪽷\tji3\t婉𪽷；(1)文静、柔顺；(2)深邃\n瘸\tke4\t瘸子，瘸腿\n瘸\tkoe4\t「瘸ke4」的异读字\n瘰\tleoi4\t「瘰lo2」的异读字\n瘰\tlo2\t病名，颈项间的淋巴结核症古称\n瘰\tlo5\t「瘰lo2」的异读字\n痫\tgaan2\t「痫haan4」的异读字\n痫\thaan4\t癫痫\n疗\tliu4\t疗养，治疗\n疗\tliu6\t「疗liu4」的异读字\n疠\tlaai3\t「疠lai6」的异读字\n疠\tlaai6\t「疠lai6」的异读字\n疠\tlai6\t疠疫\n癠\tcai4\t「癠zai6」的异读字\n癠\tzai6\t病\n癠\tzik3\t「癠zai6」的异读字\n症\tzing1\t症结\n症\tzing3\t「症zing1」的异读字\n瘾\tjan2\t「瘾jan5」的异读字\n瘾\tjan5\t瘾君子，上瘾，过瘾，酒瘾\n痈\tjung1\t痈疽，养痈成患\n痈\tjung2\t「痈jung1」的异读字\n瘫\ttaan1\t瘫子，瘫痪，瘫软，风瘫，面瘫，偏瘫\n瘫\ttaan2\t「瘫taan1」的异读字，口语读音\n痞\tfau2\t「痞pei2」的异读字\n痞\tmau1\t地痞\n痞\tpei2\t痞块，痞积\n痞\tpei5\t「痞pei2」的异读字\n痱\tfai2\t「痱fai6」的异读字\n痱\tfai6\t痱子，热痱\n痱\tfei2\t「痱dai6」的异读字\n痱\tfei4\t中风病\n瘕\tgaa1\t「瘕gaa2」的异读字\n瘕\tgaa2\t瘕聚，石瘕，血瘕，伏瘕\n瘕\tgaa3\t「瘕gaa2」的异读字\n瘕\thaa4\t通「瑕」字\n瘈\tgai3\t「瘈zai3」的异读字\n瘈\tkai3\t瘈疭\n瘈\tzai3\t瘈狗(即疯狗)\n瘥\tcaai3\t病愈\n瘥\tco1\t「瘥co4」的异读字\n瘥\tco4\t病疫\n瘅\tdaan1\t瘅疟，火瘅\n瘅\tdaan3\t(1)病；(2)劳苦；(3)憎恨\n瘅\ttaan1\t手足风病，今谓风瘫\n瘅\tdo3\t「瘅daan3」的异读字\n癞\tlaai3\t癞病，癞疮，癞哈蟆\n癞\tlaai6\t「癞laai3」的异读字\n癞\tlaat6\t癞痢\n癸\tgwai3\t天癸，癸水，庚癸十「天干」之一\n癹\tbat6\t用脚蹋除草\n登\tdang1\t登记，登场，登高，登堂入室\n发\tfaat3\t发生，发言，启发，暴发，颁发，发达，发展，发酵，发愤图强，发闷，发凡举例，并发，批发，百发百中\n发\tfat3\t「发faat3」的异读字\n发\tbut3\t形容鱼跃的声音\n发\tbut6\t「发but3」的异读字\n白\tbaak6\t白色，白天，白云，白米，白金，白菜，白发，白昼\n癿\tgaa1\t中古藩姓\n的\tdik1\t的确，目的，一语中的，的当，鹄的，无的放矢，众矢之的\n皆\tgaai1\t皆知，皆宜\n皈\tgwai1\t皈依\n皇\twong4\t皇帝，皇后，皇室，皇冠，皇宫，皇上，皇天，皇位，皇族，皇亲国戚\n皋\tgou1\t皋比，皋泽，鹤鸣九皋\n皊\tling4\t白色\n皉\tci2\t(1)白色；(2)同「玼」字\n皎\tgaau2\t皎洁，皎皎，风清月皎\n皏\tpang2\t浅白色\n皒\tngo4\t皒皒(白色)\n皙\tsik1\t白皙\n皝\tfong2\t人名用字\n皜\thou6\t皜皜洁白。同「皓」字\n皞\thou6\t明亮\n皤\tpo4\t白发皤然\n百\tbaak3\t百姓，百货，百合，百年树人，百无禁忌\n百\tmak6\t勉力\n皦\tgaau2\t同「皎」字\n皦\tgiu2\t皦日，皦如，皦皦洁白､明亮\n皕\tbat6\t「皕bik1」的异读字\n皕\tbik1\t两百\n皓\tgou2\t「皓hou6」的异读字\n皓\thou6\t皓首，皓皓，皓月当空，皓首穷经，明眸皓齿\n皖\twun2\t「皖wun5」的异读字\n皖\twun5\t安徽省别名\n皑\tji4\t「皑ngoi4」的异读字\n皑\tngoi2\t「皑ngoi4」的异读字\n皑\tngoi4\t皑然，皑皑白雪\n皛\tjiu5\t(1)明亮；(2)洁白\n皛\tkiu5\t「皛jiu5」的异读字\n皪\tlik1\t「皪lik6」的异读字\n皪\tlik6\t的皪\n皫\tpiu2\t(1)白色；(2)鸟类毛色暗淡没有光泽\n皫\tpiu3\t「皫piu2」的异读字\n皫\tpiu5\t「皫piu2」的异读字\n皭\tziu3\t皭然\n皭\tziu6\t「皭ziu3」的异读字\n皭\tzoek3\t「皭ziu3」的异读字\n皭\tzoek6\t「皭ziu3」的异读字\n皮\tpei4\t皮肤，皮鞋，皮肉\n皯\tgon2\t皮肤黝黑粗糙\n疱\tpaau3\t疱疹，水疱\n皲\tgwan1\t皲裂\n皱\tzau3\t皱纹，褶皱，皱眉\n皻\tzaa1\t鼻部及其两侧所生的红色小疮粒\n皽\tzin2\t死皮\n皾\tduk6\t(1)同「韇」字；(2)滑\n皴\tceon1\t皴法，皴裂\n皴\tseon1\t「皴ceon1」的异读字\n皵\tcik1\t「皵coek3」的异读字\n皵\tcoek3\t表皮粗糙而坼裂\n皿\tming5\t器皿\n盂\tjyu4\t痰盂，盂兰节\n盄\tdiu3\t吊子，一种烧水或熬煮食物的器皿\n盈\tjing4\t盈余，盈亏，盈利，盈门，盈满，盈盈的\n盆\tpun4\t盆栽，盆景，盆地，盆子\n盅\tzung1\t盅子，茶盅，酒盅\n盍\thap6\t盍簪\n益\tjik1\t益处，益智，利益，裨益，受益\n盉\two4\t温酒的铜器\n盔\tkwai1\t盔甲，钢盔，盔头，丢盔弃甲\n盗\tdou6\t盗窃，偷盗，掩耳盗铃，盗贼，盗匪，盗版，盗印，防盗，海盗，强盗，欺世盗名，鸡鸣狗盗，奸淫邪盗，监守自盗，江洋大盗\n盚\tkau4\t(1)盒子的俗称；(2)姓氏\n盝\tluk6\t(1)同「漉」字；(2)同「簏」字\n盏\tzaan2\t酒盏，一盏明灯\n盘\tpun4\t盘查，盘旋，盘问，盘算\n盩\tzau1\t盩厔县(地名)\n盬\tgu2\t(1)盐池；(2)不坚固；(3)停止；(4)吸食\n盭\tleoi6\t盭夫，盭绶\n盛\tsing4\t盛菜，盛汤，盛载，盛殓\n盛\tsing6\t盛大，盛世，盛典，盛装，盛举，盛赞，盛况空前，盛衰荣辱，盛气凌人，盛极一时，盛德遗范，茂盛，强盛，兴盛\n盟\tmaang6\t盟津\n盟\tmang4\t盟军，盟国，盟主，盟邦，盟友，盟约，盟机\n监\tgaam1\t监视，监国，监禁，监管，监察，监制，监狱，监护，监守自盗\n监\tgaam3\t太监，国子监，阿监，钦天监\n尽\tzeon6\t尽量，殆尽，苦尽甘来，尽欢，自尽，尽善尽美，历尽沧桑，鸟尽弓藏，赶尽杀绝，淋漓尽致，仁至义尽，一言难尽，同归于尽，筋疲力尽\n卢\tleoi4\t古兖州河流名称\n卢\tlou4\t(1)古汉语中有黑色、盛饭器具等解；(2)今几乎只用于姓氏\n荡\tdong6\t荡漾，震荡，动荡不安，扫荡，荡涤，荡秋千，倾家荡产\n荡\ttong3\t同「趟」字\n盎\ton1\t「盎ong3」的异读字\n盎\tong3\t盘类盛器\n盎\tngong3\t「盎ong3」的异读字\n盒\thaap6\t「盒hap6」的异读字\n盒\thap6\t盒子，礼盒，纸盒，饭盒，墨盒\n盓\twu1\t「盓jyu1」的异读字\n盓\tjyu1\t盘盓(水旋流)\n盦\tam1\t盛食物器\n盦\tngam1\t「盦am1」的异读字\n盥\tfun2\t「盥gun3」的异读字\n盥\tgun2\t「盥gun3」的异读字\n盥\tgun3\t盥洗，盥漱，盥栉\n目\tmuk6\t目标，目的，目睹，目击，目录，目不暇给，目瞪口呆，目中无人，目不转睛，目眩神迷，目光炯炯\n盱\theoi1\t盱衡，盱胎，盱阋，睢盱；(1)凝视；(2)大的，同「訏」字；(3)忧愁\n盲\tmaang4\t盲目，文盲，问道于盲，色盲，盲点，盲生，盲从，盲肠，盲肠炎，盲者，盲哑，盲人摸象，盲人瞎马\n直\tzik6\t直接，直到，直升机，直线，直径，直拨，直觉，直属，直通，直达，直落，直立，直言，直角，直隶，直话直说\n盵\thei3\t姓氏\n眈\tdaam1\t虎视眈眈\n盷\tjyun4\t(1)眼大的样子；(2)古国名\n眉\tmei4\t眉毛，眉目，眉清目秀，眉来眼去，眉飞色舞，眉目传情\n眇\tmiu5\t眇字从目从少，指一目失明。\n眊\tmou6\t看不清楚\n眅\tpaan1\t反目的样子\n盼\tpaan3\t盼望，顾盼\n盺\tjan1\t(1)喜；(2)看不清楚\n眣\tdit6\t目不正\n眑\tjiu2\t眑冥，眑眑(幽静)\n眢\tjyun1\t(1)眼睛枯陷；(2)干枯\n眠\tmin4\t睡眠，冬眠\n眛\tmui6\t目不明五色\n眚\tsaang2\t(1)眼睛生翳；(2)日月蚀，亦指灾异；(3)过失\n真\tzan1\t真正，真相，真实，真理，写真，真皮，天真\n眐\tzing1\t眐眐(独行的样子)\n眓\tkut3\t向上看的样子\n眒\tsan1\t(1)张目；(2)疾速；(3)鸟兽惊貌\n眝\tcyu5\t(1)远望；(2)睁大眼睛\n眧\tciu1\t用目光挑逗人\n眵\tci1\t眼眵，揉眵抹泪\n眷\tgyun3\t眷属，眷恋，眷顾，家眷\n眱\tji4\t雠眱(熟视不言)\n眸\tmau4\t凝眸，明眸皓齿\n眳\tming4\t眳睛(不悦的样子)\n眼\tngaan5\t眼睛，心眼，眼明手快，榜眼，眼泪，眼神，眼尖，眼界，眼帘，眼角膜，眼中钉，眼镜蛇，猫眼石，使眼色，有眼无珠，豹头环眼，别具慧眼，眉来眼去，眉开眼笑\n眭\tseoi1\t(1)姓；(2)目光深注\n眺\ttiu3\t眺望，临眺，极目远眺\n眻\tjoeng4\t(1)美目；(2)眉间\n睊\tgyun3\t睊睊\n睎\thei1\t(1)瞭望；(2)仰慕\n困\tkwan3\t(1)睡；(2)疲乏想睡\n睋\tngo4\t(1)望；(2)突然\n睌\tmaan5\t看\n睬\tcoi2\t不睬，理睬，瞅睬，不揪不睬\n睹\tdou2\t目睹，睹物思人，视若无睹，惨不忍睹，有目共睹\n督\tduk1\t督导，督促，督察\n睧\tfan1\t漠睧\n睔\tgwan3\t眼睛圆大\n睠\tgyun3\t同「眷」字\n睖\tling6\t睖睁\n睐\tloi6\t青睐\n睦\tmuk6\t睦邻，敦睦，和睦\n睨\tngai6\t睥睨\n睒\tsim2\t窥视\n睭\tzau2\t深\n睛\tzing1\t眼睛，目不转睛，金睛火眼，画龙点睛\n睙\tlit6\t转视\n瞅\tcau2\t瞅见，瞅紧，瞅睬，瞅问，不瞅不睬\n睼\tdai6\t迎视\n瞂\tfat6\t盾\n睾\tgou1\t睾丸；(1)古称之阴丸或肾丸；(2)今常被误作「睾」字\n睿\tjeoi6\t睿哲，睿旨，睿藻，英明睿智；(1)聪明才智；(2)与天子有关事情的统称\n睮\tjyu4\t睮睮(谄媚阿谀的样子)\n瞀\tmau6\t瞀乱\n瞄\tmiu4\t瞄准\n瞍\tsau2\t蒙瞍，瞽瞍\n睡\tseoi6\t睡觉，睡眠，睡衣，睡袋，睡意，睡眼，睡醒，睡狮，熟睡\n瞃\twat1\t恶视\n睯\tfan1\t闷也\n瞁\thik1\t惊视\n瞋\tcan1\t瞋目，瞋胆，瞋恚；(1)张目；(2)发怒\n瞎\that6\t瞎子，瞎猜，瞎扯，瞎搞，瞎编，瞎闹，瞎抓\n瞈\tjung2\t瞈蒙(目不明)\n瞏\tking4\t(1)目惊视；(2)忧愁；(3)孤独无依貌\n瞡\tkwai1\t瞡瞡(见识短浅/自得的样子)\n䁖\tlau1\t视看\n瞒\tmun4\t瞒骗，隐瞒，瞒天过海，掩瞒，欺上瞒下\n瞥\tpit3\t瞥见，一瞥\n瞚\tseon3\t转动眼珠\n瞝\tci1\t视或历观\n瞙\tmok6\t目不明\n瞛\tcung1\t目光\n瞕\tzoeng3\t目生暗翳\n瞣\twaan6\t妄弃财物\n瞧\tciu4\t瞧见，小瞧，瞧不起，走著瞧，瞧热闹\n瞷\tgaan3\t(1)窥视；(2)侦伺\n瞵\tleon4\t瞵视昂藏，鹰瞵鸮视\n瞫\tsam2\t深视\n瞬\tseon3\t瞬间，瞬息万变\n瞳\ttung4\t瞳孔，重瞳，瞳蒙，双瞳翦水\n瞱\tjip6\t(1)目动貌；(2)怒视；(3)目不记\n瞨\tpok3\t目暗\n矂\tcou3\t眊矂(失意/烦恼)\n瞽\tgu2\t瞽者，瞽说\n瞻\tzim1\t瞻仰，瞻望，观瞻，高瞻远瞩向上或向前看\n瞺\twui3\t眉目之间\n矊\tmin4\t(1)眼珠黑白分明；(2)眽眽含情的样子\n蒙\tmung4\t蒙骗，蒙混，蒙眬\n𪾸\tpan4\t(1)因恨而瞪眼张目；(2)皱眉\n矄\tfan1\t目暗\n矏\tmin4\t密也\n眬\tlung4\t蒙眬\n矔\tgun3\t张目\n矗\tcuk1\t矗立\n矕\tmaan5\t(1)看；(2)覆盖；(3)目美\n矘\ttong2\t眼睛无神，茫然直视的样子\n瞩\tzuk1\t瞩目，高瞻远瞩\n盳\tmaang4\t同「盲」字\n盳\tmong6\t通「望」字\n盻\tpaan3\t同「盼」字\n盻\thai6\t怒覝\n看\thon1\t看守，看更，看管，看护\n看\thon3\t看见，看法，看穿，看破，看淡，看透，看人眉眼，看朱成碧，看风使舵，观看，另眼相看\n省\tsaang2\t省分，省略，省减，省会，省略号，节省，行省，中书省，尚书省\n省\tsing2\t省视，省问，省悟，省察，省亲，反省，内省，自省\n相\tsoeng1\t相干，相左，相安，相好，相宜，相知，相思，相托，相差，相容，相处，相符，相逢，相当，相对，相称，相扑，相应，相识，相关，相反相成，相去无几，相形见绌，相依为命，相得益彰，相敬如宾，相濡以沫\n相\tsoeng3\t相士，相公，相片，相国，相貌，相亲，相夫教子，相机行事，丞相，宰相\n眃\twan4\t眩眃(看不清楚)\n眃\twan6\t眩眃(疾视貌)\n眙\tci3\t伫眙，愕眙\n眙\tji4\t盱眙(县名)\n众\tzung1\t(1)姓氏；(2)谷物名称\n众\tzung3\t众人，群众，众望所归，众说纷纭，众所周知，众矢之的，众生相，众志成城，众目睽睽，众口铄金，众叛亲离\n睄\tsaau3\t睄宨\n睄\tciu4\t同「瞧」字\n睾\tzaak6\t同「泽」字，指一种香草，如泽兰\n睾\tjik6\t官吏购引线捕人，《说文》：伺视也，令吏将目补罪人也\n睕\twaan1\t眼睛凹陷\n睕\tjyun2\t目开貌\n瞉\tgai3\t久视\n瞉\tkau3\t瞉霿(心不明)\n瞗\tdau1\t𫛝瞗(传说中的怪鸟)\n瞗\tdiu1\t仔细察看\n瞭\tliu4\t瞭望\n瞭\tliu5\t了解，了然，了若指掌，明了\n瞴\tmei4\t美目貌\n瞴\tmou4\t瞴娄(微视)\n瞴\tmou5\t(1)微视貌；(2)美好\n矎\thing3\t直视\n矎\thyun3\t目不正\n盯\tdeng1\t注视\n盯\tding1\t「盯deng1」的异读字\n盰\tgon2\t「盰gon3」的异读字\n盰\tgon3\t(1)眼露白的样子；(2)张目\n盹\tdeon6\t打盹，睡盹\n盹\tzeon3\t「盹deon6」的异读字\n眄\tmin5\t眄视，顾眄，流眄(眼波流动)，凝眄，恩眄；(1)斜视；(2)看､望\n眄\tmin6\t「眄min5」的异读字\n盾\tseon5\t「盾teon5」的异读字\n盾\tteon5\t盾牌，盾威正赫，矛盾，后盾\n眩\twaan6\t「眩jyun6」的异读字\n眩\tjyun4\t「眩jyun6」的异读字\n眩\tjyun6\t眩惑，头晕目眩\n眨\tzaam2\t「眨zaap3」的异读字，口语读音\n眨\tzaap3\t眨眼，眨眼之间\n眕\tcan2\t憾而能眕(见左传)安重能忍的样子\n眕\tzan2\t「眕can2」的异读字\n眶\tkwaang1\t眼眶，热泪盈眶，夺眶而出\n眶\thong1\t「眶kwaang1」的异读字\n眽\tmaak6\t「眽mak6」的异读字\n眽\tmak6\t眽眽含情\n眹\tzam6\t「眹zan6」的异读字\n眹\tzan2\t「眹zan6」的异读字\n眹\tzan6\t(1)眼珠；(2)征兆\n睅\thon5\t「睅hon6」的异读字\n睅\thon6\t鼓著眼睛\n睅\twun5\t「睅hon6」的异读字\n𪾢\tjin5\t𪾢𪾢，𪾢睆\n𪾢\tjin6\t「𪾢jin5」的异读字\n睇\tdai6\t「睇tai2」的异读字\n睇\ttai2\t粤语用字\n睆\twun2\t「睆wun5」的异读字\n睆\twun5\t明亮\n睩\tluk1\t「睩luk6」的异读字\n睩\tluk6\t曼睩\n睚\tngaai4\t睚眦(瞪著眼睛)，睚眦之隙眼眶\n睚\tngaai6\t「睚ngaai4」的异读字\n睥\tpai3\t「睥pai5」的异读字\n睥\tpai5\t睥睨\n睥\tpei5\t「睥pai5」的异读字\n睢\tfai1\t「睢seoi1」的异读字\n睢\tseoi1\t睢盱，恣睢仰视\n睟\tseoi3\t「睟seoi6」的异读字\n睟\tseoi6\t睟容\n睁\tzaang1\t睁眼\n睁\tzang1\t「睁zaang1」的异读字\n睫\tzip3\t「睫zit6」的异读字\n睫\tzit3\t「睫zit6」的异读字\n睫\tzit6\t睫毛，目不交睫\n睽\tkwai1\t睽违，睽异，睽睢，众目睽睽\n睽\tkwai4\t「睽kwai1」的异读字\n瞌\thap1\t「瞌hap6」的异读字\n瞌\thap6\t瞌睡\n瞠\tcaang1\t瞠然，瞠目相视，瞠目结舌，瞠乎其后\n瞠\ttong4\t「瞠caang1」的异读字\n瞟\tpiu2\t「瞟piu5」的异读字\n瞟\tpiu5\t瞟眇\n瞪\tcaang4\t「瞪cing4」的异读字\n瞪\tdang1\t「瞪cing4」的异读字\n瞪\tdang6\t「瞪cing4」的异读字\n瞪\tcing4\t瞪眼，瞪视，瞪圆眼睛，目瞪口呆\n瞆\tgwai3\t瞎子\n瞆\tkui2\t「瞆gwai3」的异读字\n瞰\tham3\t鸟瞰\n瞰\tham6\t「瞰ham3」的异读字\n睑\tgim2\t眼睑\n睑\tlim4\t「睑gim2」的异读字\n矍\tfok3\t矍铄\n矍\tgwok3\t「矍fok3」的异读字\n矌\tgwong3\t「矌kwong3」的异读字\n矌\tkwong3\t(1)目无珠；(2)目无色\n矐\tfok3\t矐目\n矐\thok3\t「矐fok3」的异读字\n矐\thok6\t「矐fok3」的异读字\n矙\tham3\t同「瞰」字\n矙\tham6\t「矙ham3」的异读字\n眴\tseon1\t眴眴(眼花)，眴转，眴焕\n眴\tseon3\t(1)以目示意；(2)惊慌的样子\n眴\thyun3\t「眴seon1」的异读字\n眴\tjyun6\t「眴seon1」的异读字\n眯\tmai4\t「眯mei1」的异读字\n眯\tmai5\t眯目(物入目中而眼不能睁)\n眯\tmei1\t粤语用字，意指「眼睛微闭」\n眯\tmi1\t「眯mei1」的异读字\n眲\tngaak1\t「眲ngak1」的异读字\n眲\tngak1\t粤语用字，欺骗的意思\n眲\tnei6\t「眲nik6」的异读字\n眲\tnik6\t轻视\n眦\tzaai6\t眦裂，睚眦\n眦\tzai6\t「眦zi6」的异读字\n眦\tzi6\t决眦\n瞇\tmai4\t「瞇mei1」的异读字\n瞇\tmai5\t同「眯」字，意谓「物入目而不可睁眼」\n瞇\tmei1\t瞇眼，瞇缝，瞇睎(眼睛将不开)\n瞇\tmi1\t「瞇mei1」的异读字\n瞑\tmin6\t方言用字\n瞑\tming4\t瞑目，一瞑不视，瞑拜，瞑瞑，死不瞑目\n瞑\tming5\t「瞑ming4」的异读字\n瞢\tmang4\t「瞢mung4」的异读字\n瞢\tmung4\t瞢懂，瞢腾，目光瞢然\n瞢\tmung6\t同「梦」字\n瞲\twat6\t目深貌\n瞲\tleot6\t「瞲wat6」的异读字\n瞲\thyut3\t惊视貌\n瞲\tjyut6\t「瞲hyut3」的异读字\n瞿\tgeoi2\t「瞿geoi3」的异读字\n瞿\tgeoi3\t瞿瞿，瞿然而视\n瞿\tgeoi6\t「瞿geoi3」的异读字\n瞿\tkeoi4\t姓氏\n矛\tmaau4\t矛盾，矛头，长矛\n矞\twat6\t(1)以锥穿物；(2)溢出；(3)象征祥瑞的彩云\n矞\tleot6\t「矞wat6」的异读字\n矞\tjyut6\t「矞wat6」的异读字\n矠\tcaak3\t「矠zaak6」的异读字\n矠\tzaak6\t以矛叉刺取\n矜\tgwaan1\t同「鳏」字\n矜\tkam4\t「矜kan4」的异读字\n矜\tkan4\t矛或戟的柄\n矜\tging1\t矜持，矜贵，矜怜，矜功不立，矜夸自大，哀矜，骄矜；(1)庄重自持；(2)自夸\n矜\tging6\t「矜ging1」的异读字\n矣\tji5\t夕死可矣，瞠乎后矣\n矧\tcan2\t况且\n矨\tjing5\t短小貌\n矩\tgeoi2\t矩阵，矩形，规矩\n矬\tco4\t短小\n短\tdyun2\t短暂，长短，短小精悍，短笛，短裤，短打，短工，短命，短篇，短期，短线，短浅，短见，短视，短缺，短绌，短路，简短，短兵相接，飞短流长\n矰\tzang1\t矰缴\n矱\twok3\t尺度\n矲\tbaa6\t矮小\n矢\tci2\t矢言，矢志不移，矢口否认\n矢\tsi2\t同「屎」字\n知\tzi1\t知觉，通知，知人善任，知己，知心，知名，知交，知足，知音，知悉，知遇，知会，知道，知识，知府，知县，告知，求知，无知，知白守黑\n知\tzi3\t同「智」字，用于「知识」一词\n矮\taai2\t「矮ai2」的异读字\n矮\tai2\t矮墩墩，矮半截，高矮\n矮\tngai2\t「矮ai2」的异读字\n矫\tgiu2\t矫健，矫情，矫枉过正，矫形，矫捷，矫若游龙，矫揉造作\n矫\tkiu2\t「矫giu2」的异读字\n矹\tngat6\t硉矹(崖石高耸突出/沙石随水转动/形容雄建不凡)\n矺\tzaak3\t(1)敲击；(2)古代分裂肢体的酷刑\n矽\tzik6\t矽藻，矽质，矽砂，矽岩，矽谷(SiliconValley)\n矷\tzi2\t石名\n砆\tfu1\t像玉之石\n砍\tham2\t砍伐，砍杀，砍掉，砍柴\n砅\tlai6\t踏著石蹬渡水\n砑\tngaa6\t砑光\n砒\tpei1\t砒霜\n砂\tsaa1\t砂糖，砂石，砂砾，砂土，砂岩，砂质，砂纸，砂布，砂锅，砂层，砂矿，砂轮机，砂轮，砂眼，砂粒\n砉\twaak6\t砉然\n砐\tngap6\t砐硪(山高大貌)\n砎\tgaai3\t(1)石貌；(2)坚硬\n砃\tdaan1\t白石\n砓\tzit3\t山势徒恶重叠的样子\n砬\tlaa1\t石药\n砳\tlaak6\t石头撞击声\n砪\tmou5\t云砪(药名)\n砮\tnou5\t可用来做箭镞的石头\n砲\tpaau3\t同「炮」字\n破\tpo3\t破坏，破裂，破旧，破解，破财，破绽百出，破镜重圆，破釜沈舟，破晓\n砷\tsan1\t一种非金属元素，俗称「砒霜」。英文=Arsenic，化学符号As\n砣\tto4\t称砣，碾砣\n砸\tzaap3\t砸坏，砸伤，砸了，砸下，砸锅，砸死，砸碎，砸烂\n砧\tzam1\t砧板，铁砧，砧骨，砧木\n砵\tbut3\t铜砵(福建省地名)\n砯\tping1\t水击岩石声\n砱\tling4\t(1)石；(2)石孔敞亮；(3)石声\n砩\tfai3\t以石拦水\n砡\tjuk6\t叠石齐头\n硐\tdung6\t山洞或矿坑\n硅\tgwai1\t一种非金属元素，符号Si\n硎\tjing4\t(1)磨刀石；(2)磨制\n硫\tlau4\t一种非金属元素S\n硉\tleot6\t硉兀(凹凸不平)\n硒\tsai1\t一种金属元素，符号Se\n砦\tzaai6\t堡砦，城砦，鹿砦；(1)防守用的栅栏；(2)同「寨」字；(3)姓氏\n朱\tzyu1\t朱砂\n硈\tkit3\t(1)石头坚固；(2)奔突\n硍\thaan6\t石声\n砗\tce1\t砗磲(一种蛤贝类)\n硁\thang1\t硁硁喻浅见而固执\n砚\tjin6\t墨砚，砚友，砚台，砚席，砚耕(卖文维生)；(1)磨墨的石制用具；(2)指有同窗之谊\n确\tkok3\t(1)同「埆」字；(2)同「确」字；(3)同「礐」字\n硠\tlong4\t磅硠大声\n硭\tmong4\t硭硝\n硬\tngaang6\t硬币，坚硬，硬著头皮，硬汉，硬度，硬体，硬化，硬仗，硬朗，硬块，硬撑，硬纸板，硬生生，硬干\n硝\tsiu1\t硝石，硝酸，硝烟弹雨，朴硝(中药名)\n硩\tzit3\t(1)摘取；(2)捣毁\n硥\tpong5\t同「蚌」字\n硱\tkwan2\t硱磳(石貌)\n硢\tjyu4\t石名\n碑\tbei1\t碑文，碑志，碑林，碑帖，有口皆碑\n碆\tbo1\t同「磻」字，射鸟用的石制箭头\n碏\tcoek3\t石碏(春秋时人名)\n碓\tdeoi3\t碓房，碓声，舂碓，水碓，捣碓\n碘\tdin2\t碘酒\n碇\tding3\t碇石，下碇，启碇，拔碇系船的石墩或铁锚\n碉\tdiu1\t碉堡，碉楼\n𥐻\tgong1\t山岗、石岩\n埼\tkei4\t弯曲的岸\n碅\tkwan1\t碅磳\n碔\tmou5\t碔砆\n碚\tpui5\t北碚\n碰\tpung3\t碰到，碰撞，碰壁，碰面，碰头，碰巧，碰见，碰伤，碰击，碰坏\n碎\tseoi3\t碎片，碎石，碎裂，碎肉，碎步，碎屑，碎石机，碎布，碎石子，碎尸万段，碎纸，碎布条，碎冰机\n碗\twun2\t碗盘，碗筷，碗橱，碗豆\n碄\tlam4\t碄碄(深貌)\n硹\tsung1\t地名\n碀\tcang4\t(1)破裂声；(2)同「琤」字\n硿\thung1\t(1)崖石隆起貌；(2)石落声\n碃\tcing3\t石也\n碧\tbik1\t碧潭，碧玉，碧海，碧山，碧绿，碧波，碧草，碧水，碧海青天，碧眼，碧色，碧江，碧空，碧草如茵\n碥\tbin2\t指水流湍急、崖岸峻险的地方\n磁\tci4\t磁砖，磁性，磁场，磁带，磁片，磁铁，磁碟，磁力，磁石\n碲\tdai3\t化学元素之一，符号为「Te」\n碟\tdip6\t碟片，碟子\n砀\tdong6\t砀山(县名)\n碫\tdyun3\t以碫投卵\n碣\tkit3\t碑碣(碑刻的总称。方者为碑﹐圆者为碣)，墓碣，石碣刻有文字的圆形石碑\n硕\tsek6\t硕士，硕大\n碳\ttaan3\t一种非金属元素，符号C\n碨\twai3\t碨磊\n碴\tzaa1\t碴儿(碎屑)\n碪\tzam1\t同「砧」字\n硾\tzeoi6\t(1)同「缒」字；(2)垂挂；(3)揣量物体的重量；(4)用锤子敲打\n碤\tjing1\t(1)水中石；(2)有文彩之石\n碢\tto4\t同「砣」字\n碠\tding3\t(1)石亭；(2)船停泊时镇船用的石礅\n碬\thaa4\t磍碬(高下)\n磋\tco1\t磋商，磋跎，磋谈\n磈\tfaai3\t磈磊，礧磈\n磎\tkai1\t山间的小水沟\n确\tkok3\t确定，正确，千真万确，确定，证据确凿，确保，确认，确立，确切，确实，明确，准确\n碻\tkok3\t同「确」字\n磊\tleoi5\t磊落\n磏\tlim4\t红色的磨刀石\n码\tmaa5\t码头，电码，尺码，筹码\n磐\tpun4\t磐石，磐结，磐桓，风雨如磐；(1)巨大的石头；(2)徘徊不去；(3)同「盘」字\n磉\tsong2\t柱下石礅\n磌\ttin4\t(1)石落声；(2)柱下石\n磄\ttong4\t磅磄(广大的样子)\n碜\tcam2\t割碜，砢碜，可碜，口碜，寒碜，牙碜，碜磕磕\n磩\tcik1\t象玉的美石\n磢\tcong2\t(1)石；(2)用瓦石擦洗污垢；(3)磨擦；(4)峡谷\n磡\tham3\t山崖\n磬\thing3\t磬子，钟磬，玉磬\n磥\tleoi5\t同「磊」字\n硵\tlou5\t硵砂\n磝\tngou4\t多小石的山\n磞\tpang4\t击石声\n砖\tzyun1\t砖头，抛砖引玉\n磛\tcaam4\t磛岩(积石高峻的样子)\n磭\tcoek3\t大唇\n磾\tdai1\t可做染料之黑石\n磴\tdang3\t磴道，石磴\n礅\tdeon1\t石礅，桥礅\n磹\tdim3\t(1)石楔；(2)同「簟」字\n矶\tgei1\t矶钓，燕子矶，采石矶，台矶\n硗\thaau1\t硗瘠，硗地，硗薄\n磲\tkeoi4\t砗磲(一种蛤贝类)\n硚\tkiu4\t硚头(地名，在四川省)，硚口(地名，在汉口)\n磺\twong4\t硫磺，硝磺，磺胺剂\n磳\tzang1\t山崖、山麓\n礁\tziu1\t礁石，暗礁，珊瑚礁，礁岩，堡礁\n磼\tzaap6\t山高峻貌\n礂\thei1\t「嘻」的异体字\n础\tco2\t础石，基础，础润而雨，巢础\n礓\tgoeng1\t砂礓\n礐\tkok3\t(1)多大石的山；(2)水击石声\n磿\tlik6\t石声\n𥐟\tngai5\t埼𥐟(山石错落不平)\n礑\tdong3\t底，最下面的部份\n礔\tpik1\t同「霹」字\n礡\tbok6\t槃礡，气势磅礡\n礝\tjyun5\t同「瓀」字\n礞\tmung4\t礞石\n碍\tngoi6\t碍事，防碍，心无罣碍，障碍物，碍眼，辩才无碍，碍手碍脚\n礜\tjyu6\t礜石(矿物学名词)\n礗\tban1\t碎石声\n礤\tcaat3\t礤床儿(把瓜果刨成丝的厨具)\n砺\tlai6\t磨砺，砥砺\n礧\tleoi6\t礧石\n礨\tleoi5\t礨空(蚁穴)\n礣\tmat6\t礣砎(坚硬/小石)\n礥\tjin4\t(1)艰难的样子；(2)刚强\n砻\tlung4\t(1)磨；(2)去掉稻壳的工具\n礭\tkok3\t(1)坚固不可动摇；(2)敲击；(3)水激石险峻不平之貌\n礯\tjing1\t石名\n礵\tsoeng1\t地名用字\n礸\tcaat3\t同「礤」字\n石\tdaam3\t一石米容量或重量单位\n石\tsek6\t石头，石油，石窟，石榴，石墨，石英，石雕，石沉大海，石破天惊\n矸\tgon1\t矸石，丹矸\n矸\tgon3\t山石的样子\n矸\thon6\t聚石成堆\n矼\tgong1\t石桥\n矼\thong1\t确实的样子\n硊\tkwai3\t石硊(江名)\n硊\tngai5\t磈硊(石貌/足曲)\n硪\tngo4\t石岩\n硪\tngo6\t砸地基的工具\n硞\tkok3\t(1)石声；(2)坚固\n硞\tkuk1\t碌硞(石不平貌)\n硼\tpaang1\t硼砰\n硼\tpang4\t硼砂，硼酸\n硻\thang1\t击石声\n硻\tkong3\t刚也\n碖\tleon4\t石\n碖\tleon6\t(1)石貌；(2)大小匀称\n碞\tngaam4\t同「岩」字\n碞\tjam4\t僭越\n磅\tbong6\t过磅，磅称\n磅\tpong4\t磅礡，磅硠\n磃\ttai4\t磄磃(怪石)\n磃\tsi1\t磃氏(汉宫苑馆名)\n磨\tmo4\t磨刀，磨牙，磨耗，磨晚，磨灭，磨损，磨练，磨墨，磨砺，磨杵成针，磨穿铁砚，磨砖成镜，折磨，琢磨\n磨\tmo6\t磨坊，石磨，推磨，电磨\n磷\tleon4\t磷火，磷磷，白磷，红磷\n磷\tleon6\t磨薄\n磷\tling4\t砰磷\n磻\tbo1\t缴矢所用石块\n磻\tpun4\t磻溪(陕西省河名)\n礉\thaau1\t石不平\n礉\that6\t严峻\n礹\tngaam4\t同「岩」字\n礹\tjim5\t山石险峻貌\n矻\tfat1\t「矻ngat6」的异读字\n矻\tngat6\t矻矻\n砌\tcai3\t砌砖，砌墙，堆砌\n砌\tcit3\t「砌cai3」的异读字\n砏\tpaan1\t「砏fan1」的异读字\n砏\tfan1\t砏殷(象声词)\n砭\tbin1\t针砭，痛砭时弊，冷风砭骨\n砭\tbin2\t「砭bin1」的异读字\n砥\tdai2\t砥砺，中流砥柱\n砥\tzi1\t「砥dai2」的异读字\n砥\tzi2\t「砥dai2」的异读字\n砝\tfaat3\t砝码\n砝\tfat3\t「砝faat3」的异读字\n砟\tzaa1\t「砟zok6」的异读字\n砟\tzaa3\t「砟zok6」的异读字\n砟\tzok6\t砟硌\n砠\tceoi1\t「砠zeoi1」的异读字\n砠\tzeoi1\t戴土的石山\n砫\tcyu5\t石砫\n砫\tzyu2\t「砫cyu5」的异读字\n砨\taai3\t「砨ak1」的异读字\n砨\tak1\t砥砨(宝玉名)\n硖\thaap6\t硖石(浙江省地名)\n硖\tgip3\t「硖haap6」的异读字\n硰\tsaa1\t硰石(古地名，在今山西省境内)\n硰\tco2\t「硰saa1」的异读字\n碡\tduk6\t磟碡(农具名)\n碡\tzuk6\t「碡duk6」的异读字\n碌\tluk1\t奔波劳碌，忙碌，劳碌，庸碌\n碌\tluk6\t「碌luk1」的异读字\n磕\tham2\t「磕hap6」的异读字\n磕\thap6\t磕头，磕碰\n磕\tkoi3\t「磕hap6」的异读字\n碾\tnin5\t碾米，碾子\n碾\tnin6\t「碾nin5」的异读字\n碾\tzin2\t「碾nin5」的异读字\n磔\tzaak3\t「磔zaak6」的异读字\n磔\tzaak6\t(1)古时以车裂体的酷刑；(2)汉字书法中的捺笔\n磪\tceoi1\t磪嵬\n磪\tceoi4\t「磪ceoi1」的异读字\n磟\tluk1\t「磟luk6」的异读字\n磟\tluk6\t磟碡\n礌\tleoi5\t「礌leoi6」的异读字\n礌\tleoi6\t礌石\n礛\tgaam1\t礛诸(治玉用的磨石)\n礛\tlaam4\t「礛gaam1」的异读字\n矾\tfaan4\t矾土，明矾\n矾\tfaan6\t「矾faan4」的异读字\n矿\tgwong3\t「矿kwong3」的异读字\n矿\tkong3\t「矿kwong3」的异读字\n矿\tkwong3\t矿产，煤矿，矿物质，矿泉水，矿工，矿井，矿石，矿藏，开矿\n砾\tlik1\t砂砾，瓦砾\n砾\tlik6\t「砾lik1」的异读字\n研\tngaan4\t「研jin4」的异读字\n研\tjin4\t研究，研讨，研制，研桑心计，钻研\n研\tjin6\t同「砚」字\n砢\to1\t同「珂」字\n砢\tlo2\t磊砢，砢碜\n砢\tlo5\t「砢lo2」的异读字\n砰\tpaang1\t「砰ping1」的异读字\n砰\tping1\t砰砰，砰訇，砰然象声词\n砰\tping4\t砰石(广东省地名)\n硌\tgok3\t接触硬物觉得受或受到损伤\n硌\tlok3\t「硌lok6」的异读字\n硌\tlok6\t山上的大石\n硙\tngai4\t山石高耸的样子\n硙\twai3\t「硙ngoi6」的异读字\n硙\thoi2\t「硙ngoi6」的异读字\n硙\tngoi6\t石磨\n磍\tdaat3\t石地不平\n磍\that1\t剥掉\n磍\that6\t「磍git3」的异读字\n磍\tgit3\t碣磍(猛兽盛怒貌)\n碛\tzaak3\t粤语用字\n碛\tcik1\t「碛zik1」的异读字\n碛\tzik1\t沙碛，碛卤\n礩\tzat1\t柱础\n礩\tzat6\t礩滞\n礩\tzi3\t「礩zat1」的异读字\n礽\tjing4\t福\n礿\tjoek6\t古代祭名\n祁\tkei4\t祁寒，祁山(地名)\n祂\ttaa1\t称上帝、耶稣或神的第三人称代词\n祀\tzi6\t祀神，祀祖，祭祀，祀奉\n祈\tkei4\t祈求，祈祷，祈福，祈望\n祆\thin1\t祆教(波斯火教)\n祠\tci4\t祠堂，宗祠，先贤祠\n祓\tfat1\t祓除\n祔\tfu6\t合葬\n祐\tjau6\t保祐\n祛\tkeoi1\t祛除，祛疑\n祏\tsek6\t祏室\n祖\tzou2\t祖先，祖国，祖母，祖父，祖师，祖传，祖宗\n祚\tzou6\t祚命，帝祚，践祚，国祚；(1)福气；(2)帝位；(3)年岁；(4)福佑\n祄\thaai6\t福佑\n祥\tcoeng4\t祥和，祥瑞，吉祥，祥云，祥麟，祥光\n祫\thaap6\t祭礼名，在太庙合祭祖先\n祟\tseoi6\t作祟，鬼鬼祟祟\n祧\ttiu1\t祧师，宗祧，承祧，祧绪\n祑\tzat6\t祭祀有次序\n祒\ttiu4\t人名用字\n祡\tcaai4\t焚柴祭天\n祴\tgoi1\t祴夏(古代乐章《九夏》之一)\n祩\tzyu3\t(1)诅咒；(2)同「祝」字\n祣\tleoi5\t祭名，指祭祀山川\n祪\tgwai2\t已毁庙的远祖\n祼\tgun3\t以香酒灌地的祭礼\n祺\tkei4\t吉祥\n禄\tluk6\t禄位，爵禄，俸禄\n禂\ttou2\t同「祷」字\n祳\tsan6\t同「脤」字\n禘\tdai3\t古代皇家祭礼之一\n福\tfuk1\t福利，福音，福份，幸福\n禊\thai6\t禊饮，祓禊，秋禊，禊帖驱除不祥的祭祀\n禋\tjan1\t祭天\n祎\tji1\t美好\n禓\tjoeng4\t古道上祭\n禖\tmui4\t求子之祭\n禗\tsi1\t禗禗(不安而希望离去)\n禔\ttai4\t安宁\n祯\tzing1\t祯祥，祯符\n祽\tzeoi3\t月祭名\n祹\ttou4\t(1)福；(2)神\n禠\tsi1\t幸福\n禛\tzan1\t禛祥禛，以真受福也。(说文解字)\n禐\tjyun6\t佩带\n禈\tfai1\t(1)祭祀名称；(2)祭服\n禒\tsin2\t祭余之肉\n禜\twing6\t古代一种祈求消灾除祸的祭祀\n禢\tdaap6\t姓氏\n御\tjyu6\t御寒，御侮\n礼\tlai5\t礼貌，典礼，分庭抗礼，礼让，礼拜，礼仪，礼遇，礼数，礼尚往来，礼贤下士，聘礼，礼义廉耻\n禭\tseoi6\t(1)祭名；(2)神名\n禲\tlai6\t励鬼，指死后无人葬祭之鬼\n禴\tjoek6\t同「礿」字\n禳\tjoeng4\t禳解\n禷\tleoi6\t因特别事故祭祀天神\n禶\tzaan6\t祭祀\n示\tkei4\t部首\n示\tsi6\t示范，表示，示意，示威\n祇\tkei4\t祇悔，土祇，地祇，神祇，灵祇\n祇\tzi2\t同「只」字\n神\tsan1\t神荼(门神名)\n神\tsan4\t神秘，精神，目眩神驰，神仙，神圣，神话，神位，神父，神童，神釆，神交，神往，神韵，神气，神似，神州，神经，门神，渎神，费神，分神，神通广大，神不守舍，神出鬼没，神魂颠倒，貌合神离，大发神威，抖擞精神\n祝\tzau3\t诅咒\n祝\tzuk1\t祝融，庆祝，祝贺，祝福，祝捷，祝发，庙祝\n祌\tcung1\t同「冲」字，意指淡泊\n祌\tzung6\t神名\n票\tbiu1\t粤语用字\n票\tbiu6\t票骑\n票\tpiu3\t票据，车票，套票，股票\n祭\tzaai3\t姓氏\n祭\tzai3\t祭典，祭拜，祭祀，祭品，祭祖，祭坛，祭神，祭文，祭礼，祭司，祭酒，祭扫，祭悼，祭日，祭天，祭告，祭地\n祃\tmaa6\t祃牙\n祃\tngaa2\t粤语用字，指每月初二、十六的祭祀\n禨\tgei1\t禨祥\n禨\tgei6\t(1)沐后饮酒；(2)沐后所饮的酒\n社\tse5\t社会，社区，社团，社工，社论，社长，社交，社稷\n社\tse6\t「社se5」的异读字\n祊\tpaang1\t「祊bang1」的异读字\n祊\tbang1\t(1)宗庙门内的祭祀；(2)山东省河流名称\n祋\tdeoi3\t(1)古兵器名，即殳；(2)悬挂羊皮的竿；(3)姓氏\n祋\tdoi6\t「祋deoi3」的异读字\n祅\tjiu1\t同「妖」字\n祅\tjiu2\t「祅jiu1」的异读字\n祉\tci2\t「祉zi2」的异读字\n祉\tzi2\t祉禄，福祉\n秘\tbai3\t「秘bei3」的异读字\n秘\tbei3\t秘密，秘书，秘而不宣，秘方，秘诀\n祜\twu2\t福\n祜\twu6\t「祜wu6」的异读字\n祗\tzi1\t恭敬\n祗\tzi2\t「祗zi1」的异读字\n祲\tzam1\t不祥之气\n祲\tzam3\t「祲zam1」的异读字\n祤\theoi2\t「祤jyu5」的异读字\n祤\tjyu5\t祋祤(汉代县名)\n祰\thaau2\t(1)告祭祖先；(2)祈祷；(3)报祭；(4)感谢\n祰\tguk1\t「祰haau2」的异读字\n祸\two5\t「祸wo6」的异读字\n祸\two6\t祸害，灾祸，祸国殃民，祸根，祸端，祸乱，祸不单行，红颜祸水，包藏祸心，罪魁祸首，祸起萧墙\n禚\tzoek3\t姓氏\n禚\tzuk6\t「禚zoek3」的异读字\n禤\thyun1\t姓氏\n禤\thyun3\t「禤hyun1」的异读字\n禧\thei1\t年禧，鸿禧，恭贺新禧\n禧\thei2\t「禧hei1」的异读字\n禫\tdaam6\t「禫taam5」的异读字\n禫\ttaam5\t父母丧期服满，脱除孝服的祭礼\n禬\tkui2\t(1)除殃之祭祀；(2)会合财货\n禬\tkui3\t「禬kui2」的异读字\n禬\twui6\t「禬kui2」的异读字\n祷\tdou2\t「祷tou2」的异读字\n祷\ttou2\t祷告，祷求，祷祝，祈祷，盼祷\n禁\tgam1\t弱不禁风\n禁\tgam3\t禁忌，监禁，入境问禁，禁止，禁内，禁令，禁地，禁军，禁苑，禁书，禁区，禁锢，禁脔\n禁\tkam1\t「禁gam1」的异读字\n禅\tsim4\t禅心，禅杖，禅宗，禅定，禅房，禅林，禅师，禅堂，坐禅，野狐禅\n禅\tsin4\t「禅sim4」的异读字\n禅\tsin6\t禅位，禅让，受禅，封禅\n祢\tnai5\t(1)「祢nei4」的异读字；(2)「祢nei5」的异读字\n祢\tnei4\t姓氏\n祢\tnei5\t考庙\n禹\tjyu5\t大禹，禹行舜趋\n禽\tkam4\t禽兽，禽类，禽兽不如，禽舍\n禺\tjyu4\t番禺\n禺\tjyu6\t兽名，猴属\n离\tci1\t同「魑」字\n禸\tjau5\t部首\n禸\tnau5\t「禸jau5」的异读字\n禾\two4\t禾苗\n秀\tsau3\t秀丽，秀朗，秀林，秀美，秀姑峦溪，秀才，秀水，秀峰，秀逸，秀发，秀气，秀外慧中，秀色可餐，秀雅\n私\tsi1\t私人，自私，私家，公私分明\n秃\ttuk1\t秃头，秃发，秃子，秃鹰，光秃，秃笔\n秉\tbing2\t秉直，秉承，秉烛夜游，秉性，秉彝，秉持，秉公处理\n籼\tsin1\t籼稻，籼米\n秕\tbei2\t秕稗，秕谬，秕糠，秕政，秕滓，糠秕虚有空壳的谷物\n秋\tcau1\t秋季，秋天，秋高气爽，秋瑾，秋波，秋风，秋水\n科\tfo1\t科技，学科，科班出身，科举，科目，科系，科长，科学家，科员，科别，科委，科任，科刑，科考，科名，科际\n秏\thou3\t同「耗」字\n秒\tmiu5\t秒表，分秒必争\n秎\tfan6\t(1)收获；(2)禾束\n秦\tceon4\t秦楼谢馆，秦晋之好\n秩\tdit6\t秩序，秩序井然\n秬\tgeoi6\t黑黍子\n秧\tjoeng1\t秧苗，插秧\n秝\tlik6\t稀疏均匀的样子\n秫\tseot6\t秫米，秫秸\n秭\tzi2\t秭旧(县名)，秭归(县名)\n租\tzou1\t租用，租赁，租税，租约\n秞\tjau4\t(1)禾黍盛貌；(2)物初生貌\n秪\tzi1\t(1)谷物刚成熟；(2)谷物再种；(3)植物的根；(4)同「秖」字\n秜\tnei4\t(1)稻谷落地至来年再生；(2)小麦\n秮\twut6\t(1)米、麦舂不破者；(2)t庄稼\n秸\tgaai1\t农作物脱粒后剩下的茎秆\n移\tji4\t移民，移植，移动，移居，移位\n秷\tzat6\t同「挃」字\n秶\tzi1\t同「粢」字\n程\tcing4\t程序，程度，程式，课程，过程，起程姓氏\n稃\tfu1\t麸糠\n秆\tgon2\t禾茎，泛草木的茎\n稀\thei1\t稀少，稀有，稀奇，稀疏，稀薄，稀奇古怪，依稀，鸿稀鳞绝\n稂\tlong4\t稂莠一种野草\n稍\tsaau2\t稍后，稍微，稍为，稍候\n稊\ttai4\t稊米\n稄\tzak1\t稫稄(禾茂密的样子)\n稠\tcau4\t稠密，稠人广众，粘稠\n稘\tgei1\t稘年，稘月\n稒\tgu3\t稒阳(古地名)\n稛\tkwan2\t稛载\n稑\tluk6\t迟播而早熟的谷物\n稚\tzi6\t稚嫩，稚气，幼稚园，稚龄，稚拙，稚子，稚晖，稚女\n稓\tzok6\t(1)四川省地名；(2)姓氏\n稢\tjuk1\t黍稷茂盛貌\n稕\tzeon3\t禾秆等扎成的把子\n稐\tleon5\t禾束\n稨\tbin2\t稨豆\n稯\tzung1\t(1)古代称禾四十把为一稯；(2)布八十缕为稯\n稦\tji1\t禾茂\n稻\tdou6\t稻田，稻米，稻草，早稻\n稼\tgaa3\t稼穑，耕稼，躬稼，禾稼，庄稼；(1)农作物；(2)耕作\n稿\tgou2\t稿子，稿费，稿纸，稿本，腹稿，画稿\n稷\tzik1\t社稷\n穋\tluk6\t同「稑」字\n穆\tmuk6\t静穆，肃穆，穆如清风\n䅟\tsaam1\t䅟子\n稣\tsou1\t同「苏」字\n颖\twing6\t聪颖，新颖，颖悟，脱颖而出；(1)禾的尖端；(2)喻为才华出众的人；(3)新的\n穄\tzai3\t收割谷物，亦指已割而未束的禾\n积\tzik1\t积极，积习，面积，累积\n穗\tseoi6\t麦穗，拾穗\n穔\twong4\t野谷\n穚\tgiu1\t(1)禾抽穗；(2)禾长高；(3)莠草茂盛的样子\n秾\tnung4\t秾艳，秾华，秾纤合度，秾饰，夭桃秾李\n穟\tseoi6\t同「穗」字\n穑\tsik1\t穑夫，穑事，稼穑；(1)成熟的谷物；(2)收割；(3)耕种\n秽\twai3\t污秽，秽土，秽行\n穨\tteoi4\t同「颓」字\n稳\twan2\t稳重，平稳，稳如泰山，稳固，稳定，稳健，十拿九稳，稳步前进，稳扎稳打\n穮\tbiu1\t除草\n稆\tleoi5\t野生的谷物\n种\tcung4\t姓氏\n秤\tcing3\t秤砣，秤锤\n秤\tping4\t天秤(同天平)\n税\tseoi3\t纳税，报税，缴税，抽税，征税\n税\tteoi3\t(1)丧期过而追服丧；(2)变易\n税\ttyut3\t同「脱」字\n禀\tlam5\t同「廪」字\n禀\tban2\t禀告，禀见，禀帖，禀受，禀命，禀气，禀赋，回禀\n棱\tling6\t量词，唐宋时估计田亩的单位\n稔\tjam5\t稔熟\n稔\tnam5\t稔色，素稔\n稔\tnim1\t地区名\n种\tzung2\t种姓，种类，种子选手，种族主义，人种，火种，变种\n种\tzung3\t种植，种牛痘，耕种，种因，芒种(二十四节气之一)\n稫\tbik1\t蹂禾下叶\n稫\tpik1\t稫稄(禾苗茂密的样子)\n谷\tgau3\t(1)哺乳；(2)孺子\n谷\tguk1\t谷仓，谷物，谷类，五谷\n谷\thuk6\t连谷\n稽\tkai1\t稽查，无稽之谈，反唇相稽，稽古，稽考，稽留，稽程，稽滞，稽疑\n稽\tkai2\t稽首\n穈\tmei4\t同「糜」字\n穈\tmun4\t粟的一种\n穜\ttung4\t(1)先种后熟；(2)木棉\n穜\tzung2\t同「种」字\n穜\tzung3\t同「种」字\n穘\thaau1\t(1)禾伤肥；(2)草貌\n穘\tjiu4\t禾貌\n穖\tgei2\t禾籽如珠玑相连成串\n穖\tgei3\t同「穊」字\n获\twok6\t收获，秋获，一树百获\n获\twu6\t焦获\n穱\tzoek3\t没有粘性的黍子\n穱\tzuk1\t(1)早熟的麦；(2)小也；(3)在割了稻之地种麦；(4)选择\n秅\tcaa4\t古时禾稼的计数单位，四百把为一秅\n秅\tdou3\t「秅caa4」的异读字\n秖\tkei4\t「秖zi2」的异读字\n秖\tzi1\t「秖zi2」的异读字\n秖\tzi2\t同「祇」字\n秘\tbai3\t「秘bei3」的异读字\n秣\tmut3\t秣马厉兵\n秣\tmut6\t「秣mut3」的异读字\n秠\tpei1\t黑黍的一种\n秠\tpei2\t「秠pei1」的异读字\n秺\tdou3\t汉朝侯国名\n秺\tdou6\t「秺dou3」的异读字\n稌\tdou6\t「稌tou4」的异读字\n稌\ttou4\t梗稻\n稗\tbaai6\t稗官，稗草，稗史，稗贩，秕稗，稗官野史；(1)田间杂草；(2)卑微\n稗\tbai6\t「稗baai6」的异读字\n稗\tpei4\t「稗baai6」的异读字\n稞\tfo1\t青稞\n稞\tfo3\t「稞fo1」的异读字\n稙\tzik1\t「稙zik6」的异读字\n稙\tzik6\t先种的谷物\n穊\tgei3\t禾稻种得很密\n穊\tkei3\t「穊gei3」的异读字\n稰\tseoi1\t「稰seoi2」的异读字\n稰\tseoi2\t晚稻\n稹\tcan2\t(1)致密；(2)草木丛生\n稹\tzan2\t「稹can2」的异读字\n穛\tcoek3\t「穛zuk1」的异读字\n穛\tzuk1\t早熟的谷物\n穧\tzai3\t「穧zai6」的异读字\n穧\tzai6\t(1)收割；(2)已经割下还没有扎束的农作物\n穬\tkong3\t穬麦\n穬\tkwong3\t「穬kong3」的异读字\n穰\tjoeng4\t(1)禾黍等植物的茎穗；(2)庄稼丰熟；(3)同「瓤」字\n穰\tjoeng5\t「穰joeng4」的异读字，意指繁华兴盛\n穰\tjoeng6\t「穰joeng4」的异读字，意指繁华兴盛\n称\tcan3\t「称cing3」的异读字\n称\tcing1\t称述，称呼，称病，称道，称许，称谓，称诵，称觞，称霸，称赞，称兄道弟，称孤道寡，俗称，号称\n称\tcing3\t称心，衣不称身，称意，称职，称心如意，称体裁衣，对称\n穴\tjyut6\t穴道，穴位，墓穴\n穵\twaat3\t同「挖」字\n究\tgau3\t究竟，研究，追究，讲究，学究，考究，探究\n穸\tzik6\t窀穸\n穿\tcyun1\t穿著，穿越，穿梭，穿透，穿戴，穿针引线，穿凿附会\n窀\tzeon1\t窀穸\n窆\tbin2\t埋葬\n窅\tjiu2\t窅然，窅冥，窅然难究，窅不可测形容深远\n窊\twaa1\t窊皱；(1)凹陷；(2)同「洼」字\n窄\tzaak3\t狭窄，窄小，窄巷\n窉\tbing2\t(1)农历三月的别称；(2)惊病；(3)洞穴\n窇\tbok6\t(1)地下室，地窖；(2)刨挖\n窐\twaa1\t低陷的地方\n窒\tzat6\t窒碍，窒息\n窏\twu1\t窏洝(低下潮湿的样子)\n窗\tcoeng1\t窗户，窗帘，窗子，窗明几净，东窗事发，门窗，十年寒窗\n窖\tgaau3\t窖藏，地窖，冰窖，酒窖；(1)收藏；(2)藏物的地下室\n窙\thaau1\t(1)气上蒸；(2)开阔貌\n窣\tseot1\t窣地，窸窣\n窢\twik6\t逆风声，一说迅速的样子\n洼\twaa1\t洼地，低洼\n窝\two1\t窝藏，巢窝，窝囊，窝心，贼窝，安乐窝，心窝，腋窝\n窑\tjiu4\t窑洞(居住的洞穴)，官窑，窑变，炭窑\n窳\tjyu5\t窳败，窳劣，良窳(好与坏)，隆窳(兴隆与衰败)；(1)粗糙；(2)衰弱；(3)败坏\n穷\tkung4\t穷人，穷困，穷苦，穷追不舍，穷途末路，穷乡僻壤，穷极无聊，穷寇莫追\n窴\ttin4\t同「填」字\n窲\tcaau4\t寥窲(幽深貌)\n窎\tdiu3\t窎远\n窥\tkwai1\t窥伺，窥见，窥测，窥探，管中窥豹，管窥之见，坐不窥堂，以管窥天\n窸\tsik1\t窸窣\n窱\ttiu5\t窅窱\n窷\tliu4\t穿也\n竁\tceoi3\t竁穴；(1)墓穴；(2)洞穴、孔洞；(3)掘地为墓；(4)泛指挖地\n窾\tfun2\t空，不实\n窃\tsit3\t窃取，盗窃，窃窃私语，窃案，窃贼，窃嫌，窃位，窃听，窃犯，窃名，窃用，窃喜，窃钩者诛，窃国者侯\n空\thung1\t空中，空泛，空防，空空，空巷，空前，空降，空气，空虚，空想，空谈，空灵，空心汤圆，空中花园，空中楼阁，空谷足音，空头支票，天空\n空\thung3\t匮乏，穷\n穻\tjyu1\t窗户\n穻\tjyu5\t同「宇」字\n窌\tgaau3\t地窌，囷窌\n窌\tpaau3\t大\n窨\tjam3\t窨井，冰窨，地窨子\n窨\tfan1\t窨茶叶\n窭\tlau4\t瓯窭\n窭\tgeoi6\t窭家子，贫窭\n窦\tdau3\t狗窦粤语用字\n窦\tdau6\t疑窦，情窦初开，鼻窦，；(1)孔穴、缝隙；(2)姓\n穹\tgung1\t「穹kung4」的异读字\n穹\thung1\t「穹kung4」的异读字\n穹\tkung4\t穹形，穹顶，穹苍，穹隆，穹谷幽林，苍穹，穹壤之别；(1)穷尽；(2)深；(3)高；(4)天空\n突\tdat6\t突出，唐突，突飞猛进，突厥(民族名)，突破，突然，突变，突发，突击，突袭，突兀，冲突，突如其来，曲突徙薪，左冲右突，异军突起\n突\tduk1\t「突dat6」的异读字，用于「趵突泉」一词\n穾\tngaau5\t「穾jiu3」的异读字\n穾\tjiu3\t同「窔」字\n窈\tjiu2\t窈窕\n窈\tmiu5\t「窈jiu2」的异读字，口语读音\n窕\tdiu6\t「窕tiu5」的异读字\n窕\ttiu5\t窈窕，窕言(谎言)，目窕心与，袅窕(姿态摇曳)；(1)深邃；(2)轻慢；(3)挑逗\n窔\tngau5\t「窔jiu3」的异读字\n窔\tjiu2\t「窔jiu3」的异读字\n窔\tjiu3\t奥窔(屋室的西南隅和东南隅，泛指堂室之内)；(1)室中东南隅；(2)幽深\n窘\tkwan3\t窘迫，窘况，受窘\n窘\tkwan5\t「窘kwan3」的异读字\n窞\tdaam6\t小而深的坑\n窞\ttam5\t「窞daam6」的异读字\n窟\tfat1\t窟窿\n窟\tgwat6\t「窟fat1」的异读字\n窠\tfo1\t窠巢，不落窠臼；(1)鸟兽的巢穴；(2)人的居室\n窠\two1\t「窠fo1」的异读字\n窫\tjaak3\t「窫zaat3」的异读字\n窫\tzaat3\t窫窳(传说中的凶兽)\n窬\tjyu4\t穿窬\n窬\tjyu6\t「窬jyu4」的异读字\n竀\tcang1\t「竀cing1」的异读字\n竀\tcing1\t(1)正视；(2)深意；(3)红色；(4)同「赪」字\n窿\tlung1\t「窿lung4」的异读字\n窿\tlung4\t窿工，窟窿，废窿，穹窿结构\n窜\tcyun2\t「窜cyun3」的异读字\n窜\tcyun3\t窜改，流窜\n窍\thiu3\t窍门，开窍，诀窍，一窍不通；(1)孔穴；(2)要点\n窍\tkiu3\t「窍hiu3」的异读字\n窋\tfat1\t同「窟」字\n窋\tgwat6\t「窋fat1」的异读字\n窋\tzyut3\t(1)事物将从洞穴中出来；(2)空洞\n竑\twang4\t广大\n站\tzaam6\t站立，车站，站不住脚，站稳，站岗，站长，站台，票站，工作站\n竟\tging2\t竟然，竟敢，竟日，竟夜，究竟\n章\tzoeng1\t章程，章法，章节，文章，典章，图章，断章取义\n竦\tsung2\t竦意，竦身(引领举足也)，竦峙，竦峭，竦桀(形容山势高耸)，危竦，蹙竦(惶恐不安貌)；(1)恭敬；(2)企待；(3)同「悚」字；(4)同「耸」字\n童\ttung4\t童年，童话，童稚，童心，童心未泯，童叟无欺，学童\n竤\twang4\t同「竑」字\n竫\tzing6\t竫言\n端\tdyun1\t端正，开端，变化多端，端庄，端坐，端菜，端详，端倪，笔端，末端，尖端，弊端，极端，异端，端午节，好端端，平白无端，诡计多端，电脑终端机\n竭\tkit3\t竭力，竭诚，竭泽而渔，竭虑，竭尽所能\n竮\tping4\t形容行走不稳的样子\n竷\tham2\t(1)边歌边舞；(2)象声词，鼓声；(3)和谐悦耳的声音；(4)乐器名，箜篌\n竷\tham3\t击鼓\n立\tlaap6\t「立lap6」的异读字\n立\tlap6\t立正，立冬，立志，立定，立法，立言，立春，立秋，立嗣，立论，立体声，立地书厨，立身处世，立竿见影，自立，订立，安身立命，坐立不安\n竘\tgeoi2\t竘然(高壮的样子)健壮\n竘\tkeoi5\t「竘geoi2」的异读字\n竣\tceon1\t「竣zeon3」的异读字\n竣\tzeon3\t竣工，告竣，完竣\n竞\tging3\t「竞ging6」的异读字\n竞\tging6\t竞选，竞争，竞相效尤，竞走，竞技，竞逐，竞赛，端阳竞渡\n竹\tzuk1\t竹子，竹林，竹笋，竹筏，丝竹，竹篓，竹帘，竹杠，炮竹，罄竹难书\n竻\tlak6\t粤语用字，意指「植物上的刺」\n竺\tzuk1\t天竺(印度的古称)，竺学(佛学)，竺经姓氏\n竿\tgon1\t竹竿，揭竿而起，日上三竿，百尺竿头\n竽\tjyu4\t滥竽充数，盗竽(窃盗的首领)古代簧管乐器之一\n笁\tzuk1\t同「竺」字\n笀\tmong4\t(1)同「芒」字；(2)姓氏\n笆\tbaa1\t笆斗，篱笆，笆篓，笆壁\n笏\tfat1\t古代君臣朝会时手中所拿的狭长板子，上面可以记事\n笄\tgai1\t笄年，及笄(古代女子满十五岁束发加笄)，弱笄，驴生笄角(喻极不可能的事)古人盘发髻所用的簪\n笐\thong4\t(1)竹列；(2)一种竹制的弦乐器\n笓\tpei4\t笓筣\n笑\tsiu3\t笑话，笑容，笑柄，笑骂\n笊\tzaau3\t笊篱(煮食用的工具，用以从汤水中沥水捞物)\n笎\tjyun4\t(1)竹名；(2)竹篮\n笉\twan5\t(1)笑容；(2)细小的竹箫\n笨\tban6\t笨重，笨拙，笨蛋，笨贼，笨手笨脚\n笞\tci1\t笞背，笞骂，笞打，笞刑，笞杖，笞辱，鞭笞；(1)用鞭或竹板打；(2)古代一种以竹板打的体罚\n笪\tdaat3\t(1)姓氏；(2)粗竹席；(3)拉船的竹索\n第\tdai6\t品第，等第，第一\n笛\tdek6\t汽笛，笛子\n笵\tfaan6\t同「范」字\n笰\tfat1\t古代车箱后面的遮蔽物\n符\tfu4\t符合，符号，符箓\n笳\tgaa1\t胡笳\n笱\tgau2\t竹制捕鱼具\n笭\tling4\t笭箐，笭箵\n笢\tman5\t(1)竹篾；(2)理发用的刷子\n笯\tnou4\t鸟笼\n笸\tpo2\t笸箩\n笤\ttiu4\t笤帚\n笫\tzi2\t床笫；床笫之私竹席；引申指枕席之间或男女房中之事\n筇\tkung4\t扶筇；(1)竹名；(2)手扙\n笣\tbaau1\t陀笣竹(竹名)\n笝\tnaap6\t系舟的竹索\n笔\tbat1\t笔墨，败笔，笔走龙蛇，笔袋，笔筒，笔画，笔顺，笔迹，笔记，笔战，笔触，笔友，笔算，笔直，笔挺，毛笔，铁笔，笔墨纸砚，笔梦生花，秉笔直书\n策\tcaak3\t策略，策划，策动，策应，策反，对策，政策，决策\n筌\tcyun4\t言筌，得鱼忘筌\n答\tdaap3\t答复，答应，答案，答复，答允，答辩，答谢，答非所问，答话，答腔，答辩，答礼，问答\n等\tdang2\t等待，等候，平等，等级，等闲视之，等量齐观\n筏\tfat6\t木筏，排筏\n筀\tgai3\t竹名\n筋\tgan1\t筋骨，手筋，筋疲力尽，筋脉，筋肉，抽筋剥皮\n筄\tjiu6\t(1)铺在椽上瓦下的竹箔或苇箔；(2)屋栋\n筘\tkau3\t织布机上一种机件\n笻\tkung4\t竹名，可以做手杖\n筈\tkut3\t箭尾\n笋\tseon2\t竹笋，雨后春笋\n筅\tsin2\t筅帚，茶筅\n筑\tzuk1\t(1)古代弦乐器；(2)贵州省会贵阳市的简称\n筎\tjyu4\t刮取竹皮而成的竹絮\n筷\tfaai3\t筷子，碗筷，公筷母匙\n笕\tgaan2\t引水的长竹管\n筥\tgeoi2\t盛米饭的圆形竹器\n筸\tgon2\t筸子溪(湖南省辰州地名)\n筦\tgun2\t(1)同「管」字；(2)姓氏\n筣\tlei4\t筣笓\n筤\tlong4\t苍筤(初生的竹。见《周易˙说卦》)；(1)嫩竹；(2)车后竹子编成的篷盖\n筲\tsaau1\t筲箕\n筮\tsai6\t卜筮，龟筮，筮仕\n筭\tsyun3\t计筭，筹筭，筭盘；(1)计算用的筹码；(2)通「算」\n筳\tting4\t(1)纺具之一；(2)小竹；(3)竹挺也\n节\tzit3\t节目，节省，节约，节日，节制，节奏，节外生枝，节俭，节拍，节令，节食，节录，节衣缩食\n筶\tgou2\t一种卜具\n箅\tbei3\t箅子\n箔\tbok6\t箔子，箔材，金箔，锡箔，蚕箔\n箈\tci4\t竹名\n箎\tci4\t埙箎相和，如埙如箎\n箙\tfuk6\t盛箭的袋\n箕\tgei1\t簸箕\n个\tgo3\t个中\n管\tgun2\t管理，管制，管辖，管教，管束，管弦\n箜\thung1\t箜篌(古弦乐器)，箜篌引(汉乐府曲)\n筵\tjin4\t筵席，玳瑁筵，设席张筵，卺筵\n箝\tkim4\t箝制，火箝\n箍\tku1\t铁箍，箍颈\n算\tsyun3\t算术，清算，神机妙算，计算机，算命，算盘，老谋深算，秋后算帐\n笺\tzin1\t笺注，信笺\n箊\tjyu1\t箖箊(竹名)\n箖\tlam4\t箖箊(竹名)\n箂\tloi4\t竹名\n箤\tceoi3\t竹笼\n箯\tbin1\t箯舆(一种竹轿)\n范\tfaan6\t范围，模范，范畴，范例，范本，范式\n篌\thau4\t箜篌\n篊\thung4\t取鱼具\n箬\tjoek6\t箬竹\n篇\tpin1\t篇幅，篇章，篇目，篇籍\n箱\tsoeng1\t箱子，箱底，箱根\n篆\tsyun6\t篆刻，篆书，符篆\n篁\twong4\t幽篁，丝篁，篁竹，松篁交翠\n箴\tzam1\t箴言\n箭\tzin3\t箭步，弓箭，箭在弦上，箭矢，箭头，箭靶，箭杆\n𥬠\tcau1\t滤酒用的竹具\n篪\tci4\t伯埙仲篪\n笃\tduk1\t笃信，笃实，笃志，笃学，笃厚，笃行\n篚\tfei2\t圆形竹篮\n篙\tgou1\t撑篙，篙师\n篛\tjoek6\t同「箬」字\n篥\tleot6\t篥竹，觱篥\n篡\tsaan3\t篡改，篡弑，谋朝篡位，篡夺\n筼\twan4\t筼筜\n筑\tzuk1\t筑成，筑起，筑堤，筑巢，筑墙，筑路，筑屋，筑城\n篢\tlung5\t织篢(广东省地名)\n篫\tzuk1\t用手筑物\n篕\thap6\t篕棪(粗竹席子)\n篟\tsin3\t(1)竹名；(2)竹茂盛貌\n篞\tnip6\t古代管乐器之一\n篜\tzing1\t竹名\n筚\tbat1\t筚门，筚篥，筚路蓝缕泛指用竹编成之器物\n篰\tbou6\t(1)简牍、简册之类；(2)用细竹片编成的竹器\n篴\tdek6\t汽篴，警篴\n簋\tgwai2\t大丰簋，簠簋不饰，九大簋(粤俗所谓的盛宴)古代祭祀用的圆形器皿\n𫂆\tgwok3\t(1)古代妇女的首饰；(2)古代妇女的丧冠\n簃\tji4\t楼阁边的小屋\n篓\tlau5\t篓子，篓筐，字纸篓\n篾\tmit6\t篾席，篾片，竹篾\n篻\tpiu3\t一种中心坚实强劲的竹子，可制弓弩武器\n篷\tpung4\t篷车，帐篷，见风转篷\n篠\tsiu2\t同「筱」字\n箦\tzaak3\t用竹片芦苇编成的床垫子\n簆\tkau3\t织布机上的主要机件之一\n簎\tcok3\t用杈刺取水中鱼鳖\n簊\tgei1\t竹基\n簅\tcaan2\t古乐器名，外形似笛而较短，管身有三孔\n簐\tnin2\t恭簐弓(钓)\n箪\tdaan1\t古代盛饭竹器\n簦\tdang1\t担簦\n簜\tdong6\t(1)大竹子；(2)笙箫一类的乐器\n簠\tfu2\t簠梁，簠簋，簠簋不饰(为官不廉洁)祭祀时盛谷物的容器\n简\tgaan2\t简单，竹简，简短，简直\n篑\tgwai6\t功亏一篑\n簭\tsai6\t同「筮」字\n箫\tsiu1\t管乐器名\n簧\twong4\t簧片，弹簧，巧舌如簧，皮簧，单簧管，唱双簧\n簪\tzaam1\t簪花，玉簪，簪笔，簪笏(喻为官贵显)，刈蓍遗簪(喻不忘旧之情)；(1)绾发或固定头冠用的头饰；(2)插、戴\n篽\tjyu5\t禁苑，皇宫内的园林\n簙\tbok3\t古代一种棋戏\n簥\tgiu1\t古代一种大形的管乐器\n𫂃\tman5\t一种可以做席的竹\n簿\tbou6\t簿记，簿本，拍纸簿\n签\tcim1\t签约，签名，签收\n筜\tdong1\t筼筜\n帘\tlim4\t帘幕，窗帘\n簬\tlou6\t一种可制箭杆的竹子\n籀\tzau6\t籀文\n筹\tcau4\t筹码，筹备，筹组，筹措，筹设，筹划，筹募，筹款\n篮\tlaam4\t篮子，篮球，提篮，菜篮，摇篮\n籍\tzik6\t籍贯，书籍，籍籍无名，典籍，国籍，外籍，帐籍，户籍\n籈\tzan1\t古时敲敔用的木板\n籅\tjyu4\t喂牛用的圆筐\n籉\ttoi4\t一种可以御雨的竹笠\n籇\thou4\t船竿\n籓\tfaan1\t大箕\n籐\ttang4\t同「藤」字\n籁\tlaai6\t天籁，万籁无声\n籚\tlou4\t(1)古代矛戟的柄；(2)饭器；(3)竹名\n箓\tluk6\t符箓，图箓\n箨\ttok3\t竹笋皮\n篯\tzin1\t姓氏\n签\tcim1\t签诗，竹签，书签，浮签，牙签\n籥\tjoek6\t关籥，管籥，橐籥，籥口\n籣\tlaan4\t古代背在身上盛弩箭的器具\n籦\tzung1\t笼籦(竹名，可制笛子)\n簖\tdyun6\t插置在水中，便于捕捉鱼、虾、螃蟹等的竹栅\n笾\tbin1\t笾豆，笾祭\n篱\tlei4\t篱笆，篱下，寄人篱下\n箩\tlo4\t箩筐，竹箩\n籫\tzyun2\t盛筷子、木勺的竹笼\n籯\tjing4\t竹编的笼子\n笒\tgam6\t竹签\n笒\tham4\t笒隋(一种实心竹)\n笒\tsam4\t竹名\n笚\tdaap3\t竹树相击\n笚\thaap6\t竹名\n䇲\tcaak3\t同「策」字\n䇲\tgaap3\t梵䇲，竹䇲鱼\n筩\ttung2\t被筩，缿筩，靴筩\n筩\ttung4\t同「筒」字\n箄\tpaai4\t以竹、木成排的水上交通工具\n箄\tbei6\t渔具\n箐\tsin3\t竹木丛生的山谷\n箐\tzing1\t笭箐小笼\n箐\tcoeng1\t一种细竹\n箸\tzyu3\t同「著」字\n箸\tzyu6\t下箸，杯箸，闻雷失箸，借箸代筹，象箸玉杯，箸长碗短\n箌\tzaau3\t同「罩」字，一种捕鱼器\n箌\tdou3\t同「菿」字\n箾\tsiu1\t箾韶(古乐曲名)\n箾\tsok3\t古代舞者所执之竿\n箷\tji4\t同「椸」字\n箷\tsi1\t竹名\n箹\taau3\t竹节\n箹\tjoek3\t古代一种小管乐器\n箹\tcuk1\t车篷带\n篣\tpang4\t(1)笼；(2)拷打\n篣\tpong4\t(1)竹箕；(2)竹名\n篹\tzaan6\t(1)同「撰」字；(2)同「馔」字\n篹\tsyun2\t古代笾一类的礼器\n篹\tzyun2\t同「纂」字\n篸\tcaam2\t粤语用字\n篸\tzaam1\t篸花；(1)插、缀；(2)用以绾住头发的竹针；(3)同「簪」字\n篸\tcam1\t篸管(洞箫)\n篿\ttyun4\t圆形的竹器\n篿\tzyun1\t筳篿(析竹所用卜也)古代的一种占卜方法\n簰\tpaai4\t同「箄」字\n簰\tbei6\t渔具\n簟\tdim3\t竹名\n簟\ttim5\t竹席\n䉤\tsau2\t淘米用的竹器，广东俗称「筲箕」\n䉤\tsou2\t斗䉤\n笼\tlung4\t笼络，灯笼，笼罩，蒸笼\n笼\tlung5\t笼统，箱笼\n籧\tgeoi2\t同「筥」字\n籧\tkeoi4\t籧篨\n笈\tkap1\t秘笈，负笈海外\n笈\tkap6\t「笈kap1」的异读字\n笅\tgaau2\t同「筊」字\n笅\thaau4\t「笅gaau2」的异读字\n笅\tngaau4\t「笅gaau2」的异读字\n笲\tfaan4\t盛物竹器\n笲\tbin6\t「笲faan4」的异读字\n笴\tgo2\t「笴gon2」的异读字\n笴\tgon2\t箭杆\n笴\tgou2\t「笴gon2」的异读字\n笠\tlap1\t斗笠，蓑笠\n笠\tlap6\t「笠lap1」的异读字\n笙\tsaang1\t笙歌，笙簧，笙歌匝地，笙歌鼎沸，笙罄同音，凤笙，芦笙，玉帛笙歌\n笙\tsang1\t「笙saang1」的异读字\n笘\tsim1\t「笘dip3」的异读字\n笘\tsim3\t「笘dip3」的异读字\n笘\tdip3\t竹笘\n笥\tsi3\t「笥zi6」的异读字\n笥\tzi6\t盛饭或盛衣物的方形竹器\n筊\tgaau2\t筊杯(占卜吉凶的器具)用竹皮编成的绳索\n筊\tngaau4\t「筊gaau2」的异读字\n筐\tkwaang1\t「筐hong1」的异读字\n筐\thong1\t筐箧，篓筐，管窥筐举，竹筐，菜筐，箩筐\n筒\ttung2\t「筒tung4」的异读字\n筒\ttung4\t竹筒，邮筒，电筒，花筒，话筒\n筠\tgwan1\t「筠wan4」的异读字\n筠\twan4\t筠竹，筠筒\n筱\tsiu2\t(1)小竹子；(2)同「小」字\n筱\tsiu6\t「筱siu2」的异读字\n筰\tzok3\t「筰zok6」的异读字\n筰\tzok6\t同「笮」字\n筡\ttou4\t(1)剖竹；(2)竹篾；(3)中空的竹\n筡\tsyu1\t「筡tou4」的异读字\n箛\tgu1\t(1)竹名；(2)乐器\n箛\tku1\t「箛gu1」的异读字\n箘\tkwan2\t「箘kwan5」的异读字\n箘\tkwan3\t「箘kwan5」的异读字\n箘\tkwan5\t(1)竹笋；(2)竹名\n箑\tsaap3\t「箑zit6」的异读字\n箑\tsip3\t「箑zit6」的异读字\n箑\tzit6\t箑书，萐莆用竹、羽毛等制成的扇子\n筝\tzaang1\t风筝，古筝\n筝\tzang1\t「筝zaang1」的异读字\n劄\tzaap3\t劄记，劄子，撩东劄西\n劄\tzaat3\t「劄zaap3」的异读字\n箧\thaap6\t籐箧，书箧\n箧\tgip2\t「箧haap6」的异读字\n箧\thip3\t「箧haap6」的异读字\n箵\tsing1\t「箵sing2」的异读字\n箵\tsing2\t笒箵\n篎\tmiu5\t古代细小的管乐器之一\n篎\tmiu6\t「篎miu5」的异读字\n篨\tceoi4\t籧篨(一种粗竹席，人体病臃肿)\n篨\tcyu1\t「篨ceoi4」的异读字\n篝\tgau1\t篝火，篝灯\n篝\tkau1\t「篝gau1」的异读字\n筛\tsai1\t筛选，筛酒\n筛\tsi1\t「筛sai1」的异读字\n簇\tcuk1\t簇拥，簇新，花团锦簇\n簇\tzuk6\t「簇cuk1」的异读字\n簌\tcuk1\t簌簌泪下，簌簌声响；(1)摇动；(2)状声词\n簌\tsuk1\t「簌cuk1」的异读字\n簏\tluk1\t竹箱\n簏\tluk6\t「簏luk1」的异读字\n簁\tsai1\t同「筛」字\n簁\tsi1\t「簁sai1」的异读字\n篲\twai6\t「篲seoi6」的异读字\n篲\tseoi6\t同「彗」字\n簉\tcau3\t「簉zou6」的异读字\n簉\tcou3\t「簉zou6」的异读字\n簉\tzou6\t簉室，簉弄附属的\n簝\tliu4\t簝竹\n簝\tlou4\t「簝liu4」的异读字\n簩\tlou4\t竹名\n簩\tlou6\t「簩lou4」的异读字\n簨\tseon2\t悬挂钟磬架子的横杆\n簨\tseon3\t「簨seon2」的异读字\n簸\tbo2\t「簸bo3」的异读字\n簸\tbo3\t簸弄，簸扬，簸顿，簸荡，簸土扬沙，簸箕\n簳\tgon2\t小竹\n簳\tgon3\t「簳gon2」的异读字\n簻\tzaa1\t「簻gwo1」的异读字\n簻\tgwo1\t(1)马鞭；(2)乐管；(3)同「薖」字\n簷\tjam4\t「簷jim4」的异读字\n簷\tjim4\t同「檐」字\n簷\tsim4\t「簷jim4」的异读字\n簼\tgau1\t同「篝」字\n簼\tkau1\t「簼gau1」的异读字\n籊\tdik6\t「籊tik1」的异读字\n籊\ttik1\t籊籊(长而尖削的样子)\n籗\tdoek3\t「籗kwok3」的异读字\n籗\tkwok3\t捕鱼笼\n籗\tzok6\t「籗kwok3」的异读字\n吁\tjoek6\t「吁jyu6」的异读字\n吁\tjyu6\t吁请，呼吁，吁天，吁求\n笮\tzaa3\t(1)榨酒器；(2)压物使出汁液\n笮\tzaak3\t姓氏\n笮\tzok3\t「笮zok6」的异读字\n笮\tzok6\t用竹篾绞拧而成的绳索\n箠\tceoi4\t箠杖，箠楚，箠楚受辱，马箠\n箠\tseoi4\t竹名\n箠\tzeoi1\t「箠ceoi4」的异读字\n篦\tbai1\t「篦bei6」的异读字\n篦\tbei1\t箭镞形之刀\n篦\tbei6\t篦头，篦子，竹篦密齿的梳子\n篧\twok6\t一种捕鱼用的竹器\n篧\tzok6\t「篧zuk1」的异读字\n篧\tzuk1\t捕鱼笼\n米\tmai5\t米饭，玉米，米已成炊，米粉，米舖，米粒，米粮，米酒，稻米，白米，虾米，花生米\n籵\tfaan4\t同「蹯」字，「籵」是「蹯」的古字\n籺\that6\t同「麧」字\n籽\tzi2\t棉籽，籽粒\n粑\tbaa1\t糌粑，餈粑，粽粑叶\n粉\tfan2\t粉碎，粉末，粉刷，粉饰\n粄\tbun2\t屑米制成的饼\n粊\tbei3\t劣质的米\n粅\tmat6\t粅粅(形容粉状的东西)\n粗\tcou1\t粗糙，粗略，粗犷，粗暴，粗鲁，粗俗，粗鄙，粗浅\n粣\tsaan2\t用熟米粉子和羹\n粖\tmut6\t𫗴粥\n粞\tsai1\t碎米\n粟\tsuk1\t粟米，沧海一粟\n粡\ttung4\t(1)粽子；(2)粗米\n粲\tcaan3\t粲者，粲然，粲粲，翠粲\n粤\tjyut6\t粤曲，两粤，粤犬吠雪，粤语，粤剧\n粱\tloeng4\t高粱，梦断黄粱，膏粱子弟\n粯\tjin6\t米屑\n粿\tgwo2\t一种油炸面食\n粼\tleon4\t波光粼粼\n粻\tzoeng1\t米粮\n糈\tseoi2\t(1)粮食；(2)祭神用的精米\n糊\twu4\t糊涂\n糋\tzin3\t煎饼\n糒\tbei6\t干饭\n糕\tgou1\t糕饼，年糕，糕点\n糔\tsau1\t用水调和粉面\n糖\ttong4\t糖果，糖衣，冰糖\n糐\tfu1\t米粉饼\n糙\tcou3\t糙米，粗糙\n粪\tfan3\t粪便，粪土，粪除\n糠\thong1\t糟糠，秕糠，糟糠之妻\n糢\tmou4\t糢糊\n糟\tzou1\t糟糠，糟粕\n粮\tloeng4\t粮食，粮仓，粮饷，粮草\n糪\tbok1\t半生半熟的饭\n糬\tsyu4\t「薯」的异体字\n糯\tno6\t糯米\n团\ttyun4\t米或粉做成的圆球形食物\n粝\tlai6\t粝饭\n籴\tdek6\t籴米\n粜\ttiu3\t粜出，平粜，籴粜(米稻的买卖)卖出粮食\n糷\tlaan6\t糷饭\n粢\tci1\t粢饭\n粢\tzi1\t粢盛(古祭礼名)，粝粢(粗饭)\n粥\tjuk6\t卖\n粥\tzuk1\t粥少僧多，群雌粥粥\n籸\tsam3\t「籸san1」的异读字\n籸\tsan1\t(1)粮食加工后的渣滓；(2)凝固的粥\n籹\tneoi5\t粔籹\n籹\tjyu5\t「籹neoi5」的异读字\n粈\tjau5\t「粈nau5」的异读字\n粈\tnau5\t同「糅」字\n粔\tgeoi3\t「粔geoi6」的异读字\n粔\tgeoi6\t粔籹\n粒\tlap1\t「粒nap1」的异读字\n粒\tnap1\t粒子，米粒，豆粒，粒食，粒雪，粒米束薪，粒米狼戾\n粘\tnim4\t粘皮带骨，粘贴，粘米\n粘\tzim1\t「粘nim4」的异读字，用于「粘米」一词\n粕\tpaak3\t「粕pok3」的异读字\n粕\tpok3\t糟粕，鱼粕\n粳\tgaang1\t「粳gang1」的异读字\n粳\tgang1\t粳稻，粳米\n粺\tbaai6\t精粺仔细舂成的精米\n粺\tbai6\t「粺baai6」的异读字\n粹\tseoi3\t「粹seoi6」的异读字\n粹\tseoi6\t纯粹\n精\tzeng1\t「精zing1」的异读字，粤语用字，意谓聪敏\n精\tzing1\t精细，精粹，精忠报国，精力，精液，精心，精巧，精妙，精明，精舍，精神，精英，精悍，精密，精彩，精湛，精华，精诚，精炼，精简，博大精深，精疲力竭，精雕细刻，精益求精\n粽\tzung2\t「粽zung3」的异读字\n粽\tzung3\t粽子\n糅\tjau2\t「糅nau6」的异读字\n糅\tjau6\t「糅nau6」的异读字\n糅\tnau6\t糅合，纷糅，杂糅\n糌\tzaam1\t糌粑(干煸的食物)\n糌\tzam1\t「糌zaam1」的异读字\n糗\tcau3\t糗芳，糗糒\n糗\thau2\t「糗cau3」的异读字\n糗\tjau2\t「糗cau3」的异读字\n糑\tnik6\t「糑nok6」的异读字\n糑\tnok6\t米粉饼\n糨\tgoeng6\t糨糊\n糨\tzoeng1\t「糨goeng6」的异读字\n糜\tmai4\t「糜mei4」的异读字\n糜\tmei4\t糜烂，肉糜，糜糜之音，糜费，侈糜，灰躯糜骨\n糁\tsaam2\t以米和羹\n糁\tsam2\t「糁saam2」的异读字\n糁\tsam3\t「糁saam2」的异读字\n糮\thaam5\t𫗴粥\n糮\tlaam6\t「糮haam5」的异读字\n糱\tjip6\t「糱jit6」的异读字\n糱\tjit6\t酿酒的酵母\n糸\tmik6\t细丝\n系\thai6\t系统，系列，系数，系谱，学系\n繌\tzung1\t捕小鱼之网\n糽\tzang1\t引也\n约\tjoek3\t约定，约谈，约束，约会，约法三章，约定俗成，公约，合约\n纡\tjyu1\t弯曲\n纨\tjyun4\t纨牛，纨扇\n纣\tzau6\t纣棍，助纣为虐\n紁\tcaa3\t同「衩」字\n纷\tfan1\t纷争，纷飞，纠纷\n纺\tfong2\t纺织，纺车，纺纱，纺锤\n紒\tgai3\t紫青色的绶带\n级\tkap1\t级别，阶级，几何级数，首级，等级\n纹\tman4\t纹身，掌纹，纹风不动，纹路，纹眉，纹理，条纹，花纹\n纳\tnaap6\t纳凉，出纳，纳闷，纳粹党，纳吉，纳妾，纳贿，纳聘\n纱\tsaa1\t纱布，纺纱，浣纱，纱窗，纱厂，纱门，纱锭，纱线，纱帽\n素\tsou3\t素材，素食，朴素，色素\n纾\tsyu1\t纾难，纾困，纾解\n纭\twan4\t纷纭，众说纷纭\n纮\twang4\t(1)结于颔下的帽带；(2)广大\n纸\tzi2\t纸张，报纸，纸醉金迷，纸币，纸袋，纸盒，纸条，纸屑，纸鸢，纸牌，纸老虎，白纸，蜡纸，卡纸，羊皮纸，贴纸，废纸，力透纸背，面如金纸，洛阳纸贵\n紎\tzi1\t颜色不同的缯\n紌\tkau4\t蜀锦名\n紏\ttau2\t丝黄色\n纻\tcyu5\t指苎麻纤维织的布\n紩\tdit6\t缝\n绋\tfat1\t执绋(送葬时手执绳索以牵引灵柩，后泛指送葬)\n绂\tfat1\t(1)古代系印章的丝绳；(2)同「黻」字\n绀\tgam3\t绀青，发绀，绀殿，绀宇，微红带深青的\n䌹\tgwing2\t罩在外面的单衣\n弦\tjin4\t弦乐，弦歌，琴弦，弦外之音\n絇\tkeoi4\t鞋头装饰\n细\tsai3\t细节，细心，细则，细胞，细菌，细致，细微，细想，细雨\n绅\tsan1\t绅士，乡绅，官绅\n𫄟\tsi1\t粗绸\n绁\tsit3\t缧绁\n绍\tsiu6\t介绍，绍兴(地名)\n紽\tto4\t计算丝缕的单位\n统\ttung2\t统一，统计，统治，统筹，统领，统帅，统称，统御，统率，统辖\n组\tzou2\t组织，组成，组合，组件\n终\tzung1\t终于，终止，终结，终点，终须，终老，终归\n紸\tzyu3\t放置\n絊\tzeoi3\t鲜洁\n紻\tjoeng2\t缨卷\n絘\tci3\t絘布(古币名)\n绖\tdit6\t墨绖，苴绖，缞绖古时丧服上的麻带\n绛\tgong3\t绛唇，绛帐，绛帐授徒；(1)大红色；(2)一种丝织品\n絭\tgyun3\t(1)用来束腰袖的绳索；(2)束缚；(3)弩弦；(4)曲\n绗\thong4\t缝纫针法之一\n絪\tjan1\t絪缊\n绒\tjung4\t绒毛，丝绒，灯心绒，绒布\n给\tkap1\t给予，交给，俸给，配给，家给，供给\n絫\tleoi5\t(1)同「累」字；(2)量词，十黍为一絫\n丝\tsi1\t丝毫，丝绸，丝竹，丝袜，丝质，丝织，丝带\n絏\tsit3\t同「绁」字\n紫\tzi2\t紫色，紫薇，紫荆，紫气东来，紫檀，姹紫嫣红\n絑\tzyu1\t(1)纯红色；(2)红色的缯\n絟\tcyun4\t(1)细布；(2)细小的麻或丝；(3)葛的别名\n絒\tcau4\t白色细绢\n绑\tbong2\t绑架，绑票，绑匪，绑扎，捆绑\n𫄨\tci1\t𫄨纩，𫄨绤，𫄨绣\n綍\tfat1\t同「绋」字，指拉棺木用的大绳\n绠\tgang2\t绠短汲深\n经\tging1\t经验，经纬，经年累月，经脉，经常，经典，经纶，经济，经营，经纪，经世致用，经久耐用，月经，圣经\n绢\tgyun3\t绢帛，绢本，绢裱，绢猴，绢印，禾绢，扃绢，手绢\n絿\tkau4\t不竞不絿\n绥\tseoi1\t绥靖，绥远，绥服，绥抚，绥定，绥靖(旧省名、市名)；(1)上落车时拉稳的绳索；(2)安抚；(3)制止\n绡\tsiu1\t绡头，绛绡，罗绡\n𦈌\tso1\t𦈌巾\n绨\ttai4\t绨袍\n绦\ttou1\t绦虫，绦子\n絼\tzi6\t同「纼」字\n綔\twu6\t佩挂印章的丝带\n絽\tleoi5\t缝衣\n綒\tfu1\t粗网\n綼\tbik1\t衣裳边幅的装饰\n绸\tcau4\t绸子，绸缎，丝绸，未雨绸缪\n绰\tcoek3\t绰号，绰绰有余，绰约\n彩\tcoi2\t彩球，彩排\n绯\tfei1\t绯红\n紧\tgan2\t紧密，绷紧，紧要关头，紧急，紧缩，紧迫，紧邻，紧凑，紧闭，紧张，紧接，紧握，紧身，紧追不舍，紧贴，紧缚\n纲\tgong1\t纲纪，纲要，提纲挈领，纲目，三纲五常网的大绳。《说文》：「纲，网纮也。」\n绮\tji2\t绮丽，绮罗，绮云\n𫄧\tjin4\t古代覆在冠冕上的装饰\n綦\tkei4\t綦巾，綦难姓氏\n绺\tlau5\t割绺，剪绺，顺丝顺绺\n绫\tling4\t绫锦，绫罗绸缎，缯绫\n𫄫\tlit6\t青绿色\n绿\tluk6\t绿化，绿色，绿地，绿豆，绿意盎然，绿荫，绿油油，绿草如茵，嫩绿\n绵\tmin4\t绵密，丝绵，绵延不断，网\tmong5\t鱼网，网络，天罗地网，网路，网状，视网膜，网球，自投罗网，网开一面\n綝\tsam1\t綝𫄥\n绶\tsau6\t绶带\n绪\tseoi5\t心绪，思绪，情绪，头绪，愁绪，绪言，余绪，意绪\n緂\ttaam1\t(1)衣色鲜明；(2)织物名；(3)缉、搓\n绹\ttou4\t绹首，绹纹\n緎\twik6\t皮革之缝\n绽\tzaan6\t绽放，绽开，破绽\n緅\tzau1\t青赤色\n綧\tzeon2\t(1)布帛的宽度；(2)标准、准则\n缁\tzi1\t缁衣\n𫟅\tloeng4\t冠𫄥\n綩\tjyun2\t(1)古时冠冕上的纽带；(2)𫄸色的衣服；(3)罗网\n缍\tdo2\t缍子(绫的一种)\n缉\tcap1\t缉私，缉捕，缉拿，编缉，通缉\n緧\tcau1\t马尾下的装饰\n缎\tdyun6\t缎带，彩缎，绫罗绸缎，锦缎\n练\tlin6\t练习，练武，练兵\n缅\tmin5\t缅怀，缅想，缅邈，缅甸(中南半岛国名)；(1)细丝；(2)悠远\n缈\tmiu5\t虚无缥缈\n编\tpin1\t编列，编辑，编号，编织，编排，编纂，编译，编订，编撰，改编，收编\n𦈕\tseoi1\t同「𦈡」字\n缌\tsi1\t缌麻服，缌麻之丧，服缌\n线\tsin3\t线索，线条，防线，底线\n缃\tsoeng1\t缃缥\n缇\ttai4\t缇萦\n致\tzi3\t细致，精致，密致\n緛\tjyun5\t(1)衣服褶绉；(2)减缝衣；(3)缩短\n𫄭\tfau6\t绢𫄭(语见篇海，其义不明)\n緳\tkit3\t带子\n縃\tseoi1\t同「胥」字\n缞\tceoi1\t缞墨，缞绖\n缣\tgim1\t缣素\n缟\tgou2\t缟素\n𦈔\tgwat1\t𦈔结\n縠\thuk6\t縠纹，波纹如縠\n萦\tjing4\t萦回，萦怀，缇萦\n缛\tjuk6\t缛节，繁文缛礼\n縏\tpun4\t小绣囊\n縢\ttang4\t(1)封闭；(2)约束\n縚\ttou1\t同「绦」字\n縜\twan4\t用以穿绳缚住靶的上下两头粗绳，使之固定\n绉\tzau3\t绉布，湖绉，文绉绉，绉纱\n缒\tzeoi6\t用绳子拴住人、物往下送\n缙\tzeon3\t缙绅，簪缨缙绅赤色丝帛\n縤\tsou3\t生帛\n縌\tjik6\t佩玉的丝带\n縖\that6\t缠束\n縔\tsong2\t中茧\n縥\tzan2\t水流急\n縪\tbat1\t冠缝\n縩\tcoi3\t綷縩\n顈\tgwing2\t(1)一种似苧麻的草；(2)通「褧」字\n𫄶\tkoeng5\t通「襁」字\n缡\tlei4\t结缡，帨缡\n缧\tleoi4\t缧绁\n𫄴\tleot6\t麻绳、大索\n缦\tmaan6\t缦布，缦立，风寒纱缦\n縻\tmei4\t羁縻，縻系，绠縻\n繀\tseoi3\t(1)纺车上的收丝器具；(2)把丝收在纺车上的收丝器上\n缫\tsou1\t缫丝，缫车\n缩\tsuk1\t缩短，缩小，缩减，缩影，缩紧\n絷\tzap1\t絷维(挽留)，羁絷(系马的缰绳)，拘絷，幽絷(拘禁)；(1)捆绑；(2)拘囚；(3)系马\n总\tzung2\t总会，总理，总裁，总计，总数，总部，总务，总和，总管，总汇\n䌸\tzyun3\t纺䌸\n𦈐\tlin4\t(1)丝线纠结不能解；(2)一种渔网\n繉\twan4\t缝纫\n縼\tsyun6\t(1)用长绳牵引牛马放牧；(2)绳，指用绳拘捕\n𦈛\tcyut3\t结缝\n繠\tjeoi5\t(1)同「橤」字；(2)同「蕊」字\n缋\tkui2\t同「绘」字\n缭\tliu4\t缭绕，眼花缭乱\n繖\tsaan3\t同「伞」字\n绣\tsau3\t绣花，锦绣\n缮\tsin6\t缮写，修缮\n织\tzik1\t织布，织机，织女，织花，编织\n𦈎\tcin2\t宽的丝带\n繗\tleon4\t(1)继承；(2)理丝\n繜\tzeon1\t(1)古代妇女所穿小衣之一；(2)节制、折损\n𫄤\tdaat6\t纥𫄤\n系\thai6\t系于，系绳，维系\n𫄷\tjik1\t饰履的圆丝带\n绎\tjik6\t寻绎，演绎，络绎不绝\n䍁\tseoi6\t所以连系瑞玉者\n绳\tsing4\t绳索，准绳，绳之以法，绳结，绳墨，绳锯木断，月书赤绳\n繴\tbik1\t一种机巧的捕兽网，又称覆车网\n繺\tsaat3\t衣破\n𫄣\tnung4\t纷𫄣(不善)\n辫\tbin1\t发辫，髫辫，辫子，梳辫\n𫄸\tfan1\t浅红色\n继\tgai3\t继续，继承，继任，继往开来\n缱\thin2\t缱绻\n纂\tzyun2\t纂辑，编纂，纂绣，纂修\n纋\tjau1\t笄中央可固定头发的部分\n颣\tleoi6\t疵颣\n纆\tmak6\t绳索\n续\tzuk6\t续约，续集，续聘，续弦，持续，继续\n纑\tlou4\t(1)麻线；(2)练过的麻线；(3)纻麻一类的植物\n纤\tcim1\t纤细，纤维素，十指纤纤，纤弱，纤维工业，纤腰\n才\tcoi4\t刚才，方才，才可，恰才\n缨\tjing1\t红缨枪，请缨，被发缨冠，长缨，缨緌之徒\n纕\tsoeng1\t(1)马腹带；(2)佩带\n缵\tzyun2\t继承\n纙\tlo6\t钱贯，用以贯钱的丝\n缆\tlaam6\t缆线，缆绳，电缆\n纥\tgat1\t纥𫄤(用绳线等物打成的结)，纥络(角落)\n纥\that6\t回纥(古代少数民族名)人名、族群名\n红\tgung1\t女红\n红\thung4\t红色，红豆，红花，红定，红娘，红袖，红教，红晕，红尘，红潮，红颜，红鸾，红外线，红羊浩劫，红男绿女，红纷佳人，红颜白发，红颜薄命\n纯\tseon4\t纯一，纯正，纯利，纯度，纯真，纯净，纯粹，纯洁，纯熟，纯朴，单纯\n纯\tzeon2\t镶边\n纯\ttyun4\t量词\n䌷\tcau1\t䌷绎\n䌷\tcau4\t粗绸\n累\tleoi4\t累囚，累累，果实累累\n累\tleoi5\t累世，累次，累卵，累迁，积累\n累\tleoi6\t累句，累赘，累及无辜，家累，劳累\n紶\theoi2\t绪也\n紶\tkeoi1\t(1)继续；(2)束缚\n紨\tfu1\t(1)布名；(2)粗绸\n紨\tfu6\t捆绑东西的绳索\n绞\tgaau2\t绞痛，绞尽脑汁，绞刑，绞缠，绞索，心如刀绞\n绞\thaau4\t(1)苍黄色；(2)古代丧礼中敛尸用的束带\n絜\tgit3\t淳絜，絜行同「洁」字\n絜\tkit3\t絜矩，度长絜大；(1)用绳子测量宽度；(2)审度､比较\n絓\tgwaa3\t受阻碍、牵绊\n絓\twaa6\t从废茧中抽出的粗丝\n絔\tbaak3\t缝补\n絔\tmak6\t头巾\n𫄡\tdung6\t鸿𫄡(直驰/相连)\n𫄡\ttung1\t迟缓而直通的样子\n𫄡\ttung4\t布名\n絩\ttiu3\t计算缯丝的量词\n絩\ttiu5\t形容丝织品很长\n綅\tcam1\t以朱线缀甲\n綅\tcim1\t黑经白纬的织物\n絻\tman6\t古代丧服之一\n絻\tmin5\t同「冕」字\n纶\tgwaan1\t纶巾\n纶\tleon4\t纶音，缠绵纶至，萧索纶囷，满腹经纶\n綮\tkai2\t綮戟\n綮\thing3\t肯綮，洞中肯綮\n维\twai4\t维护，维生素，维妙维肖，维持，维修，维系，维新，维艰，维文\n维\tjung1\t卢维(古衮州水名)\n缘\tjyun4\t缘故，缘由，缘份，缘木求鱼，缘起，缘起缘灭，缘因，缘分\n缘\tjyun6\t衣服的边饰\n缏\tbin1\t同「辫」字\n缏\tpin4\t用针缝\n𫟆\tcung4\t同「重」字，增益重叠的意思\n𫟆\tzung6\t缯缕\n𫄰\tbong1\t鞋之旁部\n𫄰\tbong2\t同「绑」字\n县\tjyun4\t通「悬」字\n县\tjyun6\t县城，郡县，县令，县志，县官，县治\n縒\tci1\t参縒(即参差)\n縒\tcok3\t縒综(即错综)\n繁\tfaan4\t繁荣，繁殖，繁忙，繁多，繁华，繁复，繁重，繁杂，繁琐，繁衍，繁体字，繁殖力，繁密，繁盛，繁星，繁文缛节，繁细，繁乱，繁难，繁茂，繁巨，繁苛\n繁\tpo4\t姓氏\n繁\tpun4\t同「鞶」字\n缝\tfung4\t缝合，缝纫，缝补，裁缝\n缝\tfung6\t缝隙，门缝，裂缝，见缝插针，天衣无缝\n繇\tjau4\t通「由」字\n繇\tzau6\t卦兆的占辞\n繇\tjiu4\t(1)通「徭」字；(2)通「谣」字\n缪\tmau4\t绸缪\n缪\tmau6\t缪巧，缪戾，缪悠，缪然，缪种流传，纰缪\n缪\tmiu6\t姓氏\n缪\tmuk6\t同「穆」字\n纵\tzung1\t纵深，纵贯，纵横，纵轴，纵横捭阖，纵横驰骋，合纵\n纵\tzung2\t纵臾\n纵\tzung3\t纵令，纵言，纵步，纵使，纵波，纵酒，纵容，纵览，放纵\n𫄲\tmok6\t络𫄲(张罗的样子，又写作络幕)\n𫄲\tmou6\t劣絮\n繙\tfaan1\t繙译\n繙\tfaan4\t乱\n缲\tciu1\t缲边\n缲\tsou1\t同「缫」字\n缲\tzou2\t绛紫色帛\n茧\tgaan2\t蚕茧，破茧而出，作茧自缚\n茧\tgin2\t同「研」字，手脚因过度摩擦所生的厚皮\n缴\tgiu2\t缴付，缴税，缴费，缴纳，缴械，缴获，缴绕，收缴\n缴\tzoek3\t系在箭尾的丝绳\n纀\tbuk6\t古代诸侯、士大夫居家所穿深衣的下裳\n纀\tfuk6\t(1)同「袱」字；(2)同「幞」字\n𦈡\tseoi1\t(1)彩色的丝织品；(2)古代以割裂的𦈡，作为出入关隘的凭证\n𦈡\tjyu4\t同「襦」字\n累\tleoi4\t(1)绳索；(2)缠绕\n累\tleoi5\t重叠\n累\tleoi6\t牵连\n纠\tdau2\t「纠gau2」的异读字\n纠\tgau2\t纠正，纠纷，纠众，纠集，纠葛，纠察，纠弹，纠谬，纠缠；(1)缠绕；(2)集聚；(3)督察；(4)矫正\n紃\tceon4\t紃屦彩色绳带\n紃\tseon4\t「紃ceon4」的异读字\n纪\tgei2\t纪元，纪年，纪事，纪念，纪要，纪律，世纪，军纪，纲纪；(1)丝的头绪；(2)法度、准则；(3)史书纪传体体例之一；(4)记录\n纪\tgei3\t「纪gei2」的异读字\n纫\tjan4\t「纫jan6」的异读字\n纫\tjan6\t纫针，缝纫，纫佩，感纫\n紞\tdaam2\t「紞dam2」的异读字\n紞\tdam2\t(1)古代冠冕上用以系瑱的丝绳；(2)缝在被端的丝带，用以识别首尾；(3)象声词，击鼓声\n紞\tdam3\t「紞dam2」的异读字\n紑\tfau1\t衣服鲜洁的样子\n紑\tfau2\t「紑fau1」的异读字\n紑\tfau4\t「紑fau1」的异读字\n纴\tjam4\t纺织\n纴\tjam6\t「纴jam4」的异读字\n紊\tman5\t「紊man6」的异读字\n紊\tman6\t紊乱，有条不紊\n紊\tleon6\t「紊man6」的异读字，粤误读\n纽\tnau2\t纽扣，衣纽，枢纽，纽带\n纽\tnau5\t「纽nau2」的异读字\n纼\tzan3\t「纼zan6」的异读字\n纼\tzan6\t牛鼻绳，引申为牵牲口的绳子\n绊\tbun3\t「绊bun6」的异读字\n绊\tbun6\t绊脚石，羁绊，绊手绊脚\n绌\tceot1\t「绌zyut3」的异读字\n绌\tzeot1\t「绌zyut3」的异读字\n绌\tzyut3\t左支右绌，相形见绌\n绌\tzyut6\t「绌zyut3」的异读字\n绐\tdoi6\t「绐toi5」的异读字\n绐\ttoi5\t欺哄\n扎\tzaap3\t「扎zaat3」的异读字\n扎\tzaat3\t扎根，扎实，扎下，扎营，扎起，扎好，扎紧\n紾\tcan2\t紾臂\n紾\tzan2\t「紾can2」的异读字\n结\tgit3\t结交，结合，结束，结伴，结果，结怨，结纳，结婚，结晶\n结\tlit3\t「结git3」的异读字\n绚\tseon1\t「绚hyun3」的异读字\n绚\thyun3\t绚目，绚灿，绚丽，绚烂\n絖\tkong3\t「絖kwong3」的异读字\n絖\tkwong3\t同「纩」字\n络\tlok3\t络纱，络丝，络头，络绎不绝，络腮胡子，经络\n络\tlok6\t「络lok3」的异读字\n絮\tseoi3\t「絮seoi5」的异读字\n絮\tseoi5\t絮叨，花絮\n絮\tseoi6\t「絮seoi5」的异读字\n绝\tzyut3\t「绝zyut6」的异读字\n绝\tzyut6\t绝世，绝交，绝句，绝色，绝祀，绝技，绝育，绝招，绝版，绝俗，绝食，绝望，绝情，绝笔，绝嗣，绝学，绝艺，绝代佳人，绝妙好辞，绝处逢生，绝无仅有，断绝，拍案叫绝，超然绝诣\n绤\tgwik1\t粗葛布\n绤\tkwik1\t「绤gwik1」的异读字\n綎\tting1\t佩玉的丝带\n綎\tting4\t「綎ting4」的异读字\n緁\tcap1\t密针连𫄤\n緁\tzit6\t「緁cap1」的异读字\n綷\tceoi3\t「綷ceoi3」的异读字\n綷\tzeoi3\t綷縩\n绲\tgwan2\t绲边\n绲\tkwan2\t「绲gwan2」的异读字\n绻\thyun2\t「绻hyun3」的异读字\n绻\thyun3\t缱绻\n緌\tjeoi4\t古代帽带的下垂部分\n緌\tjeoi5\t「緌jeoi4」的异读字\n緉\tloeng5\t量词，用于鞋\n緉\tloeng6\t「緉loeng5」的异读字\n緆\tsik1\t「緆sik3」的异读字\n緆\tsik3\t(1)细麻布；(2)裙子下缘的边饰\n绾\twaan2\t绾发，绾结，赤绳绾足\n绾\twaan5\t「绾waan2」的异读字\n综\tzung1\t「综zung3」的异读字\n综\tzung3\t综合，综计，综述，综括，综理，综达，综观，综合艺术，综名核实，错综\n緀\tcai1\t丝皂有纹彩\n緀\tcai2\t「緀cai1」的异读字\n缔\tdai3\t缔造，取缔，缔交，缔约\n缔\tdai6\t「缔dai3」的异读字\n缔\ttai3\t「缔dai3」的异读字\n缗\tfan1\t「缗man4」的异读字\n缗\tman4\t缗钱，缗币，告缗(告发别人不依法捐税)；(1)钓鱼用的丝绳；(2)贯钱用的丝绳，见《史记•平准书》李斐集解；(3)钱的计算单位；(4)储钱；(5)古代一种税捐制度；(6)古人名，战国时有齐缗王；(7)地名\n缄\tgaam1\t缄口，缄札，缄封，缄密，缄默，三缄其口\n缄\tzin1\t「缄gamm1」的异读字\n缑\tgau1\t(1)缠剑柄的绳索；(2)姓氏\n缑\tkau1\t「缑gau1」的异读字\n缂\tkaak1\t「缂hak1」的异读字\n缂\tkaak3\t「缂hak1」的异读字\n缂\thak1\t缂丝\n纬\twai5\t纬度，经纬\n纬\twai6\t「纬wai5」的异读字\n缓\twun4\t「缓wun6」的异读字\n缓\twun6\t缓和，缓刑，缓不济急，缓带，缓祸，缓慢，缓冲，缓颊，缓兵之计，缓步代车，缓歌缦舞\n缢\tai3\t缢女，缢颈，缢死，绞缢，自缢\n缢\tngai3\t「缢ai3」的异读字\n缚\tbok3\t束缚，作茧自缚捆绑\n缚\tbok6\t「缚bok3」的异读字\n缚\tfok3\t「缚bok3」的异读字\n縓\tcyun3\t只染色一次的赤黄色丝帛\n縓\tcyun4\t「縓cyun3」的异读字\n缜\tcan2\t缜密\n缜\tzan2\t「缜can2」的异读字\n縡\tzoi2\t「縡zoi3」的异读字\n縡\tzoi3\t事情\n纤\thin1\t纤夫，纤手，拉纤\n纤\thin3\t「纤hin1」的异读字\n縯\tjan5\t「縯jin5」的异读字\n縯\tjin5\t延长\n繄\tai1\t「繄ji1」的异读字\n繄\tngai1\t「繄ji1」的异读字\n繄\tji1\t语助词\n缕\tlau5\t「缕leoi5」的异读字\n缕\tleoi5\t缕述，一缕烟，不绝如缕，丝缕，缕陈，条分缕析\n缥\tpiu1\t「缥piu5」的异读字\n缥\tpiu2\t「缥piu5」的异读字\n缥\tpiu5\t缥缈，缥缃\n𫄳\tsaai2\t同「𫄥」字\n𫄳\tsi2\t「𫄳saai2」的异读字\n绩\tzek3\t「绩zik1」的异读字\n绩\tzik1\t绩火，绩麻，绩线，绩学之士，成绩，功绩，战绩，业绩\n繑\thiu1\t絏繑，繑边\n繑\tkiu5\t「繑hiu1」的异读字，口语读音\n绕\tjiu2\t「绕jiu5」的异读字\n绕\tjiu5\t绕行，绕圈，绕嘴，绕口令，绕梁三日，环绕\n穗\tseoi3\t「穗seoi6」的异读字\n穗\tseoi6\t穗帐，穗裳，穗帷\n繣\twaa6\t(1)系东西的绳子；(2)破裂之声；(3)违背\n繣\twaak6\t「繣waa6」的异读字\n繣\twok6\t「繣waa6」的异读字\n繘\tgwat1\t「繘wat6」的异读字\n繘\twat6\t汲水用之绳索\n繘\tleot6\t「繘wat6」的异读字\n繲\tfaai3\t治繲\n繲\thaai5\t「繲faai3」的异读字\n缳\twaan4\t「缳waan6」的异读字\n缳\twaan6\t缳首死刑，投缳自尽，缳橐\n缳\tjyun6\t「缳waan6」的异读字\n绘\tkui2\t绘画，绘图，描绘\n绘\tkui3\t「绘kui2」的异读字\n缤\tban1\t五彩缤纷，落英缤纷\n缤\tpan1\t「缤ban1」的异读字\n缠\tcin4\t缠绕，纠缠，缠绵悱恻，缠足，缠身，纠缠不清，缠扰\n缠\tzin6\t「缠cin4」的异读字，口语读音\n缬\tkit3\t缬取，采缬，缬草(植物名:Valerianroot)\n缬\tlit3\t「缬kit3」的异读字，口语读音\n纩\tkong3\t「纩kwong3」的异读字\n纩\tkwong3\t𫄨纩，黈纩，属纩\n𫄹\twaa6\t「𫄹kwai4」的异读字\n𫄹\tkwai4\t(1)维纲中绳；(2)绳结；(3)带子；(4)琴弦中绝\n纛\tdou6\t「纛duk6」的异读字\n纛\tduk6\t纛旗，大纛，左纛，高牙大纛\n𫄥\tsaai2\t「𫄥lei4」的异读字\n𫄥\tlei4\t綝𫄥\n𫄥\tsi2\t「𫄥lei4」的异读字\n𫄛\tgam1\t系衣带\n𫄛\tgam3\t单被\n𫄛\tkam1\t「𫄛gam1」的异读字\n纰\tpai1\t「纰pei1」的异读字\n纰\tpei1\t纰缪，纰漏，纰越\n纰\tpei4\t缟冠素纰\n索\tsaak3\t索引，索偿，索隐，搜索\n索\tsok3\t绞索，绳索，离群索居\n索\tsuk3\t「索saak3」的异读字\n絣\tmaang1\t「絣bang1」的异读字\n絣\tbang1\t(1)穿甲的绳；(2)编织；(3)连续\n絣\tbing3\t交错\n絯\thaai5\t同「骇」字\n絯\thaai6\t「絯haai5」的异读字\n絯\tgoi1\t拘束\n綄\twun4\t古时一种测风仪，又称「候风五两」\n綄\twun5\t(1)缠绕；(2)「綄wun4」的异读字\n綪\tzang1\t屈曲\n綪\tsin3\t赤缯\n綪\tsin6\t「綪sin3」的异读字\n缀\tzeoi3\t缀文，缀合，缀缀，缀辑，缀玉联珠，缀字成句，点缀\n缀\tzeoi6\t「缀zeoi3」的异读字\n缀\tzyut3\t同「辍」字\n缀\tzyut6\t「缀zyut3」的异读字\n緪\tgang1\t(1)粗大的绳索；(2)绷急琴弦；(3)月上弦之貌\n緪\tgang2\t通「亘」字\n緪\tgang3\t(1)穷竟；(2)「緪gang1」的异读字，意指月上弦之貌\n緺\tgwaa1\t紫青色的绶\n緺\twaa1\t「緺gwaa1」的异读字\n緺\tgwo1\t(1)量词；(2)「緺gwaa1」的异读字\n𦈉\tgwan2\t量词，指用一百根羽毛捆成的一束\n𦈉\tkwan2\t「𦈉gwan2」的异读字\n𦈉\twan6\t纬线\n缊\twan1\t絪缊\n缊\twan2\t缊袍，纷缊，束缊请火\n缊\twan3\t「缊wan2」的异读字\n绷\tbaang6\t「绷bang1」的异读字\n绷\tmaang1\t绷著脸\n绷\tbang1\t绷带\n绷\tmang2\t「绷maang1」的异读字\n縿\tcaam1\t「縿saam1」的异读字\n縿\tsaam1\t旌旗的正幅，为旒所著之处\n縿\tsiu1\t有花纹的丝织品\n缯\tcang4\t「缯zang1」的异读字\n缯\tzang1\t丝织品总称\n缯\tzang6\t紧缠\n繵\tdaan3\t束腰大带\n繵\tcin4\t同「缠」字\n繵\tzin6\t「繵cin4」的异读字\n缶\tfau2\t击缶，二缶钟惑；(1)盛酒器皿；(2)古时一种一种瓦制的敲击乐器；(3)二一四部首之一\n缸\tgong1\t缸子，瓦缸，汽缸，水缸，鱼缸，浴缸\n缺\tkyut3\t缺乏，空缺，残缺不全，缺点，缺少，缺陷，缺失，缺席，缺口，缺额，缺考，缺德，缺憾，缺损，欠缺，出缺，肥缺\n钵\tbut3\t钵头，钵子，钵盂，托钵，擂钵，乳钵，沿门托钵\n缾\tping4\t同「瓶」字\n罄\thing3\t罄尽，告罄，罄竹难书\n罅\tlaa3\t罅隙，罅漏\n坛\ttaam4\t坛子，骨坛，醋坛子\n罍\tleoi4\t一种盛酒的器具\n罏\tlou4\t同「垆」字\n罐\tgun3\t罐头，罐装，罐子\n缿\thoeng3\t「缿hong6」的异读字\n缿\thong6\t装钱器\n罃\taang1\t「罃ang1」的异读字\n罃\tngaang1\t「罃ang1」的异读字\n罃\tang1\t同「罂」字\n罃\tngang1\t「罃ang1」的异读字\n罋\tung3\t同「瓮」字\n罋\tngung3\t「罋ung3」的异读字\n罊\tkai3\t器中尽\n罊\thak1\t「罊kai3」的异读字\n罂\taang1\t罂粟，酒罂，瓦罂盛水酒的瓦器\n罂\tngaang1\t「罂aang1」的异读字\n罂\tang1\t「罂aang1」的异读字\n罂\tngang1\t「罂aang1」的异读字\n罕\thon2\t罕见，罕有，稀罕\n罔\tmong5\t罔效，欺罔，置若罔闻，诬罔\n罘\tfau4\t罘罳，罘网，罝罘，芝罘(山东省山名)捕鸟兽用的网\n罡\tgong1\t罡风，天罡(道家三十六神煞)，天罡星(北斗星)\n罛\tgu1\t大渔网\n罠\tman4\t(1)捕兽用的网；(2)钓鱼的绳子\n罜\tzyu3\t小鱼网\n罞\tmung4\t捕捉麋鹿的网\n罧\tsam1\t积柴于水中以取鱼\n罭\twik6\t捕小鱼的鱼网\n罩\tzaau3\t罩住，罩子，罩衫，罩上\n罪\tzeoi6\t罪过，赔罪，负荆请罪，罪恶，罪孽，罪愆，罪案，罪名，罪犯，罪行，罪状，罪证，罪人，顶罪，罪魁祸首，罪有应得，罪大恶极，代罪羔羊，将功赎罪，弥天大罪，吊民伐罪\n置\tzi3\t置身，置放，置之不理，置产，置喙，置身事外，置信，置若罔闻，置之度外，置之死地而后生，置之不顾，置诸度外\n罬\tzyut3\t古代一种附有机关的捕鸟网具\n罚\tfat6\t罚款，赏罚，责罚，处罚\n罳\tsi1\t罘罳，罳顶\n罶\tlau5\t捕鱼的器具\n骂\tmaa6\t骂人，咒骂，泼妇骂街，打情骂趣，指桑骂槐\n罺\tcaau1\t小网\n罹\tlei4\t罹难，罹病，罹患遭遇\n罼\tbat1\t掩捕鸟兔的长柄纲\n罽\tgai3\t罽帐，罽鱼，罽宾\n罴\tbei1\t非罴，熊罴\n罗\tlo4\t罗汉，罗织，罗致，罗列\n羃\tmik6\t同「幂」字\n羇\tgei1\t同「羁」字\n羁\tgei1\t羁绊，羁留，羁旅\n羉\tlyun4\t捕捉野猪的罗网\n罫\twaa6\t阻碍\n罫\tgwaai2\t棋盘上的方格\n罨\tngap1\t臭罨\n罨\tjim2\t一种鱼网\n罢\tbaa6\t罢工，作罢，欲罢不能，罢休，罢手，罢免，罢官，罢战，罢职，罢黜\n罢\tpei4\t同「疲」字\n罾\tzang1\t一种鱼网\n罾\tzang6\t巴巴罾儿\n罟\tgu1\t「罟gu2」的异读字\n罟\tgu2\t罟师(渔夫)，鱼罟(渔网)网\n罝\tze1\t兔罝，罝罘捕兔网\n罝\tzeoi1\t「罝ze1」的异读字\n罣\tgwaa3\t罣误，了无罣碍，罣念，罣记\n罣\twaa6\t「罣gwaa3」的异读字\n罦\tfau4\t「罦fu1」的异读字\n罦\tfu1\t罦罳(猎网，网状屏风)，罦罝捕鸟兽的网\n罥\tgyun2\t「罥gyun3」的异读字\n罥\tgyun3\t尘封网罥\n署\tcyu5\t署名，署理，公署，部署，签署\n署\tsyu3\t「署cyu5」的异读字\n署\tsyu5\t「署cyu5」的异读字\n署\tsyu6\t「署cyu5」的异读字\n罻\twai3\t罻罗，罿罻说文解字：罻，捕鸟网也。\n罻\twat1\t「罻wai3」的异读字\n罿\tcung1\t罿罻捕捉鸟兽的网\n罿\ttung4\t「罿cung1」的异读字\n羌\tgoeng1\t羌族，羌活\n羑\tjau5\t羑里\n美\tmei5\t美貌，美丑，美学，优美，壮美，赞美，尽善尽美\n羍\ttaat3\t小羊羔\n羒\tfan4\t白色的公羊\n羔\tgou1\t羔羊\n羖\tgu2\t黑色的公羊\n羜\tcyu5\t出生五个月的羊羔\n羝\tdai1\t公羊\n羕\tjoeng6\t水长\n羚\tling4\t羚羊\n羞\tsau1\t羞耻，害羞，闭月羞花，羞辱，羞愧，羞涩，羞怯，羞赧，羞惭，羞愤\n羠\tji4\t阉割过的羊\n羢\tjung4\t纤细的羊毛\n义\tji6\t义理，义务，义气，仁义，名义，意义\n群\tkwan4\t群众，群体，群情汹涌，群策群力，群龙无首，群情愤慨\n羧\tso1\t羧酸\n羦\twun4\t(1)细角山羊；(2)一种象羊的凶孟野兽\n羭\tjyu4\t攘羭(掠美)；(1)母羊；(2)美德\n羰\ttong1\t羰基(碳氧两种原子组成的原子团)\n羲\thei1\t伏羲姓氏\n羱\tjyun4\t羱羊\n羳\tfaan4\t腹部为黄色的羊\n𫅗\tfan4\t𫅗羊\n羸\tleoi4\t羸兵，羸弱，羸瘦\n羷\tlim5\t羊角卷三匝者\n羺\tnau6\t胡羊\n羻\tjoeng5\t人名用字\n羊\tcoeng4\t同「祥」字\n羊\tjoeng4\t羊毛，绵羊\n羛\thei3\t羛阳(古地名)\n羛\tji6\t同「义」字\n羡\tjin4\t通「延」字\n羡\tjin4\t同「埏」字\n羡\tsin6\t羡慕，艳羡，临渊羡鱼，欣羡，羡煞旁人\n羹\tgang1\t羹汤，调羹，闭门羹\n羹\tlong4\t不羹(河南省古地名)\n羟\tcoeng1\t「羟koeng5」的异读字\n羟\tkoeng5\t羟基氢氧原子团\n羯\tgit3\t「羯kit3」的异读字\n羯\tkit3\t(1)古民族名；(2)被阉割的羊\n膻\tsaan1\t「膻sin1」的异读字\n膻\tsin1\t「膻zin1」的异读字\n膻\tzin1\t如蚁附膻羊身上的臊味\n羼\tcaan2\t「羼caan3」的异读字\n羼\tcaan3\t羼杂\n芈\tme1\t羊叫声\n芈\tme5\t「芈me1」的异读字\n芈\tmei5\t(1)姓氏；(2)「芈me1」的异读字\n羬\thaam4\t细角大山羊\n羬\tngaam4\t(1)一种大野羊；(2)「羬haam4」的异读字\n羬\tkim4\t六尺长的羊\n羽\tjyu5\t羽翼，党羽，吉光片羽，羽毛球，羽量级，铩羽，霓裳羽衣，移宫换羽，羽化登仙，羽扇纶巾\n羿\tngai6\t后羿射日\n翅\tci3\t翅膀，鱼翅\n翂\tfan1\t翂翂(形容鸟飞得缓慢的样子)\n翁\tjung1\t老翁，渔翁，姑翁\n翃\twang4\t飞翔\n翀\tcung1\t向上直飞\n翐\tdit6\t翐翐(鸟飞舒迟的样子)\n翌\tjik6\t翌日，翌年\n翊\tjik6\t翊卫，翊赞，翊戴，辅翊，匡翊；(1)飞翔；(2)辅助\n翋\tlaap6\t飞的样子，或互相追逐的样子\n翎\tling4\t翎毛，雁翎，花翎\n翍\tpei1\t披散\n翇\tfat1\t跳舞者所执的雉羽\n翉\tpun2\t(1)飞起；(2)走也\n翔\tcoeng4\t翔实，翱翔，鸾翔凤集，滑翔，高翔远引\n翗\tkoe4\t飞行的样子\n翜\tsaap3\t(1)快速飞行；(2)同「翣」字，指棺木的羽饰；(3)挟持；(4)减少；(5)役使\n翠\tceoi3\t翠绿，翠玉，翠华，翠柏，翠微，翠亨村，翠鸟，翠绿色\n翣\tsaap3\t翣舌(病症名，指舌头肿胀)古时棺木上的羽饰\n翞\tgoeng1\t翞翞(形容雀鸟行走的样子)\n翨\tci3\t鸟尾及鸟翼上巨大的羽毛\n翚\tfai1\t翚飞，鸟革翚飞\n翭\thau4\t羽毛初生的样子\n翩\tpin1\t翩翩起舞，翩跹，浮想联翩\n翦\tzin2\t(1)姓氏；(2)同「剪」字\n翪\tzung1\t鸟类竦翅上下飞\n翮\that6\t羽翮，振翮，飞翮\n翯\thok6\t翯翯(洁白肥润)\n翰\thon6\t翰墨，翰林，文翰，书翰\n翼\tjik6\t翼锋，鼻翼，如虎添翼，翼瓣，翼侧，翼手龙，羽翼，扶翼，折翼，振翼，左翼，尾翼，薄如蝉翼，比翼连枝，不翼而飞，小心翼翼\n翴\tlin4\t(1)飞行；(2)飞行的样态\n翻\tfaan1\t翻译，翻案，翻阅，翻新，翻脸，翻滚，翻云覆雨，翻天覆地\n翷\tleon4\t飞行的样态\n翸\tpun2\t飞貌\n翾\thyun1\t翾风，翾风回雪；(1)飞翔；(2)急速\n翙\twai3\t鸟飞声\n耀\tjiu6\t耀眼，耀武扬威，照耀\n羾\tgung3\t到达\n羾\thung4\t拍翼飞行所生的声音\n翟\tzaak6\t姓氏\n翟\tdik6\t翟茀，翚翟；(1)身具五彩花纹的雉鸡；(2)同「狄」字；(3)用作名字，如墨翟\n翵\thau4\t同「翭」字\n翵\tkeoi4\t(1)鸟羽；(2)有白色左足的鸟\n翏\tlau6\t高飞\n翏\tliu4\t「翏lau6」的异读字\n翏\tluk6\t「翏lau6」的异读字\n习\tzaap6\t习惯，练习，习以为常，习俗，习气，习染，学习，修习，熏习，复习，补习，见习，实习，陋习，习非胜是，积习难改\n习\tzap6\t「习zaap3」的异读字\n翕\thap1\t「翕jap1」的异读字\n翕\tjap1\t翕动，翕翼，哄哄翕翕，翕然\n翛\tsiu1\t翛然，翛翛(羽毛残破的样子)\n翛\tsuk1\t「翛siu1」的异读字\n翡\tfei2\t翡翠，翡翠兰苕\n翡\tfei6\t「翡fei2」的异读字\n翥\tzyu2\t「翥zyu3」的异读字\n翥\tzyu3\t鸟向上飞\n翢\tdou6\t同「纛」字，指大旗\n翢\ttou1\t「翢dou6」的异读字\n翢\ttou4\t「翢dou6」的异读字\n翫\twaan4\t「翫wun6」的异读字\n翫\twun6\t同「玩」字\n翱\tngou4\t翱翔\n翱\tngou6\t「翱ngou4」的异读字\n翳\tai3\t翳没，翳昧，翳翳，翳荟，白翳，阴翳；(1)隐藏、隐居；(2)遮蔽；(3)摒弃\n翳\tngai3\t「翳ai3」的异读字\n翳\tji1\t「翳ai3」的异读字\n翲\tpiu1\t(1)飞行的样态；(2)高飞；(3)轻飘飘\n翲\tpiu3\t「翲piu1」的异读字\n翘\tgiu6\t「翘kiu4」的异读字\n翘\tkiu4\t翘楚，翘首\n翿\tdou6\t「翿tou4」的异读字\n翿\ttou4\t鹭翿\n翑\tgeoi2\t「翑keoi4」的异读字\n翑\tkeoi4\t(1)羽毛末端弯曲之处；(2)有白色后足的马；(3)同「翵」字\n翑\tjyu6\t箭羽\n考\thaau2\t考试，参考，考验，考察，考虑，考量，考核，考证，考古，考查，考据，考卷，考究，考订\n老\tlou5\t老师，老板，老婆，老少，老伯，老爷\n者\tze2\t记者，使者，目击者\n耇\tgau2\t耆耇高寿\n耄\tmou6\t八、九十岁老人\n耆\tkei4\t耆老，耆宿\n耋\tdit6\t耄耋泛指老年\n耎\tjyun5\t柔耎，心耎\n耍\tsaa2\t耍弄，玩耍\n而\tnang4\t通「能」字\n而\tji4\t而且，然而，不寒而栗，破茧而出，盘膝而坐，不劳而获，半途而废，不谋而合，不告而别，不欢而散，不教而诛，不胫而走，不翼而飞\n耑\tdyun1\t同「端」字\n耑\tzyun1\t同「专」字\n耏\tji4\t胡须\n耏\tnoi6\t刑罚的一种\n耐\tnang4\t做到\n耐\tnoi6\t耐心，耐性，能耐，耐人寻味\n耔\tzi2\t培土\n耗\thou3\t耗费，耗时，耗损，耗尽，耗用，耗掉，耗子，耗去，耗竭，耗力\n耘\twan4\t耘锄，耕耘，耘田\n耞\tgaa1\t连耞\n耟\tgeoi6\t同「耜」字，「耟」是「耜」的讹字\n耛\tji4\t犁上的铧\n耡\tco4\t同「锄」字\n耤\tzik6\t耤田\n耦\tngau5\t耦耕(二人并肩而耕)，耦合，对耦，怨耦，齐大非耦\n耩\tgong2\t耩地\n耨\tnau6\t深耕易耨，耨耕(泛指农活)\n耧\tlau4\t耧播，耧车\n耰\tjau1\t农具，用作弄碎土块，平整田地\n耙\tbaa3\t耙田，钉耙，圆盘耙，齿耙\n耙\tpaa4\t犁耙\n耒\tleoi5\t「耒leoi6」的异读字\n耒\tleoi6\t耒水，耒耜，耒阳，耒耨\n耒\tloi6\t「耒leoi6」的异读字\n耖\tcaau2\t「耖caau3」的异读字\n耖\tcaau3\t农具名称\n耕\tgaang1\t耕作，耕耘，耕种，耕莘，耕田\n耕\tgang1\t「耕gaang1」的异读字，口语读音\n耜\tci5\t「耜zi6」的异读字\n耜\tzi6\t耒耜，耒耜之勤\n耪\tpong1\t「耪pong5」的异读字\n耪\tpong3\t「耪pong5」的异读字\n耪\tpong5\t耪地\n耳\tji5\t耳朵，耳目一新，耳熟能详，耳环，耳濡目染，耳提面命\n耴\tngat6\t聱耴耳垂\n耶\tje4\t耶路撒冷，耶稣疑问词\n耽\tdaam1\t耽误，耽心，耽搁，耽溺\n耾\twang4\t(1)耳语；(2)耳聋\n耹\tkam4\t耹隧(地名)声音\n聃\tdaam1\t(1)耳广而无轮；(2)相传为老子之名\n聆\tling4\t聆听，聆赏，聆讯\n聊\tliu4\t聊天，聊表，无聊\n聇\tzing1\t聇聇(独行)\n聈\tjau2\t幽静深远\n聏\tji4\t(1)淍和；(2)毛多\n聒\tkut3\t聒噪，聒耳\n聑\tdip3\t(1)安适、妥帖；(2)耳垂貌\n聐\tngaat6\t痴不能听\n聘\tping3\t聘请，聘任，聘用，聘书，聘礼\n圣\tsing3\t圣火，圣地，圣经，圣人，圣哲，圣贤，圣旨，圣雄，圣洁，圣灵，圣女，圣德，圣明，圣城，圣徒，圣恩，圣诗，圣典\n聚\tzeoi6\t聚集，聚会，聚合，聚首，聚精会神，凝聚，类聚\n聧\tkwai4\t极聋\n聤\tting4\t耳病出脓\n聬\tjung2\t聬聬(耳鸣声)\n聪\tcung1\t聪明，聪敏，聪慧，聪颖，耳聪目明\n联\tlyun4\t联合，联盟，联络，联谊，联想，联袂，联结\n聱\tngou4\t佶屈聱牙\n耸\tsung2\t耸立，耸人听闻，耸肩，耸动，高耸，危言耸听\n职\tzik1\t职务，职业，职权，职责，职位，职能，职司，职守，职称\n聸\tdaam1\t垂耳\n聍\tning4\t耵聍(耳垢，勿与「叮咛」混淆)\n聋\tlung4\t聋哑，聋子\n聜\tdai2\t(1)不听；(2)耳病\n聜\tzat1\t听觉不灵敏\n聂\tnip6\t(1)姓氏，如战国时的聂政；(2)附于耳逿细语\n聂\tsip3\t木叶动貌\n耵\tding1\t耵聍\n耵\tding2\t「耵ding1」的异读字\n耷\tdaap3\t耷拉(下垂貌)，垂头耷耳大耳朵\n耷\tdap1\t「耷daap3」的异读字\n耿\tgang2\t耿直，耿耿，耿介，忠心耿耿，耿耿于怀；(1)明亮；(2)正直不阿；(3)悲伤；(4)姓氏\n耿\tgwing2\t「耿gang2」的异读字\n聝\tgwik1\t「聝gwok3」的异读字\n聝\tgwok3\t同「馘」字\n声\tseng1\t「声sing1」的异读字，口语读音\n声\tsing1\t声母，声色，声言，声明，声音，声讨，声望，声张，声援，声腔，声势，声调，声价，声乐，声辩，声名狼藉，声色俱厉，声泪俱下，声震遐迩，声誉鹊起，雨声，歌声\n聩\tngoi6\t「聩kui2」的异读字\n聩\tkui2\t聩眊，昏聩，振聋发聩\n聩\tkui3\t「聩kui2」的异读字\n聩\twui6\t「聩kui2」的异读字\n闻\tman2\t「闻man4」的异读字\n闻\tman4\t新闻，闻名，闻知，闻所未闻\n闻\tman6\t闻人\n听\tteng1\t(1)「听ting1」的异读字；(2)「听ting3」的异读字\n听\tting1\t听信，听差，听讼，听从，听诊，听话，听闻，听觉，听而不闻\n听\tting3\t听任，听便，听凭，听之任之，听其自然\n肃\tsuk1\t严肃，肃立，肃穆，肃静，肃清\n肇\tsiu6\t肇事，肇始，肇祸，肇因，肇端，肇兴，肇建，肇基，肇造\n肆\tsei3\t「四」字的大写\n肆\tsi3\t肆虐，放肆，肆无忌惮，肆力，肆赦，肆暴，肆扰，酒肆，大肆搜掠\n聿\twat6\t聿皇(轻快迅捷)；(1)笔；(2)姓氏；(3)部首之一\n聿\tleot6\t「聿wat6」的异读字，口语读音\n聿\tjyut6\t「聿wat6」的异读字\n肄\tji6\t肄业\n肄\tsi3\t「肄ji6」的异读字\n肊\tjik1\t同「臆」字\n肌\tgei1\t肌肉，肌肤，肌肤之亲\n肉\tjuk6\t肉体，肉食，皮肉，肥肉，骨肉分离，肉眼，肌肉\n肓\tfong1\t病入膏肓\n肝\tgon1\t肝胆，心肝\n肛\tgong1\t肛门，肛道\n肜\tjung4\t祭名\n肙\tjyun1\t小虫\n肚\ttou5\t肚子，肚皮，肚兜\n肒\twun6\t手搔皮肉生成的疮\n肕\tjan6\t(1)坚肉；(2)同「韧」字\n肪\tfong1\t脂肪\n肩\tgin1\t肩负，肩膀，肩上，肩头，肩胛骨，肩胛，肩起\n股\tgu2\t股票，股价，股权，股份，八股\n肱\tgwang1\t肱骨，股肱，曲肱而枕\n肵\tkei4\t肵俎(古时祭祀时盛舌心的食具)\n肴\tngaau4\t肴馔，山肴野簌，美酒佳肴，溷肴(混淆)煮熟的鱼肉\n肢\tzi1\t肢体，四肢\n胈\tbat6\t腿毛\n胉\tbok3\t脊椎骨两旁的肋骨\n胣\tci2\t刳肠\n胛\tgaap3\t肩胛\n胍\tgwaa1\t有机化合物，制药用\n胤\tjan6\t胤嗣，祚胤，胤子；(1)世代相承继；(2)后嗣\n胠\tkeoi1\t胠箧\n胊\tkeoi4\t临胊(山东县名)\n胚\tpui1\t胚胎，胚芽\n胥\tseoi1\t胥吏，胥靡，里胥，奸胥猾吏\n胎\ttoi1\t胎儿，胎盘，胎记，胎生，胎气，胎位\n胃\twai6\t胃口，肠胃，胃溃疡，胃酸，胃镜\n胡\twu4\t胡乱，二胡，胡说，胡琴\n胄\tzau6\t胄裔，华胄，天潢贵胄，遐胄，簪缨世胄\n胑\tzi1\t同「肢」字\n胏\tzi2\t有骨之肉脯\n胙\tzou6\t胙肉，世胙，分茅胙土祭祀用的酒肉\n胦\tjoeng1\t脖胦\n胅\tdit6\t(1)骨肉突出；(2)臀部\n胘\tjin4\t(1)牛的重瓣胃；(2)胃\n脆\tceoi3\t脆弱，爽脆，清脆，干脆，松脆\n胴\tdung6\t胴体\n胱\tgwong1\t膀胱\n胻\thang4\t中医指小腿部\n胸\thung1\t胸襟，胸怀，胸有成竹，胸骨\n胰\tji4\t胰脏，胰液，胰岛素\n胹\tji4\t煮\n胭\tjin1\t胭脂\n胼\tpin4\t胼手胝足\n脂\tzi1\t脂肪，胭脂，民脂民膏，脂粉，树脂，皮脂腺，脱脂奶粉，搽脂抹粉\n脀\tzing1\t(1)把熟肉装进鼎俎；(2)\n脖\tbut6\t脖子，脖颈\n脞\tco2\t丛脞，诸务丛脞琐碎\n脰\tdau6\t脖子\n脝\thang1\t膨脝\n脬\tpaau1\t膀胱\n修\tsau1\t修金，束修\n唇\tseon4\t嘴唇\n脙\tjau1\t(1)瘦；(2)腹瘦\n脭\tcing4\t精美的肉\n脺\tceoi3\t脺脏(胰脏的别名)，脺液\n腓\tfei4\t腓骨\n腑\tfu2\t脏腑，六腑\n腔\thong1\t腔调，口腔，南腔北调\n腴\tjyu4\t腴润，丰腴，膏腴\n腇\tneoi5\t萎腇(软弱)\n脾\tpei4\t脾气，脾胃，脾脏\n脽\tseoi4\t臀部\n腆\ttin2\t丰腆，腆胸脯；(1)丰厚；(2)害羞；(3)不知羞耻；(4)凸出\n腕\twun2\t腕力，手腕，腕骨\n胀\tzoeng3\t膨胀，肿胀\n腏\tzyut3\t以酒酹地\n腷\tbik1\t腷膊，腷臆\n腠\tcau3\t腠理\n腄\tceoi4\t(1)茧疤；(2)马或鸟胫上的结骨；(3)臀部\n肠\tcoeng4\t肠胃，肠胃炎，肠胃病\n腶\tdyun3\t腶修(一种肉干)\n腹\tfuk1\t腹部，腹案，腹地，腹泻，腹痛，腹背受敌，腹腔，腹胀，腹膜炎，腹语，腹稿\n腰\tjiu1\t腰部，腰带，腰子，腰围\n腜\tmui4\t(1)妇女怀孕初的征兆；(2)美好\n腩\tnaam5\t牛腩\n脑\tnou5\t脑袋，头脑，脑满肠肥，脑海，脑浆，脑壳，脑门，脑力，脑筋，脑部，脑汁，脑髓，脑神经，脑震荡，脑溢血，脑充血，脑膜炎，樟脑，探头探脑\n腺\tsin3\t汗腺，腮腺\n腮\tsoi1\t腮红，腮腺炎，腮帮子\n腞\tsyun6\t画饰\n腲\twai2\t腲腇(舒缓的样子)\n肿\tzung2\t肿瘤，肿胀，肿大，肿起来\n膊\tbok3\t腷膊，臂膊，脉膊，褡膊，袒膊，褪膊，胳膊，赤膊\n腐\tfu6\t腐烂，腐败，腐蚀，腐朽，腐化，腐坏\n膈\tgaak3\t横膈膜\n膉\tjik1\t(1)颈肉；(2)豕伏槽；(3)肥胖\n膋\tliu4\t脂肪\n膍\tpei4\t膍胵\n膆\tsou3\t同「嗉」字\n腿\tteoi2\t腿力，大腿，盘腿\n腽\twat1\t腽肭(动物名)，腽肭兽，腽肭脐(中药，俗称海狗肾)\n膘\tbiu1\t同「臕」字\n膗\tceoi4\t方言用字，意谓肥胖而肌肉松\n肤\tfu1\t肤色，肤浅，皮肤，身无完肤，身体发肤\n胶\tgaau1\t胶合，橡胶，塑胶，胶柱调瑟\n腘\tgwok3\t膝部的后面\n膟\tleot6\t(1)古代祭祀用的牲血；(2)肠间的脂肪\n膝\tsat1\t膝盖，卑躬屈膝，促膝谈心，低头屈膝，膝行肘步，承欢膝下\n膛\ttong4\t胸膛，鎗膛，挺起胸膛\n膣\tzat6\t阴道\n䏝\tzyun1\t鸟类之胃、肫\n膬\tceoi3\t甘膬；(1)容易破碎；(2)同「脆」字\n膰\tfaan4\t宗庙祭祀所用的熟肉\n膮\thiu1\t猪肉羹\n膷\thoeng1\t牛肉羹\n膫\tliu4\t牛肠的脂肪\n膨\tpaang4\t膨胀\n膳\tsin6\t膳食，膳宿，晚膳，用膳\n膱\tzik1\t肉脯、干肉条\n膲\tziu1\t三膲\n臂\tbei3\t臂膀，臂章，臂助，交臂\n胆\tdaam2\t肝胆，胆量，胆识\n臌\tgu2\t水臌，气臌\n臆\tjik1\t臆测，胸臆\n膺\tjing1\t膺选，服膺，膺惩\n脍\tkui2\t脍炙人口\n脸\tlim5\t脸色，嘴脸，脸上无光\n脓\tnung4\t脓包，化脓，信口捏脓，脓肿，脓血\n臀\ttyun4\t臀部\n臅\tzuk1\t胸腔中的脂油\n膼\tzaa1\t(1)膇；(2)腿\n脐\tci4\t脐带，肚脐\n臐\tfan1\t羊羹\n臒\twu6\t肉之精者\n臕\tbiu1\t臕满，上臕肥肉或脂肪\n𣎑\tfun1\t同「髋」字\n臙\tjin1\t同「胭」字\n胪\tlou4\t胪列，胪陈，胪情，胪欢\n臞\tkeoi4\t消瘦\n脏\tzong6\t内脏，五脏六腑，心脏病\n臡\tnai4\t杂有骨的肉酱\n肖\tciu3\t肖像，生肖，唯肖唯妙，不肖，酷肖\n肖\tsiu1\t「萧」的简体字\n肺\tfai3\t心肺，肺腑\n肺\tpui3\t肺肺(茂盛的样子)\n肯\thang2\t肯定，中肯\n肯\thoi2\t肯綮\n肫\tseon4\t整体\n肫\tzeon1\t肫肫(诚恳)，鸡肫\n肣\thaam4\t(1)肥牛脯；(2)风箱柄；(3)同「函」字\n肣\tham5\t牛腹\n肣\tkam4\t足歛\n胞\tbaau1\t细胞，同胞\n胞\tpaau1\t同「脬」字\n背\tbui3\t背叛，违背，背道而驰，背景，背弃，背德，背离，背水一战，背城借一，背信弃义\n背\tbui6\t背诵，耳背，背书，背时，背运，背静\n胕\tfu1\t同「肤」字\n胕\tfu4\t胕肿\n胜\tsaang1\t胜键\n胗\tzan1\t胗肝\n胗\tzan2\t同「疹」字\n胇\tfai3\t同「肺」字\n胇\tfai6\t干\n胇\tbat6\t胇肸\n胵\tci1\t膍胵(反刍兽类或鸟类的胃)\n胵\tci3\t粤语用字\n能\tnang4\t能力，可能，能歌擅舞，能够，能源，才能，本能，功能，能屈能伸，能者多劳\n能\tnoi6\t同「耐」字\n能\ttoi4\t三能(星名)\n脁\tjiu4\t脁说(喜好)\n脁\ttiu3\t(1)迁徙宗庙的祭礼；(2)祭肉\n脱\tteoi3\t脱脱\n脱\ttyut3\t脱离，脱落，脱胎\n𣍰\tgaap3\t同「颊」字，「𣍰」是「颊」的俗字\n𣍰\thim2\t腹下\n𣍰\thip3\t(1)腋下；(2)与「胁」字相通，意谓收歛\n脧\tceoi1\t男孩的生殖器\n脧\tzyun1\t(1)削减、收缩；(2)剥削\n腊\tsik1\t腊肉，腊毒\n腃\twai3\t筋节屈伸\n腃\tkyun4\t嘴唇\n脚\tgoek3\t脚步，脚踏实地，脚印，脚镣，脚力，脚趾，脚夫\n脚\tgok3\t脚色(同角色)\n膀\tbong2\t肩膀，膀臂\n膀\tpong1\t鼓起，亦指臃肿、粗胖\n膀\tpong4\t膀胱\n膏\tgou1\t膏火，膏腴，膏泽，膏火自煎，膏梁子，牙膏，药膏，病入膏肓\n膏\tgou3\t膏笔，膏车\n膜\tmok6\t耳膜，肋膜，横膈膜\n膜\tmou4\t膜拜，奔走膜呗\n膴\tmou5\t膴仕，华膴\n膴\tfu1\t(1)大块鱼肉；(2)无骨的干肉\n膦\tleon4\t膦软(无力的样子)\n膦\tleon6\t一种有机化合物\n膧\tcong4\t膧腔(尻骨)\n膧\ttung4\t肥貌\n臃\tjung1\t同「痈」字\n臃\tjung2\t臃肿\n臊\tsou1\t腥臊，臊声，臊陀，臊根(男生殖器)\n臊\tsou3\t害臊，臊子\n肋\tlaak6\t「肋lak6」的异读字\n肋\tlak6\t肋骨，鸡肋，两肋插刀，肋膜，肋筋，左肋，右肋\n肐\tgaak3\t「肐gat1」的异读字\n肐\tgat1\t肐膊\n肐\tgok3\t「肐gat1」的异读字\n育\tjuk1\t「育juk6」的异读字\n育\tjuk6\t育乐，育成，育才，育婴，育幼，育种，育达，育儿\n肘\tzaau2\t「肘zau2」的异读字\n肘\tzau2\t肘窝，变生肘腋，捉襟见肘，肘行膝步，网球肘\n肏\tcaau3\t「肏cou3」的异读字\n肏\tcou3\t骂人的下流话\n肥\tfai6\t「肥fei4」的异读字\n肥\tfei4\t肥料，肥胖，肥皂，肥沃，肥腻，肥瘦，肥美\n肸\that1\t「肸jat6」的异读字\n肸\tjat6\t肸蚃；(1)散布弥漫；(2)人名用字\n肸\thit3\t「肸jat6」的异读字\n肭\tnat6\t「肭neot6」的异读字\n肭\tneot6\t腽肭，腽肭脐，腽肭兽\n胝\tdai1\t「胝zi1」的异读字\n胝\tzi1\t胝挛，胝肩茧足，胼手胝足\n胂\tsan1\t「胂san6」的异读字\n胂\tsan6\t一种有机化合物\n胐\tfat1\t(1)臀；(2)曲脚；(3)胯骨\n胐\tdeot1\t「胐fat1」的异读字\n胳\tgaak3\t胳肢，胳臂，胳䏝\n胳\tgok3\t「胳gaak3」的异读字\n胳\tlok3\t「胳gaak3」的异读字\n胁\thip3\t胁持，要胁，胁肩谄笑，胁逼，胁制，威胁，胁肩累足\n胁\thip6\t「胁hip3」的异读字\n胯\tkwaa1\t「胯kwaa3」的异读字\n胯\tkwaa3\t胯骨\n胯\tfu3\t「胯kwaa3」的异读字\n脉\tmaak6\t「脉mak6」的异读字\n脉\tmak6\t脉动，脉络，脉波，脉搏，脉冲，脉脉\n脊\tzek3\t「脊zik3」的异读字，口语读音\n脊\tzik3\t脊柱，背脊，脊梁，脊椎动物，屋脊，书脊\n脘\tgun2\t胃脘\n脘\twun2\t「脘gun2」的异读字\n脘\twun5\t「脘gun2」的异读字\n胫\tging3\t胫骨，不胫而走\n胫\thing5\t「胫ging3」的异读字\n脕\tmaan5\t「脕maan6」的异读字\n脕\tmaan6\t丰满艳美的样子\n脢\tmui4\t里脊肉\n脢\tmui6\t「脢mui4」的异读字\n脤\tsan5\t生肉\n脤\tsan6\t「脤san5」的异读字\n脡\tting2\t「脡ting5」的异读字\n脡\tting5\t干肉\n胔\tci1\t「胔zi3」的异读字\n胔\tzi3\t羸胔老弱，掩骼埋胔，遗胔带腐肉之残骨\n胔\tzi6\t「胔zi3」的异读字\n腒\tgeoi1\t干鸟肉\n腒\tkeoi4\t「腒geoi1」的异读字\n腋\tjat6\t「腋jik6」的异读字\n腋\tjik6\t腋下，腋臭，腋气，腋窝，集腋成裘\n腌\tjim1\t腌制，腌臜，腌咸菜\n腌\tjip3\t「腌jim1」的异读字，多用于盐浸食品\n肾\tsan5\t「肾san5」的异读字\n肾\tsan6\t肾脏，洗肾，雕肝琢肾，肾元，肾炎，肾亏，肾上腺，败肾，补肾\n胾\tzi1\t「胾zi3」的异读字\n胾\tzi3\t切成的大块肉\n腛\tak1\t丰厚的脂肪\n腛\tngak1\t「腛ak1」的异读字\n腤\tam1\t腤臜\n腤\tam3\t「腤am1」的异读字\n腤\tngam1\t「腤am1」的异读字\n腤\tngam3\t「腤am1」的异读字\n腯\tdat1\t肥腯\n腯\tdat6\t「腯dat1」的异读字\n腯\tteon5\t「腯dat1」的异读字\n腱\tgin1\t「腱gin3」的异读字\n腱\tgin3\t筋腱，肌腱\n腱\tgin6\t「腱gin3」的异读字\n脶\tgwaa1\t「脶lo4」的异读字\n脶\tlo4\t手指纹\n腢\tngau5\t肩头\n腢\tjyu4\t「腢ngau5」的异读字\n腧\tsyu3\t俞穴\n腧\tsyu6\t「腧syu3」的异读字\n膇\tdeoi3\t「膇zeoi6」的异读字\n膇\tzeoi6\t脚肿\n膂\tleoi3\t「膂leoi5」的异读字\n膂\tleoi5\t膂力\n膌\tzek3\t「膌zik6」的异读字\n膌\tzik6\t同「瘠」字\n膙\tkoeng5\t手脚因摩擦而生硬皮\n膙\tzoeng2\t「膙koeng5」的异读字\n𦝼\tlau4\t古代祭名\n𦝼\tleoi4\t「𦝼lau4」的异读字\n腻\tnau6\t「腻nei6」的异读字\n腻\tnei6\t腻烦，油腻，肥腻，腻虫，腻壤，滑腻\n膵\tceoi3\t「膵seoi6」的异读字\n膵\tseoi6\t脺脏，脺液\n臄\tkek6\t「臄koek6」的异读字\n臄\tkoek6\t(1)舌；(2)口内上颚弯曲的地方\n臇\tzeon3\t「臇zyun2」的异读字\n臇\tzyun2\t(1)汁少的羹；(2)作成少汁羹\n𪱥\tfan5\t(1)肉羹；(2)切熟肉；(3)粗切生肉\n𪱥\tfei2\t「𪱥fan5」的异读字\n膑\tban3\t膑足，举鼎绝膑\n膑\tpan5\t「膑ban3」的异读字\n腊\tlaap6\t腊月，腊八，腊日，腊肉，腊味，腊梅，腊鼓，腊鸭，腊八粥，年腊，戒腊；(1)阴历十二月；(2)岁终的祭祀；(3)腌制的肉类；(4)僧受戒得度的年岁\n腊\tlip6\t「腊laap6」的异读字\n臛\tfok3\t肉羹\n臛\thuk1\t「臛fok3」的异读字\n臝\tlo2\t果臝(葫芦科王瓜属)\n臝\tlo5\t「臝lo2」的异读字\n臜\tzaam1\t「臜zim1」的异读字\n臜\tzaan3\t「臜zim1」的异读字\n臜\tzim1\t腌臜\n臜\tzim3\t「臜zim1」的异读字\n脔\tlyun4\t「脔lyun5」的异读字\n脔\tlyun5\t脔割，尝鼎一脔\n肮\tong1\t「肮」的简化字\n肮\tgong1\t「肮hong4」的异读字\n肮\thong4\t咽喉\n胖\tbun6\t胖子，胖袄，肥胖\n胖\tpun3\t「胖bun6」的异读字\n胖\tpun4\t心广体胖\n胲\thaai5\t「胲hoi2」的异读字\n胲\tgoi1\t(1)脚的大趾；(2)指牲畜的蹄\n胲\tgoi2\t脸颊\n胲\thoi2\t一种有机化合物之统称\n胺\taat3\t胺味，胺臭\n胺\tngaat3\t「胺aat3」的异读字\n胺\ton1\t化合物名称\n胺\ton3\t「胺on1」的异读字\n胺\tngon1\t「胺on1」的异读字\n脯\tpou2\t胸脯一说为「脯fu2」的异读字\n脯\tpou4\t「脯pou2」的异读字\n脯\tfu2\t杏脯，鹿脯，脯醢\n脟\tlyun5\t同「脔」字\n脟\tlyut3\t「脟lyut6」的异读字\n脟\tlyut6\t(1)肋骨部分的肌肉；(2)肠子上的脂肪\n腍\tjam6\t煮熟\n腍\tnam4\t口语用字，意指柔软\n腍\tnam5\t「腍jam6」的异读字\n腥\tseng1\t「腥sing1」的异读字\n腥\tseng3\t「腥sing3」的异读字\n腥\tsing1\t荤腥，腥膻，腥风血雨，血腥，鱼腥，腥味，腥闻，腥德，腥臊\n腥\tsing3\t热腥\n膻\tdaan6\t膻中(前胸正中重要穴位)\n膻\tsaan1\t「膻zin1」的异读字\n膻\tsin1\t「膻zin1」的异读字\n膻\tzin1\t附膻逐臭\n臑\tnaau6\t「臑nou6」的异读字\n臑\tji4\t通「胹」字\n臑\tnou6\t人的上肢或动物的前肢\n臑\tjyu4\t(1)肱骨；(2)嫩软的样子\n臣\tsan4\t臣服，君臣，俯首称臣，臣民，功臣，奸臣，弄臣，忠臣义士，孤臣孽子，乱臣贼子；(1)俘虏、奴隶；(2)君主的下属；(3)古人对君主的自称\n卧\tngo6\t卧室，躺卧，卧薪尝胆，卧姿，卧床，卧铺，卧榻，卧游，卧底，醉卧，仰卧，横卧，卧虎藏龙，卧病在床，坐卧不安\n臦\tgwing2\t同「囧」或「冏」字，用于人名\n臦\tgwong3\t相违背\n臧\tcong4\t通「藏」字\n臧\tzong1\t臧否，臧获，臧谷亡羊\n臧\tzong6\t通「藏」字\n临\tlam4\t临摹，莅临，临危受命，临床，临时，临终，临别，临歧，临界点，来临，濒临，面临，临阵脱逃，临渊羡鱼，临渴掘井，临风顾盼，大祸临头\n临\tlam6\t哭吊死者\n臩\tgwing2\t同「冏」字，人名用字\n臩\tgwong3\t惊跑\n自\tzi6\t自己，自然，毛遂自荐，自由，自动，自觉，悲不自胜，闭关自守，不打自招，不能自拔，不怒自威，不攻自破，不自量力，反躬自省，抚心自问，谈笑自若，喃喃自语\n臭\tcau3\t臭味，臭气，臭气冲天，臭味相投\n臲\tjit6\t臲卼(动摇不安貌)，臲卼跋踬《周易•困•上六》：「困于葛藟，于臲卼。」\n臬\tnip6\t「臬jit6」的异读字\n臬\tjit6\t臬兀，圭臬，奉为圭臬\n臮\tgei6\t同「暨」字\n臮\tkei3\t「臮gei6」的异读字\n至\tzi3\t至亲，夏至，宾至如归，至于，至今，至尊，至少，至善，至高，至诚，至理名言，至死不渝，兴之所至，后发先至\n致\tzi3\t致词，别致，推心致腹，致意，致敬，致谢，致歉，致力，致病，致癌，致命，罗致，标致，导致，淋漓尽致，格物致知，和气致祥，毫无二致，经世致用\n臷\tdit6\t臷国(神话传说中的国家)\n臹\tsau1\t(1)习也；(2)进也\n台\ttoi4\t台阶，楼台\n臻\tzeon1\t日臻完善\n臸\tzeon3\t前往\n臸\tzi1\t(1)到达；(2)如一\n臼\tkau5\t臼齿，臼窠，不落窠臼\n臿\tcaap3\t掘土之具\n舁\tjyu4\t舁轿，舁棺，舁疾(带病)，肩舁抬\n舀\tjiu5\t舀子，舀水\n舂\tzung1\t舂米\n舄\tsik1\t舄履，凤舄，革舄，履舄(信中对方之敬称，同'足下')；(1)姓氏；(2)加木底的鞋；(3)同「潟」字\n舅\tkau5\t舅父，舅母，大舅，外舅\n举\tgeoi2\t举动，举止，举办，举世，举荐，举债，举棋不定，举足轻重，举手之劳，举目无亲，举步维艰，举手投足，举一反三，科举\n旧\tgau6\t旧式，旧事，旧时\n臾\tjung5\t怂臾(怂恿)\n臾\tjyu4\t须臾，颛臾(古同须臾)，瓯臾(低洼不平的地面)\n与\tjyu4\t同「欤」字\n与\tjyu5\t与其，施与，与日俱增，与人方便，与世无争，与虎谋皮，与别不同\n与\tjyu6\t与闻，参与，与会\n兴\tjan6\t同「衅」字\n兴\thing1\t兴亡，兴旺，兴衰，兴讼，兴盛，兴隆，兴奋，兴利除弊，兴风作浪，兴师动众，兴灭继绝，时兴，振兴\n兴\thing3\t兴味，兴会，兴头，兴趣，兴致勃勃，兴高彩烈，高兴，扫兴\n舋\tjan3\t同「衅」字\n舋\tjan6\t「舋jan3」的异读字\n舋\tman6\t罅坼\n舒\tsyu1\t舒适，舒服，舒筋活骼，舒畅，舒缓，舒坦，舒展，舒张\n舕\ttaam3\t舔舕\n舔\ttim2\t用舌头触物\n舑\ttaan1\t舑舕(吐舌貌)\n舑\ttim3\t舔\n舖\tpou1\t同「铺」字，用于「床舖」等词\n舖\tpou3\t同「铺」字，用于「店舖」等词\n舌\tsit3\t「舌sit6」的异读字\n舌\tsit6\t舌尖，舌苔，舌头，舌耕，舌战，舌剑唇枪\n舐\tlaai2\t「舐saai5」的异读字\n舐\tsaai2\t「舐saai5」的异读字\n舐\tsaai5\t舐犊，舐犊情深\n舐\tlem2\t「舐saai5」的异读字\n舐\tsi6\t「舐saai5」的异读字\n舐\tlim2\t「舐saai5」的异读字\n舍\tse3\t舍下，舍利子，校舍，宿舍\n舍\tse5\t「舍se3」的异读字\n舛\tcyun2\t舛错，舛驳，舛逆，舛驰，舛误，舛讹，乖舛，命途多舛；(1)不齐；(2)差错；(3)不顺利\n舜\tseon3\t尧舜，禹行舜趋\n舝\that6\t同「辖」字\n舞\tmou5\t舞蹈，歌舞，舞文弄墨，舞弊，舞狮，舞剑\n舟\tzau1\t舟山，舟山群岛，舟车\n舠\tdou1\t外形像刀一样的小船\n舢\tsaan1\t舢舨，舢板\n舨\tbaan2\t舢舨\n舫\tfong2\t舫舟，画舫，游舫\n航\thong4\t航行，启航，航天科技，航运，航空，航线，航道，航程，航海，航向，航空母舰，宇航\n舯\tzung1\t舯拱，舯垂\n舥\tpaa1\t浮桥\n舺\tgaap3\t船\n舷\tjin4\t船、飞机等的两侧\n船\tsyun4\t船员，船只，船长，船舶，船务，船队，船舰，船运，船舱，船坞\n舴\tzaak3\t舴艋，舴艋舟小船\n舳\tzuk6\t舳舻\n舿\tkwaa3\t「胯」的异体字\n艅\tjyu4\t艅艎\n艉\tmei5\t船工程上指船体的尾部\n艄\tsaau1\t艄公\n艀\tfau4\t小船\n艂\tfung4\t艂舡(船只)\n艋\tmaang5\t舴艋舟，艋舺\n艓\tdip6\t小船\n艏\tsau2\t艗艏(船头)\n艎\twong4\t艎板，艅艎\n艒\tmuk6\t小船\n艖\tcaa1\t小船\n舱\tcong1\t舱房，舱底，船舱，货舱\n艗\tjik6\t艗艏\n艚\tcou4\t漕运所用的船，又泛指船\n艛\tlau4\t艛船\n艜\tdaai3\t长而浅的小船\n艞\ttiu3\t艞板\n艡\tdong1\t舟\n艣\tlou5\t摇艣\n舣\tngai5\t舣舟，舣船停船靠岸\n舰\tlaam6\t舰艇，舰队，舰只，战舰\n艨\tmung4\t艨艟\n艩\tcai4\t艣艩\n舻\tlou4\t舳舻\n艬\tcaam4\t船\n艭\tsoeng1\t船只\n舲\tlang1\t粤语用字\n舲\tling4\t有窗的小船\n舼\thung4\t船只\n舼\tkung4\t一种小船\n舽\tpong4\t吴船名\n舽\tfung4\t船名\n艐\tgaai3\t至，到\n艐\tzung1\t三艐船搁浅\n舡\tgong1\t舡舽，舡鱼\n舡\tsyun4\t「舡gong1」的异读字\n舶\tbaak3\t「舶bok6」的异读字\n舶\tbaak6\t「舶bok6」的异读字\n舶\tpaak3\t「舶bok6」的异读字\n舶\tbok6\t舶位，舶来品，船舶\n舸\tgo2\t大船\n舸\tho2\t「舸go2」的异读字\n舵\ttaai5\t「舵to4」的异读字\n舵\tto4\t舵手，掌舵\n舵\tto5\t「舵to4」的异读字\n艇\tteng3\t「艇ting5」的异读字\n艇\tteng5\t「艇ting5」的异读字\n艇\tting5\t快艇，游艇，潜艇\n艑\tbin1\t驳船\n艑\tbin6\t「艑bin1」的异读字\n艘\tsau1\t「艘sau2」的异读字\n艘\tsau2\t量词，用于船只\n艕\tbong3\t两船相联\n艕\tbong6\t「艕bong3」的异读字\n艕\tpong3\t「艕bong3」的异读字\n艟\tcung1\t「艟tung4」的异读字\n艟\ttung4\t艨艟\n般\tbo1\t般若\n般\tbun1\t一般，百般，千般，万般，如此这般\n般\tpun4\t般乐，般游，般桓\n般\tbut3\t「般bo1」的异读字\n良\tloeng4\t良好，良心，良知，良策，良辰\n艰\tgaan1\t艰苦，时艰，举步维艰，艰辛，艰难，艰巨，艰涩，艰深，艰贞，艰虞，艰苦卓绝\n艮\tgan3\t艮卦，儒艮(动物名)，艮苦冰凉\n艮\tngan4\t「艮gan3」的异读字\n色\tsik1\t颜色，喜色，色彩，色泽，色调，色素\n艵\tping1\t(1)丝织物的青白色；(2)同「頩」字\n艳\tjim6\t艳丽，艳阳，艳舞，艳羡，艳福，艳阳天，艳事，艳福不浅，艳色\n艴\tfat1\t艴然\n艴\tbut6\t「艴fat1」的异读字\n艼\tding2\t艼荧(草名)\n艾\tngaai6\t艾草，少艾，艾蒿，方兴未艾，自怨自艾\n芊\tcin1\t芊绵，芊萰，芊芊\n芑\thei2\t植物名。《诗经˙小雅˙采芑》：「薄言采芑，于彼新田。」\n芅\tjik6\t铫芅(杨桃的别名)\n芄\tjyun4\t芄兰\n芃\tpung4\t芃芃(形容植物茂盛)\n芭\tbaa1\t芭蕉，芭蕾舞\n芬\tfan1\t芬兰，芬园，芬芳\n芣\tfau4\t芣苜，芣苡(中药车前的别名)\n芳\tfong1\t芳草，芬芳，流芳百世，芳苑，芳邻，芳名，芳香，芳心，芳龄，芳讯，芳华，芳踪，芳魂，芳名录\n芙\tfu4\t芙蓉，芙蕖\n芥\tgaai3\t芥蒂，芥菜，草芥\n芶\tgau2\t姓氏\n芰\tgei6\t菱\n芡\thim3\t烹饪之浓汁\n芮\tjeoi6\t芮芮，蕞芮，芮鞫；(1)姓氏；(2)古国名；(3)草初生貌；(4)水边\n芹\tkan4\t芹菜，芹藻，水芹，曹雪芹(清代名小说家，《红楼梦》的作者)，野人献芹\n芤\tkau1\t(1)葱的别名；(2)中医脉象之一，指脉搏浮大而软，按之如葱管，常见于大失血后\n芵\tkyut3\t芵明(草名)\n芽\tngaa4\t萌芽，发芽\n芸\twan4\t芸芸众生，芸香\n芝\tzi1\t芝麻，灵芝，芝兰之室，芝颜，芝麻官\n芷\tzi2\t白芷，兰根白芷，兰芷渐滫，兰芷萧艾\n苞\tbaau1\t花苞，苞苴(包裹、餽赠、喻贿赂)，苞苴流行(喻贿赂公行)，苞桑(桑树的根，喻根深蒂固)；(1)包著花蒂的小叶片；(2)把东西包起来，通「包」；(3)席草\n苯\tbun2\t有机化合物\n茌\tci4\t茌平县(地名)\n茺\tcung1\t茺蔚\n苎\tcyu5\t苎麻，麻苎\n苵\tdit6\t草名\n范\tfaan6\t姓氏\n苦\tfu2\t苦心，苦恼，苦水，苦头，苦瓜，苦难\n苻\tfu4\t(1)同「莩」字；(2)姓氏\n苣\tgeoi6\t莴苣\n苡\tji5\t薏苡(草名)，芣苡(草名)，薏苡明珠，薏苡之谤薏苡俗称薏米\n苒\tjim5\t荏苒\n英\tjing1\t精英，英文，英雄，英语，英明，英勇，英俊，英姿\n苑\tjyun2\t苑囿，禁苑\n苓\tling4\t茯苓\n茅\tmaau4\t茅屋，茅草，初出茅庐\n苠\tman4\t庄稼生长期较晚、成熟期较晚者\n茂\tmau6\t茂盛，茂林，茂密，茂竹\n苗\tmiu4\t苗栗，苗头，苗圃，苗族，苗条，苗人，苗疆\n苺\tmui4\t同「莓」字\n苜\tmuk6\t苜蓿(草名)\n茉\tmut6\t茉莉，茉莉花\n苶\tnip6\t疲倦\n苤\tpei2\t苤蓝(蔬菜名)\n苹\tping4\t(1)同「萍」字；(2)藾萧，即艾蒿\n茶\tcaa4\t茶叶，茶水，茶点，茶花，茶楼，凉茶\n茦\tcaak3\t草的芒刺\n茨\tci4\t茨菰，茨藻，茅茨\n荎\tci4\t荎藸(五味子的别名)\n刍\tco1\t刍议，反刍，刍狗\n草\tcou2\t草案，草率，草拟，草丛，草原，草草，草创，草菅人命，草木皆兵，本草\n荈\tcyun2\t茶\n荃\tcyun4\t荃宰，荃葛，荃蹄一种香草\n荒\tfong1\t荒野，开荒，不荒不忙，荒凉，荒废，荒唐，荒谬，蛮荒，饥荒，破天荒，天荒地老，荒山野岭，兵荒马乱，落荒而逃，荒诞不经\n茯\tfuk6\t茯苓，茯神\n茖\tgaak3\t茖葱\n茭\tgaau1\t茭白，玉茭\n茛\tgan3\t毛茛(草名)\n荆\tging1\t荆棘，负荆请罪\n荄\tgoi1\t草根\n茳\tgong1\t茳芏\n荇\thang6\t荇菜\n茩\thau6\t薢茩(植物名)\n茵\tjan1\t绿茵，茵褥，绿草如茵\n茙\tjung4\t茙葵，茙菽\n荍\tkiu4\t锦葵\n荔\tlai6\t荔枝\n茢\tlit6\t苕帚\n荖\tlou5\t蒌藤\n茫\tmong4\t茫昧，渺茫，茫然若失，人海茫茫，茫无头绪\n荓\tping4\t(1)植物名；(2)使役\n荀\tseon1\t姓氏\n茼\ttung4\t茼蒿\n茴\twui4\t茴香\n荁\twun4\t一种多年生草本植物\n苃\tjau5\t草名\n芞\that1\t芞舆(香草名称，又名揭车)\n芢\tjan4\t薏芢草名\n芠\tman4\t芠草(草名)，芒芠(未有天地、混沌一片)\n苂\tjam4\t明也\n芛\tjyut6\t初生的草木花\n莣\tmong4\t据古书记载，一种像茅的草\n荸\tbut6\t荸荠\n莝\tco3\t莝草\n荳\tdau6\t荳蔻年华\n荻\tdik6\t芦荻\n荴\tfu1\t散布\n荚\tgaap3\t豆荚，蓂荚，荚果\n堇\tgan2\t通「仅」字，意指数量不多\n莒\tgeoi2\t莒刀，毋忘在莒\n莰\tham2\t有机化合物\n莕\thang6\t同「荇」字\n荵\tjan2\t隐荵(草名，日本人用作菜)\n莠\tjau5\t莠民，良莠不齐\n莚\tjin4\t蔓莚(牵缠)\n苋\tjin6\t苋菜\n莉\tlei6\t莉莉\n莓\tmui4\t草莓\n莪\tngo4\t莪蒿，菁莪，莪术\n莦\tsaau1\t恶草貌\n莘\tsan1\t莘庄(地名)，莘莘\n荽\tseoi1\t胡荽，芫荽\n荾\tseoi1\t(1)同「荽」字；(2)同「葰」字；(3)花蕊\n莛\tting4\t麦莛儿\n莌\ttyut3\t活莌(即通脱木，通草)\n荺\twan5\t草根\n莋\tzok6\t莋都(古地名)\n庄\tzong1\t庄重，庄稼，庄严，庄敬自强，庄园，茶庄，康庄大道\n苪\tbing2\t(1)显著；(2)草名\n苬\tcau4\t木灵芝的别名\n茍\tgik1\t自急敕(谨慎恭敬)\n苳\tdung1\t草名\n苰\twang4\t藤苰(胡麻的别名)\n苭\tjiu2\t形容草长\n菝\tbat6\t菝葀(古代一种象征祥瑞的草)\n萆\tbei1\t萆麻，萆薢\n菠\tbo1\t菠菜，菠萝\n菢\tbou6\t菢窝\n菶\tbung2\t菶菶(草木茂盛貌。见《诗经˙大雅》)\n萋\tcai1\t萋迷，萋萋，萋斐贝锦，萋萋绰绰\n莿\tci3\t草木的刺\n菨\tcip3\t水草\n菖\tcoeng1\t菖蒲，菖兰\n苌\tcoeng4\t苌楚\n菜\tcoi3\t菜刀，菜色，菜肴，菜园，菜单，菜圃，菜豆，菜瓜，菜鸭，菜场，菜种，菜馆，菜花，菜篮，菜肴，菜蔬，菜根，菜油，菜畦，菜蓝\n萏\tdaam6\t菡萏(荷花)\n菂\tdik1\t莲子\n菪\tdong6\t莨菪\n菅\tgaan1\t草菅人命\n菫\tgan2\t菫菜，菫色\n菺\tgin1\t蜀葵\n菇\tgu1\t冬菇，蘑菇\n菰\tgu1\t(1)一种多年生草本植物；(2)同「菇」字\n菊\tguk1\t菊花，菊老荷枯\n菤\tgyun2\t菤耳(菊科植物之一)\n烟\tjin1\t烟叶，烟草，烟酒，烟丝\n萸\tjyu4\t茱萸\n菎\tkwan1\t(1)草名；(2)玉石\n菻\tlam4\t蒿类植物的总称\n菕\tleon4\t化合物C6H6\n菱\tling4\t菱形，菱角\n莱\tloi4\t莱菔\n菉\tluk6\t草名，即荩草\n萌\tmang4\t萌生，萌芽，萌起，萌发\n菋\tmei6\t五味子\n菵\tmong5\t菵草(一年生草本，可作饲料)\n萍\tping4\t萍水相逢，浮萍\n菩\tpou4\t菩萨，菩提，菩萨心肠，菩提树\n萃\tseoi6\t会萃，出类拔萃，人文荟萃\n菥\tsik1\t菥蓂\n菘\tsung1\t白菜\n菾\ttim4\t菾菜\n萄\ttou4\t葡萄\n萑\twun4\t萑苇(荻类植物)，萑苻不靖(治安恶劣)，萑蔰(形容色彩绚丽)\n菹\tzeoi1\t菹醢(古酷刑，把人剁成肉酱)；(1)水草丛生的沼泽地带；(2)腌菜；(3)切碎菜或肉\n茿\tzuk1\t萹茿(植物名称，又名扁竹)\n荋\tji4\t形容草多叶\n茪\tgwong1\t草名用字\n荌\ton3\t草名\n蒆\thoe1\t姓氏\n蒏\twing6\t同「醟」字\n葆\tbou2\t葆葆，葆光，葆真，蓬葆，羽葆，葆诈隐藏\n葧\tbut6\t葧荠，蒡葧\n葺\tcap1\t葺袭，葺屋，补葺，修葺，完葺，增葺；(1)修补；(2)累积\n萩\tcau1\t一种蒿类草名\n菙\tceoi4\t古代用来灼龟占卜的荆条\n葖\tdat6\t蓇葖植物名。即萝卜。\n董\tdung2\t董理，古董\n荤\tfan1\t荤腥，荤食，荤菜\n葍\tfuk1\t草名\n葭\tgaa1\t葭莩，蒹葭\n葌\tgaan1\t(1)菅茅；(2)同「蕑」字\n葛\tgot3\t葛藤，杯葛，瓜葛，胶葛，纠葛\n荭\thung4\t荭草\n萱\thyun1\t萱草，萱堂，椿萱(喻父母)，椿萱并茂(喻父母均健在)植物名，喻母亲\n萲\thyun1\t同「萱」字\n葇\tjau4\t香葇\n葽\tjiu1\t葽绕，葽草\n葵\tkwai4\t葵花，葵扇\n葎\tleot6\t葎草\n葞\tmei5\t植物名，即白薇\n萼\tngok6\t花萼，萼片\n蒎\tpaai3\t一种有机化合物\n葡\tpou4\t葡萄，葡萄酒，葡萄园，葡萄糖\n葐\tpun6\t蒛葐\n葸\tsaai2\t思葸不前\n葠\tsam1\t同「参」字，意指人参\n葹\tsi1\t植物名\n葙\tsoeng1\t中药名\n葶\tting4\t葶苈\n葳\twai1\t形容枝叶繁盛\n苇\twai5\t芦苇\n莴\two1\t莴苣\n葫\twu4\t葫芦\n荝\tzak1\t药名\n葴\tzam1\t植物名\n葅\tzeoi1\t同「菹」字\n葥\tzin3\t草名\n葬\tzong3\t殡葬，葬送，火葬，土葬\n葄\tzou6\t葄枕(形容人很勤学)，葄枕图史，枕经葄史\n荿\tsing4\t(1)草名；(2)织布的竹梭\n莁\tmou4\t莁荑(大果榆的别名，也写作芜荑)\n莍\tkau4\t果实外皮密生疣状突起的腺体\n莗\tce1\t莗葥(车前草的别名)\n莇\tzo6\t(1)枸杞的别名；(2)商代一种劳役租赋制度\n莮\tnaam4\t萓莮(萱草的别名)\n荶\tjam4\t一种似蒜的菜\n莔\tmaang4\t贝母的别名\n莃\thei1\t植物名，又称野葵\n莥\tnau5\t鹿豆的别称\n莯\tmuk6\t草名\n莈\tmut6\t药草名\n莐\tcam4\t莐藩(药草名，又称知母)\n蓌\tco3\t(1)跪而不至地；(2)挫\n蓄\tcuk1\t蓄意，蓄势待发，积蓄，储蓄\n蒧\tdim2\t同「点」字，用于人名\n蒶\tfan4\t蒶蕴(蕴积)\n蒟\tgeoi2\t蒟蒻，蒟酱\n蒹\tgim1\t蒹葭\n蓇\tgwat1\t蓇葖\n蒿\thou1\t蒿目(极目远望)，蒿莱(荒野、衰竭)，茼蒿\n蒻\tjoek6\t蒟蒻，蒻蒲\n蓐\tjuk6\t坐蓐，床蓐\n蓊\tjung2\t蓊郁，蓊茸，蓊郁，蓊勃\n蓉\tjung4\t芙蓉，苁蓉\n蒛\tkyut3\t蒛葐\n莅\tlei6\t莅临，莅任，莅莅；(1)到来；(2)象声词，象水流声\n蒙\tmung4\t蒙羞，蒙蔽，蒙混，蒙骗，蒙尘，蒙昧无知\n蒪\tpok3\t蒪苴(多年生草本，花穗和嫩芽可作佐料，根入药)\n蒱\tpou4\t蒱戏，摴蒱\n蓍\tsi1\t蓍草，蓍簪不忘\n蒠\tsik1\t蒠菜\n蓑\tso1\t蓑衣，蓑笠\n蒴\tsok3\t蒴果\n荪\tsyun1\t兰荪(香草，喻具美德的贤士)一种香草\n蒜\tsyun3\t大蒜，蒜头，蒜泥，蒜苗，蒜瓣\n蒸\tzing1\t蒸发，水蒸汽，蒸蒸日上，蒸馏，蒸笼，蒸饺，蒸热，蒸汽机，蒸汽熨斗，骨蒸，清蒸\n菃\tkeoi4\t人名用字\n菗\tcau4\t菗蒢(草名，又称地榆)\n菈\tlaap6\t草名用字\n菄\tdung1\t菄风(菜名，又称东风菜)\n萛\tgau1\t长草互相纠缠\n菞\tlai4\t(1)同「黎」字；(2)同「莉」字；(3)姓氏\n菧\tdai2\t菧苨(杏叶菜的别名，又作荠苨)\n菮\tgang1\t草名\n萓\tji4\t萓莮(萱草的别名，又写作宜男)\n菛\tmun4\t菛冬(药草名，又称门冬)\n萣\tding6\t茄萣(地名，在台湾)\n菣\tkin3\t青蒿的别名\n卜\tbaak6\t萝卜，胡萝卜，花心萝卜\n蔽\tbai3\t遮蔽，掩蔽\n荜\tbat1\t荜门，荜路蓝缕，蓬荜，蓬荜生辉荆竹树枝等物编成的篱笆\n蔈\tbiu1\t(1)开黄花的凌霄花；(2)白茅的花穗；(3)浮萍；(4)末尾\n蔀\tbou6\t蔀法，蔀首，蔀屋\n𫈟\tcan4\t茵𫈟\n蔎\tcit3\t(1)香草名；(2)茶的别名\n葱\tcung1\t葱岭，葱蒜，葱绿，青葱，葱葱郁郁\n苁\tcung1\t苁蓉，茏苁\n蔉\tgwan2\t以土培育苗根\n蓲\tjau1\t乌蓲(初生的芦苇)\n蔫\tjin1\t蔫溜溜，蔫不悄声，气索神蔫，蔫头耷耳；(1)精神不振；(2)物不新鲜\n蔻\tkau3\t蔻丹，荳蔻，荳蔻年华，肉豆蔻\n莲\tlin4\t莲花，莲池，莲座，金莲，莲蓬\n蔆\tling4\t同「菱」字\n蓾\tlou5\t草名，可用以制履\n蔤\tmat6\t荷花的茎部\n蔑\tmit6\t蔑视，轻蔑\n蓺\tngai6\t种植\n茑\tniu5\t茑萝\n蓰\tsaai2\t(1)草名；(2)物数之五倍\n蔱\tsaat3\t蔱蘠(植物名)\n莼\tseon4\t莼菜\n蔬\tso1\t蔬菜，蔬果\n蔏\tsoeng1\t蔏蒌，蔏藋\n蓿\tsuk1\t苜蓿\n蓷\tteoi1\t草名，又名夏枯草\n蓪\ttung1\t蓪草(药名，中有小孔通气)\n蔗\tze3\t蔗园，蔗糖，甘蔗，竹蔗\n蓫\tzuk6\t草名\n蔠\tzung1\t蔠葵\n蔪\tsaam1\t同「芟」字\n蔂\tleoi4\t(1)古人用来盛土的一种竹器，底深而有盖；(2)一种登山用具\n蓱\tping4\t蓱翳(古代神话传说中的雨神)\n萶\tceon2\t(1)杂也；(2)草名\n葀\tkut3\t菝葀(即薄荷草)\n萰\tlin6\t白蔹的别称\n葨\twui1\t草名\n萫\thoeng3\t芼羹，即用杂肉与菜煮成的羹\n葮\tdyun6\t同「椴」字\n葟\twong4\t(1)草木开花；(2)形容花开的美态；(3)草木茂盛\n葔\thau4\t薃葔(即莎草)\n葋\tkeoi4\t草名\n葾\tjyun1\t萎葾(萎败、枯死)\n萻\tam1\t野草\n蕱\tsaau2\t恶草\n葂\tmaan5\t人名用字\n荡\tdong6\t荡妇，放荡，荡然无存，荡漾，荡船，荡寇，游荡，荡气回肠\n蕫\tdung2\t薡蕫\n蕡\tfan4\t草木果实很多的样子\n蕧\tfuk6\t(1)旋覆花；(2)覆盆子；(3)竹开花\n蕑\tgaan1\t兰草的一种\n蒉\tgwai6\t盛土之草包\n莸\tjau4\t薰莸同器\n荛\tjiu4\t荛花，刍荛\n蕍\tjyu4\t药草名；即泽泻科泽潟属多年生草本；根茎可为利尿剂。\n蕠\tjyu4\t蕠藘(一种草)黏著也(见《集韵》）\n蕖\tkeoi4\t芺蕖\n荞\tkiu4\t荞麦，荞面\n蕨\tkyut3\t一种多年生草本植物\n蔾\tlai4\t蒺蔾\n芜\tmou4\t芜杂，荒芜，芜湖\n蕅\tngau5\t同「藕」字\n蕣\tseon3\t植物名，即木槿\n蕮\tsik1\t草药名称。可分别指马蕮（即车前）或泽蕮（即蕍）\n萧\tsiu1\t萧条，萧瑟，萧然，祸起萧墙\n蕛\ttai4\t一种似稗的草\n蕙\twai6\t蕙质兰心\n芸\twan4\t芸薹\n蕉\tziu1\t蕉农，芭蕉，蕉园，香蕉\n𫈵\tzyut3\t𫈵茅\n蒢\tceoi4\t黄蒢(茄科植物之一)，菗蒢(即地榆)\n蓒\thin1\t蓒于(莸草的别称)\n蓗\tzung2\t草细密\n蒑\tjan1\t(1)菜名；(2)形容草色青青\n蒰\tpun4\t(1)草名；(2)形容草木盘结的样子\n蓎\ttong4\t蓎蒙(菟丝)\n蒤\ttou4\t(1)虎杖草，又称花斑竹根；(2)杂草\n蓅\tlau4\t菜名\n蒮\tjuk6\t野生于山中的韭菜\n蒬\tjyun1\t棘蒬(草药名，又名远志)\n蕦\tseoi1\t蓼科植物，又称薞芜\n蕬\tsi1\t菟蕬(草名，即菟丝)\n蓛\tcaak3\t(1)用谷杂草料喂马；(2)小言貌\n薄\tbok6\t薄弱，单薄，味薄，鄙薄，轻薄\n薋\tci4\t多草聚积的样子\n荙\tdaat6\t车前草\n薡\tding2\t薡蕫\n薠\tfaan4\t一种似莎而大的草\n蓟\tgai3\t蓟马，大蓟\n姜\tgoeng1\t姜饼，姜汁\n薨\tgwang1\t诸侯或大官之死\n蕸\thaa4\t荷叶\n薤\thaai6\t薤露(古时送葬的歌曲，叹生命短暂如薤露)，拔薤(喻铲除恶人)一种多年生草本植物\n薅\thou1\t薅锄\n薃\thou6\t薃侯(莎草的别名)\n薏\tji3\t薏苡，薏米(薏苡仁)\n薁\tjuk1\t蘡薁\n蓣\tjyu6\t薯蓣\n薐\tling4\t菠薐菜\n蕗\tlou6\t蕗蕨\n薇\tmei4\t蔷薇(植物名称)\n薪\tsan1\t薪酬，柴薪，薪火相传，薪金，薪水，薪饷，薪俸税，抱薪救火\n蕼\tsei3\t(1)赤蕼；(2)堇草；(3)草初生柔细的样子\n薛\tsit3\t姓氏\n薙\ttai3\t薙头\n薍\twaan6\t初生的荻\n薉\twai3\t荒芜\n薝\tzim1\t薝卜(佛经中记载的一种花)\n蔜\tngou4\t野草名，又称鸡肠草\n蓻\tguk1\t同「蘜」字\n蔝\tmai5\t蔝子(菜名)\n蔮\tkui3\t古代妇女覆于发上用以固冠的首饰\n蔙\tsyun4\t蔙蕧(药草名，又称旋覆花)\n蔋\tdik6\t蔋蔋(形容光秃无草木的样子)\n蔰\twu6\t萑蔰(形容色彩绚丽)\n蔒\tfan1\t同「荤」字\n蓹\tjyu6\t蓹儿(古地名)\n薣\tgu2\t茏薣(草名，又称红草)\n薚\ttong1\t蓫薚(商陆的别称)\n薞\tsyun1\t薞芜(蓼科植物，又称酸模)\n蕶\tling4\t形容草木零落\n薎\tmit6\t同「蔑」字\n薂\that6\t莲子的别称\n薕\tlim4\t未开花的荻\n藂\tcung4\t同「丛」字\n薱\tdeoi6\t草木茂盛\n藋\tdiu3\t蔏藋，藋粱\n薰\tfan1\t薰陶，薰衣草，兰薰桂馥，薰染，利欲薰心\n薾\tji5\t(1)花繁盛的样子；(2)疲困的样子\n薷\tjyu4\t香薷\n蓝\tlaam4\t蓝色，蓝图，蓝天，蓝本，湛蓝，青出于蓝\n苧\tning4\t荠苧(植物名)\n薸\tpiu1\t大薸\n萨\tsaat3\t菩萨，萨满教\n苔\ttoi4\t苔菜，芸薹\n薽\tzan1\t植物名\n荐\tzin3\t荐任，荐举，保荐，引荐\n藅\tfat6\t草名\n蕔\tbou1\t(1)草名；(2)荒芜\n蕀\tgik1\t颠蕀(天门冬的别名)\n蕥\tngaa5\t子谷不秀\n蕇\tdin2\t葶苈的别名，也称作狗荠\n薵\tcau4\t草名\n藄\tkei4\t紫蕨\n藒\tkit3\t藒车(香草名，古时用以防虫)\n藀\tjing4\t药草名\n藆\tgin2\t草名\n藣\tbei1\t(1)一种草；(2)旄舞时舞者所执的牛尾，像藣草，称为「藣」\n藨\tbiu1\t藨草，藨蔉，割田藨\n藩\tfaan4\t藩篱，藩镇\n藑\tking4\t藑茅\n䓖\tkung4\t芎䓖\n藘\tleoi4\t茹藘(一种草，又称蕠藘或蒨，可用作红色染料)\n藟\tleoi5\t葛藟\n艺\tngai6\t艺术，艺高胆大，才艺，手艺\n藕\tngau5\t藕断丝连，藕色\n薮\tsau2\t渊薮，薮泽，薮幽，利薮(利之所在)，盗薮(贼窝)；(1)走兽所聚之处；(2)密生杂草的湖泽；(3)人物聚集之地\n藫\ttaam4\t水苔\n藤\ttang4\t藤器，葛藤，攀藤附葛，藤椅，藤条，藤蔓，顺藤摸瓜\n藬\tteoi4\t草名\n藚\tzuk6\t草药名，即泽泻\n藗\tcuk1\t白茅类植物\n藢\tzi2\t紫芋\n藙\tngai6\t乔木之一，可入药，又称食茱萸\n藡\tdik6\t同「荻」字\n藯\twai3\t茺藯(益母草的别名)\n藿\tfok3\t藿香，藿食(喻粗食或在野)，浆酒藿肉(喻饮食奢华)，葵藿(葵、藿皆向阳，喻忠诚)豆叶\n蘅\thang4\t蘅杜\n蘌\tjyu5\t鸟室\n蕲\tkei4\t蕲求\n蔺\tleon6\t马蔺姓氏\n苈\tlik6\t葶苈\n芦\tlou4\t芦苇，芦荟，依样葫芦，芦竹，芦洲，芦笋，芦花\n茏\tlung4\t茏葱\n蘑\tmo4\t蘑菇\n蘉\tmong4\t勉力\n苏\tsou1\t紫苏，白苏，江苏姓氏\n萚\ttok3\t草木脱落的皮或叶\n藻\tzou2\t藻饰，辞藻\n藽\tcan3\t同「榇」字\n蘠\tcoeng4\t蘠蘼\n蘩\tfaan4\t采蘩(诗经召南的篇名)，奉苹蘩(妇女主持家务的代词)\n蘮\tgai3\t蘮蒘\n蘜\tguk1\t草名\n蘡\tjing1\t蘡薁\n蘥\tjoek6\t天蘥\n蘘\tjoeng4\t蘘荷\n蘧\tkeoi4\t蘧然\n兰\tlaan4\t兰花，兰闺，兰台，兰汤，兰若，㐽兰，幽兰，蕙质兰心\n蘦\tling4\t古书植物名\n藓\tsin2\t苔藓，白藓，藓帽，藓书\n蘣\ttau2\t(1)美好的样子；(2)木苗出\n蘟\tjan2\t蘟荵(一种似蕨的菜)\n蘛\tjuk6\t蓲蘛(形容花卉盛开的样子)\n蘙\tai3\t(1)草木茂盛；(2)遮蔽\n蘪\tmei4\t蘪芜(香草名)\n藲\tau1\t树木名，即刺榆\n藞\tlo5\t(1)不中貌；(2)粗率，不检点\n蘴\tfung1\t同「葑」字\n蘲\tleoi4\t同「蔂」字，意指土筐\n蘵\tzik1\t菜名\n蘳\tfai1\t(1)草木的黄花；(2)果实显现的样子\n蘶\tngai6\t草木采而更生\n蓠\tlei4\t江蓠\n蘱\tleoi6\t(1)蒲草的一种；(2)春秋时地名\n萝\tlo4\t萝卜，女萝\n蘼\tmei4\t蘼芜，蘼藿\n蘹\twaai4\t蘹香\n蘾\twaai6\t水草名\n蘸\tzaam3\t以物沾水、粉末或糊状的东西\n虀\tzai1\t虀盐\n蘻\tgai3\t草名\n虃\tcim1\t虃草(即地蜈蚣草)\n虈\thiu1\t香草名\n虇\thyun2\t芦苇嫩芽\n蔂\tleoi4\t(1)藤蔓；(2)缠绕；(3)土筐\n虌\tbit3\t蕨之初生者\n虋\tmun4\t虋冬\n艸\tmong5\t草艸(同草莽)\n艸\tcou2\t同「草」字\n艿\tnaai5\t芋艿\n艿\tjing4\t草割后更生，亦称乱草\n芐\thaa6\t蒲席\n芐\twu6\t中药名，即地黄\n芒\tfong2\t通「恍」字\n芒\tmong4\t芒种，光芒，锋芒毕露，芒果，芒草，芒鞋，芒刺在背\n芋\twu6\t芋头，竹芋\n芋\tjyu1\t覆盖\n芓\tzi2\t同「耔」字\n芓\tzi6\t(1)大麻的雌株；(2)隄\n芘\tbei3\t荫蔽，通「庇」字\n芘\tpei4\t芘芣(植物名)\n芧\tzeoi6\t芧栗\n芧\tcyu5\t同「苎」字\n花\tfaa1\t花卉，烟花，花枝招展，花瓶，花市，花车，花费，花式，花样，花岗石，探花，花边新闻，花天酒地，妙笔生花，蔽月羞花\n花\twaa4\t同「华」字\n花\twaa6\t同「华」字\n芾\tfai3\t蔽芾(茂盛的样子)\n芾\tfat1\t米芾同「黻」字\n芴\tfat1\t芴漠(见《庄子˙天下》)通「忽」字\n芴\tmat6\t(1)蒠菜的别名；(2)一种有机化合物\n芼\tmou4\t芼羹(用菜、肉为材料而做成的羹)\n芼\tmou6\t拔取\n茀\tfat1\t(1)道路上杂草太多，不便通行；(2)福；(3)首饰\n茀\tbut6\t通「勃」字\n苟\tgau2\t苟且，苟安，苟合，一丝不苟，不苟言笑，苟延残喘；(1)姑且；(2)草率\n苟\tgik1\t自急敕\n苛\tho1\t苛责，苛求，苛刻，苛政，苛待\n苛\tho4\t(1)细刻；(2)切；(3)扰；(4)谴罚\n若\tje5\t般若，兰若\n若\tjoek6\t若干，若果，若非，若是，若有所失，若即若离，若无其事，若隐若现\n苫\tsim1\t苫布，茅苫，草苫子\n苫\tsim3\t用席、布等物遮盖东西\n苕\tsiu4\t方言用字\n苕\ttiu4\t凌霄花\n苔\ttoi1\t舌苔\n苔\ttoi4\t苔衣，苔岑，苔笺，苔钱，苔藓，青苔\n茈\tcaai4\t茈胡\n茈\tci4\t凫茈\n茈\tzi2\t茈湖口(湖南省地名)\n兹\tci4\t龟兹\n兹\tzi1\t兹日，兹事体大，今兹，来兹\n茬\tcaa4\t麦茬，灭茬\n茬\tci4\t同「茌」字\n荅\tdaap3\t同「答」字\n荅\ttaap3\t通「嗒」字\n茸\tjung4\t茸茸，鹿茸；(1)草木初生时的嫩苗；(2)细柔貌\n茸\tjung5\t阘茸\n荑\ttai4\t荑米，柔荑，荑手纤纤，丹荑；(1)草木初生时的嫩芽；(2)借指女子柔细的手\n荑\tji4\t芟刈田里的野草\n莩\tpiu5\t同「殍」字\n莩\tfu1\t莩末，葭莩，莩甲，野莩\n莆\tpou4\t莆田姓氏\n莆\tfu2\t萐莆\n荷\tho4\t荷包，荷花，荷芰，荷珠\n荷\tho6\t荷重，荷锄，荷礼，荷戴，负荷，感荷不尽\n莨\tloeng4\t莨绸，薯莨\n莨\tlong4\t同「稂」字\n莨\tlong6\t莨菪\n莫\tmok6\t莫非，莫可名状，莫衷一是，莫逆之交，莫测高深，约莫，悲愤莫名，莫邪\n莫\tmou6\t同「暮」字\n莎\tsaa1\t莎鸡(虫名)，莎乐美，莎士比亚\n莎\tso1\t莎草\n荼\tcaa4\t同「茶」字\n荼\tce4\t荼陵(古地名)\n荼\ttou4\t荼毒，如火如荼\n荼\tsyu1\t神荼(门神名)\n华\tfaa1\t华严宗，春华秋实\n华\twaa4\t华夏，精华，华而不实，华丽，华美，华人，华侨，华胄，华裔，华表，光华，韶华，年华，中华，华亭鹤唳，华屋山丘，含英咀华\n华\twaa6\t姓氏\n菲\tfei1\t菲菲，芳菲\n菲\tfei2\t菲酌，菲仪，菲薄，菲言厚行，妄自菲薄\n菏\tgo1\t菏水(水名)\n菏\tho4\t菏泽(县名)\n萁\tgei1\t草名\n萁\tkei4\t豆萁\n茻\tmong5\t丛生的草\n茻\tmou5\t宿草\n菟\ttou3\t菟丝子\n菟\ttou4\t於菟(楚人指的老虎)\n萎\twai1\t衰落\n萎\twai2\t萎缩，萎谢，枯萎，衰萎，萎靡不振，萎顿\n萎\twai3\t「萎wai2」异读字\n菆\tzau1\t(1)麻秸；(2)好箭\n菆\tcyun4\t聚集\n菑\tzi1\t菑川，菑栗，菑畬\n菑\tzoi1\t同「灾」字\n著\tzoek3\t穿著，吃著不尽\n著\tzoek6\t著手，著意，著落，著题，著手成春，土著\n著\tzyu3\t著作，著述，著称，著录，著作等身，显著\n菳\tgam1\t草名\n菳\tkam1\t菳荃(草名)\n菳\tkam4\t黄芩\n茤\tgei6\t同「芰」字\n茤\tdo1\t鹿茤(少数民族名)\n萭\tgeoi2\t端正车轮的工具\n萭\tjyu5\t姓氏\n叶\tjip6\t叶舟，叶拱而对，叶落知秋，叶落归根，枝叶，树叶\n叶\tsip3\t姓氏\n药\tjoek3\t花药白芷\n万\tmaak6\t「万俟」，复姓\n万\tmaan6\t万全，万能，万不得已，万无一失，万劫不复，万念俱灰，万众一心\n葰\tseoi1\t同「荽」字\n葰\tzeon3\t葰人(汉代县名)\n萷\tsiu1\t萧疏\n萷\tsok3\t萷参(树干高耸)\n莤\tjau4\t一种在水边生长的草\n莤\tsuk1\t(1)古祭礼中，以酒灌注于茅束的礼仪；(2)酒器的塞子\n苍\tcong1\t苍白，苍生\n苍\tcong2\t莽苍\n蒲\tbok6\t蒲姑\n蒲\tpou4\t蒲团，蒲柳，蒲扇\n莳\tsi4\t莳萝\n莳\tsi6\t莳花\n蓁\tceon4\t蓁椒(花椒)\n蓁\tzeon1\t蓁蓁，蓁莽；(1)草叶茂盛；(2)众多聚集；(3)同「榛」字\n萉\tfai6\t麻的果实\n萉\tfei4\t躲避\n萒\tjin5\t草名\n萒\tgyun6\t柔弱\n菬\tciu4\t草名\n菬\tziu2\t菬子(药草名)\n蔡\tsaat3\t流放\n蔡\tcoi3\t(1)姓氏；(2)国名\n蓧\tdiu6\t古时用来除草的农具\n蓧\ttiu1\t草名\n荫\tjam1\t同「阴」字\n荫\tjam3\t荫庇，荫蔽，荫棚，荫封，荫凉，荫翳，庇荫，绿荫，官荫，遮荫，树荫，余荫\n蒌\tlau4\t蒌蒿\n蒌\tlau5\t蒌翣\n蓼\tliu5\t蓼花，蓼菜成行，水蓼，含蓼问疾\n蓼\tluk6\t蓼莪，蓼蓼，蓼萧\n蔓\tmaan4\t蔓菁，芜蔓\n蔓\tmaan6\t蔓延，枝蔓，蔓引株求，蔓连，蔓辞，瓜蔓，藤蔓\n蓨\tsau1\t蓨酸\n蓨\ttiu1\t蓨草(羊蹄草)\n蓨\ttiu4\t蓨县(古地名)\n蔚\twai3\t蔚蓝，蔚跂，蔚茹川\n蔚\twat1\t蔚州，蔚结通「郁」字\n蒋\tzoeng1\t菰蒋\n蒋\tzoeng2\t姓氏\n萳\tnaam4\t草名\n萳\tnaam5\t形容草长而柔弱\n𫈎\tging3\t鼠尾草的别称\n𫈎\tking4\t生于山中的野薤菜\n萺\tmou6\t(1)草名；(2)草覆盖地面的样子\n萺\tmuk6\t草名，又称「苜蓿」\n萯\tfu5\t王萯(植物名称)\n萯\tpui5\t草名，与「菩」字通\n萿\tkut3\t麋舌草的别名\n萿\twut6\t独萿(药草名，又写作独活)\n蕃\tfaan1\t同「番」字\n蕃\tfaan4\t蕃息，蕃昌，蕃衍不绝\n芗\thoeng1\t一种香草\n芗\thoeng2\t通「响」字\n蒝\twun4\t草名\n蒝\tjyun4\t形容草木茎叶散布的样子\n蓔\tjiu2\t草貌\n蓔\tguk1\t禾皮\n蒘\tnaa4\t藸蒘(草名)\n蒘\tjyu4\t蘮蒘(一种似芹菜的植物)\n蔷\tsik1\t(1)姓氏；(2)水草名称\n蔷\tcoeng4\t蔷薇\n薧\thaau2\t干鱼\n薧\thou1\t通「蒿」字\n蕾\tleoi4\t芭蕾舞\n蕾\tleoi5\t花蕾，蓓蕾\n蔖\tzaa1\t水芹\n蔖\tco4\t草名，属于蒯类种物\n蔍\tcou1\t同「麤」字\n蔍\tluk6\t鹿蹄草\n参\tsaam1\t参绥(下垂)\n参\tsaam2\t初生的苇草\n荠\tcai4\t荸荠\n荠\tcai5\t荠菜\n荠\tci4\t通「茨」字\n藏\tcong4\t藏匿，隐藏，藏污纳垢，捉迷藏，藏书，藏身，藏拙，秋收冬藏，卧虎藏龙，藏头露尾，包藏祸心，金屋藏娇，笑里藏刀\n藏\tzong1\t草名\n藏\tzong6\t藏族，宝藏，地藏菩萨，大藏经，道藏，西藏，汉藏语系\n藃\thiu1\t草貌\n藃\thou3\t物体缩小变形而不平\n薶\tmaai4\t同「埋」字\n薶\two1\t沾污\n药\tjoek6\t药材，火药，药石无灵，药剂师，药房，药物，药剂，药商，药师，药厂，药水，药膏，药效，药包，药方，药局，药用，药酒，药性，药店，药味，药粉，药瓶，药行，药量，药丸，药学，药单，药草，药理学，药典，药箱，药片，药王，药液，药引，药石，药罐，药力，药饵\n药\tngok6\t姓氏\n𫉄\tsyu4\t同「薯」字\n𫉄\tzyu1\t𫉄蔗\n藸\tcyu4\t荎藸(药草名，又称五味子)\n藸\tzyu1\t藸蒘(草名)\n藰\tlau4\t藰弋(草名)\n藰\tlau5\t药草名，又称商陆\n藱\twui4\t恶芋\n藱\twui6\t草名，又称怀羊\n蘁\tng6\t蘁立\n蘁\tngok6\t同「萼」字\n苹\tpan4\t草名\n苹\tping4\t苹果\n芀\tsiu4\t「芀tiu4」的异读字\n芀\ttiu4\t同「苕」字\n芍\tcoek3\t「芍zoek3」的异读字\n芍\tzoek3\t芍药，白芍\n芏\tdou6\t茳芏\n芏\ttou2\t「芏dou6」的异读字\n芎\tgung1\t芎䓖，九芎，川芎\n芎\thung1\t「芎gung1」的异读字\n芎\tkung4\t「芎gung1」的异读字\n芨\tgap1\t芨芨草，白芨\n芨\tkap1\t「芨gap1」的异读字\n芫\tjim4\t「芫jyun4」的异读字\n芫\tjyun4\t芫花，芫荽\n芩\tkam4\t黄芩(草药名)\n芩\tsam4\t「芩sam4」的异读字\n芺\tou3\t一种草，可供食用\n芺\tngou3\t「芺ou3」的异读字\n芟\tsaam1\t芟除，芟夷，芟繁就简；(1)除草；(2)削除、通「删」；(3)大镰刀\n芟\tsaan1\t「芟saam1」的异读字\n芯\tsam1\t灯芯\n芯\tseon3\t「芯sam1」的异读字，意指蛇舌\n苾\tbat6\t苾苾芳芳\n苾\tbit1\t「苾bat6」的异读字\n苾\tbit6\t「苾bat6」的异读字\n苙\tlap1\t(1)畜栏；(2)药草名，即白芷\n苙\tlap6\t「苙lap1」的异读字\n茆\tmaau4\t「茆maau5」的异读字\n茆\tmaau5\t蒪菜\n茆\tlau5\t「茆maau5」的异读字\n苨\tnai5\t荠苨(药草名)\n苨\tnei5\t「苨nai5」的异读字\n苲\tzaa2\t「苲zaa3」的异读字\n苲\tzaa3\t苲草\n茁\tcyut3\t「茁zyut3」的异读字\n茁\tzyut3\t茁壮\n芔\twai2\t同「卉」字\n芔\twai3\t「芔wai2」的异读字\n茞\tzi2\t「茞coi2」的异读字\n茞\tcoi2\t草名\n茠\tjau1\t「茠hou1」的异读字\n茠\thou1\t同「薅」字\n荏\tjam3\t「荏jam5」的异读字\n荏\tjam5\t荏苒\n荏\tjam6\t「荏jam5」的异读字\n茹\tjyu4\t茹素，茹荤，茹毛饮血，茹古涵今，茹柔吐刚，茹恨吞悲，含辛茹苦\n茹\tjyu6\t「茹jyu4」的异读字\n茗\tming4\t「茗ming5」的异读字\n茗\tming5\t茗酪，品茗，香茗\n荐\tzin3\t(1)草；(2)屡次\n荐\tzin6\t「荐zin3」的异读字\n茱\tsyu4\t「茱zyu1」的异读字\n茱\tzyu1\t茱萸\n苀\tgong1\t「苀hong4」的异读字\n苀\thong4\t草名\n莏\tco1\t捼莏(两手相互搓摩)\n莏\tso1\t「莏co1」的异读字\n茎\thang4\t「茎ging3」的异读字\n茎\tging1\t「茎ging3」的异读字\n茎\tging3\t花茎，根茎，球茎，枯茎朽骨\n莙\tgwan1\t「莙kwan5」的异读字\n莙\tkwan2\t「莙kwan5」的异读字\n莙\tkwan5\t大叶藻\n莽\tmong5\t莽撞，莽汉，鲁莽\n莽\tmong6\t「莽mong5」的异读字\n苖\tdik6\t羊蹄草的别名，又称「蓨」\n苖\tcuk1\t「苖dik6」的异读字\n菡\taam2\t「菡hamm5」的异读字\n菡\thaam5\t菡萏\n庵\tam1\t尼庵，庵堂，庵罗\n庵\tngam1\t「庵am1」的异读字\n菔\tbaak6\t「菔fuk6」的异读字\n菔\tfuk6\t芦菔，莱菔\n菁\tcing1\t「菁zing1」的异读字\n菁\tzing1\t菁英，菁华，菁莪，去芜存菁，蔓菁；(1)韭菜花；(2)泛指花朵；(3)芜菁，俗称大头菜\n菌\tkwan2\t细菌，病菌，微菌\n菌\tkwan5\t「菌kwan2」的异读字\n萐\tsaap3\t萐莆\n萐\tsip3\t「萐saap3」的异读字\n萐\tzit6\t「萐saap3」的异读字\n菽\tsuk1\t「菽suk6」的异读字\n菽\tsuk6\t豆之总称\n菼\ttaam2\t初生的荻\n菼\tcim1\t「菼taam2」的异读字\n茥\tgwai1\t灌木名称，又名覆盆子\n茥\tkwai1\t「茥gwai1」的异读字\n荂\theoi1\t「荂fu1」的异读字\n荂\tfu1\t(1)草木的花；(2)茂盛；(3)菊科植物的果实\n葩\tbaa1\t「葩paa1」的异读字\n葩\tpaa1\t含葩，旷世奇葩，扬葩振藻，奇葩异卉\n萹\tbin1\t萹豆，萹蓄\n萹\tbin2\t「萹bin1」的异读字\n萹\tpin1\t「萹bin1」的异读字\n蒂\tdai3\t芥蒂，根深蒂固，瓜熟蒂落，烟蒂，阴蒂，罗曼蒂克\n蒂\tding3\t「蒂dai3」的异读字\n葑\tfung1\t(1)菰根；(2)芜菁\n葑\tfung3\t「葑fung1」的异读字\n蔇\tgei3\t(1)杂草丛生；(2)来、至\n蔇\tgei6\t「蔇gei6」的异读字\n葚\tsam6\t同「椹」字\n葚\tzam1\t「葚sam6」的异读字\n𫇭\twai2\t(1)一种草；(2)姓氏；(3)地名\n𫇭\twai5\t「𫇭wai2」的异读字\n蓖\tbai1\t「蓖bei6」的异读字\n蓖\tbei1\t「蓖bei6」的异读字\n蓖\tbei6\t蓖麻\n蒯\tfaai3\t「蒯gwaai2」的异读字\n蒯\tgwaai2\t蒯草姓氏\n蓏\tlo2\t草实\n蓏\tlo5\t「蓏lo2」的异读字\n蒗\tlong5\t「蒗long6」的异读字\n蒗\tlong6\t宁蒗(县名)\n蓓\tpui4\t「蓓pui5」的异读字\n蓓\tpui5\t蓓蕾\n搜\tsau1\t搜集，搜罗，春搜(春季展开的狩猎)，搜证，搜购，搜求\n搜\tsau2\t「搜sau2」的异读字\n蒨\tsin3\t(1)同「茜」字；(2)同「倩」字\n蒨\tsin6\t「蒨sin3」的异读字\n蒺\tzaat6\t「蒺zat6」的异读字\n蒺\tzat6\t蒺藜\n席\tzek6\t「席zik6」的异读字，口语读音\n席\tzik6\t席子，竹席，草席，枕席，凉席\n蔌\tcuk1\t山肴野蔌菜谓之蔌。见《尔雅•释器》\n蔌\tsuk1\t「蔌cuk1」的异读字\n蔕\tdaai3\t「蔕dai3」的异读字\n蔕\tdai3\t同「蒂」字\n蔕\tding3\t「蔕dai3」的异读字\n蓬\tfung4\t「蓬pung4」的异读字\n蓬\tpung4\t蓬心，蓬首，蓬莱，蓬勃，蓬蓬，蓬松，蓬转，蓬瀛，蓬生麻中，蓬门荜户，蓬荜增辉，蓬头垢面，飞蓬，一蓬花，一蓬烟\n蔊\thon2\t蔊菜\n蔊\thon6\t「蔊hon2」的异读字\n蔧\twai6\t「蔧seoi6」的异读字\n蔧\tseoi6\t王蔧(植物名，茎枝可制成扫帚)\n荨\tcam4\t荨麻，荨麻疹\n荨\tcim4\t「荨cam4」的异读字\n蕈\tcam5\t蕈树，蕈蝇，香蕈\n蕈\tseon3\t「蕈cam3」的异读字\n蒇\tcin2\t解决、完成\n蒇\tzin2\t「蒇cin2」的异读字\n蕤\tjeoi4\t蕤宾(十二音律之一；又引申指端午节)，芳蕤，威蕤，葳蕤(枝叶繁密)艸木花垂貌\n蕤\tjeoi6\t「蕤jeoi4」的异读字\n蕊\tjeoi5\t花蕊\n蕊\tjeoi6\t「蕊jeoi5」的异读字\n蒚\that6\t「蒚lik6」的异读字\n蒚\tlik6\t(1)山蒜；(2)山蒿；(3)蒲草的穗轴\n蒩\tzou1\t(1)草席；(2)蕺菜\n蒩\tzou2\t「蒩zou1」的异读字\n蒫\tze1\t「蒫co4」的异读字\n蒫\tzi1\t「蒫co4」的异读字\n蒫\tco4\t荠实\n蕄\tman4\t「蕄mang4」的异读字\n蕄\tmang4\t蕄蕄(存在，又写作萌萌)\n蕺\tcap1\t蕺菜，蕺山(地名)\n蕺\tzap1\t「蕺cap1」的异读字\n薢\tgaai1\t薢茩，萆薢\n薢\tgaai3\t「薢gaai1」的异读字\n薢\thaai5\t「薢gaai1」的异读字\n薖\tfo1\t「薖gwo1」的异读字\n薖\tgwo1\t(1)草名；(2)饥意；(3)宽大之貌\n蕻\thung4\t「蕻hung6」的异读字\n蕻\thung6\n荟\twai3\t人文荟萃，芦荟，荟蔚，翳荟\n荟\tkui2\t「荟wai3」的异读字\n荟\twui3\t「荟wai3」的异读字\n荟\twui6\t「荟wai3」的异读字\n蕹\tung3\t蕹菜\n蕹\tngung3\t「蕹ung3」的异读字\n𫉁\toi3\t𫉁然，蓊𫉁，𫉁𫉁；(1)隐蔽；(2)草木茂盛貌\n𫉁\tngoi3\t「𫉁oi3」的异读字\n薯\tsyu4\t番薯，马铃薯，甘薯\n薯\tsyu5\t「薯syu4」的异读字\n薯\tsyu6\t「薯syu4」的异读字\n蕰\twan2\t积聚\n蕰\twan3\t「蕰wan2」的异读字\n蓳\tgan2\t菜名\n蓳\tgan3\t「蓳gan2」的异读字\n蓶\twai4\t一种似韭菜但呈黄色的菜\n蓶\twai5\t「蓶wai4」的异读字\n蔩\tjan4\t菟瓜\n蔩\tji4\t「蔩jan4」的异读字\n蔩\tjin5\t「蔩jan4」的异读字\n蓩\tmou6\t(1)毒草名；(2)茂密\n蓩\tmuk6\t「蓩mou6」的异读字\n蘤\tfaa1\t同「花」字\n蘤\twai5\t「蘤faa1」的异读字\n薿\tji5\t黍稷薿薿\n薿\tjik6\t「薿ji5」的异读字\n藇\tzeoi6\t𫉄藇\n藇\tjyu6\t「藇zeoi6」的异读字\n藐\tmiu5\t藐小，藐视\n藐\tmok6\t「藐miu5」的异读字\n荩\tzeon2\t荩草，忠荩，荩臣，荩箧\n荩\tzeon6\t「荩zeon2」的异读字\n藈\tgwai1\t「藈kwai1」的异读字\n藈\tkwai1\t藈姑(即王瓜)\n藜\tlai4\t藜藿，藜杖，蒺藜，蒸藜出妻\n藜\tlei4\t「藜lai4」的异读字\n藦\tmo4\t萝藦\n藦\tmo6\t「藦mo4」的异读字\n藾\tlaai3\t「藾laai6」的异读字\n藾\tlaai6\t藾蒿\n蔼\toi2\t和蔼可亲，蔼然\n蔼\tngoi2\t「蔼oi2」的异读字\n蕴\twan2\t蕴藏，底蕴，蕴结\n蕴\twan3\t「蕴wan2」的异读字\n蕴\twan5\t「蕴wan2」的异读字\n蘗\tbaak3\t「蘗paak3」的异读字\n蘗\tpaak3\t黄蘗\n艽\tgaau1\t「艽gau2」的异读字\n艽\tgau2\t秦艽\n艽\tkau4\t艽野荒远偏僻之地\n芚\tceon1\t糊涂、无知\n芚\tteon1\t「芚ceon1」的异读字\n芚\ttyun4\t草木初生貌\n茇\tbaat6\t「茇bat6」的异读字\n茇\tbat6\t(1)草根；(2)以草盖舍\n茇\tpui3\t开白花的苕\n茄\tgaa1\t茄房，茄袋\n茄\tke1\t「茄ke4」的异读字\n茄\tke4\t茄子，番茄\n苴\tcaa1\t(1)浮草；(2)枯草\n苴\tcaa4\t「苴caa1」的异读字\n苴\tzaa2\t土苴(糟粕)\n苴\tzaa3\t「苴zaa2」的异读字\n苴\tceoi1\t苴麻(植物名称)\n苴\tzeoi1\t(1)鞋中草垫；(2)包裹；(3)补\n苴\tzeoi2\t「苴zeoi1」的异读字\n茷\tfat6\t草叶茂盛\n茷\tbui6\t「茷pui3」的异读字\n茷\tpui3\t其旗茷茷\n茜\tsai1\t译音用字\n茜\tsin3\t茜草，茜素\n茜\tsin6\t「茜sin3」的异读字\n莞\tgwaan1\t「莞gun1」的异读字\n莞\tgun1\t莞草\n莞\tgun2\t东莞(地名)\n莞\twun1\t同「豌」字\n莞\twun2\t「莞wun1」的异读字\n莞\twun5\t莞尔\n菀\twan2\t同「蕰」字\n菀\twan3\t「菀wan2」的异读字\n菀\twan5\t「菀wan2」的异读字\n菀\twat1\t茂盛\n菀\tjyun2\t紫菀，茈菀\n落\tlaai3\t「落laai6」的异读字\n落\tlaai6\t遗漏\n落\tlok6\t落日，段落，落井下石，落英，落红，落照，落晖，落墨，落款，落第，落空，落实，落成，落伍，落后，落难，落拓，落花流水，沉鱼落雁，村落，没落\n蒡\tpang4\t蒡葧\n蒡\tbong2\t牛蒡\n蒡\tbong6\t「蒡bong2」的异读字\n盖\tgap3\t姓氏\n盖\thap6\t同「盍」字\n盖\tgoi3\t盖印，掩盖，盖棺论定，盖巾，盖天，盖世，盖代，盖章，盖头，盖世太保，覆盖\n盖\tkoi3\t「盖goi3」的异读字\n蓂\tmik6\t菥蓂\n蓂\tming4\t蓂荚(一种瑞草)\n蓂\tming5\t「蓂ming4」的异读字\n菿\tdoek3\t「菿dou3」的异读字\n菿\tdou2\t草名\n菿\tdou3\t(1)草大貌；(2)形容大的东西\n蔟\tcau3\t太蔟\n蔟\tcuk1\t蚕蔟\n蔟\tzuk6\t「蔟cuk1」的异读字\n葃\tzaak6\t菜名\n葃\tzik6\t「葃zok6」的异读字\n葃\tzok6\t葃菇(即慈姑)\n蕞\tzeoi3\t蕞尔，蕞芮\n蕞\tzeoi6\t「蕞zeoi3」的异读字\n蕞\tzyut3\t同「𫈵」字\n薜\tbaak3\t(1)一种药草；(2)山麻，生于山中\n薜\tbai6\t薜荔\n薜\tbei6\t「薜bai6」的异读字\n莶\tcim1\t豨莶\n莶\thim1\t「莶cim1」的异读字\n莶\tlim5\t白莶\n莶\tlim6\t「莶lim5」的异读字\n蔨\tkwan5\t(1)「蔨gyun6」的异读字；(2)同「菌」字\n蔨\tgyun6\t草名，又称鹿藿\n䓕\twai2\t姓氏\n䓕\twai5\t「䓕wai2」的异读字\n䓕\tjyun5\t䓕志\n藉\tze3\t「藉ze6」的异读字\n藉\tze6\t借口，借故，借词，藉势，借端，枕藉，凭借\n藉\tzik6\t狼藉，慰藉\n蔹\tlim4\t草名\n蔹\tlim5\t同「莶」字\n蔹\tlim6\t「蔹lim4」的异读字\n蘬\tkwai1\t荭草\n蘬\tkwai2\t「蘬kwai1」的异读字\n蘬\twai2\t人名用字\n虍\tfu1\t(1)老虎身上的花纹；(2)部首\n虎\tfu2\t老虎，虎头蛇尾，虎视眈眈\n虐\tjoek6\t虐待，虐政，虐杀，暴虐，助纣为虐，虐疾；(1)残害；(2)严苛\n虓\thaau1\t虓阚，虓将\n虔\tkin4\t虔诚，虔敬，虔信，虔心\n虒\tsi1\t传说中的水中怪兽\n虙\tfuk6\t姓。伏羲氏之后。同「伏」字\n虚\theoi1\t虚弱，虚伪，虚实，虚心，心虚，空虚，虚位以待\n虞\tjyu4\t虞犯，不虞之誉，尔虞我诈，堪虞\n虏\tlou5\t俘虏，虏获，强虏，胡虏；(1)擒获；(2)抢夺；(3)战俘；(4)奴仆\n虡\tgeoi6\t悬挂钟鼓的木架两旁的柱子\n虥\tzaan6\t虥猫(浅毛虎)\n虢\tgwik1\t(1)姓氏；(2)周代国名\n虨\tban1\t虎皮上的斑纹\n虣\tbou6\t凶虣\n虤\tngaan4\t老虎发怒的样子\n亏\tkwai1\t理亏，吃亏，亏本，幸亏，功亏一篑，亏心事，亏空，亏欠，血亏\n虪\tsuk1\t黑虎\n处\tcyu2\t处士，处女，处方，处分，处世，处决，处理，处暑，处置，处境，处罚，处之泰然，处心积虑，判处\n处\tcyu3\t处所，用处，好处，住处，长处\n处\tsyu3\t粤语用字\n虖\tfu1\t呜虖(同呜呼)，虖沱(山西省河名，又作滹沱)\n虖\tfu4\t同「乎」字\n号\thou4\t号叫，号哭，号丧，号啕，怒号\n号\thou6\t号令，号外，号召，号角，号称，国号，符号\n虩\tgwik1\t虩虩\n虩\thik1\t「虩gwik1」的异读字\n虮\tgei2\t虱卵\n虬\tkau4\t虬龙，虬髯，虬蟠\n虭\tdiu1\t虭蟧(蝉名)\n虹\thung4\t虹桥，彩虹，霓虹\n虴\tzaak3\t虴蛨(即蚱蜢)\n虳\tdik1\t鼠\n蚩\tci1\t蚩尤，蚩拙，蚩蚩，呼蚩，蚩蚩蠢蠢；(1)一种虫；(2)古姓氏；(3)嘲笑，通嗤；(4)欺侮；(5)痴笨\n蚪\tdau2\t蝌蚪\n蚡\tfan4\t同「鼢」字\n蚧\tgaai3\t蛤蚧\n蚣\tgung1\t蜈蚣\n蚢\thong4\t(1)一种野蚕；(2)大贝\n蚓\tjan5\t蚓廉，蚯蚓\n蚋\tjeoi6\t蚊蚋\n蚖\tjyun4\t蚖鞷(外城/比喻保障)\n蚑\tkei4\t长蚑\n蚜\tngaa4\t蚜虫\n蚍\tpei4\t蚍蜉\n蚌\tpong5\t蚌壳\n蚘\twui4\t同「蛔」字\n蚤\tzou2\t跳蚤，跳蚤市场\n蚇\tcek3\t蚇蠖，蚇蠖蛾\n蚞\tmuk6\t蜓蚞(蝉名)\n蚅\tak1\t乌蠋，蛾蝶类的幼虫，似蚕，大如指\n蚎\tjyut6\t彭蚎(一种小蟹)\n蚚\tkei4\t米中小黑虫\n蚐\tgwan1\t马陆\n蚗\tkyut3\t蛚蚗(闪电)蛁蟟\n蚳\tci4\t(1)蚁卵；(2)姓氏\n蛁\tdiu1\t蝉\n蚹\tfu6\t(1)蛇腹下可使蛇向前爬行的横鳞；(2)蜗牛\n蚷\tgeoi6\t商蚷\n蛄\tgu1\t蟪蛄\n蛌\tgu2\t喇喇蛌\n蚶\tham1\t蚶子，尺蚶软体动物门斧足纲蚌属动物\n蚵\tho4\t(1)蜥蝪；(2)蚝\n蚯\tjau1\t蚯蚓\n蚴\tjau3\t毛蚴，尾蚴\n蚰\tjau4\t蚰蜒\n蚿\tjin4\t马蚿\n蛉\tling4\t蜻蛉，螟蛉，白蛉\n蚻\tzaat3\t虫名，似蝉而小\n蛀\tzyu3\t蛀牙，蛀虫，蛀蚀\n蛃\tbing2\t衣鱼\n蚽\tpei4\t虫名\n蛂\tbit6\t金龟子，一种害虫\n蛈\ttit3\t蛈蝪(土蜘蛛，即螲蟷)\n蚸\tcik1\t螇蚸(蝗的一种)\n蛓\tci3\t蛓毛虫(一种吃树叶的虫)\n蛟\tgaau1\t蛟龙\n蛬\tgung2\t蟋蟀\n蛜\tji1\t蛜蝛(虫名)\n蛣\tkit3\t蛣蜣(昆虫名)\n蛐\tkuk1\t蛐蛐儿\n蛩\tkung4\t吟蛩，寒蛩蟋蟀\n蛚\tlit6\t蜻蛚\n蛑\tmau4\t蝤蛑\n蛙\twaa1\t青蛙，蛙鸣，蛙泳，蛙人，井底之蛙\n蛔\twui4\t蛔虫\n蛭\tzat6\t肝蛭，血蛭，蛭石，水蛭\n蛛\tzyu1\t蜘蛛，蛛丝马迹，蛛网\n蛨\tmak6\t虴蛨(即蚱蜢)\n蛦\tji4\t鸟名\n蛗\tfau6\t蛗螽(蚱蜢)\n蛫\tgwai2\t(1)蟹类动物；(2)古籍中的异兽；(3)猿类；(4)鼠妇虫\n蛢\tping4\t虫名，即金龟子\n蛝\thaan4\t(1)马陆；(2)蝮蜪；(3)蚁卵\n蜌\tbai6\t蚌类，壳形长而狭\n蜉\tfau4\t蜉蝣，蚍蜉\n蜅\tfu2\t蟹类动物\n蜂\tfung1\t蜂拥，蜂蜜，蜂拥而上，蜜蜂\n蛱\tgaap3\t蛱蝶\n蚬\thin2\t软体动物\n蜎\tjyun1\t蜎蜎，蟺蜎\n蛷\tkau4\t多足虫\n蜈\tng4\t蜈蚣\n蜀\tsuk6\t蜀道，玉蜀黍，乐不思蜀，得陇望蜀，蜀犬吠日\n蜓\tting4\t蜻蜓，蝘蜓\n蝍\tzik1\t蝍蛆\n蜇\tzit3\t海蜇\n蜄\tsan6\t同「蜃」字\n蛵\thing1\t虰蛵(蜻蜓)\n蜁\tsyun4\t蜁蜗(小螺)\n蛶\tlyut6\t虫名\n蝂\tbaan2\t蝜蝂\n蜻\tcing1\t蜻蜓点水，蜻蜓\n蜑\tdaan6\t蜑家\n蜨\tdip6\t蝴蜨(即蝴蝶)\n蜣\tgoeng1\t蜣螂\n蜾\tgwo2\t蜾蠃\n蜭\tham5\t毛虫\n蜴\tjik6\t蜥蜴\n蜒\tjin4\t妯蜒，蜿蜒\n蜞\tkei4\t蟛蜞\n蜷\tkyun4\t蜷曲，蜷缩，蜷伏\n蜢\tmaang5\t蚱蜢\n蜜\tmat6\t蜜月，蜂蜜，甜言蜜语，蜜枣，蜜饯\n蜺\tngai4\t寒蝉\n蜱\tpei4\t一种蜘蛛类动物，又名壁虱\n蜥\tsik1\t蜥蝪\n蜩\ttiu4\t蜩螗，鸣蜩，寒蜩蝉\n蜘\tzi1\t蜘蛛，蜘蛛网\n蝁\tok3\t毒蛇\n蜙\tsung1\t蜙蝑(虫名，即螽斯)\n蜠\tkwan5\t一种大贝壳类动物\n蜦\tleon4\t(1)古书中的神蛇；(2)大虾蟆\n蜪\ttou1\t蝮蜪(蝗的幼虫)，蜪伴(伙伴或同伴)\n蜧\tlai6\t(1)传说中的一种神蛇；(2)大虾蟆\n蜛\tgeoi1\t蜛蠩(一种水生动物/虾蟆)\n蜬\tham4\t(1)小螺；(2)水贝\n蜵\tjyun1\t蜵蜎(曲折深远之貌)井中小虫\n蜸\thin2\t蜸蚕(蚯蚓)\n蝶\tdip6\t蝶式，蝶类，蝶形\n蝳\tdoi6\t蝳蝐(玳瑁的别名)\n蝌\tfo1\t蝌蚪\n蝜\tfu6\t蝜蝂(小虫名，善负重物)\n蝠\tfuk1\t蝙蝠\n蝮\tfuk1\t蝮蛇\n蝔\tgaai1\t虫名\n蝘\tjin2\t蝘蜓\n蝓\tjyu4\t蛞蝓\n蝝\tjyun4\t(1)蝗的幼虫；(2)蚁卵\n蝯\tjyun4\t同「猿」字\n螂\tlong4\t蟑螂，螳螂\n虱\tsat1\t虱子，头虱，跳虱\n蝑\tseoi1\t蝗类的一种\n蝛\twai1\t蛜蝛\n猬\twai6\t刺猬，猬集\n蝗\twong4\t蝗虫，蝗灾\n蝴\twu4\t蝴蝶\n蝫\tzyu1\t蜛蝫(水中动物名，也作蜛蠩)\n蝧\tjing1\t蜂类\n蝢\tkit3\t肸蝢(古西域国名，即月氏)\n蝒\tmin4\t蚱蝉\n蝭\ttai4\t蝭蟧(蝉名)\n蝪\ttong1\t蛈蝪(土蜘蛛，即螲蟷)\n蝵\tcau1\t同「蟗」字\n蝬\tzung1\t三蝬(蛤类动物)\n蝏\tting4\t一种长而狭的蚌，形似马刀\n蝖\thyun1\t蝖螜(金龟子的幼虫)虫行动貌\n蝞\tmei6\t一种水生动物，似虾，寄居龟壳中\n蟡\twai1\t古籍上记载的水中动物\n蕵\tsyun1\t同「薞」字\n螓\tceon4\t螓首，螓首蛾眉(喻女子美貌端庄)方头小蝉\n螇\thai4\t螇蚸，螇螰\n螒\thon6\t一种昆虫，又名纺织娘\n螔\tji4\t螔蝓(蜗牛)\n萤\tjing4\t萤幕，萤光，雪案萤窗\n螉\tjung1\t蠮螉\n融\tjung4\t融合，融通，融洽，融化，融会贯通，融和，消融\n螈\tjyun4\t蝾螈\n螟\tming4\t螟蛾，螟蛉，螟螣\n螘\tngai5\t同「蚁」字\n蛳\tsi1\t螺蛳\n螅\tsik1\t水螅\n螗\ttong4\t国事蜩螗\n螜\thuk6\t虫名\n螖\twaat6\t螖蠌(寄居海边的虫名，形似蜘蛛，有螯如蟹)\n螝\tkui2\t昆虫从幼虫过渡到成虫的一种形态\n螐\twu1\t螐蠋(蛾蝶类的幼虫)\n螤\tzung1\t同「钟」字，古容量单位\n螏\tzat6\t蝍蛆的别名\n螚\tnoi6\t小虻虫\n螁\tteoi3\t「蜕」的异体字\n螑\tcau3\t赳螑(龙伸颈高低起伏而行的样子)\n螭\tci1\t古代传说中似龙而无角的动物\n螬\tcou4\t蛴螬\n䗖\tdai3\t䗖蝀\n蝈\tgwok3\t昆虫名\n螾\tjan5\t同「蚓」字\n蝼\tlau4\t蝼蚁，蝼蛄\n蟉\tlau4\t蚴蟉(行动的样子)\n螺\tlo4\t螺旋，田螺，法螺，大吹法螺，螺髻，螺钉\n蟆\tmaa4\t虾蟆\n蟒\tmong5\t蟒蛇，蟒袍\n蟀\tseot1\t蟋蟀\n蟋\tsik1\t蟋蟀\n螳\ttong4\t螳螂，螳螂捕蝉，螳臂挡车\n蟅\tze3\t蟅蟒(蚱蜢)\n螹\tzim6\t螹离(虫名/独角龙)\n蟑\tzoeng1\t蟑螂\n螀\tzoeng1\t寒螀\n螽\tzung1\t螽斯，阜螽\n蟃\tmaan6\t蟃蜒(巨兽)螟蚙虫\n蟌\tcung1\t蜻蜓\n螸\tjyu4\t(1)腹部膏腴下垂；(2)虫名\n𫋇\tgiu1\t水獭一类的动物\n螷\tpei4\t蚌的一种，其形狭长\n螰\tluk6\t螇螰(蝉名)\n螪\tzek3\t虫名\n螴\tcan4\t螴蜳(不安定/虫行)\n螼\tgan3\t蚯蚓\n虫\tcung4\t昆虫，虫类，害虫，懒虫，蠹虫，毛虫\n𫊸\tgiu2\t夭𫊸\n蟢\thei2\t长腿小蜘蛛\n蟝\tkeoi4\t蜉蝣的别名\n蟨\tkyut3\t兽名\n蟟\tliu4\t蟭蟟虫(一种小虫)\n蟧\tlou4\t(1)螺属；(2)小蝉\n蟔\tmat6\t毛虫\n蟛\tpaang4\t蟛蜞，蟛螖\n蟴\tsi1\t毛虫类\n蟪\twai6\t蟪蛄\n蟥\twong4\t蚂蟥，蟥蛢，石蟥\n蟙\tzik1\t蟹的一种，即高脚蟹\n蟭\tziu1\t蟭螟(一种小虫)\n蟓\tzoeng6\t桑蚕\n蟗\tcau1\t次蟗(蜘蛛)\n𫊻\tcing4\n蟤\tcyun4\t蜿蟤(龙屈貌/虫不申貌/蛇名)\n虿\tcaai3\t虿芥，虿尾，水虿\n蛏\tcing1\t蛏子，蛏干一种海产贝类\n蟷\tdong1\t螲蟷\n蟿\tkai3\t蟿螽(蚱蜢)\n蟼\tging2\t虾蟆\n蟹\thaai5\t螃蟹，蟹螯\n蠉\thyun1\t孑孓\n蝇\tjing4\t蝇虎，苍蝇，蝇头小利，蝇蛆病，果蝇，如蝇逐臭\n蠊\tlim4\t蜚蠊\n蚁\tngai5\t蚂蚁\n蟾\tsim4\t蟾蜍，蟾宫，蟾宫折桂\n蟺\tsin6\t蟺蜎，蜿蟺\n蠌\tzaak6\t小蟹\n蠂\tsip3\t蝗虫\n蠈\tcaak6\t一种食苗节的害虫\n蛴\tcai4\t蛴螬\n蚝\thou4\t蚝油，生蚝\n蝾\twing4\t蝾螈，蝾螺\n蠗\tzok6\t(1)猴的一种；(2)小蜃\n蠢\tceon2\t蠢蠢欲动，蠢动，蠢才\n蜡\tlaap6\t蜡烛，蜡像，味同嚼蜡，蜡油，蜡染，蜡炬，蜡板印刷\n蛎\tlai6\t牡蛎\n蠝\tleoi5\t同「鸓」字\n蠛\tmit6\t蠛蠓\n蠠\tman5\t蠠没(勉力)\n蠤\tcau1\t次蠤(蜘蛛的别称)\n𫊮\tlou4\t𫊮蜰\n蠪\tlung4\t赤驳蚍蜉\n蟏\tsiu1\t蟏蛸\n蠬\tlung4\t古书上说的一种虫，生长于橄榄树\n蛊\tgu2\t蛊毒，蛊惑，巫蛊；(1)毒害人的小虫；(2)迷惑；(3)《易》卦名一\n蠲\tgyun1\t蠲免，蠲赋，蠲除，蠲涤；(1)免除；(2)使清洁\n蠮\tjit6\t蠮螉(俗称细腰蜂)\n蠰\tjoeng6\t一种类似天牛的虫\n蠳\tjing1\t一种龟，能食蛇\n蠯\tpei4\t同「螷」字\n蚕\tcaam4\t蚕蛾，蚕丝，蚕食鲸吞，蚕豆，蚕桑\n蠹\tdou3\t蠹虫，蠹鱼，蠹政\n蠷\tkeoi4\t同「蠼」字\n蠵\tkwai4\t蠵龟\n蠸\tkyun4\t黄甲小虫\n蛮\tmaan4\t蛮横，蛮干，蛮荒，蛮行，野蛮\n蠽\tzit6\t一种青色的小蝉\n蠿\tzyut3\t蠿蟊(蜘蛛的别名)\n虫\twai2\t「虺」的本字\n虰\tcing1\t虰螘(一种赤色斑驳的大蚁)\n虰\tding1\t虰蛵(即蜻蜓)\n虺\twai2\t虺蜴，虺蜮，虺虺其雷，虺蛇入梦，梦虺，养虺成蛇\n虺\tfui1\t虺隤\n虷\tgon1\t侵犯\n虷\thon4\t生长在井中的红色小虫\n蚥\tfu2\t蜛蚥(螳螂)\n蚥\tfu6\t王蚥(蝉类)\n蚙\tkam4\t蚙穷(蚰蜒)\n蚙\tkim4\t虾蟹的足爪\n蚔\tkei4\t(1)蝎子一类的毒虫；(2)虻虫\n蚔\tzi6\t虫名\n蛆\tceoi1\t蛆虫，玉蛆，如蛆附骨\n蛆\tzeoi1\t蝍蛆\n蛇\tse4\t蛇行，蛇足，蛇蝎，蛇心佛口，毒蛇\n蛇\tji4\t虚与委蛇\n蚼\tgau2\t蚼犬(古书中说的一种兽)\n蚼\tkeoi4\t玄蚼(大蚂蚁)\n蚾\tpei4\t虫名\n蚾\tbo3\t蚵蚾(蟾蜍类)\n蛪\tjit6\t虹的一种\n蛪\tkit3\t蛪蚼(虫名，似蝉而小)\n蜋\tloeng4\t蜣蜋\n蜋\tlong4\t同「螂」字\n蛾\tngai5\t同「蚁」字\n蛾\tngo4\t螟蛾，蚕蛾，灯蛾，灯蛾扑火\n蛸\tsaau1\t蟏蛸，蟏蛸满堂\n蛸\tsiu1\t螵蛸\n蜕\tseoi3\t同义异读\n蜕\tteoi3\t蜕化，蜕皮，蜕变，蛇蜕，婵蜕\n蛖\tmong4\t蛖蝼(蝼蛄类)\n蛖\tpong5\t同「蚌」字\n蝃\tdai3\t蝃蝀\n蝃\tzyut3\t蝃蝥\n蜤\tsi1\t蜤螽(虫名，即螽斯)\n蜤\tsik1\t蜤蜴(即蜥蝪)\n蜲\twai1\t蜲蜲蜿蜿(龙蛇之貌)同「蟡」字\n蜲\twai2\t鼠妇虫\n蜳\ttan1\t虫名，似蝉而长\n蜳\tdeon1\t螴蜳(不安定/虫行)\n虾\thaa1\t虾米，虾蟹，虾须，虾兵蟹将\n虾\thaa4\t虾蟆\n蝥\tmaau4\t斑蝥\n蝥\tmau4\t蝃蝥，蝥贼\n蝩\tcung4\t晚蚕\n蝩\tzung1\t蝗虫的一种\n蝺\tgeoi2\t好貌\n蝺\tjyu5\t蝺偻(腰背弯曲)\n蝷\tlik6\t螇蝷(蝗的一种)\n蝷\tsik1\t蝷易(蜥蝪)\n蝚\tjau4\t(1)蝼蛄类；(2)水蛭\n蝚\tnou4\t兽名\n螣\tdak6\t同「𫋌」字\n螣\ttang4\t螣蛇(飞蛇、星座名)\n蚂\tmaa1\t蚂螂\n蚂\tmaa5\t蚂蚁\n蚂\tmaa6\t蚂蚱\n螃\tbong2\t陆居虾蟆\n螃\tpong4\t螃蟹\n蝹\twan1\t蝹蝹(龙的形貌)\n蝹\tou2\t传说中常伏地下吃死人脑的怪物\n螛\that6\t蝼蛄\n螛\thot6\t輵螛(龙摇头吐舌的样子)\n螶\tgeoi2\t兽名\n螶\tkeoi4\t一种猪喜欢吃的虫\n虮\tgei2\t虮虱相吊\n虮\tkei4\t水蛭\n蟠\tfaan4\t小虫名\n蟠\tpun4\t蟠桃，蟠龙，龙蟠虎踞\n蟦\tban1\t牡蛎\n蟦\tfei4\t(1)蛴螬，即金龟子的幼虫；(2)海蜇\n蟞\tbit3\t珠蟞(鱼名)，蟞蚨(蝶类的总称)\n蟞\tbit6\t蟞蜉(即蚍蜉，大蚂蚁)\n蠀\tci1\t蠀螬(金龟子的幼虫)\n蠀\tzik1\t尺蠖虫\n蠩\tsyu4\t蟾蠩(癞蛤蟆的别名)\n蠩\tzyu1\t蜛蠩(水中动物名)\n蠼\tkeoi4\n蠾\tsuk6\t蛾蝶类的幼虫\n蠾\tzuk1\t蠾蝓(蜘蛛)\n虼\tgat1\t虼蚤，虼螂\n虼\tgok3\t「虼gat1」的异读字\n虻\tmang4\t「虻mong4」的异读字\n虻\tmong4\t牛虻，蚊虻昆虫纲双翅目虻科动物\n蚝\tci3\t生蚝，蚝油\n蚝\thou4\t「蚝ci3」的异读字\n蚨\tfu3\t「蚨fu4」的异读字\n蚨\tfu4\t青蚨\n蚊\tman1\t蚊子，疟蚊，蚊叮虫咬\n蚊\tman4\t「蚊man1」的异读字\n蚆\tbaa1\t一种软体动物，即贝。古时以贝壳作货币，故亦指货币\n蚆\tpaa1\t「蚆baa1」的异读字\n蛋\tdaan2\t「蛋daan6」的异读字\n蛋\tdaan6\t蛋糕，鸡蛋，蛋白，蛋黄，蛋壳\n蛅\tjim4\t蛅蟴\n蛅\tzim1\t「蛅jim4」的异读字\n蚺\tnaam4\t「蚺jim4」的异读字\n蚺\tjim4\t蚺蛇\n蚱\tzaa3\t蚱蜢\n蚱\tzaak3\t「蚱zaa3」的异读字\n蛞\tfut3\t「蛞kut3」的异读字\n蛞\tkut3\t蛞蝓\n蜍\tceoi4\t「蜍syu4」的异读字\n蜍\tcyu4\t「蜍syu4」的异读字\n蜍\tsyu4\t蟾蜍\n蛹\tjung2\t蛹期，蚕蛹\n蛹\tjung5\t「蛹jung2」的异读字\n蜊\tlei4\t蛤蜊\n蜊\tlei6\t「蜊lei4」的异读字\n蜃\tsan4\t「蜃san4」的异读字\n蜃\tsan5\t蜃车，蜃景，海市蜃楼\n蜃\tsan6\t「蜃san5」的异读字\n蝆\tmai5\t「蝆jeong4」的异读字\n蝆\tjoeng4\t蝆蝆(即螳螂)，强蝆(米谷中的小黑虫)\n蝀\tdung1\t蝃蝀，䗖蝀，金鳌玉蝀\n蝀\tdung2\t「蝀dung1」的异读字\n蝀\tdung3\t「蝀dung1」的异读字\n蜰\tfai6\t「蜰fei4」的异读字\n蜰\tfei2\t「蜰fei4」的异读字\n蜰\tfei4\t蜰虫\n蜿\tjyun1\t蜿蜒\n蜿\tjyun2\t「蜿jyun1」的异读字\n蚀\tsik6\t蚀本，日蚀，腐蚀，月蚀，亏蚀，侵蚀\n蚀\tsit6\t「蚀sik6」的异读字，粤语用字\n蜼\twai2\t「蜼wai6」的异读字\n蜼\twai6\t一种长尾猿\n蜼\tleoi5\t「蜼wai6」的异读字\n蜮\twaak6\t「蜮wik6」的异读字\n蜮\twik6\t传说中的害人怪物\n蝙\tbin1\t蝙蝠\n蝙\tbin2\t「蝙bin1」的异读字\n蝙\tpin1\t「蝙bin1」的异读字\n蝣\tjau4\t蜉蝣，蜉蝣在世\n蝣\tjau6\t「蝣jau4」的异读字\n蝡\tjyu4\t「蝡jyun5」的异读字\n蝡\tjyun5\t同「蠕」字\n蝐\tmou6\t同「瑁」字\n蝐\tmui6\t「蝐mou6」的异读字\n蝻\tnaam4\t蝗的幼虫\n蝻\tnaam5\t「蝻naam4」的异读字\n蜗\tgwaa1\t「蜗wo1」的异读字\n蜗\twaa1\t「蜗wo1」的异读字\n蜗\two1\t蜗牛，蜗居\n螫\tcik1\t「螫sik1」的异读字\n螫\tsik1\t螫蝇，辛螫，撩蜂吃赦\n蟊\tmaau4\t蟊贼\n蟊\tmau4\t「蟊maau4」的异读字\n螯\tgong6\t「螯ngou4」的异读字\n螯\tngou4\t蟹螯，持螯，车螯节足动物第一对脚，尖端开叉像钳子\n螵\tpiu1\t螵蛸\n螵\tpiu4\t「螵piu1」的异读字\n蛰\tzaap6\t「蛰zat6」的异读字\n蛰\tzat6\t惊蛰(二十四节气之一)，蛰伏，蛰居，蛰兽，蛰雷；(1)冬眠中的动物；(2)隐藏潜伏\n蛰\tzik6\t「蛰zat6」的异读字\n蛰\tzit3\t「蛰zat6」的异读字\n𫋌\tdak6\t吃苗叶的害虫\n𫋌\tdat6\t「𫋌dak6」的异读字\n蚃\thoeng2\t(1)土蛹；(2)醯鸡\n蚃\thoeng3\t「蚃hoeng2」的异读字\n蛲\tnaau4\t「蛲jiu4」的异读字\n蛲\tjiu4\t蛲虫\n蝉\tsim4\t蝉联(连任)，蝉蜕，寒蝉，噤若寒蝉\n蝉\tsin4\t「蝉sim4」的异读字\n蟫\ttaam4\t蠹虫\n蟫\tjam4\t「蟫taam4」的异读字\n蝎\tkit3\t「蝎hit3」的异读字\n蠋\tsuk6\t「蠋zuk1」的异读字\n蠋\tzuk1\t蠋绣，蠋蝓\n蠙\tban1\t「蠙pan1」的异读字\n蠙\tpan4\t蠙珠\n蠕\tjyu4\t「蠕jyun5」的异读字\n蠕\tjyun5\t蠕动，蠕虫\n蠓\tmung2\t「蠓mung5」的异读字\n蠓\tmung5\t昆虫纲双翅目蠓科的泛称\n蠖\twok3\t「蠖wok6」的异读字\n蠖\twok6\t蚇蠖\n蠜\tfaan4\t阜螽\n蠜\tfaan6\t「蠜faan4」的异读字\n蠥\tjip6\t(1)妖孽；(2)忧\n蠥\tjit6\t「蠥jit6」的异读字\n蠫\tlai6\t同「劙」字\n蠫\tlei4\t「蠫lai6」的异读字\n蛤\thaa4\t蛤蟆\n蛤\tgaap3\t「蛤gap3」的异读字\n蛤\tgap3\t蛤蚧，蛤蜊\n蛘\tmai5\t「蛘jeong5」的异读字\n蛘\tjoeng4\t同「蝆」字\n蛘\tjoeng5\t同「痒」字\n蜡\tcaa3\t「蜡zaa3」的异读字\n蜡\tzaa3\t蜡祭，大蜡，蜡月(阴历十二月)周朝祭万物的礼仪\n蜡\tzaa6\t「蜡zaa3」的异读字\n蜡\tcai3\t「蜡zaa3」的异读字\n蜚\tfai6\t「蜚fei2」的异读字\n蜚\tfei1\t蜚语，蜚短留长，蜚声中外\n蜚\tfei2\t蜚廉，蜚遽，蜚蠊\n蝤\tcau4\t蝤蛴\n蝤\tjau4\t蝤蛑\n蝤\tzau1\t「蝤jau4」的异读字\n蝎\tkit3\t「蝎hit3」的异读字\n蝎\thot3\t木中蠹虫\n蝎\thot6\t「蝎hot3」的异读字\n螲\tzat1\t蝼螲(昆虫名)\n螲\tzat6\t「螲zat1」的异读字\n螲\tdit3\t螲蟷(蜘蛛的一种)\n螲\tdit6\t「螲dit6」的异读字\n蠃\tlo2\t蜾蠃\n蠃\tlo4\t同「螺」字\n蠃\tlo5\t「蠃lo2」的异读字\n蠡\tlai4\t「蠡lai5」的异读字\n蠡\tlai5\t持蠡测海，管窥蠡测，瘯蠡，瓮天蠡海；(1)虫蛀木使中空；(2)古代舀水用具\n蠡\tlo4\t田蠡(即田螺)\n血\thyut3\t血液，流血，呕心沥血，贫血，冷血，血腥，血统，血缘，血案，血债，血汗，血泪，血战，血淋淋，血小板，白血病，血浓于水，血盆大口，血流如注，血肉横飞，兵不血刃，一针见血\n衁\tfong1\t(1)血液；(2)蟹黄\n衄\tnuk6\t(1)鼻出血；(2)挫败；(3)畏缩；(4)侮辱\n蔑\tmit6\t诬蔑，污蔑\n衃\tfau4\t蚍衃(草名)\n衃\tpui1\t凝结的血\n衈\tnei6\t「衈ji6」的异读字\n衈\tji6\t祭祀时取牲物耳旁的血涂在礼器上\n衋\thik1\t「衋sik1」的异读字\n衋\tsik1\t伤痛\n衎\thon3\t(1)快乐；(2)刚直\n衒\tjyun6\t(1)沿街叫卖；(2)同「炫」字\n术\tseot6\t技术，术士，术语，术数\n街\tgaai1\t街道，街坊，街头巷尾，街市，街谈巷议，逛街\n衙\tngaa4\t衙门，衙役\n卫\twai6\t卫生，卫星，守卫\n胡\twu4\t胡同\n衢\tkeoi4\t通衢\n同\tdung6\t腹泻\n同\ttung4\t胡同\n冲\tcung1\t冲突，冲动，冲锋陷阵，冲刺，冲撞，冲击，要冲，冲口而出，首当其冲\n冲\tcung3\t(1)猛烈；(2)向著\n衡\twaang4\t通「横」字\n衡\thang4\t衡山，衡量，平衡，均衡\n衍\thin2\t「衍jin5」的异读字\n衍\tjin2\t「衍jin5」的异读字\n衍\tjin5\t衍文，衍生，衍射，衍极，衍说，衍义，衍庆，衍绎，衍变，衍圣公，衍声复词，推衍，敷衍，繁衍\n衖\thong6\t同「巷」字\n衖\tlung6\t「衖long6」的异读字\n行\thaang4\t「行haang4」的异读字\n行\thang4\t行动，实行，行走，步行\n行\thang6\t品行，道行，暴行，操行\n行\thong4\t行列，银行，行业，改行\n行\thong6\t行行(刚健的样子)\n表\tbiu2\n衩\tcaa3\t衩衣，开衩\n衪\tji4\t(1)衣袖；(2)裳裙的边\n衧\tjyu1\t诸衧\n衫\tsaam1\t衬衫，长衫，汗衫，不衫不履，白发青衫\n衱\tgit3\t衣服的后襟\n袀\tgwan1\t袀服\n袂\tmai6\t分袂，联袂，攘袂切齿\n衲\tnaap6\t老衲，棉衲\n衼\tzi1\t衹衼(僧尼所穿的法衣)\n衶\tzung6\t裤子\n衴\tdam2\t被边\n袟\tdit6\t同「帙」字\n袚\tfat1\t(1)蔽膝；(2)蛮服\n袧\tgau1\t卷折\n袘\tji4\t(1)衣袖；(2)衣中\n袁\tjyun4\t姓氏\n衾\tkam1\t同衾\n袪\tkeoi1\t袖口\n袍\tpou4\t袍泽，袍服，袍子，同袍\n袑\tsiu6\t(1)裤子的上半部；(2)衣襟\n袒\ttaan2\t袒护，袒胸露乳\n袖\tzau6\t袖口，袖珍，袖子，袖扣，袖手\n袨\tjyun6\t黑色衣服\n袡\tjim4\t(1)衣边；(2)古时女子出嫁所穿的盛装\n袉\tto4\t(1)衣服的大襟；(2)拖曳\n袎\taau3\t袜筒\n袃\tcaai3\t袃蒯(刺鲠)\n袋\tdoi6\t袋鼠，布袋，酒囊饭袋，袋熊，口袋，暗袋，纸袋，塑胶袋，皮袋，钱袋，手袋，背袋，睡袋，烟袋，热水袋，眼袋，脑袋，掉书袋\n袱\tfuk6\t袱驼，包袱，镜袱\n袈\tgaa1\t袈裟\n袺\tgit3\t把衣襟向上提起，用以兜揽东西\n裀\tjan1\t(1)夹衣；(2)内衣；(3)通「茵」字，意指床垫\n袽\tjyu4\t袽塞\n裉\tkang3\t煞裉，抬裉\n袤\tmau6\t广袤\n袾\tzyu1\t袾襦\n袙\tpaak3\t同「帕」字\n袬\tjuk6\t同「育」字\n补\tbou2\t补偿，补充，补救，补给，补缀，补白\n裁\tcoi4\t裁定，裁判，裁决，裁撤，裁减，剪裁，裁缝\n裌\tgaap3\t同「袷」字\n袲\tji4\t古宋国地\n裕\tjyu6\t裕如，充裕，富裕，应付裕如，丰裕，优裕\n裙\tkwan4\t裙子，围裙，裙裾，裙钗，裙带关系，荆钗布裙\n裂\tlit6\t裂痕，裂开，裂缝，裂口，裂纹，裂隙\n裞\tseoi3\t馈赠死者的衣被\n裋\tsyu6\t裋褐僮仆穿的粗布短衣，以褐布竖裁之，因得「竖」音\n裖\tzan3\t(1)同「袗」字；(2)重叠密集堆在一起\n袶\tgong3\t衱袶\n裱\tbiu2\t裱画，装裱\n裾\tgeoi1\t(1)衣之大襟；(2)衣服前后部分\n裷\tgwan2\t通「衮」字\n裛\tjap1\t(1)缠绕；(2)香气熏染侵袭\n裔\tjeoi6\t苗裔，后裔，华裔\n裺\tjim2\t(1)衣领；(2)小儿涎衣；(3)衣缝缘边\n裘\tkau4\t狐裘，集腋成裘皮衣\n裲\tloeng5\t裲裆\n裴\tpui4\t(1)姓氏；(2)长衣貌\n裟\tsaa1\t袈裟\n裧\tsim4\t(1)同「幨」字；(2)同「襜」字；(3)古代装饰柩车的裙绿\n装\tzong1\t装置，装备，装饰，装甲，装卸，装配，装载，装扮，装修，装璜，装模作样，装蒜\n裰\tzyut3\t补裰，直裰缝补破衣\n裗\tlau4\t(1)衣缕；(2)古时妇女长袍上的装饰\n裚\tzai3\t(1)折断；(2)裁断\n褓\tbou2\t褓姆，襁褓\n褙\tbui3\t裱褙\n褋\tdip6\t单衣\n裻\tduk1\t衣背中绛\n褔\tfu3\t(1)充满；(2)藏；(3)量词；(4)同「副」字\n复\tfuk1\t重复，复杂\n裈\tgwan1\t裤子\n裹\tgwo2\t包裹，裹足不前，裹伤，裹上，裹住，裹胁，裹脚\n褕\tjyu4\t襜褕\n裳\tsoeng4\t衣裳，霓裳，霓裳羽衣，衣裳楚楚\n褖\tteon3\t(1)王后的便服；(2)有边沿装饰的衣服\n制\tzai3\t制造，制作，制品，制成，制图，制版，复制，粗制滥造\n褉\tkit3\t褉襦(短袄)\n裮\tcoeng1\t披衣而不结带\n裶\tfei1\t裶裶(衣长的样子/旗的样子)\n裬\tling4\t马腹带\n裍\tkwan2\t(1)成就；(2)韏衣\n裫\tjyun1\t衣襟袖曲之处\n褒\tbou1\t褒扬，褒贬，褒奖，褒美，褒衣博带\n褫\tci2\t褫夺，褫夺公权\n褡\tdaap3\t褡膊\n裤\tfu3\t裤子，裤袋，短裤，裤管，裤袜，裤带，裤腰，裤脚，裤裙，裤裆\n褥\tjuk6\t被褥\n褯\tzik6\t褯子\n褅\ttai3\t小儿的衣被\n褗\tjin2\t(1)衣领；(2)隐被\n裐\tgyun1\t褊\n襒\tbit6\t襒席(拂拭坐席，以示尊敬)，侧行襒席擦拭\n褾\tbiu2\t褾背，背褾\n褧\tgwing2\t同「䌹」字\n褰\thin1\t褰裳\n襁\tkoeng5\t襁褓\n褵\tlei4\t同「缡」字\n裢\tlin4\t褡裢\n褭\tniu5\t騕褭(古骏马名)\n襂\tsam1\t襂𫄥\n褷\tsi1\t离褷(羽毛初生貌/纱幔)\n褼\tsin1\t褊褼\n褱\twaai4\t同「怀」字\n褢\twaai4\t同「怀」字\n褬\tsong2\t衣服破旧\n褣\tjung4\t襜褕的别名\n褩\tbun1\t衣表\n襌\tdaan1\t单衣\n裥\tgaan2\t衣服上之折子\n襋\tgik1\t衣领\n亵\tsit3\t亵衣，亵玩，亵渎，猥亵，亵渎神明；(1)贴身衣服；(2)轻慢；(3)污秽；(4)亲近\n襄\tsoeng1\t襄助，襄理，共襄义举，襄阳，襄赞，襄王\n褽\twai3\t垫在下面\n襐\tzoeng6\t装饰\n𫋹\tjiu4\t剑套\n裆\tdong1\t裤裆，开裆裤，裲裆(古代妇女穿著的背心)\n襛\tnung4\t襛华，夭桃襛李\n襚\tseoi6\t古吊祭之礼，向死者赠送衣物\n襡\tsuk6\t(1)长襦；(2)衣袖\n襣\tbei6\t合裆的贴身内裤\n襞\tbik1\t襞积，襞褶，皱襞\n襦\tjyu4\t短衣\n褴\tlaam4\t褴褛，筚路褴褛\n襙\tcou4\t衣\n摆\tbaai2\t下摆，直摆(古代的家居常服；后指僧服)上衣、裙子等的下缘部分\n襭\tkit3\t用衣襟兜东西\n襫\tsik1\t袯襫\n衬\tcan3\t衬衫，衬托，衬衣，配衬\n襱\tlung4\t(1)裤脚管；(2)裤裆；(3)裙\n襩\tsuk1\t同「襡」字\n襕\tlaan4\t襕裙\n襺\tgaan2\t纯用新丝绵所铺的袍\n襻\tpaan3\t纽襻儿，扣襻儿\n襹\tsi1\t襳襹\n衣\tji1\t衣车，衣服，衣冠禽兽，棉衣，衬衣\n衣\tji3\t衣锦还乡，衣绣昼行\n衭\tfu1\t衣服的前襟\n衭\tfu3\t同「裤」字，粤语用字\n衹\tkei4\t(1)同「祇」字；(2)僧衣\n衹\tzi2\t同「祇」字\n衯\tfan1\t衣袍长大\n衯\tpun4\t衣长好貌\n被\tbei6\t被告，被害，被动\n被\tpei1\t同「披」字\n被\tpei5\t棉被\n衰\tceoi1\t衰序，等衰\n衰\tseoi1\t衰亡，衰朽，衰退，衰弱，衰落，衰微，衰竭，衰飒，衰颓，盛衰，兴衰\n袛\tdai1\t袛裯\n袛\tzi1\t但是\n袓\tze1\t袓厉(县名)\n袓\tzeoi6\t(1)爱好；(2)色白之美\n袷\tgaap3\t袷衣，袷裙夹衣\n袷\thap1\t维吾尔族无领大衣\n袷\tgip3\t相交的衣领\n袌\tpaau3\t同「泡」字\n袌\tpou5\t同「抱」字\n袹\tbaak3\t袹腹(裹肚)\n袹\tmat6\t(1)初丧者用来束发的头巾；(2)古代男子包发的头巾\n裨\tbei1\t裨益，裨补阙漏，裨助，无裨于事\n裨\tpei4\t裨将，偏裨\n裯\tcau4\t衾裯单薄的被或床帐\n裯\tdou1\t衹裯\n褊\tbin2\t褊狭，褊小，褊急\n褊\tpin5\t褊跹\n袆\tfai1\t古王后祭服\n袆\twai4\t妇人用以蔽膝物\n褎\tjau6\t(1)服饰盛美的样子；(2)禾苗渐长的样子\n褎\tzau6\t同「袖」字\n褑\tjyun4\t衣\n褑\tjyun6\t衣襟上佩玉的带\n褆\ttai4\t(1)衣厚的样子；(2)衣服好的样子\n褆\tsi6\t衣服端正的样子\n褮\tang1\t古代小殓时，给死者脸上覆盖的布衣\n褮\tjing3\t衣服上的折子\n襳\tsam1\t襳襹\n襳\tsim1\t(1)小袄；(2)妇女上衣用作装饰的长带\n衿\tgam1\t「衿kam1」的异读字\n衿\tkam1\t同「襟」字\n衽\tjam5\t「衽jam6」的异读字\n衽\tjam6\t衣襟\n衵\tjat6\t衵服，汗衵，解衵\n衵\tnik1\t「衵jat6」的异读字\n衵\tnik6\t「衵jat6」的异读字\n衷\tcung1\t衷心，苦衷，无动于衷，衷曲，衷言，衷情，衷款，衷诚，衷肠，折衷，言不由衷\n衷\tzung1\t「衷cung1」的异读字\n袢\tfaan4\t「袢faan4」的异读字\n袢\tpaan3\t(1)暑天穿的白色细葛内衣；(2)溽热\n袗\tcan2\t(1)单衣；(2)玄衣\n袗\tzan2\t「袗can2」的异读字\n袕\tseot6\t「袕jyut6」的异读字\n袕\tjyut6\t(1)衣服开孔；(2)鬼衣；(3)长衣\n袼\tgaak3\t「袼gok3」的异读字\n袼\tgok3\t袼褙\n衮\tgwan2\t衮衮诸公，衮服\n衮\tkwan2\t「衮gwan2」的异读字，口语读音\n裎\tcing2\t「裎cing4」的异读字\n裎\tcing4\t裸裎，袒裼裸裎(见孟子)\n裒\tfau4\t「裒pau4」的异读字\n裒\tpau4\t裒刻，裒会，裒辑，裒敛，裒多益寡聚也。见《尔雅•释诂》\n里\tlei5\t「里leoi5」的异读字\n里\tleoi5\t同「\n褂\tgwaa3\t大褂，外褂，马褂，单褂\n褂\tkwaa2\t「褂gwaa3」的异读字\n裸\tlo2\t裸体，裸露，赤裸裸，裸子植物\n裸\tlo5\t「裸lo2」的异读字\n袅\tniu1\t「袅niu5」的异读字\n袅\tniu5\t袅绕，袅娜\n褐\thot3\t褐色，短褐，褐夫，竖褐，裋褐，被褐怀玉(喻贤士隐藏才能不为人知。见《老子˙第七十章》：「是以圣人被褐怀玉」。)；(1)黄黑色；(2)粗衣；(3)喻贫穷卑贱的人\n褐\thot6\t「褐hot3」的异读字\n褦\tnaai6\t褦襶\n褦\tle5\t「褦naai6」的异读字\n褦\tnoi6\t「褦naai6」的异读字\n褟\tdaap3\t「褟taap3」的异读字\n褟\ttaap3\t汗褟儿；(1)缀在衣物上的花边；(2)贴身短衫\n褪\ttan3\t褪色，褪去，褪下\n褪\tteoi3\t「褪tan3」的异读字\n褞\twan1\t「褞wan2」的异读字\n褞\twan2\t同「缊」字\n幞\tbuk6\t「幞fuk6」的异读字\n幞\tfuk6\t包幞\n袯\tbut3\t「袯but6」的异读字\n袯\tbut6\t袯襫\n𫋷\tzaak6\t寒不施𫋷\n𫋷\tdok6\t「𫋷zaak6」的异读字\n襟\tgam1\t「襟kam1」的异读字\n襟\tkam1\t襟怀，连襟，捉襟见肘\n𫋻\tkui2\t「𫋻kui3」的异读字\n𫋻\tkui3\t(1)古指消除灾病；(2)古凶礼之一\n裣\tlim5\t裣衽\n裣\tlim6\t「裣lim5」的异读字\n袄\tou2\t棉袄，夹袄\n袄\tou3\t「袄ou2」的异读字\n袄\tngou2\t「袄ou2」的异读字\n袄\tngou3\t「袄ou2」的异读字\n襜\tcim1\t襜褕\n襜\tsim4\t「襜cim1」的异读字\n襜\tzim1\t「襜cim1」的异读字\n襢\tdaan6\t「襢taan2」的异读字\n襢\ttaan2\t素雅、无文彩\n襑\ttaam4\t「襑cam4」的异读字\n襑\tcam4\t衣服宽大\n襮\tbok3\t表襮，素衣朱襮\n襮\tbuk1\t「襮bok3」的异读字\n襮\tbuk6\t「襮bok3」的异读字\n袜\tmaat6\t「袜mat6」的异读字\n袜\tmat6\t袜子，袜带，袜线，衣袜，布袜，丝袜\n襶\tdaai3\t褦襶\n襶\tde2\t「襶daai3」的异读字\n袭\tzaap6\t袭击，袭取，世袭，因袭，抄袭，偷袭\n袭\tzap6\t「袭zaap6」的异读字\n襼\tmai3\t「襼ngai6」的异读字\n襼\tngai6\t衣袖\n袸\tzin6\t(1)小带；(2)褰脬衣\n袸\tcyun4\t「袸zin6」的异读字\n袸\tzyun6\t衣襟\n褚\tcyu2\t姓氏\n褚\tcyu5\t褚衣\n褚\tzyu2\t「褚cyu5」的异读字\n裼\ttai3\t婴儿的衣服\n裼\tsik3\t袒裼\n裼\ttik1\t(1)「裼sik3」的异读字；(2)「裼tai3」的异读字\n褶\tzaap3\t「褶zaap6」的异读字\n褶\tzaap6\t骑服\n褶\tdip6\t(1)夹衣；(2)上衣\n褶\tzip3\t百褶裙\n褛\tlau1\t粤语用字，意指「大衣」\n褛\tlau5\t「褛leoi5」的异读字\n褛\tleoi5\t褴褛\n西\tsai1\t西方，西面，西瓜，西湖，西装，西元，西域，西风，西天\n要\tjiu1\t要求，要约，要挟，要盟，要誉，高要县\n要\tjiu2\t要褭\n要\tjiu3\t要人，要津，要素，要害，要塞，要冲，重要，概要\n覃\ttaam4\t覃思，覃恩\n覃\tcam4\t姓氏\n襾\taa3\t(1)部首；(2)覆盖\n襾\thaa2\t「襾aa3」的异读字\n襾\tngaa3\t「襾aa3」的异读字\n覂\tfung2\t车马翻倒\n覂\tfung3\t「覂fung2」的异读字\n覆\tfau6\t覆盖\n覆\tfu3\t「覆fau6」的异读字\n覆\tfuk1\t覆灭，倾覆，反复，答复\n规\tkwai1\t规矩，规定，规划，规模，规则，规条\n觅\tmik6\t觅得，觅食，觅保，觅句\n覕\tpit3\t同「瞥」字\n视\tsi6\t视觉，视力，电视，漠视，忽视，怒目而视，虎视眈眈\n覗\tzi6\t覗敌\n覜\ttiu3\t(1)古代诸侯每三年行聘问相见的礼仪；(2)同「眺」字\n觋\that6\t巫觋(说文解字：能斋肃事神明者，在男曰觋，在女曰巫。)男巫\n覝\tlim4\t察看\n覟\tzi3\t详细地察看\n覞\tjiu6\t(1)两人相对而视；(2)普视\n覤\tgwik1\t覤覤\n覣\twai1\t(1)用眼色引诱；(2)发声词；(3)美好貌\n覢\tsim2\t忽然出现\n觑\tceoi3\t觑步，觑付，觑空，觑绝，觑眼，打觑，偷觑，观觑，可觑，面面相觑，小觑；(1)窥视；(2)看\n覶\tlo4\t覶缕\n𫌭\tmei4\t窥视、探察\n览\tlaam5\t览胜，便览，泛览，阅览，游览\n觌\tdik6\t觌武，觌面(当面)，眇觌；(1)相见；(2)拜访\n覾\tsam2\t(1)仔细视察；(2)看见\n见\tgin3\t见外，见效，见习，见解，见闻，见机，见证，见识，见仁见智，见异思迁，见义勇为，见微知著，见猎心喜，主见，看见，远见，真知灼见\n见\tjin6\t见龙在田\n亲\tcan1\t亲友，亲切，亲信，亲族，亲善，亲贵，亲暱，双亲，亲痛仇快\n亲\tcan3\t亲家\n觉\tgaau3\t午觉，睡觉\n觉\tgok3\t觉悟，觉得，觉察，觉醒，知觉，味觉，视觉，感觉，听觉\n观\tgun1\t观光，观念，观音，观看，观风，观望，观测，观感，观察，观摩，观赏，观礼，观点，观往知来，观过知仁，奇观，参观，人生观，洞若观火\n观\tgun3\t道观，庵观，鼻观\n觇\tcim1\t「觇zim1」的异读字\n觇\tzim1\t偷看\n觎\tjyu4\t觊觎\n觎\tjyu6\t「觎jyu4」的异读字\n觏\tgau3\t罕觏\n觏\tkau3\t「觏gau3」的异读字\n觊\tgei3\t觊觎(存非分之想)\n觊\tkei3\t「觊gei3」的异读字\n覮\tjing4\t迷惑\n覮\tping1\t「覮jing4」的异读字\n覭\tmik6\t「覭ming4」的异读字\n覭\tming4\t(1)看不真切；(2)眉目之间\n觐\tgan2\t「觐gan6」的异读字\n觐\tgan3\t「觐gan6」的异读字\n觐\tgan6\t觐见，觐礼，朝觐\n𫌪\tmak6\t察看\n𫌪\tmik6\t(1)同「觅」字；(2)「𫌪mak6」的异读字\n觔\tgan1\t觔斗\n觓\tkau4\t同「觩」字\n觕\tcou1\t同「粗」字\n觖\tkyut3\t觖望\n觙\tgap1\t同「伋」字\n觝\tdai2\t觝触(同抵触)\n觚\tgu1\t操觚\n觡\tgaak3\t(1)骨角；(2)麋鹿有分叉的角\n觥\tgwang1\t觥筹交错，觥觥(刚直)\n觢\tsai6\t两角耸直的牛\n觤\tgwai2\t羊角一长一短\n觩\tkau4\t兽角上曲的样子\n觨\twan6\t牛角上水\n觰\tzaa1\t觰沙\n觬\tngai4\t兽角弯歪\n觲\tsing1\t觲觲(即骍骍，调和的样子)\n觞\tsoeng1\t觞咏\n觷\thok6\t整治兽角，使成为器物\n觺\tji4\t头角觺觺\n觼\tkyut3\t有舌的环，用来縏辔\n觻\tluk6\t觻得(古县名)\n觾\tjin3\t同「燕」字，意指燕子\n角\tgok3\t角力，角色，角落，角逐，主角，牛角，菱角\n角\tluk6\t角里\n觜\tzeoi2\t同「嘴」字\n觜\tzi1\t二十八宿之一\n觭\tgei1\t单独\n觭\tkei1\t兽角一俯一仰\n觳\tkok3\t俭觳\n觳\thuk6\t觳觫\n觛\tdaan3\t「觛daan6」的异读字\n觛\tdaan6\t细小的圆形酒具，用于古代礼仪\n觠\tgyun3\t「觠kyun4」的异读字\n觠\tkyun4\t(1)兽角弯曲；(2)变弯、蜷曲\n觫\tcuk1\t觳觫\n觫\tsuk1\t「觫cuk1」的异读字\n觱\tbat1\t「觱bit1」的异读字\n觱\tbit1\t觱篥，觱沸，觱发(风寒)；(1)乐器名；(2)泉水涌出貌\n觯\tzi1\t「觯zi3」的异读字\n觯\tzi3\t古代饮酒器\n触\tcuk1\t「触zuk1」的异读字\n触\tzuk1\t触觉，感触，触类旁通，触犯，触及，触角，触动，接触，一触即发，触目惊心，触景生情\n觿\tfai1\t「觿kwai4」的异读字\n觿\tkwai4\t古代解结的锥子\n解\tgaai2\t解乏，解决，解放，解剖，解冻，解除，解救，解脱，解诂，解散，解围，解释，解甲归田，解衣推食，解弦更张，瓦解\n解\tgaai3\t解差，解送，押解\n解\thaai5\t「解haai6」的异读字\n解\thaai6\t解县(山西省旧县)姓氏\n觟\twaa6\t有角母羊\n觟\thaai5\t獬豸\n觟\thaai6\t「觟haai5」的异读字\n言\tjin4\t言论，言语，方言，言辞，言明\n讣\tfu6\t讣闻，讣告\n訇\tgwang1\t訇然\n訄\tkau4\t逼迫\n训\tfan3\t训练，训导，训诫，训令，训斥，训示，教训\n记\tgei3\t记者，记录，记载，记忆，记取，记号，记住，记忆犹新，记叙，记诵\n訏\theoi1\t訏谟，川泽訏訏\n讱\tjan6\t其言也讱言语迟缓、谨慎\n讪\tsaan3\t讪笑，讪议，搭讪(攀谈)，讪讪(难为情貌)；(1)嘲讽；(2)诽谤\n讯\tseon3\t讯息，讯号，审讯，资讯\n托\ttok3\t托付，托梦，托管，托辞，托大，托孤，托福，交托，寄托\n讨\ttou2\t讨论，讨厌，讨教，讨价还价，检讨\n设\tcit3\t设计，设备，设立，设置，设施，设想，设身处地\n访\tfong2\t访问，探访，明查暗访，访客，访求，访亲，采访\n訧\tjau4\t寡訧，怨天訧人\n诀\tkyut3\t诀窍，要诀，诀别\n讶\tngaa6\t讶异，惊讶\n讹\tngo4\t讹诈，讹传，讹言\n讼\tzung6\t讼案，讼费，讼事\n𫍚\tjiu1\t(1)同「妖」字；(2)巧言的样子\n詏\taau2\t说拗话\n词\tci4\t词汇，诗词，义正词严，词语，词曲，词句，词意，词令，词典，词牌，词藻，词人，词章，言词，讲词，单词，词锋锐利，词不达意\n诋\tdai2\t诋毁，诋毁\n詄\tdit6\t遗忘\n讵\tgeoi6\t讵料，讵意，讵知\n诃\tho1\t同「呵」字\n詍\tjai6\t多言\n詈\tlei6\t詈骂\n詅\tling4\t叫卖\n评\tping4\t评估，评价，评论，评议，评分，批评\n诉\tsou3\t诉求，诉讼，诉愿，诉请，诉苦，诉说，诉冤\n咏\twing6\t咏叹，吟咏，歌咏，咏絮之才\n诈\tzaa3\t诈骗，欺诈，诈称，诈死，敲诈，尔虞我诈\n注\tzyu3\t注册，注明，注解，注销，注脚，注释\n詌\tgam3\t口闭\n詙\tbat6\t人名用字\n𫟟\tpun3\t巧言\n诧\tcaa3\t诧异，惊诧\n誃\tci2\t分离\n诠\tcyun4\t诠释，诠说，真诠\n诙\tfui1\t诙谐\n该\tgoi1\t该当，活该，应该，命不该绝\n诡\tgwai2\t诡异，诡谲，诡辩，诡诈，诡计，诡奇，诡辞，吊诡；(1)欺诈；(2)奇异\n诩\theoi2\t自诩，夸诩\n夸\tkwaa1\t夸张，夸大，浮夸\n诣\tngai6\t造诣，苦心孤诣，诣阙(到天子的宫阙见驾)；(1)拜访、进见上级；(2)修为境界\n询\tseon1\t询问，查询\n诗\tsi1\t诗人，诗词，诗歌，诗意，诗兴，诗篇，诗情画意\n诚\tsing4\t诚意，诚恳，诚实，诚信，诚心\n话\twaa6\t说话，话题，话语，话柄，话筒，话头，话别，话旧\n訿\tzi2\t诋訿(非议)；(1)诋毁；(2)同「訾」字\n詹\tzim1\t詹事\n诛\tzyu1\t诛灭，诛杀，诛戮，诛心之论，天诛地灭，伏诛\n詴\twui4\t(1)呼声；(2)呼人\n詺\tming6\t(1)辨别物名；(2)直言、真谛\n誁\tpin5\t(1)说也；(2)助言、帮腔\n诲\tfui3\t诲人不倦，教诲\n诫\tgaai3\t诫律，告诫\n𫍪\tgei6\t(1)告诫；(2)禁忌\n诰\tgou3\t诰封，诰命，诰诫，制诰\n誙\thang1\t誙誙(竞相奔走的样子)\n诱\tjau5\t诱惑，诱人\n诬\tmou4\t诬陷，诬告，诬赖，诬蔑，诬蔑，诬害，诬控，诬诋\n误\tng6\t误会，误解，误导，误传，误入歧途，误杀，误打误撞，误闯，误人子弟，误用，误事，误人误己，误时\n誓\tsai6\t誓言，誓词，誓师，誓约，誓不两立，誓不甘休，宣誓\n志\tzi3\t志喜，志庆，杂志\n诵\tzung6\t诵经，诵读，诵习\n𫍨\tzan3\t同「震」字\n諃\tcam1\t善言\n谄\tcim2\t谄媚，谄笑，胁肩谄笑\n諔\tcuk1\t諔诡(奇异，见《庄子˙德充符》)\n诼\tdoek3\t谣诼\n诽\tfei2\t诽谤\n课\tfo3\t课题，课税，课外活动，课程，课业，课本，课室，课堂，课目，课文，课程标准\n諕\thaak3\t威吓\n諆\thei1\t欺骗\n谀\tjyu4\t谀词，谄谀，阿谀奉承\n訚\tngan4\t訚訚\n谁\tseoi4\t谁人\n谈\ttaam4\t谈判，谈话，谈论，谈心，谈天，谈吐，谈笑，谈笑风生，谈天说地，谈虎色变，谈笑自若\n诿\twai2\t诿过\n诹\tzau1\t咨诹，诹访，诹吉；(1)商量､咨询；(2)选择\n诸\tzyu1\t诸公，诸葛，诸君，诸侯，诸子百家，失诸交臂\n諘\tbiu2\t称扬\n誽\tngai6\t刺探\n諀\tpei2\t诽谤\n諙\twaa6\t同「话」字\n誸\tjin4\t(1)急迫；(2)坚正\n谛\tdai3\t真谛，妙谛，谛视，谛听\n谍\tdip6\t谍报，间谍，谍谍；(1)秘密打探情报；(2)同「喋」字\n讽\tfung3\t讽刺，反讽，讽谕，讽诵，嘲讽\n谏\tgaan3\t劝谏\n谐\thaai4\t谐音，谐和，谐谑，谐趣，谐音，诙谐，和谐\n𫍯\thaam4\t和协\n諠\thyun1\t(1)同「谖」字；(2)同「喧」字\n諲\tjan1\t敬\n谚\tjin6\t谚语，谣谚，古谚，俚谚，民间口传\n谑\tjoek6\t谑称，谑而不虐，戏谑\n谕\tjyu6\t谕示，谕旨，训谕\n谋\tmau4\t阴谋，谋求，谋生，谋杀，谋取，谋职，谋利，谋略，谋事，谋反\n諵\tnaam4\t諵諵\n谔\tngok6\t正直之言\n诺\tnok6\t诺言\n谌\tsam4\t(1)相信；(2)真诚\n諟\tsi6\t諟正审核、明辨、校正\n谓\twai6\t称谓，无谓，谓语，所谓\n诨\twan6\t诨名，诨话，插科打诨戏谑的言辞\n諈\tzeoi6\t相累及\n咨\tzi1\t咨商，咨询，咨议\n諨\tfuk1\t言备\n諻\twaang4\t(1)语声；(2)音乐\n謈\tbok6\t痛极而叫喊\n謒\tcoeng1\t轻声说话\n讲\tgong2\t讲话，演讲，讲义\n謑\thai5\t謑诟(耻辱、诟骂)\n谦\thim1\t谦虚，谦和，谦称，谦让，谦恭，谦词，谦辞\n謞\thok6\t謞謞(幸灾乐祸、助纣为虐)\n謍\tjing4\t(1)小声；(2)往来的样子\n谣\tjiu4\t谣言，歌谣，辟谣，谣传，民谣，童谣\n谧\tmat6\t安谧，静谧，恬谧，宁谧\n𫍸\tsin3\t以言惑人\n谡\tsuk1\t谡谡，谡尔，马谡\n謕\ttai4\t(1)转相诱语；(2)同「啼」字\n誊\ttang4\t誊录，誊写，誊清，誊本\n谢\tze6\t谢忱，凋谢，敬谢不敏，谢恩，谢意，谢礼，谢罪，谢绝，谢幕，谢师宴，答谢，道谢，鸣谢，感谢，酬谢，辞谢，新陈代谢\n謢\tlou1\t口头承担\n謻\tci2\t謻门，謻台\n謼\tfu1\t同「呼」字\n谨\tgan2\t谨慎，谨防，严谨，谨小慎微，谨言慎行，谨记在心\n謣\tjyu4\t虚夸、胡说\n謰\tlin4\t謰语(文字学上指两个音节联缀成义而不能分割的词)\n谬\tmau6\t谬误，谬论\n谟\tmou4\t典谟\n谪\tzaak6\t谪仙，贬谪，迁谪\n謪\tsoeng1\t同「商」字\n謮\tzaak3\t(1)同「啧」字，大声呼叫；(2)同「责」字，责让\n謺\tzip3\t謺讘(多言)\n謽\tkoeng5\t说话倔强\n謥\tcung3\t謥𫍣(言急)\n譒\tbo3\t(1)谣言；(2)同「播」字\n譈\tdeoi6\t怨恶\n讥\tgei1\t讥笑，讥讽，反唇相讥，讥评，讥刺\n𫍻\thei1\t𫍻𫍻出出(形容鬼神的声音)\n𫍢\tnaau4\t(1)争辩；(2)喧嚣\n谱\tpou2\t谱写，谱子，谱系，曲谱\n谭\ttaam4\t(1)同「谈」字；(2)姓氏\n哗\twaa1\t哗然，諠哗，哗众取宠\n譓\twai6\t(1)辩察；(2)顺服\n譔\tzaan6\t同「撰」字\n证\tzing3\t证明，证实，证据，证件，证书，证物，证道，证验，证悟\n𫍤\tgiu2\t收取\n譇\tce1\t譇拏(言辞晦涩、支离难解)\n𫟠\tcin2\t虚妄的言论\n譕\tmou4\t(1)诱词；(2)同「谟」字，意谓议谋\n譗\tzaap3\t形容人说话没有理路\n譐\tzyun2\t同「噂」字\n譀\tham3\t(1)说大话；(2)嘲弄；(3)怒吼\n警\tging2\t警察，机警，歼一警百，警告，警觉，警报，警戒，警惕，警世\n譥\tgiu3\t(1)揭发别人的阴私；(2)同「噭」字\n译\tjik6\t译音，翻译，译注，译者，译笔\n𫍦\tnung4\t多言\n譬\tpei3\t譬如，譬喻\n谵\tzim1\t谵妄，谵语\n譪\toi2\t同「蔼」字\n譝\tsing4\t赞誉\n譠\ttaan1\t欺骗\n譧\tlim4\t言不正\n谴\thin2\t谴责\n譺\tjik6\t欺绐\n䜧\tsap1\t讷䜧\n护\twu6\t护士，护理，护送，护卫，护短，护持，护花\n诪\tzau1\t诅咒\n譻\tjing1\t同「嘤」字\n譹\thou4\t号哭\n谉\tsam2\t谉悉\n谫\tzin2\t谫薄，材谫，学识谫陋浅薄\n譿\twai6\t同「慧」字\n讄\tleoi5\t(1)积德以求福气；(2)同「诔」字\n变\tbin3\t变化，演变，变更\n䜩\tjin3\t同「醼」字\n詟\tzip3\t詟服，震詟，詟敌；(1)惧怕；(2)慑服\n讈\tlik6\t形容人巧言令色\n谗\tcaam4\t谗臣，进谗，谗言佞语，谗害，谗间，听谗惑乱；(1)说他人坏话；(2)颠倒是非以中伤别人的人\n讔\tjan2\t(1)隐语；(2)谜语\n让\tjoeng6\t让步，谦让，退位让贤，出让，让路，让座，让受人\n赞\tzaan3\t赞赏，颂赞，赞不绝口，赞美，赞许，赞扬，赞誉，赞叹，称赞，盛赞，夸赞\n谠\tdong2\t谠论\n讟\tduk6\t怨讟，谤讟；(1)怨恨；(2)诽谤\n𫍙\tdaan3\t通「诞」字\n𫍙\tji4\t𫍙𫍙(洋洋自得的样子)\n许\theoi2\t许可，许愿，默许，嘉许，容许，特许，宁许，也许，少许\n许\tfu2\t邪许(《淮南子˙道应》：「今夫举大木者，前呼邪许，后亦应之，此举重劝力之歌也。」)\n䜣\tjan1\t同「欣」字\n䜣\tngan4\t䜣䜣(又写作訚訚，恭谨诚敬的样子)\n䜣\thei1\t䜣合(和气交感，又泛指意气相投)\n訰\tzeon1\t(1)乱言的样子；(2)心乱的样子\n訰\tzeon3\t訰訰(杂乱)\n诎\twat1\t诎指，诎寸伸尺，充诎(得意忘形)，撙诎(谦卑)；(1)弯曲；(2)言语钝拙；(3)冤屈；(4)\n诎\tzeot1\t贬低，同「黜」字\n𫍡\tji4\t𫍡𫍡(自得的样子)浅意\n𫍡\tto4\t欺\n𫍡\tto5\t轻\n詶\tcau4\t同「酬」字\n詶\tzau3\t通「咒」字\n详\tcoeng4\t详细，安详\n详\tjoeng4\t同「佯」字\n诜\tsaang2\t粤语用字\n诜\tsan1\t发言、询问\n訾\tci1\t同「疵」字\n訾\tci4\t同「疵」字\n訾\tzi1\t(1)姓氏；(2)同「赀」字\n訾\tzi2\t訾议，无可訾议；(1)诋毁；(2)厌恶；(3)瑕疵\n𫍣\tdung6\t(1)说谎；(2)会；(3)调；(4)侩\n𫍣\ttung4\t共同\n语\tjyu5\t语言，词语，语重心长，语塞，语系，语法，语音，语病，语气，语汇，语意，语调，语录，语无伦次，语焉不详，成语，俗语\n语\tjyu6\t动词，意谓告诉\n说\tseoi3\t说服，游说，说客\n说\tjyut6\t同「悦」字\n说\tsyut3\t说明，说笑，说话，说教，说谎，小说，传说\n誏\tlong5\t(1)同「朗」字；(2)言之明\n誏\tlong6\t(1)闲言；(2)泛言；(3)戏言\n论\tleon4\t在诗文中为平仄所限时的读音，据《粤正》\n论\tleon6\t论文，论列，论交，论旨，论述，论理，论著，论说，论敌，论调，论坛，论据，论战，论点，论题，论断，论证，论难，论辩，讨论，结论\n谅\tloeng4\t谅阴，子谅\n谅\tloeng6\t谅解，谅必\n諅\tgei1\t谋\n諅\tgei6\t(1)同「忌」字；(2)志\n𫍧\tci1\t(1)不知；(2)以言相诬\n𫍧\tloi6\t吴\n谝\tpin4\t巧言\n谝\tpin5\t自夸\n諿\tcap1\t(1)和谐；(2)申辩\n諿\tseoi2\t智谋\n謜\tcyun4\t言语和悦\n謜\tjyun4\t(1)和缓地说话；(2)审度\n謓\tcan1\t同「嗔」字，意指恚怒\n謓\tzan3\t冷笑\n𫍴\tleoi5\t委曲\n𫍴\tlou4\t謰𫍴(形容委曲繁杂，絮语不清)\n谩\tmaan4\t欺谩，谩天谩地，𫍙谩，誖谩\n谩\tmaan6\t谩骂，诞谩，谩道\n謷\tngou4\t诋毁\n謷\tngou6\t同「傲」字\n謤\tbiu1\t言有所止\n謤\tpiu1\t言轻\n𫍹\tzaa2\t𫍹讶(大声斥责)\n𫍹\tze1\t(1)愚钝；(2)吟咏\n𫍹\tzo3\t同「诅」字，意指诅咒\n謶\tze1\t啰謶(多言)\n謶\tzoek3\t(1)谴责；(2)欺侮\n謶\tsyu3\t同「庶」字，意指希冀\n謵\tzaap6\t用言词使人惧怕\n謵\tcip3\t(1)小语；(2)姓氏\n识\tzi3\t款识，标识，默识，博闻强识\n识\tsik1\t识丁，识见，识别，识拔，识相，识破，识荆，识羞，识货，识趣，识鉴，常识，认识，学识\n读\tdau6\t句读\n读\tduk6\t读书，朗读，读本，读者，读物，阅读，诵读，宣读，读数，读秒，读卡机，读唇术，三读，攻读，破读，唯读记忆体\n订\tdeng6\t「订ding3」的异读字\n订\tding3\t订约，预订，缘订三生，订盟，订购，订阅，订货单，订交，订金，编订，拟订，厘订，考订，校订，签订，修订，增订，合订本\n计\tgai3\t计划，计算，计较，计数，估计，计谋\n计\tgei3\t「计gai3」的异读字\n讫\tgat1\t「讫ngat6」的异读字\n讫\tngat6\t收讫，查讫，起讫，验讫\n讧\thung3\t「讧hung4」的异读字\n讧\thung4\t讧乱，内讧\n讧\thung6\t「讧hung4」的异读字\n讦\tgit3\t「讦kit3」的异读字\n讦\tkit3\t攻讦，讦发，讦告，讦扬揭发、攻击别人的隐私\n讷\tnaap6\t「讷neot6」的异读字\n讷\tnat6\t「讷neot6」的异读字\n讷\tneot6\t讷涩，木讷，讷言敏行，讷口\n诐\tbei1\t「诐bei3」的异读字\n诐\tbei3\t诐行，诐辞\n诐\tpei4\t「诐bei3」的异读字\n诊\tcan2\t诊治，诊所，诊脉，诊视，诊疗，诊断，门诊，应诊\n诊\tzan2\t「诊can2」的异读字\n诂\tgu2\t训诂\n诂\tgu3\t「诂gu2」的异读字\n诇\tgwing2\t「诇hing3」的异读字\n诇\thing3\t诇伺，诇察，诇逻\n訹\tseot1\t利诱\n訹\tzeot1\t「訹seot1」的异读字\n诏\tziu3\t诏令，诏旨，诏制，诏书，诏狱，诏告天下，诏书挂壁\n诏\tziu6\t「诏ziu3」的异读字\n诅\tzo2\t「诅zo3」的异读字\n诅\tzo3\t诅咒，诅骂\n诟\tgau3\t诟病，诟骂，尤诟；(1)耻辱；(2)指责\n诟\tkau3\t「诟gau3」的异读字\n诖\tgwaa3\t诖误\n诖\twaa6\t「诖gwaa3」的异读字\n诓\tgwaang6\t「诓hong1」的异读字\n诓\tgwong6\t「诓hong1」的异读字\n诓\thong1\t诓哄，诓骗，诓言诈语\n诘\tgat1\t「诘kit3」的异读字\n诘\tkit3\t反诘，诘问，诘责，诘难；(1)责问；(2)追究\n诔\tleoi5\t「诔loi6」的异读字\n诔\tleoi6\t「诔loi6」的异读字\n诔\tloi6\t诔辞，哀诔，诔赞；(1)哀祭文；(2)述死者功德\n詻\tngaak3\t「詻ngaak6」的异读字\n詻\tngaak6\t言容詻詻；(1)严肃；(2)论讼；(3)逆击，直言争辩\n试\tsi3\t试验，尝试，初试啼声，试金石，试卷，试探，试问，试想，试图，试刀，试帖，试管，试婚，考试，测试，比试，笔试，面试，口试，石蕊试纸，小试牛刀，屡试不爽\n试\tsi5\t「试si3」的异读字\n詨\tgaau1\t「詨haau6」的异读字\n詨\thaau3\t「詨haau6」的异读字\n詨\thaau6\t(1)呼唤，大叫；(2)夸语；(3)象声词\n誖\tbui3\t「誖bui6」的异读字\n誖\tbui6\t同「悖」字\n诮\tciu3\t诮让，讥诮，诋诮，诮呵\n诮\tziu6\t「诮ciu3」的异读字\n诶\te6\t语助词\n诶\tei6\t「诶e6」的异读字\n诳\tgwong2\t诳语，诳惑，诳骗，欺诳\n诳\tgwong3\t「诳gwong2」的异读字\n诳\tkong4\t「诳gwong2」的异读字\n诳\twong2\t「诳gwong2」的异读字\n认\tjan6\t「认jing6」的异读字\n认\tjing6\t认识，认可，认同，认定，认真，公认，承认\n诞\tdaan3\t诞生，诞辰\n诞\tdaan6\t「诞dann3」的异读字\n谆\tdeon1\t「谆zeon1」的异读字\n谆\tzeon1\t谆托，谆复，谆嘱，谆谆告诫，谆谆教导\n谊\tji4\t「谊ji6」的异读字\n谊\tji6\t谊士，友谊，仁谊，情谊，乡谊\n谇\tseoi3\t「谇seoi6」的异读字\n谇\tseoi6\t谇语，诟谇，朝谇夕替责问\n誻\tdaap6\t多言的样子\n誻\ttaap3\t「誻daap6」的异读字\n諓\tzin2\t「諓zin6」的异读字\n諓\tzin3\t「諓zin6」的异读字\n諓\tzin6\t巧言\n谙\tam1\t谙练，谙熟，谙习，不谙世务；(1)熟悉；(2)记诵\n谙\tam2\t「谙am1」的异读字\n谙\tngam1\t「谙am1」的异读字\n谖\thyun1\t永矢弗谖，冯谖弹铗\n谖\thyun2\t「谖hyun1」的异读字\n谒\tjit3\t谒见，拜谒，谒告，谒者，谒刺，谒舍，谒急，谒陵，谒归，进谒；(1)名片；(2)禀明；(3)进见\n谒\tkit3\t「谒jit3」的异读字\n𫍲\tsau2\t「𫍲siu2」的异读字\n𫍲\tsiu2\t𫍲才，𫍲闻\n谞\tseoi1\t谋无遗谞\n谞\tseoi2\t「谞seoi1」的异读字\n𫍰\tsaai2\t担心害怕的样子\n𫍰\tsi2\t「𫍰saai2」的异读字\n谥\tsi6\t「谥si3」的异读字\n讳\twai3\t「讳wai5」的异读字\n讳\twai5\t讳言，讳莫如深，讳疾忌医\n𫍱\tcyun3\t「𫍱zyun1」的异读字\n𫍱\tsyun4\t「𫍱zyun1」的异读字\n𫍱\tzyun1\t责骂\n谎\tfong1\t谎言，谎花，说谎，弥天大谎\n谎\tfong2\t「谎fong1」的异读字\n謇\tgin2\t謇謇，謇谔，謇谔之风，謇谔自负\n謇\thin1\t「謇gin2」的异读字\n谜\tmai4\t谜团，哑谜，猜谜语，谜面，谜底，灯谜，打谜\n谜\tmai6\t「谜mai4」的异读字\n谤\tbong3\t「谤pong3」的异读字\n谤\tpong3\t诽谤，毁谤\n谥\tsi3\t谥号，追谥，私谥人死后封号\n谥\tsi6\t「谥si3」的异读字\n謋\tfaak3\t「謋waak6」的异读字\n謋\twaak6\t謋然已解(语出《庄子》)\n诌\tzau1\t瞎诌，胡吹乱诌\n诌\tzau3\t「诌zau1」的异读字，用于口语\n謘\tci4\t说话迟钝\n謘\tzi6\t「謘ci4」的异读字\n讴\tau1\t讴歌\n讴\tngau1\t「讴au1」的异读字\n謦\thing3\t謦欬\n謦\tking2\t「謦hing3」的异读字\n謧\tlai4\t「謧lei4」的异读字\n謧\tlei4\t謧詍(多言)\n谮\tcam3\t「谮zam3」的异读字\n谮\tcam6\t「谮zam3」的异读字\n谮\tzam3\t谮言\n谲\tgwat1\t「谲kyut3」的异读字\n谲\tkyut3\t谲诈，诡谲\n譋\tlaan4\t同「谰」字\n譋\tlaan5\t「譋laan4」的异读字\n议\tji3\t「议ji5」的异读字\n议\tji5\t议决，议案，议员，议程，议会，议论，议价，议题，议事日程，议论风生，商议，会议，横议\n譣\tcim1\t「譣him2」的异读字\n譣\thim2\t(1)询问；(2)议论；(3)偏颇的说话\n誉\tjyu4\t「誉jyu6」的异读字\n誉\tjyu6\t誉满寰中，毁誉，沽名钓誉，荣誉勋章，乡曲之誉\n讆\tngai6\t「讆wai6」的异读字\n讆\twai6\t讆言\n讂\tgyun3\t(1)流言；(2)远求；(3)遥远\n讂\thyun3\t「讂gyun3」的异读字\n雠\tcau4\t雠校，报雠，复雠，寇雠，反目成雠，公报私雠\n雠\tsau4\t「雠cau4」的异读字\n谶\tcaam3\t「谶cam3」的异读字\n谶\tcam3\t谶纬，符谶，一语成谶，谶语，谶文，图谶，经谶，诗谶\n谰\tlaan4\t抵谰，谰言\n谰\tlaan5\t「谰laan4」的异读字\n讙\tfun1\t喧哗\n讙\thyun1\t「讙fun1」的异读字\n讘\tjip6\t「讘zip3」的异读字\n讘\tzip3\t多言妄语\n谳\tjin5\t「谳jin6」的异读字\n谳\tjin6\t谳讯，定谳\n谳\tjit6\t「谳jin6」的异读字\n訬\tcaau1\t「訬caau2」的异读字\n訬\tcaau2\t(1)吵闹；(2)矫健敏捷；狡猾轻佻\n訬\tmiu5\t高\n𧮪\tzaam1\t𧮪諵\n𧮪\tzim1\t「𧮪zaam1」的异读字\n𧮪\tcip3\t𧮪讘\n诒\tji4\t诒训\n诒\tdoi6\t「诒toi5」的异读字\n诒\ttoi5\t欺骗\n𫍥\tdiu3\t仓猝\n𫍥\ttiu1\t「𫍥tiu5」的异读字\n𫍥\ttiu5\t𫍥越\n誧\tbou1\t(1)大言；(2)帮助，辅助；(3)规劝\n誧\tbou3\t谋\n誧\tpou1\t「誧bou1」的异读字\n誧\tpou2\t「誧bou1」的异读字\n请\tceng2\t「请cing2」的异读字，用于口语\n请\tcing1\t请室\n请\tcing2\t请愿，邀请，负荆请罪，请求，请示，请安，请命，请客，请柬，请便，请托，请益，请教，请缨，请君入瓮\n请\tking4\t同「擎」字\n请\tzing6\t古朝聘\n调\tdeu6\t「调diu6」的异读字\n调\tdiu6\t调任，调查，调换，调动，调集，调号，调拨，调职，调兵遣将，调虎离山，曲调，音调，格调，腔调\n调\ttiu4\t调和，调治，调侃，调配，调唆，调理，调解，调教，调停，调节，调驯，调剂，调整，调戏，调脂弄粉，调嘴学舌，协调，风调雨顺\n谂\tlam2\t「谂nam2」的异读字\n谂\tnam2\t粤语用字，意指认为、想\n谂\tsam2\t谂念，谂思\n诤\tzaang1\t同「争」字\n诤\tzaang3\t诤友，谏诤，诤讼，诤言\n诤\tzang1\t「诤zaang1」的异读字\n诤\tzang3\t「诤zaang3」的异读字\n谯\tciu3\t「谯ziu6」的异读字\n谯\tciu4\t谯楼\n谯\tziu6\t同「诮」字\n谻\tgoek3\t足相踦貌\n谹\twang4\t(1)精深；(2)山谷空阔的样子\n谼\thung4\t大谷\n谿\tkai1\t同「溪」字\n豂\tliu4\t(1)空谷；(2)深\n谷\tguk1\t山谷，峡谷，河谷，山鸣谷应，进退为谷\n谷\tjuk6\t吐谷浑\n谷\tluk6\t谷蠡(匈奴君长封号)\n谾\thung1\t(1)山谷空深的样子；(2)象声词\n谾\tlung4\t同「豅」字，长大的山谷\n豁\twaa1\t同「划」字\n豁\tkut3\t豁达，豁免，豁然，豁出去\n豅\tlung4\t(1)长大的山谷；(2)山深的样子\n豅\tlung6\t石洄\n谽\tham1\t谽岈\n谽\tham4\t「谽ham1」的异读字\n豃\thaam2\t(1)豁然开朗的样子；(2)谷名；(3)深谷貌\n豃\thaam3\t「豃haam2」的异读字\n豆\tdau6\t豆腐，豆花，豆子，豆类，豆浆，豆芽菜，豆芽，豆油，豆沙，豆豉，豆苗，豆瓣，豆渣，豆荚，豆腐乳，豆腐干，豆腐干，豆饼，豆菜\n豇\tgong1\t豇豆\n豉\tsi6\t豉虫，豆豉\n豋\tdang1\t古代盛肉食的器具，亦作为礼器之用\n豊\tlai5\t(1)礼器；(2)同「礼」字\n竖\tsyu6\t竖立，横竖，竖琴，竖笛，逆竖(叛逆之人)，二竖(疾病)；(1)使物体直立；(2)僮仆、小子\n丰\tfung1\t丰富，丰收，丰厚，丰年，丰满，丰裕，丰盈；(1)古代用以承酒觯的礼器。《仪礼˙公食大夫》：「饮酒实于觯，加于丰」。；(2)肥美、富饶、茂盛\n艳\tjim6\t艳丽，艳福，艳光四射，艳阳\n岂\thei2\t岂敢，岂料，岂有此理，岂止，岂能难道，表示反诘\n岂\thoi2\t(1)通「凯」字；(2)同「恺」字\n豍\tbai1\t豍豆(豌豆)\n豍\tbin2\t蛾眉豆的别称\n豌\twun1\t豌豆\n豌\twun2\t「豌wun1」的异读字\n豏\thaam5\t煮半熟的豆\n豏\thin3\t「豏haam5」的异读字\n豕\tci2\t鲁鱼亥豕，狼奔豕突，豕心，封豕猪\n豖\tcuk3\t猪只绊足而行\n豗\tfui1\t喧豗\n豝\tbaa1\t母猪\n豜\tgin1\t三岁的野猪，泛指大猪或大兽\n豚\ttyun4\t海豚，河豚，豚儿犬子，豚鼠\n猪\tzyu1\t猪肉，猪油，猪肝，猪肚，猪腰，猪鬃，猪瘟，猪圈\n象\tzoeng6\t象征，气象万千，瞎子摸象，象棋，象限，象牙塔，象形文字，表象，现象，图象，对象，印象，险象环生\n豟\tak1\t大猪\n豤\than2\t(1)猪啃物；(2)诚恳\n豦\tkeoi4\t(1)豕、虎之斗不相舍；(2)虎两足举\n豢\twaan6\t豢养\n豪\thou4\t豪杰，自豪，巧取豪夺，豪华，豪爽，豪迈，豪放，豪情，豪雨，豪赌，豪饮，豪门，豪奢，豪客，豪门巨宅，土豪劣绅，豪放不羁，豪气干云\n豩\tban1\t(1)两只猪；(2)猪只乱群\n豭\tgaa1\t艾豭(老而美好的公猪)；(1)公猪；(2)指雄性动物\n豫\tjyu6\t豫剧，悦豫，犹豫未决\n豳\tban1\t古国名\n豰\thuk1\t兽名\n豱\twan1\t一种头短的猪\n豯\thai4\t小猪\n𫎆\tzung1\t一岁的小猪\n豮\tfan4\t雄性的牲畜\n豥\thaai4\t「豥goi1」的异读字\n豥\tgoi1\t四蹄皆白的猪\n豨\thei1\t猪\n豨\thei2\t「豨hei1」的异读字\n豲\twun4\t「豲jyun4」的异读字\n豲\tjyun4\t豪猪\n豷\tai3\t猪的喘息\n豷\tngai3\t「豷ai3」的异读字\n豷\tji3\t「豷ai3」的异读字\n豺\tcaai4\t豺目，豺狼，豺虎，豺声，投畀豺虎，骨瘦如豺\n豹\tpaau3\t豹子，管中窥豹\n豽\tneot6\t(1)同「貀」字，一种似豹的野兽；(2)野兽名，猴属\n貂\tdiu1\t貂皮，貂鼠，狗尾续貂\n貁\tjau6\t黑色长尾猿\n貅\tjau1\t貔貅\n貌\tmaau6\t貌美，貌不惊人，貌合神离，貌似，品貌，全貌，相貌堂堂，才貌\n貏\tbei2\t貏豸(山势渐平的样子)\n貐\tjyu5\t猰貐\n貑\tgaa1\t貑罴(一种野熊)\n貕\thai4\t小猪\n貔\tpei4\t貔貅\n𫎌\tgeoi6\t猪獾所生的小兽\n貀\tneot6\t野兽名，指一种似豹的动物\n貀\tzyut3\t野兽名\n貍\tmaai4\t同「埋」字\n貍\tlei4\t同「狸」字\n豸\tzaai6\t「豸zi6」的异读字\n豸\tzi6\t豸冠，虫豸，獬豸(传说中能辨是非的灵兽，又名解廌)；(1)爬虫类的总称；(2)二一四部首之一\n貊\tmaak6\t「貊mak6」的异读字\n貊\tmak6\t一种哺乳动物\n貄\tgei6\t「貄sei3」的异读字\n貄\tsei3\t野貍\n貄\tsi3\t「貄sei3」的异读字\n猫\tmaau1\t猫狗，猫鼠同眠，野猫\n猫\tmaau4\t「猫maau1」的异读字\n猫\tmiu4\t「猫maau1」的异读字\n貒\tteon1\t一种外形似猪的动物\n貒\ttyun1\t「貒teon1」的异读字\n郺\tjung1\t(1)大而多；(2)举动迟缓\n郺\tjung2\t「郺jung1」的异读字\n䝙\tceoi1\t「䝙syu1」的异读字\n䝙\tkeoi1\t「䝙syu1」的异读字\n䝙\tsyu1\t兽名\n貘\tmak6\t「貘mok6」的异读字\n貘\tmok6\t一种哺乳动物\n貚\ttaan4\t䝙貚(一种似虎的猛兽)\n貚\ttin4\t「貚taan4」的异读字\n貜\tfok3\t同「玃」字\n貜\tgwok3\t「貜fok3」的异读字\n豻\thon4\t驼鹿\n豻\thon6\t「豻ngon6」的异读字\n豻\tngon6\t狱豻\n貉\tmaak6\t「貉mak6」的异读字\n貉\tmak6\t同「貊」字\n貉\thok6\t貉子，貉绒，一丘之貉\n貉\tlok3\t「貉hok6」的异读字\n貆\tfun1\t狗貆\n貆\twun4\t一种貉类动物\n貆\thyun1\t「貆wun4」的异读字\n贝\tbui3\t贝类，贝壳，宝贝\n负\tfu6\t负责，负担，负荷，负债，负载，负伤，负数，负荆请罪，负心，负气，负隅顽抗，负号，正负，胜负\n贞\tzing1\t贞节，贞洁，贞人，贞烈，贞珉，，贞操，坚贞，艰贞\n财\tcoi4\t财政，财产，财源，财富，财经，钱财\n贡\tgung3\t贡献，贡寮，贡品，朝贡\n貣\ttik1\t(1)乞求；(2)借贷\n贫\tpan4\t贫穷，贫困，贫苦，贫瘠，贫贱\n贪\ttaam1\t贪污，贪心，贪财，贪官污吏，贪得无厌\n貥\thong4\t大贝壳\n贬\tbin2\t贬低，贬抑，褒贬\n贶\tfong3\t赐赠\n贵\tgwai3\t贵宾，贵重，贵族\n贻\tji4\t贻笑，贻害，贻祸，贻误\n贰\tji6\t贰卿(指待郎，即尚书之副)，贰臣(前朝降臣)，贰心(谋叛之心)，怀贰，疑贰，不贰(忠诚)，；(1)同「二」字；(2)「二」之会计用写法；(3)第二、副的；(4)不专一\n买\tmaai5\t买卖，买主，买通，买走\n贸\tmau6\t贸易，贸然\n贳\tsai3\t贳船，贳贷，贳酒(史记•高祖本纪)，贳赦\n贴\ttip3\t贴切，体贴，贴现率，贴上，贴身，贴纸，贴心，贴近，贴题，贴金，贴好，津贴，黏贴，妥贴，补贴\n貾\tci4\t黄色为主而带白点的贝壳\n貵\tpin2\t财长\n貹\tsing3\t财富\n贼\tcaak6\t贼赃，盗贼，作贼心虚，贼船，贼党，贼害，贼寇，狗贼，山贼，奸贼，卖国贼，乱臣贼子，家贼难防，擒贼擒王，认贼作父，贼眉贼眼，捉贼拿赃\n赅\tgoi1\t赅备，赅博，赅括，言简意赅；(1)充足；(2)兼备、齐全\n賌\tgoi1\t同「赅」字\n赁\tjam6\t租赁\n赂\tlou6\t贿赂\n资\tzi1\t资产，工资，排资论辈，资讯，资料，资金，资源，资格，资深，资政，资助，资质，物资，天资，投资，年资，资本主义，劳资纠纷\n赀\tzi1\t所费不赀，赀簿，家赀万贯财货\n賏\tjing1\t项饰\n赇\tkau4\t贿赂\n赊\tse1\t赊帐，赊欠，赊贷\n赈\tzan3\t赈灾，赈济\n賗\tcyun3\t支取财物的字据\n赐\tci3\t赐予，赐教，赐福，赐给，赐死，赐姓\n賨\tcung4\t古代四川、湖南等地少数民族名\n赕\tdaam6\t指古代东方、南方民族以财赎罪\n赌\tdou2\t赌博，赌场，赌徒，赌债，赌注，赌局\n赋\tfu3\t赋予，赋税，赋闲，赋与，赋有，赋归，赋诗\n贤\tjin4\t贤达，圣贤，贤妻良母，贤明，贤士，贤淑，贤慧，贤内助，贤德，贤孝，贤才，贤能\n赉\tloi6\t赉品，赏赉\n赔\tpui4\t赔偿，索赔，割地赔款，赔钱，赔本，赔光，赔不是，赔罪，赔嫁(又作陪嫁)，赔笑(又作陪笑)\n賥\tseoi6\t(1)财货；(2)同「粹」字\n赏\tsoeng2\t赏月，赏识，赏心悦目，赏金，赏赐，赏罚分明，赏玩，赏给，赏罚，赏钱，赏心\n赒\tzau1\t赒济\n贱\tzin6\t贵贱，贱民，轻贱，贫贱，卑贱\n账\tzoeng3\t同「帐」字\n𧹖\ttin2\t富裕\n䞐\tceon2\t富有\n赗\tfung3\t赙赗\n赖\tlaai6\t赖帐，依赖，赖以为生，赖皮，赖床，赖债，抵赖\n賳\tzoi1\t财货\n赛\tcoi3\t赛程，赛马，赛车，赛跑\n赙\tfu6\t赙赠，赙仪，赙金\n賸\tsing6\t同「剩」字\n赚\tzaan6\t赚钱，赚取，赚到\n贽\tzi3\t贽敬，贽见，执贽见面礼\n贀\tai3\t(1)增益；(2)诬谤\n贂\tcam2\t赌博\n赟\twan1\t美好\n赞\tzaan3\t赞成，赞同，赞助，赞许，赞赏，赞美，赞叹\n赠\tzang6\t赠送，赠与，赠品，赠予，赠阅\n贆\tbiu1\t贝壳名称\n赑\tbei6\t赑屭(传说中的一种像龟的动物)\n赃\tzong1\t赃物，贼赃，贫赃枉法，人赃并获，插赃嫁祸\n贕\tduk6\t鸟兽未出生时，在胎中死去\n赝\tngaan6\t赝品\n赎\tsuk6\t赎款，赎金，赎回，赎罪\n貤\tji4\t移动\n貤\tji6\t(1)重叠；(2)重复\n贯\tgwaan3\t通「惯」字\n贯\tgun3\t贯通，连贯，贯彻始终，贯穿，全神贯注\n责\tzaai3\t同「债」字\n责\tzaak3\t责任，责备，责罚，负责\n费\tfai3\t费力，费心，费用，费神，费解，费尽心机，收费，耗费，经费，学费\n费\tbei3\t(1)古代邑名；(2)姓氏\n贷\ttaai3\t贷宥，贷款，借贷，高利贷，责无旁贷，严惩不贷\n贷\ttik1\t同「忒」字\n贾\tgaa2\t姓氏\n贾\tgaa3\t通「价」字\n贾\tgu2\t贾人，贾客，贾害，贾祸，贾侩，贾其余勇，商贾，富商大贾\n宾\tban1\t宾客，宾主，宾从，宾至如归，宾主尽欢\n宾\tban3\t通「摈」字\n赓\tgang1\t赓续，赓酬\n赓\tzuk6\t接赓\n卖\tmaai6\t卖出，卖座，卖力，卖方，卖掉，卖弄，卖乖，卖帐，卖艺\n卖\tjuk6\t同「鬻」字\n质\tzat1\t质料，物质，蕙质兰心，质量，质问，质朴，本质，性质，变质，弱质纤纤，天生丽质，当面对质\n质\tzi3\t人质，交质\n賹\taai3\t记人或记物\n賹\tjat6\t同「镒」字\n赣\tgam3\t赣江，赣语，赣剧江西省简称\n赣\tgung3\t(1)赐予(《说文》)；(2)姓氏\n贩\tfaan3\t贩卖，贩运，小贩，商贩\n贩\tfaan5\t「贩faan3」的异读字\n货\tfo3\t货币，货车，货柜，货物，货品，货仓\n货\tfo6\t「货fo3」的异读字\n贮\tcyu2\t「贮cyu5」的异读字\n贮\tcyu5\t贮备，贮藏\n贮\tzyu2\t「贮cyu5」的异读字\n贺\tho3\t「贺ho6」的异读字\n贺\tho6\t贺仪，庆贺，贺客盈门，贺卡，贺礼，贺岁，贺电，贺客，贺词，贺年，贺函，贺帖，恭贺，祝贺\n贿\tfui2\t「贿kui2」的异读字\n贿\tkui2\t贿买，贿赂，贿选，行贿\n𫎩\tcam1\t同「琛」字\n𫎩\tsam1\t「𫎩cam1」的异读字\n賮\tzeon2\t「賮zeon6」的异读字\n賮\tzeon6\t賮行，賮仪\n賱\twan2\t賱䞐(富有)\n賱\twan3\t「賱wan2」的异读字\n购\tgau3\t购物，购买，购销，购办，购物天堂，收购，采购，订购\n购\tkau3\t「购gau3」的异读字\n赜\tzaak3\t探赜索隐\n赜\tzaak6\t「赜zaak3」的异读字\n赘\tzeoi3\t「赘zeoi6」的异读字\n赘\tzeoi6\t赘婿，赘言，赘瘤，赘述，赘子，入赘，出赘，累赘\n𫎫\tdaam6\t「𫎫taam5」的异读字\n𫎫\ttaam5\t(1)买东西预先付钱；(2)书册卷首贴绫之处\n赢\tjeng4\t「赢jing4」的异读字，口语读音\n赢\tjing4\t赢家，赢得，输赢\n赡\tsim6\t赡足，赡私，赡恤，赡养，赡丽，赡学渊闻，宏赡，详赡\n赡\tsin6\t「赡sim6」的异读字\n赆\tzeon2\t赆仪，餽赆，赆行\n赆\tzeon6\t「赆zeon2」的异读字\n贙\tjyun5\t(1)分别；(2)对争；(3)野兽名\n贙\tjyun6\t「贙jyun5」的异读字\n贲\tban1\t贲门，虎贲\n贲\tban3\t「贲ban1」的异读字\n贲\tfan4\t(1)宏大；(2)三足龟\n贲\tfan5\t(1)通「愤」字；(2)通「偾」字\n贲\tbei3\t贲临\n赦\tse3\t赦免，赦罪，特赦\n赨\ttung4\t红色\n赭\tze2\t赭石，赭黄，赭面，赭衣满道\n赮\thaa4\t(1)朝霞、彩霞；(2)红色的\n赯\ttong4\t赤色\n赤\tcek3\t「赤cik3」的异读字，口语读音\n赤\tcik3\t赤子，赤心，赤手，赤立，赤色，赤金，赤兔，赤乌，赤族，赤贫，赤诚，赤脚，赤口毒舌，赤县神州\n赧\tnaan2\t「赧naan5」的异读字\n赧\tnaan5\t赧颜，赧然羞愧而脸红\n赩\thik1\t「赩sik1」的异读字\n赩\tsik1\t赤色\n赫\thaak1\t赫奕，赫怒，赫然，赫羲，赫戏，赫赫之光，显赫\n赫\thak1\t「赫haak1」的异读字\n赪\tcing1\t赪尾，鲂鱼赪尾浅红色\n赪\tzing1\t「赪cing1」的异读字\n走\tzau2\t走私，走势，走上，走出，走到，走廊，走进，走路，走入，走访，走动，走下坡，走避，走回，走近，走火，走狗，走样，走去，走道，走投无路，走遍，走马上任，走漏，走失，走开，走后门，走马看花，走过去，走错，走火入魔，走私者，走漏风声，走调，走马灯，走散，走船，走漏消息，走不动，走不到，走门路，赴\tfu6\t赴宴，赴会，赴约\n赲\tlik6\t形容行走的样态\n起\thei2\t起伏，突起，起死回生，起点，起因，起源，起步，起诉，起码，起床，起色，起义，起眼，勃起，发起，了不起，对不起，翩翩起舞，平起平坐，奋起直追，风起云涌，烽烟四起，兔起鹘落，连根拔起，另起炉灶\n赸\tsaan3\t赸笑，赸谤，搭赸\n赻\tsin2\t同「鲜」字，意谓「少」\n赹\tking4\t独行\n趁\tcan3\t趁机，趁势，趁火打劫，趁便\n超\tciu1\t超过，超越，超脱，超值，超凡\n越\tjyut6\t越过，越发，越权\n趀\tci1\t仓猝\n趍\tceoi1\t同「趋」字\n趌\tgat6\t怒走\n趔\tlit6\t趔趄(脚步不稳，身体歪斜)\n趎\tzyu1\t古代楚国名\n趓\tdo2\t趓楼(即垛楼，门侧的小楼)同「躲」字，意指隐藏\n赶\tgon2\t赶路，追赶\n趖\tso1\t快步走\n趡\tceoi2\t(1)奔跑；(2)春秋地名\n趠\tcoek3\t腾趠\n趟\ttong3\t光趟，趟马，赶趟儿量词\n趛\tgam3\t低头快走\n趧\ttai4\t趧娄(少数民族舞曲名，又写作趧鞻)\n趬\thiu1\t轻趬\n趫\tkiu4\t(1)矫健；(2)缘木善走\n趪\twong4\t趪趪(负重用力貌/威武的样子)\n趭\tziu3\t(1)奔跑；(2)躁动\n趮\tcou3\t同「躁」字\n趯\ttik1\t跳跃\n赽\tgwai3\t趧赽(行走的样子)\n赽\tkyut3\t(1)马匹用脚踢人；(2)马匹疾行\n趏\tgwaat3\t行走\n趏\twut6\t草也\n趐\tci3\t同「翅」字\n趐\thyut3\t(1)前进；(2)众鸟群飞\n赵\ttiu5\t赵缭\n赵\tziu6\t姓氏\n趣\tcau2\t趣马\n趣\tceoi1\t通「趋」字\n趣\tceoi3\t趣味，趣闻，趣事，兴趣，旨趣，志趣\n趣\tcuk1\t同「促」字\n趜\tkau4\t足不能伸\n趜\tguk1\t(1)穷困；(2)身体不能伸展\n趜\tkuk1\t恭敬\n趥\tcau1\t(1)行走的样子；(2)徒行；(3)伏地行走\n趥\tcuk1\t驱迫\n趋\tceoi1\t趋向，趋势，趋炎附势，趋时，趋奉，趋吉避凶，趋之若鹜\n趋\tcuk1\t通「促」字\n赳\tdau2\t「赳gau2」的异读字\n赳\tgau2\t赳赳，赳螑，雄赳赳\n趉\tgyut6\t突然起行\n趉\tkyut3\t「趉gyut6」的异读字\n趑\tci1\t「趑zi1」的异读字\n趑\tzi1\t趑趄不前\n趱\tzaan2\t赶路\n趱\tzyun2\t「趱zaan2」的异读字\n趄\tce3\t趄趄倾斜\n趄\tceoi1\t「趄zeoi1」的异读字\n趄\tzeoi1\t趑趄(迟疑不进)\n趄\tcit3\t「趄zeoi1」的异读字\n趒\ttiu1\t「趒tiu4」的异读字\n趒\ttiu2\t跳跃\n趒\ttiu3\t跨越\n趒\ttiu4\t(1)跳跃；(2)逃遁；(3)高行阔步\n趴\tpaa1\t趴下，趴炕\n趷\tgat6\t粤语用字\n趶\tfu3\t(1)踏足；(2)同「胯」字\n趺\tfu1\t趺坐\n趹\tkyut3\t(1)形容马匹奔驰迅疾；(2)骡马用后足踢\n跁\tpaa1\t跁踦\n趾\tzi2\t趾甲，脚趾，趾高气扬，交趾(古地名)，趾骨，圆颅方趾\n跗\tfu1\t跗面，跗骨\n跏\tgaa1\t跏趺\n跇\tjai6\t渡过、超越\n跈\tnin2\t(1)践踏；(2)同「趁」字\n跚\tsaan1\t蹒跚\n跎\tto4\t岁月蹉跎，一再蹉跎\n跆\ttoi4\t跆籍，跆拳道\n跅\ttok3\t跅弛\n跖\tzek3\t同「蹠」字\n跙\tzeoi1\t同「趄」字\n跍\tfu1\t蹲踞的样子\n跘\tpun4\t跘旋(周旋进退)\n跓\tcyu5\t(1)停足；(2)勇足\n跜\tnei4\t躨跜(形容虬龙腾动)\n跧\tcyun4\t跧伏，弯跧\n跺\tdo2\t跺脚\n跲\tgaap3\t困跲\n跤\tgaau1\t跌跤，摔跤\n跟\tgan1\t跟随，脚跟，翻跟斗，跟进，跟班，鞋跟，后跟\n跪\tgwai6\t跪拜，下跪，跪到，跪伏，长跪，三跪九叩\n跩\tjai6\t(1)摇晃不稳、一摇一摆的走路；(2)得意忘形的样子\n跫\tkung4\t跫然，跫跫，跫然足音脚步声\n跬\tkwai2\t跬步，跬步千里\n路\tlou6\t路线，路段，路灯，路途，路障\n跰\tpin4\t跰跰(奔走貌)\n跣\tsin2\t跣足，披头跣足\n跦\tzyu1\t跦跦(跳跃而行)\n跠\tji4\t蹲踞\n跿\ttou4\t赤脚\n跽\tgei6\t长跪\n跼\tguk6\t跼蹐\n踍\thaau1\t同「骹」字\n踂\tnip6\t绊脚病，即两脚双连而不能相过\n踀\tcuk1\t谨慎的样子\n踩\tcaai2\t踩高跷，踩踏，踩入\n踟\tci4\t踟蹰\n踔\tcoek3\t踔绝，腾踔，趫踔，踸踔\n踏\tdaap6\t踏实，践踏，踏雪寻梅，踏步，踏青，踏板，踏勘，踏脚石，踩踏\n踞\tgeoi3\t盘踞，箕踞，龙蟠虎踞\n踘\tguk1\t蹴踘(一种古代踢球游戏)\n踠\tjyun2\t屈曲、弯曲\n踡\tkyun4\t踡跼\n踛\tluk6\t跳跃\n踫\tpung3\t徒步渡水\n踢\ttek3\t踢球，踢毽子，拳打脚踢\n踝\twaa5\t踝骨\n踒\two1\t拆足\n踖\tzik1\t踧踖\n踕\tzit6\t踕蹀\n踙\tnip6\t同「踂」字，「踙」是「踂」的讹字\n踚\tleon4\t行走的样子\n踗\tnip6\t轻轻地行走\n蹅\tcaa1\t蹅踏，蹅雨，波蹅\n踸\tcam2\t踸踔\n踳\tcyun2\t踳驳，踳逆，踳落相违背\n蹀\tdip6\t躞蹀，蹀血\n踱\tdok6\t踱步\n踽\tgeoi2\t踽踽独行\n蹁\tpin4\t蹁跹\n蹄\ttai4\t马蹄，蹄涔\n踿\tzuk1\t(1)同「蹙」字；(2)蹬脚\n蹉\tco1\t蹉跎，蹉跌\n蹎\tdin1\t跌倒\n蹍\tzin2\t践踏\n跸\tbat1\t跸路，驻跸，清跸，犯跸，扈跸，古帝王出行时实施的交通管制\n蹩\tbit6\t蹩脚，蹩气(赌气，负气)，蹩躠(竭尽心力)，蹩躠为仁(费尽心力为仁)；(1)跛；(2)旋行貌\n蹞\tkwai2\t同「跬」字\n蹝\tsaai2\t同「屣」字\n蹜\tsuk1\t蹜蹜\n𫏐\tzaam6\t同「暂」字\n迹\tzik1\t遗迹，奇迹，名胜古迹\n蹧\tzou1\t蹧蹋\n踪\tzung1\t踪影，踪迹，芳踪，行踪，遗踪\n蹪\tteoi4\t颠仆、跌倒\n蹥\tlin4\t蹥蹇(遭遇坎坷)\n蹖\tzung1\t踏蹋\n蹗\tluk6\t蹗蹗(冀幸)；(1)行走的样子；(2)恭敬\n𫏆\tbut6\t踢踏、踢落\n蹯\tfaan4\t兽类的足掌\n蹸\tleon6\t同「躏」字\n躄\tbik1\t躄疾，躄出，躄踊，挛躄\n躁\tcou3\t暴躁，急躁\n趸\tdan2\t趸船，趸批\n躆\tgeoi3\t以足据持\n躈\tkiu3\t马的肛门，古代用以计马数\n跶\ttaat3\t蹓跶，踢跶\n躅\tzuk6\t蹢躅，踟躅，高躅\n踌\tcau4\t踌躇，踌躇满志\n跻\tzai1\t跻身，攀跻，跻跻跄跄\n䟢\tnin5\t(1)践蹈；(2)停止\n躌\tmou5\t(1)足迹；(2)践履\n躔\tcin4\t(1)践踏；(2)日月星辰在其轨道上运行；(3)兽类的足迹\n躐\tlip6\t躐级，躐等\n跹\tsin1\t蹁跹形容舞姿妙曼\n踬\tzi3\t(1)绊倒；(2)事情不顺利\n躘\tlung4\t躘踵\n躗\twai6\t(1)牛踢蹄自卫；(2)谬误\n躟\tnong5\t疾行\n躠\tsit3\t蹩躠(竭尽心力)，蹩躠为仁，蹩躠蹁跹旋行貌\n蹿\tcyun1\t向上跳\n躣\tkeoi4\t走路的样子\n蹑\tnip6\t蹑踪，蹑足其间\n躤\tzik6\t同「踖」字\n躜\tzyun1\t向上或往前冲\n躏\tleon6\t蹂躏\n躨\tkwai4\t躨跜(形容动物移动)\n跂\tkei4\t跂行，跂跂，跂行喙息\n跂\tkei5\t跂踵，跂訾，跂予望之，踶跂\n跑\tpaau2\t跑步，跑道，跑堂，跑腿，奔跑，赛跑，东奔西跑\n跑\tpaau4\t走兽用脚刨地，亦泛指刨地\n跨\tkwaa1\t坐\n跨\tkwaa3\t跨度，跨过，跨越\n跢\tdaai3\t倒地\n跢\tci4\t跢跦(徘徊不前)\n跢\tdo1\t携幼儿行走\n跢\tdo3\t(1)行走；(2)小孩走路时的动态；(3)以脚顿地\n踃\tciu3\t脚筋抽搐\n踃\tsiu1\t跳踃(动也)\n跾\tcau1\t脚病\n跾\tsuk1\t急速、长远\n踤\tseoi6\t通「萃」字\n踤\tzeot1\t触击、冲撞\n踜\tling4\t跌倒\n踜\tling6\t踜蹬(行走的样子/马病)\n踓\twai5\t(1)践踏；(2)行走；(3)狂走\n踓\tcuk1\t同「蹴」字，践踏的意思\n踶\tdai6\t踏\n踶\ttai4\t同「蹄」字\n踶\tci4\t踶蹰\n踶\tzi6\t踶跂\n跄\tcoeng1\t跄捍，跄跄济济\n跄\tcoeng3\t踉跄\n蹊\thai4\t独辟蹊径\n蹊\tkai1\t跷蹊\n蹓\tlau4\t同「遛」字\n蹓\tlau6\t蹓跶\n蹡\tcoeng1\t同「跄」字\n蹡\tcoeng3\t同「跄」字，用于「踉跄」一词\n蹛\tdaai3\t蹛林\n蹛\tzai6\t蹛财\n蹬\tdang1\t(1)践踏；(2)脚向下用力\n蹬\tdang6\t蹭蹬\n蹶\tgwai3\t动乱\n蹶\tkyut3\t蹶子，蹶角，蹶其锐气，蹶然改容，竭蹶，一蹶不振\n趵\tbaau3\t「趵paau3」的异读字\n趵\tpaau3\t趵突泉跳跃\n趼\tgaan2\t「趼gin2」的异读字，口语读音\n趼\tgin2\t趼子(手掌或脚掌上因摩擦日久而生成的硬皮)\n趿\tsaap3\t把鞋后帮踩在脚后跟下\n趿\ttaat3\t「趿saap3」的异读字\n跋\tbat6\t跋涉，跋扈，跋踬，序跋，题跋\n跋\tbut6\t「跋bat6」的异读字\n跌\tdaat3\t「跌dit3」的异读字\n跌\tdit3\t跌落，跌倒，跌宕，跌足\n距\tgeoi6\t「距keoi5」的异读字\n距\tkeoi5\t距随，距离，距跃，行距，差距\n跮\tci3\t跮踱\n跮\tzi3\t「跮ci3」的异读字\n跴\tcaai2\t同「踩」字\n跴\tcai2\t「跴caai2」的异读字\n跴\tcoi2\t「跴caai2」的异读字\n跱\tci5\t(1)同「峙」字；(2)立；(3)具备；(4)很难前行\n跱\tsi6\t「跱ci5」的异读字\n跱\tzi6\t「跱ci5」的异读字\n跳\ttiu3\t跳跃，心跳，暴跳如雷，跳板，跳舞，跳绳，跳伞，跳脱，跳级，跳蹦蹦，佛跳墙，跳梁小丑，跳蚤市场\n跳\ttiu4\t「跳tiu3」的异读字\n迹\tzek3\t「迹zik1」的异读字\n迹\tzik1\t迹近，迹捕，迹象，迹迹，古迹，足迹，遗迹\n踊\tjung2\t踊跃\n踊\tjung5\t「踊jung2」的异读字\n踄\tbok6\t步行\n踄\tbou6\t「踄bok6」的异读字\n踇\tmau5\t踇偶(山名)\n踇\tmou5\t「踇mau5」的异读字\n踣\tbaak6\t跌倒\n踣\tfau6\t「踣baak6」的异读字\n践\tcin5\t践踏，践诺，实践，践言，践祚，践约，践履\n践\tzin6\t「践cin5」的异读字\n踥\tcip3\t踥蹀，踥踥\n踥\tsip3\t「踥cip3」的异读字\n踮\tdim2\t踮脚抬起脚跟以脚尖著地而立\n踮\tdim3\t「踮dim2」的异读字\n踑\tgei1\t踑踞(即箕踞)\n踑\tkei1\t「踑gei1」的异读字\n踼\tdong6\t「踼tong4」的异读字\n踼\ttong4\t(1)跌倒；(2)抵拒；(3)驱驰的样子\n踵\tdung2\t「踵zung2」的异读字\n踵\tzung2\t踵至，踵见，踵武，踵门，踵谢，踵决肘见，踵事增华，接踵而来，自顶至踵\n蹂\tjau4\t蹂躏，蹂践\n蹂\tjau5\t「蹂jau4」的异读字\n踊\tjung2\t踊跃，抃踊，踊跃\n踊\tjung5\t「踊jung2」的异读字\n逾\tjyu4\t逾越，逾矩，逾轮(周穆王八骏之一)\n逾\tjyu6\t「逾jyu4」的异读字\n蹋\tdaap6\t糟蹋，蹋鞠\n蹋\ttaap3\t「蹋daap6」的异读字\n蹈\tdou6\t蹈海，蹈常习故，舞蹈，重蹈覆辙，手舞足蹈，赴汤蹈火\n蹈\ttou1\t「蹈dou6」的异读字\n蹐\tzek3\t「蹐zik3」的异读字\n蹐\tzik3\t小步\n蹦\tbaang6\t「蹦bang1」的异读字\n蹦\tbang1\t蹦蹦跳跳，欢蹦乱跳\n蹙\tcuk1\t蹙眉，蹙頞，穷蹙，颦蹙，蹙蹐\n蹙\tzuk1\t「蹙cuk1」的异读字\n蹒\tmun4\t「蹒pun4」的异读字\n蹒\tpun4\t蹒跚\n蹚\ttong1\t踏泥涉水\n蹚\ttong2\t「蹚tong1」的异读字\n蹠\tzek3\t蹠足，蹠骨，跗蹠\n蹠\tzik3\t「蹠zek3」的异读字\n蹼\tpok3\t「蹼buk6」的异读字\n蹼\tbuk1\t「蹼buk6」的异读字\n蹼\tbuk6\t动物趾间的薄膜\n蹴\tcuk1\t蹴鞠(古代踢球游戏)，一蹴而就，蹴然；(1)踏；(2)踢；(3)恭敬貌\n蹴\tzuk1\t「蹴cuk1」的异读字\n躇\tcyu1\t「躇cyu4」的异读字\n躇\tcyu4\t踌躇，踌躇满志，踌躇未决\n蹲\tdeon1\t「蹲cyun4」的异读字\n蹲\tcyun4\t蹲踞，蹲膘，蹲蹲，半蹲，盘蹲\n跷\thiu1\t跷课，跷足而待，蹊跷\n跷\tkiu3\t「跷hiu1」的异读字\n蹭\tcang3\t「蹭sang3」的异读字\n蹭\tsang3\t蹭蹬\n蹰\tcyu1\t「蹰cyu4」的异读字\n蹰\tcyu4\t踟蹰，搔首踟蹰\n踯\tzaak6\t踯躅\n踯\tzik6\t「踯zaak6」的异读字\n躖\tteon2\t践处、足迹\n躖\tdyun6\t「躖teon2」的异读字\n𨅬\tlaan1\t「𨅬laan4」的异读字\n𨅬\tlaan4\t过分\n躞\tsip3\t躞蹀，玉躞，蹀躞不下(心神不定)；(1)卷轴的轴心；(2)往来小步\n躞\tsit3\t「躞sip3」的异读字\n躩\tfok3\t躩步，躩如\n躩\tgwok3\t「躩fok3」的异读字\n躩\tkwok3\t「躩fok3」的异读字\n足\tzeoi3\t足恭(过于谦恭。语出《论语˙公冶长》)\n足\tzuk1\t足下，足本，足音，足球，足岁，足音跫然，足智多谋，手足，充足\n足\tzyu3\t「足zeoi3」的异读字\n跛\tbai1\t「跛bo2」的异读字，口语读音\n跛\tbei3\t跛立\n跛\tbo2\t跛子，跛脚，跛鳖千里\n跕\tdim2\t「跕tip3」的异读字\n跕\tdip6\t下堕\n跕\ttip3\t跕屣\n跕\tdit3\t「跕dip6」的异读字\n跐\tcaai2\t同「踩」字\n跐\tci1\t「跐ci2」的异读字\n跐\tci2\t跐豸\n跐\tcoi2\t「跐ci2」的异读字\n踆\tceon1\t「踆seon1」的异读字\n踆\tseon1\t踆乌，踆踆(凝滞不前)\n踆\tcyun1\t以足逆蹋\n踅\tzai6\t「踅ci3」的异读字\n踅\tci3\t独脚行走\n踅\tzit3\t「踅zyut6」的异读字\n踅\tcyut3\t「踅zyut6」的异读字\n踅\tjyut6\t做囤用的狭长席\n踅\tzyut6\t左右乱踅，踅回\n踉\tloeng4\t跳踉\n踉\tloeng6\t「踉long4」的异读字\n踉\tlong4\t踉跄\n踧\tdik6\t踧踧\n踧\tcuk1\t踧踖，踧蹜\n踧\tzuk1\t「踧cuk1」的异读字\n踦\tgei1\t「踦kei1」的异读字\n踦\tgei2\t长踦\n踦\tkei1\t踦重，踦只\n踦\tji2\t(1)刺；(2)抵住；(3)触\n踹\tcaai2\t踹踏\n踹\tjaai2\t「踹caai2」的异读字\n踹\tcyun2\t足跟\n踹\tdyun3\t「踹cyun2」的异读字\n踾\tbik1\t(1)踏地声；(2)踏步\n踾\tpik1\t「踾bik1」的异读字\n踾\tfuk1\t踾踧(聚拢/迫蹙)\n蹇\tgin2\t蹇涩，蹇滞\n蹇\thin1\t通「褰」字\n蹇\tzin2\t「蹇gin2」的异读字\n蹢\tzaak6\t蹢躅\n蹢\tdik1\t兽蹄\n蹢\tzik6\t「蹢zaak6」的异读字\n𫏋\tgiu2\t𫏋勇，𫏋捷\n𫏋\thiu1\t同「跷」字\n𫏋\tkiu3\t「𫏋hiu1」的异读字\n𫏋\tgoek3\t蹑𫏋担簦，踏高𫏋\n𫏋\tkoek6\t「𫏋giu2」的异读字\n跃\ttik1\t同「趯」字\n跃\tjoek3\t「跃joek6」的异读字\n跃\tjoek6\t跃跃欲试，踊跃，鱼跃龙门，跃进，跳跃，雀跃，龙腾虎跃，鱼跃鸢飞\n跞\tlik1\t走动\n跞\tlik6\t「跞lik1」的异读字\n跞\tlok3\t「跞lok6」的异读字\n跞\tlok6\t卓跞\n躬\tgung1\t躬身，躬亲，鞠躬，躬行\n躲\tdo2\t躲避，躲藏，躲债\n躺\ttong2\t躺下，躺卧，平躺\n躽\tjin2\t躽体(腹部胀大)\n躯\tkeoi1\t躯体，躯壳，身躯，形躯\n軂\tlou6\t身长\n𨉗\tjuk1\t(1)道家指精气凝结；(2)父母对小孩的爱称\n身\tsan1\t身手，身分，身世，身材，身段，身教，身价，身体，身不由己，身心交瘁，身先士卒，身临其境，立身，修身\n身\tkin4\t「身gyun1」的同义异读\n身\tgyun1\t身毒(印度的古译名)\n身\tjyun4\t「身gyun1」的同义异读\n轨\tgwai2\t轨道，轨迹，不轨\n军\tgwan1\t军队，军火，军械，敌军\n軓\tfaan4\t车前轼\n轩\thin1\t轩轾，轩昂，轩然；(1)古代一种有篷的车子；(2)车子的通称；(3)窗子；(4)小房间\n轫\tjan6\t发轫，云程发轫阻止车轮滑转的横木\n𫐄\tjyut6\t车轩横木\n𨐅\tguk1\t同「毂」字\n软\tjyun5\t软弱，软语，软化，软禁，软硬兼施\n𫐇\tnaap6\t骖马内辔系轼前者\n軘\ttyun4\t軘车\n軞\tmou4\t建旄之车\n軝\tkei4\t(1)车毂上的装饰；(2)车轮；(3)药草\n軠\tkwong4\t(1)缫丝车；(2)独轮手推车；(3)车轮扭曲不正\n𫐈\tbat6\t𫐈涉\n軧\tdai2\t大车后\n軱\tgu1\t大骨\n轺\tjiu4\t轺车\n軥\tkeoi4\t軥绿\n𫐉\tling4\t车轮\n軮\tong3\t軮轧\n軯\tpaang1\t形容车行声、雷声等的象声词\n轵\tzi2\t轵城(镇名)\n軦\tfong3\t黄軦(虫名)\n軴\tzyu3\t停车\n軩\ttoi5\t輆軩(不平)\n輁\tgung2\t輁轴\n輀\tji4\t灵车\n辂\tlou6\t(1)古车前横木；(2)古大车\n𫐌\tping4\t辎𫐌，油𫐌，𫐌訇，𫐌凑(即并凑)\n轼\tsik1\t伏轼，凭轼\n辀\tzau1\t车辕\n轾\tzi3\t轩轾车后较低的部分\n辅\tfu6\t辅导，辅币，辅助，辅育院，辅佐，辅弼，辅翼，畿辅\n挽\twaan5\t挽歌，挽联，挽词\n輐\twun6\t輐断\n輎\tsaau1\t以鹿皮装饰的兵车\n輍\tjuk6\t车枕之前的部位\n輑\tkwan1\t(1)车轴；(2)车轴相连；(3)相连的样子\n辉\tfai1\t辉煌，辉映，清辉，争辉，交辉\n轮\tleon4\t轮流，轮船，轮椅，轮值，轮休，轮回，轮班，轮调，轮机，轮轴\n辇\tlin5\t辇道，龙车凤辇，车辇，辇载帝王之车\n輘\tling4\t輘轹\n辌\tloeng4\t辒辌\n辆\tloeng6\t车辆\n辋\tmong5\t车轮四周之框子\n𫐐\tngai4\t𫐐𫐄\n輚\tzaan6\t輚辂\n𫐏\tzau1\t轩𫐏\n辎\tzi1\t辎车，辎重\n輤\tsin3\t(1)覆盖殡车的装饰；(2)载柩车\n辑\tcap1\t辑录，编辑，逻辑，专辑\n辏\tcau3\t辏遇，并辏，辐辏\n輴\tceon1\t(1)载棺柩的车；(2)古代用于泥路上的交通工具\n辐\tfuk1\t辐射，辐凑\n輵\tgot3\t同「轕」字\n𫐒\tgwang1\t车行声\n输\tsyu1\t输出，输入，输送，输赢，输血，输电，输送管\n輲\tsyun4\t(1)同「辁」字；(2)通「遄」字\n毂\tguk1\t毂下，毂辘鹰，毂击肩摩\n辖\that6\t辖区，辖境，辖地，统辖，管辖，直辖，车辖；(1)管治；(2)以防轮子脱落的轴键\n舆\tjyu4\t舆马，方舆，舆论，舆情，堪舆，肩舆；(1)轿子、车；(2)地域；(3)扛抬；(4)公众的\n辕\tjyun4\t辕门，南辕北辙，改辕易辙\n辒\twan1\t辒辌车\n轃\tzeon1\t(1)古代大车箱底板上的衬垫；(2)通「臻」字\n轈\tcaau4\t古代军中窥敌的兵车\n辙\tcit3\t覆辙，离辙，轨辙，合辙，南辕北辙，改辕易辙\n𫐖\tgaau1\t𫐖轕\n轓\tfaan1\t朱轓皂盖；(1)车箱两侧的屏障物；(2)车；(3)通「藩」字\n轒\tfan4\t轒辒\n轑\tlou5\t车辐\n轏\tzaan6\t(1)车名；(2)同「輚」字；(3)士车\n轚\tgik1\t(1)碰挂；(2)舟车依次行进；(3)车辖互相撞击\n轕\tgot3\t𫐖轕\n𫐘\tham2\t𫐘轲\n轙\tngai5\t车衡载辔者\n轖\tsik1\t车壁上用木造的方格\n轛\tdeoi3\t车轼间横直交结之木\n轰\tgwang1\t轰炸，轰动，轰轰烈烈，轰隆，轰击\n轝\tjyu4\t(1)两手对举之车；(2)泛指车，同「舆」字；(3)扛､举\n辔\tbei3\t辔头，顿辔，长辔远御，辔衔，奉辔，缰辔\n𫐙\tleoi4\t(1)车辆碾压；(2)接连不断的样子；(3)车；(4)碰击\n𫐆\tlik6\t𫐆辘\n轳\tlou4\t辘轳\n轶\tjat6\t轶事，轶闻，轶群，轶伦越等，侵轶，超轶；(1)散失；(2)超过；(3)侵略\n轶\tdit6\t同「迭」字\n轴\tzau6\t轴子\n轴\tzuk6\t轴线，轴心，辊轴\n较\tgaau3\t较量，比较，计较，锱铢必较\n较\tgok3\t较力\n载\tzoi2\t千载难逢，一年半载\n载\tzoi3\t载客，载荷，载雪，载福，载誉，载体，载酒问字，载沉载浮，刊载，运载，怨声载道\n輆\thoi2\t輆軩(不平)\n輆\tkoi3\t輆沐(古国名)\n輠\tgwo2\t车上贮盛脂膏的器具\n輠\twui6\t转动\n輹\tfuk1\t捆绑车伏兔与车轴的绳索\n輹\tfuk6\t伏兔\n转\tzyun2\t转口，转手，转化，转世，转注，转向，转折，转述，转托，转眼，转侧，转移，转换，转载，转播，转机，转瞬，转变，转让，转捩点，转危为安，转败为胜\n转\tzyun3\t转子，转悠，转动，转轴，转台，转盘，转炉\n轋\twan4\t车前套在牲畜颈上的曲木\n轋\thin1\t轿子\n辚\tleon4\t形容车子行走时的声音\n辚\tleon6\t辗压、蹂躏\n轘\twaan4\t轘辕山\n轘\twaan6\t轘刑(车裂)，轘磔古时以车分裂肢体的酷刑\n轧\taat3\t「轧zaat3」的异读字\n轧\tgaat3\t「轧zaat3」的异读字\n轧\tngaat3\t「轧zaat3」的异读字\n轧\tzaat3\t倾轧\n轪\tdaai6\t(1)车轮；(2)车轴前端的冒盖\n轪\tdai6\t「轪daai6」的异读字\n轭\taak1\t衡轭，车轭，共轭角牛马拉物件时驾在脖子上的器具\n轭\tngaak1\t「轭aak1」的异读字\n軡\tkam4\t「軡kim4」的异读字\n軡\tkim4\t同「黔」字，江南地名\n軶\taak1\t同「轭」字\n軶\tngaak1\t「軶aak1」的异读字\n軶\tak1\t「軶aak1」的异读字\n𫐊\tfaan5\t「𫐊faan6」的异读字\n𫐊\tfaan6\t𫐊客\n軵\tfu2\t「軵jung5」的异读字\n軵\tjung5\t推\n轲\to1\t𫐘轲(形容车行颠簸，或喻人不得志)\n轲\tho2\t「轲o1」的异读字\n轲\tngo1\t「轲o1」的异读字\n轸\tcan2\t(1)车后横木，借指车；(2)二十八宿之一；(3)悲痛\n轸\tzan2\t「轸can2」的异读字\n𪨶\tce4\t𪨶人\n𪨶\tse4\t「𪨶ce4」的异读字\n辁\tcyun4\t辁才\n辁\tsyun4\t「辁cyun4」的异读字\n輂\tguk1\t(1)驾马之大车；(2)运载土石的器具\n輂\tguk6\t「輂guk1」的异读字\n轻\theng1\t「轻hing1」的异读字，口语读音\n轻\thing1\t轻巧，年轻，轻诺寡信，轻生，轻狂，轻快，轻易，轻佻，轻便，轻盈，轻重，轻浮，轻率，轻视，轻敌，轻松，轻描淡写，轻歌曼舞，轻举妄动\n辄\tzip3\t辄入，辄囊，辄以为是，动辄得咎，闻听辄行，浅尝辄止\n辄\tzit3\t「辄zip3」的异读字\n辈\tbei3\t「辈bui3」的异读字\n辈\tbui3\t辈子，辈份，辈出，辈分\n辊\tgwan2\t能滚动的圆柱形机件\n辊\tkwan2\t「辊gwan2」的异读字\n輣\tpaang4\t「輣pang4」的异读字\n輣\tpang4\t輣车\n辍\tzyut3\t辍笔，辍业，辍演，辍学，中辍\n辍\tzyut6\t「辍zyut3」的异读字\n𫐓\tjau4\t𫐓轹\n𫐓\tjau5\t「𫐓jau4」的异读字\n輶\tjau4\t輶车，輶轩\n輶\tjau5\t「輶jau4」的异读字\n辘\tluk1\t辘轴，辘轳，饥肠辘辘\n辘\tluk6\t「辘luk1」的异读字\n𫐗\tpok3\t「𫐗buk6」的异读字\n𫐗\tbuk6\t古代车制\n轿\tgiu2\t「轿giu6」的异读字\n轿\tgiu6\t轿夫，花轿\n轿\tkiu4\t「轿giu6」的异读字\n轞\thaam5\t囚车\n轞\tlaam6\t「轞haam5」的异读字\n轹\tlik1\t(1)车轮碾压；(2)欺凌\n轹\tlik6\t「轹lik1」的异读字\n车\tce1\t车次，车厢，车祸，车裂，车间，车辆，火车，汽车「车geoi1」的异读字，多用于口语\n车\tgeoi1\t车马，车马费，车水马龙，舟车「车ce1」的异读字，多用于书面语\n辗\tnin5\t同「碾」字\n辗\tnin6\t「辗nin5」的异读字\n辗\tzin2\t辗转，辗转反侧\n辛\tsan1\t辛苦，辛劳，辛勤，辛亥，辛酸，辛辛那提，辛亥革命，辛辣，辛丑十「天干」之一\n辜\tgu1\t辜负，无辜，死有余辜\n辣\tlaat6\t辣椒，辣手，辛辣，老辣，毒辣\n办\tbaan6\t办法，创办，革职查办，办事处，办案\n辨\tbin6\t辨别，明辨是非，鉴貌辨色，辨认，辨识，辨音，辨色，分辨，不辨菽麦\n辞\tci4\t辞职，辞呈，辞典，辞退，辞世，辞行，辞令，辞句，辞藻，辞别，请辞\n辩\tbin6\t辩论，争辩，百辞莫辩，辩护，辩解，辩驳，辩白，诡辩，狡辩，辩证法，辩才无碍，能言善辩\n辟\tmai5\t同「弭」字\n辟\tbei6\t同「避」字\n辟\tbik1\t复辟，辟召，辟书\n辟\tpik1\t辟谷，鞭辟入里\n辰\tsan4\t辰星，辰时，诞辰，良辰，良辰吉日，辰砂，时辰\n辱\tjuk6\t辱骂，受辱，屈辱，侮辱\n农\tnung4\t农民，务农，农历，佃农，农作物\n辴\tcan2\t辴然\n辿\tcaam1\t缓步\n迅\tseon3\t迅速，迅即，迅雷\n迕\tng6\t违迕\n迓\tngaa6\t迎迓\n迉\tcai1\t迉迡(游息)\n迪\tdik6\t启迪，训迪，迪吉(进吉)\n迭\tdit6\t迭起，迭次，更迭\n迥\tgwing2\t迥异，迥别，孤迥，迥然不同\n述\tseot6\t述说，述职，述作\n迗\tngo4\t形容违背天地的字眼\n逅\thau6\t邂逅\n迻\tji4\t迻译(同移译)\n迷\tmai4\t迷信，低迷，扑朔迷离，迷幻药，迷茫，迷蒙，迷倒，迷恋，迷路，迷宫，迷惑，迷失，迷惘，当局者迷，迷途知返，迷你裙，目眩神迷，目迷五色\n迺\tnaai5\t(1)同「乃」字；(2)姓氏\n逄\tpong4\t姓氏\n迿\tseon6\t争先\n送\tsung3\t送信，赠送，雪中送炭，送别，送命，送礼，送秋波，播送，发送，附送，断送，恭送，护送，欢送，手挥目送，送旧迎新\n退\tteoi3\t退休，退出，退役，退缩，退让，退避\n逃\ttou4\t逃避，在逃，死里逃生，逃命，逃犯，逃脱，逃学，逃窜，逃亡，逃狱，逃之夭夭，落荒而逃，畏罪潜逃，暗箭难逃\n回\twui4\t回避，回响，回转，回旋，回廊，回向，轮回\n迵\tdung6\t洞彻\n迠\tcip3\t(1)行走；(2)飞翔的样子\n逋\tbou1\t逋慢，逋民，逋发，逋负，逋荡，逋逃，逋脱，逋留，逋客，逋峭，逋租，宿逋\n逞\tcing2\t逞凶，逞强，逞威，逞凶，逞能，得逞；(1)放纵；(2)展示\n速\tcuk1\t速度，速记，不速之客，快速，速战速决\n逗\tdau6\t逗留，逗趣，逗笑，逗乐，逗人喜爱，挑逗\n逌\tjau4\t同「攸」字\n逑\tkau4\t君子好逑\n连\tlin4\t连续，连络，连系，连接，连环，连结，连袂，连贯，连累，连载，连续不断\n逤\tsaa1\t逻逤(吐蕃地名)\n逝\tsai6\t逝世，逝去，逝者，消逝\n逍\tsiu1\t逍遥自在\n透\ttau3\t透过，透露，透明，透视，透支，透气，透顶，透光，透析，透镜\n途\ttou4\t途径，途中，路途，迷途，命途，道途，坦途\n通\ttung1\t通讯，灵通，通宵达旦，通过，通知，通常，通行，通缉，通车，通信，通盘，通航，通往，通货膨胀，通路，通报，通关，通话，通霄，通道，通用，通风，通令，通告，通俗，通勤，通货，通讯社，通明，通融，通通，通商，通力合作，通则，通性，通婚，通称，通电，通病，通译，通风报信，通红，通行无阻，通奸，通事，通化，通天，通人，通宵，通体，通学，通力，通畅，通才，通运，通说，通鉴，通达，通邮，通例，通牒\n逐\tzuk6\t逐渐，逐出，逐鹿中原，逐级，陆逐，逐臭，追逐名利，逐客，驱逐\n逜\tng6\t(1)抵触；(2)迕逆\n迼\tgit3\t跳跃\n迶\tjau6\t行走\n逴\tcoek3\t逴跞，逴逴，巡逴\n逸\tjat6\t逸民，逸仙，逸乐，逸趣，逸兴，逸事，俊逸，以逸待劳，骄奢淫逸；(1)散失；(2)奔跑；(3)放荡；(4)舒适\n逵\tkwai4\t(1)古称「九达之路」，后泛指大路；(2)常用于人名\n逯\tluk6\t逯逯姓氏\n逶\twai1\t逶迆\n逭\twun6\t逭暑(避暑)，逭劳(消除疲劳)，自作孽，不可逭(语出《尚书•商书•太甲中》)，罪无可逭\n周\tzau1\t周刊，周期，周延，周全，周到，周会，周岁，周密\n进\tzeon3\t进退，前进，进军，进步，进化\n逼\tbik1\t逼近，逼真，逼使，逼人，逼不得已，逼进，逼视，逼住\n遒\tcau4\t遒劲，遒健，遒美，遒逸\n遁\tdeon6\t遁走，逃遁，遁世逃名，遁入空门\n遐\thaa4\t遐迩，遐思，遐想，遐龄\n遇\tjyu6\t遇到，遇上，遇害，遇见，遇难，遇事，遇险，遇袭，遇人不淑，遇敌，际遇，待遇\n遂\tseoi6\t遂心，遂意，半身不遂\n违\twai4\t违反，违规，违法，违背\n运\twan6\t运动，运用，运输，运算，命运\n遑\twong4\t遑遑，不遑，遑论\n遉\tzing1\t同「侦」字\n遝\tdaap6\t杂遝(众多而纷乱的样子)\n遣\thin2\t遣返，遣送，遣散，遣使\n遥\tjiu4\t遥远，逍遥，遥遥无期，遥望，遥控器，遥遥领先，遥遥相对\n逊\tseon3\t逊色，逊位\n逽\tnok6\t走也\n迁\tcin1\t迁移，迁就，迁居，迁怒，迁徙，迁延，迁善，变迁，迁地为良\n遯\tdeon6\t遯心，遯世，遯辞，飞遯离俗，肥遯鸣高\n遮\tze1\t遮掩，遮瞒，只手遮天，遮蔽，遮盖，遮挡，遮光，遮阴，遮脸，遮羞，遮丑，口没遮拦\n遭\tzou1\t遭遇，周遭\n遶\tjiu5\t同「绕」字\n辽\tliu4\t辽阔，辽远\n邆\ttang4\t邆川(地名)\n遫\tcik1\t张开\n遧\tzoeng1\t同「章」字，意指彰显明白\n遳\tco1\t(1)徐行貌；(2)脆弱；(3)方言用字，指身材短矮\n避\tbei6\t避免，避开，避重就轻，避讳，避嫌\n邀\tjiu1\t邀请，邀约，邀功\n迈\tmaai6\t迈向，迈进，迈出，迈开，迈步，豪迈\n遾\tsai6\t(1)逮；(2)及\n邅\tzin1\t邅回，迍邅\n迩\tji5\t名闻遐迩，行远自迩\n边\tbin1\t旁边，边境，边界，边缘\n邍\tjyun4\t又高又平的地\n逦\tlei5\t迆逦\n迎\tjing4\t迎合，迎迓，迎春，迎击，迎刃而解，迎风招展，迎头痛击，迎头赶上，逢迎\n迎\tjing6\t迎娶，迎亲\n迍\tzeon1\t迍邅\n迍\ttyun4\t迍迍\n迦\tgaa1\t译音用字，如释迦牟尼\n迦\thaai6\t同「邂」字\n迣\tlai6\t飞越\n迣\tlit6\t同「迾」字\n迖\tdaat6\t同「达」字\n迖\ttaat3\t逃跑\n迖\ttai3\t地滑失足\n适\tkut3\t疾速\n迾\tlaat6\t粤语用字\n迾\tlit6\t遮迾(古王宫或车驾出行列队以警戒)\n追\tdeoi1\t钟钮\n追\tzeoi1\t追逐，追念，追随，急起直追\n迡\tnai6\t接近\n迡\tci4\t迉迡(游息)\n造\tcou3\t造访，造诣，造谒，深造，登峰造极\n造\tcou5\t新造(广东省地名)\n造\tzou6\t造化，造就，造福，造谣，造次，造化弄人，创造，笔参造化(文笔妙绝巅毫)\n逢\tfung4\t相逢，逢迎，重逢，逢凶化吉\n逢\tpung4\t逢逢(鼓声)\n达\tdaat6\t达成，达到，达观，表达，传达，通情达理\n达\ttaat3\t挑达\n逿\tdong6\t逿墬\n逿\ttong4\t迭逿\n递\tdaai3\t围绕\n递\tdai6\t递交，传递，层递，递解，递减，驿递，邮递，快递，速递，递眼色，递增，递减，递补，关山迢递；(1)传送；(2)更迭；(3)顺序\n递\tsai6\t同「逝」字\n远\tjyun5\t远见，远近，远视，远景，远交近攻，远走高飞，长远\n远\tjyun6\t敬而远之\n遛\tlau4\t逗遛\n遛\tlau6\t遛狗，遛马，遛逛，遛达\n适\tzaak6\t通「谪」字\n适\tdik1\t同「嫡」字\n适\tsik1\t适合，舒适，适可而止，适中，适宜，适度，适从，适意，适当，适应，适龄，不适，适者生存，适得其反，适逢其会\n遴\tleon4\t遴选，遴派\n遴\tleon6\t同「吝」字\n选\tsyun2\t选举，选手，选取，选定，选拔\n选\tsyun3\t通「算」字\n遗\twai4\t遗少，遗失，遗民，遗老，遗忘，遗事，遗风，遗容，遗训，遗书，遗产，遗诏，遗传，遗墨，遗憾，遗愿，遗孀，遗腹子，遗大投艰，遗文轶事，遗世独立，遗臭万年，路不拾遗\n遗\twai6\t遗赠\n还\twaan4\t还击，归还，讨价还价，还乡，还俗，还阳，退还，清还，还原反应，返老还童，买椟还珠，借尸还魂，欠债还钱\n还\tsyun4\t通「旋」字\n迄\that1\t「迄ngat6」的异读字\n迄\tngat6\t迄今，迄未成功，迄无音信；(1)至、直到；(2)一直\n迆\tji4\t「迆ji5」的异读字\n迆\tji5\t迆靡，迆逦，逶迆\n迂\tjyu1\t迂腐，迂回\n迂\tjyu4\t「迂jyu1」的异读字\n返\tfaan1\t「返faan2」的异读字\n返\tfaan2\t返回，往返，返哺，返航，返老还童，返祖现象，流连忘返\n近\tgan6\t近视，亲近，近朱者赤，近代，近因，近似，近况，近来，近郊，接近，远近，近体诗，近水楼台，近在咫尺，近在眼前，近乡情怯，不近人情\n近\tkan5\t「近gan6」的异读字，口语读音\n迒\tgong1\t「迒hong4」的异读字\n迒\thong4\t迒迹，虎迒兔蹊\n迫\tbaak1\t「迫bik1」的异读字\n迫\tbik1\t迫切，迫使，迫害，迫胁，迫不及待，迫不得已，迫在眉睫，逼迫，从容不迫\n迨\tdoi6\t等到\n迨\ttoi5\t「迨doi6」的异读字\n迤\tji4\t「迤ji5」的异读字\n迤\tji5\t同「迆」字\n迢\tsiu4\t「迢tiu4」的异读字\n迢\ttiu4\t迢远，迢遥，迢递，迢峣，千里迢迢\n迮\tzaak3\t(1)仓促；(2)姓氏\n迮\tzok3\t「迮zaak3」的异读字\n迸\tbing2\t「迸bing3」的异读字\n迸\tbing3\t迸发，迸裂，火光迸溅，迸流\n逆\tngaak6\t「逆jik6」的异读字，口语读音\n逆\tjik6\t逆料，忤逆，忠言逆耳，逆旅，逆子，逆流，逆境，逆转，逆鳞，逆诈，叛逆，逆水行舟，逆来顺受，倒行逆施，莫逆，莫逆之交\n迳\tgaang3\t「迳ging3」的异读字\n迳\tging3\t大相迳庭，迳自\n逛\tgwaang6\t逛街，游逛，闲逛\n逛\tkwaang3\t「逛gwaang6」的异读字\n逡\tceon1\t「逡seon1」的异读字\n逡\tseon1\t逡巡\n逖\tdik6\t「逖tik1」的异读字\n逖\ttik1\t远\n这\tze2\t这些，这么，这样\n这\tze3\t「这ze2」的异读字\n这\tze5\t「这ze2」的异读字\n逮\tdai6\t逮捕，力有未逮\n逮\tdoi6\t「逮dai6」的异读字\n遏\taat3\t遏止，怒不可遏，响遏行云，遏制\n遏\tngaat3\t「遏aat3」的异读字\n遏\tkit3\t「遏aat3」的异读字\n遍\tbin3\t「遍pin3」的异读字\n遍\tpin3\t遍及，遍布，遍地开花，遍体鳞伤，普遍\n遄\tcyun2\t「遄cyun4」的异读字\n遄\tcyun4\t遄疾，遄征疾速\n遄\tsyun4\t「遄cyun4」的异读字\n道\tdou3\t「道dou6」的异读字\n道\tdou6\t道路，道理，道貌岸然，道听途说，道谢，道歉，道家，道教，道观，道士，道具，道德，道义\n过\tgwo1\t「过gwo3」的异读字\n过\tgwo3\t过往，过眼云烟，过犹不及，过年，过门，过客，过渡，过程，过身，过继，过度，过火，过分，过失，过敏，过剩，过奖，过谦，过目不忘，过甚其词\n游\tjau4\t游戏，游说，游览，游玩，游荡，游学，游乐，炳烛夜游，旅游\n游\tjau6\t「游jau4」的异读字\n逾\tjyu4\t逾期，逾时，逾越，逾恒\n逾\tjyu6\t「逾jyu4」的异读字\n遘\tgau3\t相遇\n遘\tkau3\t「遘gau3」的异读字\n遢\ttaap3\t邋遢\n遢\ttaat3\t「遢taap3」的异读字\n遨\tngou4\t遨游\n遨\tngou6\t「遨ngou4」的异读字\n遹\twat6\t遹皇，回遹\n遹\tleot6\t「遹wat6」的异读字\n遹\tjyut6\t「遹wat6」的异读字\n遻\tng6\t(1)同「迕」字；(2)遇见\n遻\tngok6\t「遻ng6」的异读字，意指遇见\n遵\tzeon1\t遵守，遵行，遵命，遵从，遵照，遵嘱，遵养时晦，恪遵\n遵\tzyun1\t「遵zeon1」的异读字\n遽\tgeoi3\t「遽geoi6」的异读字\n遽\tgeoi6\t遽然，遽色，急遽，遽尔\n邂\thaai5\t「邂haai6」的异读字\n邂\thaai6\t邂逅\n邈\tmiu5\t「邈mok6」的异读字\n邈\tmok6\t邈远，邈邈，邈不可见，邈不可闻，邈若旷世，邈无其期\n邃\tseoi3\t「邃seoi3」的异读字\n邃\tseoi6\t邃古，邃密，深邃，精邃，高门邃宇；(1)深远；(2)精通\n逻\tlo4\t逻辑，巡逻\n逻\tlo6\t「逻lo4」的异读字\n迋\tkwaang3\t「迋gwong3」的异读字\n迋\tgwong3\t同「诳」字\n迋\twong6\t(1)往来；(2)前往\n遰\tdai3\t「遰dai6」的异读字\n遰\tdai6\t迢遰\n遰\tsai6\t(1)同「逝」字；(2)刀鞘\n迟\tci4\t迟暮，延迟\n迟\tzi3\t「迟zi6」的异读字\n迟\tzi6\t(1)等待；(2)比及\n邋\tlaap6\t邋遢\n邋\tlaat6\t「邋laap6」的异读字\n邋\tlip6\t邋邋\n邗\thon4\t邗江(县名)\n邛\tkung4\t邛崃(山名)小土山\n邙\tmong4\t北邙(河南省山名)\n邠\tban1\t邠县(县名)\n邦\tbong1\t邦交，邦国，旧邦，异邦\n邡\tfong1\t什邡(四川省县名)\n邢\tjing4\t姓氏\n邧\tjyun4\t古邑名\n邟\tkong3\t(1)古地名；(2)姓氏\n邥\tsam2\t邥垂\n邴\tbing2\t姓氏\n邸\tdai2\t宫邸\n邑\tjap1\t采邑，都邑，通都大邑\n邱\tjau1\t姓氏\n邳\tpei4\t邳县(江苏省县名)姓氏\n邵\tsiu6\t姓氏\n邞\tfu1\t古县名\n郊\tgaau1\t郊区，郊外，郊游，郊野，荒郊\n邽\tgwai1\t下邽(陕西省地名)\n郋\thai4\t里名\n郎\tlong4\t郎中，郎君，郎才女貌\n郱\tping4\t(1)古邑名；(2)姓氏\n邿\tsi1\t(1)古国名；(2)山名，在今山东省平阴县西\n郕\tsing4\t周朝国名\n邾\tzyu1\t(1)姓氏；(2)周代国名\n都\tdou1\t都市，都会，都城，都督，名都\n郛\tfu1\t外城\n郙\tfu2\t古亭名\n郏\tgaap3\t(1)姓氏；(2)河南省内县市名称之一\n郠\tgang2\t古县名\n郜\tgou3\t郜鼎(郜国所铸大鼎，后泛指国之重器)；(1)春秋时姬姓诸侯国名)；(2)姓氏\n郡\tgwan6\t郡县\n郘\tleoi5\t古亭名\n郚\tng4\t古城名，位于山东省\n部\tbou6\t部分，部份，部门，部队，部长，部会，部署，部将，部落，部位，部属，部下，部从，部族，部首，部员，部队长，部品\n郪\tcai1\t郪江\n郭\tgwok3\t城郭，东郭\n郔\tjin4\t古地名\n邕\tjung1\t(1)广西省河流名；(2)广西南宁的别称\n郲\tloi4\t古地名\n郳\tngai4\t周朝国名\n郫\tpei4\t郫县四川省地方名\n郯\ttaam4\t郯城姓氏\n郰\tzau1\t春秋时鲁国地名\n郣\tbut6\t郣海郡(古郡名，又写为渤海郡)；(1)隆起的土地；(2)尘土\n郥\tkwik1\t同「阒」字\n郹\tgwik1\t古邑名\n鄄\tgyun3\t鄄城\n鄇\thau6\t春秋时地名，在今河南省\n邮\tjau4\t邮局，邮票，邮件，邮政，邮寄，邮包，邮差，邮报，邮电，邮政储金，邮务，邮筒，邮轮\n郼\tji1\t殷国名\n郾\tjin2\t郾城(河南地名)\n鄀\tjoek6\t春秋时代楚国的都城\n郿\tmei4\t郿县\n鄂\tngok6\t(1)姓氏；(2)湖北省的别称\n鄃\tsyu1\t古县名\n鄬\twai4\t(1)古地名；(2)姓氏；(3)阪名\n郓\twan6\t郓城\n郬\tcing1\t地名\n鄐\tcuk1\t(1)古地名；(2)姓氏\n鄏\tjuk6\t郏鄏古山名\n鄍\tming4\t古邑名\n鄋\tsau1\t古国名\n鄎\tsik1\t(1)古国名；(2)古地名\n郧\twan4\t湖北省县名\n邬\twu1\t姓氏\n邹\tzau1\t(1)姓氏；(2)周代国名\n鄑\tzi1\t(1)古地名；(2)古邑名\n郻\thiu1\t郻县(古地名)\n鄈\tkwai4\t(1)古地名，又写作「葵」；(2)姓氏\n鄛\tcaau4\t地名\n鄜\tfu1\t鄜州，鄜县\n鄡\thiu1\t(1)古县名；(2)亭名；(3)姓氏\n鄢\tjin1\t鄢水(水名)；(1)姓氏；(2)春秋时国名\n鄘\tjung4\t周代诸侯国名\n鄝\tliu5\t春秋国名\n鄤\tmaan6\t(1)古地名；(2)姓氏\n鄚\tmok6\t鄚县\n鄞\tngan4\t鄞县\n鄙\tpei2\t鄙陋，卑鄙\n鄠\twu6\t鄠县\n鄣\tzoeng1\t鄣壅\n𫑘\tzyun1\t古国名\n鄪\tbei3\t古邑名\n鄩\tcam4\t(1)春秋时地名，在今河南省内；(2)姓\n鄫\tcang4\t周朝国名\n郸\tdaan1\t邯郸学步，邯郸\n邓\tdang6\t姓氏\n鄦\theoi2\t周代国名，在今河南省境内\n邻\tleon4\t邻近，邻居，邻家，毗邻，睦邻\n鄮\tmau6\t(1)古县名；(2)姓氏\n鄯\tsin6\t鄯善(汉时西域诸国之一，原名楼兰)\n郑\tzeng6\t郑重，郑重其事，郑卫之声，郑人买履\n鄵\tcou3\t(1)古地名；(2)姓氏\n邺\tjip6\t(1)姓氏；(2)河南省古地名\n鄹\tzau1\t鄹邑\n鄾\tjau1\t(1)古地名；(2)姓氏\n酀\tjin3\t古代地名\n鄨\tbit3\t(1)古具名；(2)水名\n鄻\tlin5\t古地名\n酃\tling4\t酃渌=醽醁(湖南酃湖出产的美酒)\n酆\tfung1\t酆都(四川省县名)，酆都城(传说指阴间)姓氏\n酅\tkwai4\t春秋时齐国地名\n酁\tcaam4\t(1)春秋时宋国地方名；(2)姓氏\n郦\tlik6\t姓氏\n邪\tce4\t邪曲，邪行，邪念，邪气，邪恶，邪教，邪道，邪说，邪僻，邪门歪道，邪魔外道\n邪\tje4\t莫邪助词\n邯\tham4\t人名用字\n邯\thon4\t邯郸(县名)\n郁\twat1\t愁\n郁\tjuk1\t郁秀，馥郁，浓郁，文采郁郁，钟灵郁秀香气浓烈；文采丰盛\n郇\twaan4\t姓氏\n郇\tseon1\t周朝国名\n乡\thoeng1\t乡村，故乡，衣锦还乡，梦乡，穷乡僻壤，离乡背井，乡党邻里，乡愿\n乡\thoeng3\t同「向」字\n郩\thaau4\t(1)地名；(2)山名\n郩\tou2\t邑名\n鄸\tmung4\t古地名，在春秋时代的鲁郡\n鄸\tmung6\t(1)古地名，在春秋时代的曹邑；(2)姓氏\n鄿\tgei1\t(1)古县名；(2)姓氏\n鄿\tkei4\t草名\n酄\tfun1\t春秋时鲁国城名\n酄\thyun1\t山西省乡名\n邘\tjyu1\t「邘jyu4」的异读字\n邘\tjyu4\t周朝国名\n邔\tgei2\t邔县(古县名)\n邔\tgei6\t「邔gei2」的异读字\n邶\tbui3\t古国名\n邶\tbui6\t「邶bui3」的异读字\n邰\ttoi1\t「邰toi4」的异读字\n邰\ttoi4\t姓氏\n郃\tgap3\t「郃hap6」的异读字\n郃\thap6\t郃阳\n郈\thau5\t「郈hau6」的异读字\n郈\thau6\t(1)古地名；(2)姓氏\n郅\tzat1\t「郅zat6」的异读字\n郅\tzat6\t郅治，郅隆\n郗\thei1\t「郗ci1」的异读字\n郗\tci1\t歔郗(感叹词)姓氏\n郢\tcing2\t「郢jing5」的异读字\n郢\tjing5\t郢正，郢匠挥斤，郢书燕说，子囊城郢\n郖\tdau1\t「郖dau6」的异读字\n郖\tdau6\t郖津\n郝\tgok3\t「郝kok3」的异读字\n郝\tkok3\t姓氏\n郤\tgwik1\t(1)孔隙；(2)姓氏\n郤\tkwik1\t「郤gwik1」的异读字\n郴\tcam1\t「郴sam1」的异读字\n郴\tsam1\t郴州\n鄅\tgeoi2\t「鄅jyu5」的异读字\n鄅\tjyu5\t春秋时国名\n鄁\tbui3\t同「邶」字，古国名\n鄁\tbui6\t「鄁bui3」的异读字\n鄱\tbo3\t「鄱po4」的异读字\n鄱\tpo4\t鄱阳湖\n郐\tkui2\t(1)姓氏；(2)周朝国名\n郐\tkui3\t「郐kui2」的异读字\n𫑡\tmaang4\t「𫑡maang5」的异读字\n𫑡\tmaang5\t𫑡阨(古地名)，𫑡县(古地名)\n邝\tkong3\t「邝kwong3」的异读字\n邝\tkwong3\t姓氏\n那\tnaa5\t那么，那些，那个\n那\tnaa6\t语助词\n那\tno1\t姓氏\n那\tno4\t刹那，有那其居，受弱不那\n那\tno5\t「那naa5」的异读字\n那\tno6\t无那\n邲\tbat6\t(1)河南省古地名；(2)姓氏\n邲\tbei3\t好看\n邲\tbit1\t「邲bat6」的异读字\n鄗\thaau1\t水名\n鄗\thok3\t「鄗hou6」的异读字\n鄗\thou6\t(1)古地名；(2)同「镐」字\n酂\tzaan3\t(1)古县名，在今湖北省境内；(2)古代地方组织单位；(3)姓氏\n酂\tco4\t酂白\n酂\tzyun2\t「酂zaan3」的异读字\n酉\tjau5\t酉时地支第十位\n配\tpui3\t配合，配额，配备，配偶，配置，配给，配角，配方，配对\n酒\tzau2\t酒店，酒精，酒席，酒酣耳热，酒足饭饱，酒肉朋友，酒囊饭袋\n酎\tzau6\t重酿的醇酒\n酌\tzoek3\t对酌，薄酌，清酌，酌量，酌情，酌减，自酌，斟酌；(1)酒；(2)斟酒；(3)酒席；(4)商量\n酘\ttau4\t酘酘(搓洗，北京方言)，酘一酘(酒醒再小酌以求舒适)酒再酿\n酚\tfan1\t苯酚\n酕\tmou4\t酕醄\n酟\ttim1\t(1)掺和；(2)调味\n酣\tham4\t酣睡，酣畅，酣醉，酣战，酒酣耳热；(1)畅快；(2)畅饮；(3)醉酒；(4)激烈\n酥\tsou1\t酥油，酥脆，酥饼，酥软\n酡\tto4\t酡颜，鹤发酡颜；(1)酒后脸色泛红；(2)红润貌\n酠\tgaa3\t苦酒\n酬\tcau4\t酬劳，应酬，酬谢，酬金，酬酢，酬答\n酮\ttung4\t一种有机化合物\n酯\tzi2\t一种有机化合物\n酲\tcing4\t解酲，宿酲，忧心如酲\n酷\thuk6\t酷热，酷似，酷爱，酷刑，严酷，酷吏，残酷\n酺\tpou4\t酺宴，大酺，赐酺\n酸\tsyun1\t心酸，酸味，寒酸\n酴\ttou4\t酴醾，酴酥\n醁\tluk6\t醽醁\n醅\tpui1\t未过滤之酒\n醇\tseon4\t醇酒，醇美，醇厚，醇香\n醄\ttou4\t酕醄\n醆\tzaan2\t(1)白色浊酒；(2)同「盏」字\n醉\tzeoi3\t醉酒，醉意，醉汉，醉心，醉倒，醉客，醉醺醺，醉翁之意不在酒，醉卧，醉鬼，醉翁，醉薰薰\n醂\tlam5\t(1)浸藏柿子；(2)桃葅\n醑\tseoi2\t醑剂\n醍\ttai4\t醍醐灌顶，醍醐\n醐\twu4\t醍醐\n醏\tdou1\t(1)酱油；(2)一种从西域传入的菜蔬\n丑\tcau2\t丑闻，丑陋，丑化，丑恶，丑事，丑态，丑态百出，丑行，丑剧，丑八怪，丑诋，丑名\n醝\tco4\t(1)白酒；(2)食用的盐\n醛\tcyun4\t一种有机化合物\n醢\thoi2\t醓醢(有汁的肉酱)，葅醢(古酷刑，把人剁成肉酱)肉酱\n醚\tmai4\t聚醚，乙醚\n醠\tong3\t浊酒\n糖\ttong4\t有机化合物中的类碳水化合物，为多羟醛或多羟酮和其衍生物或聚合物\n醟\twing6\t(1)酗酒至乱；(2)贝名；(3)脓\n醡\tzaa3\t(1)榨酒的榨床；(2)榨酒\n醯\thei1\t醯酱，醯鸡，醯鸡瓮里，井蛙醯鸡西醋\n医\tji1\t医院，医疗，医生，医学，医药，医治，医术，医科，医德，医病，医药，医书\n醧\tjyu3\t私宴饮\n醨\tlei4\t醇醨，𫗦糟啜醨\n醪\tlou4\t醪糟\n醥\tpiu5\t清酒\n酱\tzoeng3\t酱油，花生酱，加油添酱，酱菜\n酦\tput3\t酦酵\n醰\ttaam4\t醇厚\n醮\tziu3\t醮坛，打醮，再醮，改醮，建醮，斋醮，设醮\n醷\tjik1\t梅浆\n醴\tlai5\t醴泉，芳醴，金浆玉醴，甘醴，酒醴曲蘖\n醲\tnung4\t醲郁，醇醲\n醺\tfan1\t醺酣，微醺，醉醺醺\n醼\tjin3\t同「宴」字\n酿\tjoeng6\t酿酒，酝酿，酿制，酿造，酿祸，佳酿，新酿，陈酿；(1)以发酵方法制造；(2)逐渐孕育；(3)借喻为酒\n醽\tling4\t醽醁(泛指美酒)\n醾\tmei4\t酴醾(灌木名称)\n釂\tziu3\t干杯\n酾\tsi1\t(1)滤酒；(2)斟酒；(3)疏导\n酽\tjim6\t酽酒，酽茶\n酊\tding1\t酊剂，碘酊\n酊\tding2\t酩酊大醉\n酐\tgon1\t酸酐，碱酐，亚硫酐\n酐\thong5\t苦酒\n酖\tdaam1\t嗜酒\n酖\tzam6\t同「鸩」字\n酓\tjam2\t同「饮」字\n酓\tjim2\t(1)酒味苦；(2)山桑\n酓\tjim3\t酒盈量\n酢\tzok6\t酬酢\n酢\tcou3\t同「醋」字\n醋\tzok6\t同「酢」字\n醋\tcou3\t醋意\n醀\twai4\t肉酒\n醀\tzeoi3\t病也\n醳\tjik6\t醳酒，肴醳，飞觞泛醳\n醳\tsik1\t同「释」字\n酋\tcau4\t「酋jau4」的异读字\n酋\tjau4\t酋长，匪酋，贼酋，敌酋\n酏\tji4\t稀粥\n酏\tji5\t「酏ji4」的异读字\n酗\theoi3\t「酗jyu3」的异读字\n酗\tjyu3\t酗酒，酗讼发酒疯\n酩\tming4\t「酩ming5」的异读字\n酩\tming5\t酩酊，酩子里，酩酊大醉\n酵\tgaau3\t酵母，发酵\n酵\thaau1\t「酵gaau3」的异读字\n酵\thaau3\t「酵gaau3」的异读字\n酳\tjan2\t「酳jan6」的异读字\n酳\tjan6\t酳酢用酒漱口\n酳\tseon3\t「酳jan6」的异读字\n酹\tlaai6\t酹酒，奠酹，荐酹\n酹\tleoi6\t「酹laai6」的异读字\n酹\tloi6\t「酹laai6」的异读字\n酹\tlyut3\t「酹laai6」的异读字\n腌\tjim1\t腌鱼，腌肉，腌藏\n腌\tjip3\t「腌jim1」的异读字\n醊\tzeoi3\t「醊zyut3」的异读字\n醊\tzyut3\t祭祀时把酒泼在地上以祭奠\n醒\tseng2\t「醒sing2」的异读字，口语读音\n醒\tsing1\t「醒sing2」的异读字，诗词用之\n醒\tsing2\t醒悟，睡醒，醒目，酒醒，醒觉，清醒，苏醒，半梦半醒，如梦初醒\n醓\ttaam2\t醓醢\n醓\ttaam5\t「醓taam2」的异读字\n酝\twan2\t酝酿，良酝(美酒)，风流酝借；(1)酿酒；(2)借喻为酒\n酝\twan3\t「酝wan2」的异读字\n酝\twan5\t「酝wan2」的异读字\n醙\tsau1\t(1)白酒；(2)酒的再酿\n醙\tsau2\t「醙sau1」的异读字\n醭\tpok3\t白醭，醭儿\n醭\tbuk6\t「醭pok3」的异读字\n醵\tkek6\t「醵geoi6」的异读字\n醵\tgeoi6\t醵资，醵金\n醵\tkoek6\t「醵geoi6」的异读字\n醹\tjyu4\t「醹jyu5」的异读字\n醹\tjyu5\t醇厚的酒\n衅\tjan3\t「衅jan3」的异读字\n衅\tjan6\t衅兆，衅浴，衅鼓，衅端，衅钟，挑衅\n酤\tgu1\t(1)买酒；(2)卖酒\n酤\tgu3\t「酤gu1」的异读字\n酤\twu6\t一夜酿成的酒\n酪\tlok3\t酪干儿\n酪\tlok6\t「酪lok3」的异读字\n酪\tlou6\t酪酥，果子酪\n釆\tbin6\t(1)部首；(2)分别、辨别\n释\tsik1\t释怀，解释，冰释前嫌，释文，释迦，释疑，释放，释例，保释，稀释，如释重负，手不释卷\n采\tcoi2\t神采，风采\n采\tcoi3\t采地\n釉\tjau2\t「釉jau6」的异读字\n釉\tjau6\t釉质，釉陶\n里\tlei5\t里长，里民，里约，里程，里拉，里程碑，邻里\n野\tje5\t野蛮，郊野，野人献曝，野兽，野史，野心勃勃，田野，野心，野餐，野性，野火会，野味\n重\tcung4\t重申，重言，重沓，重唱，重婚，重围，重阳，重演，重复，重见天日，重修旧好，重操旧业，重整旗鼓，重蹈覆辙\n重\tcung5\t重负，重量，重创，重伤，重载，重担，重读，重工业，重金属，重头戏，轻重\n重\tzung6\t重心，重点，重用，重臣，重要，重镇，重听，慎重，稳重，严重\n量\tloeng4\t量杯，量具，量度，丈量，估量，思量，测量，车载斗量\n量\tloeng6\t量词，量入为出，量才称职，量腹而食，酒量，流量，数量，胆量，度量衡\n厘\thei1\t同「禧」字\n厘\thei2\t「厘hei1」的异读字\n厘\tlei4\t厘正，厘定，厘金，厘清，毫厘\n金\tgam1\t金融，金额，金钱，金牌，金属，金饰，金价，金库，金兰，金色，金石，金银，金币，金银珠宝，金条，金块，金星，金刚，金榜，金都，金玉，金陵，金碧辉煌，金瓜石，金质，金矿，金黄，金鸡，金榜题名\n釜\tfu2\t釜底抽薪，破釜沈舟\n𫟲\tkau4\t弩牙\n釢\tnaai5\t金属元素\n钋\tpok3\t一种放射性金属元素，符号Po\n针\tzam1\t针对，针线，针孔，指南针\n钗\tcaai1\t钗股，钗钏，宝钗，发钗，裙钗\n钓\tdiu3\t钓鱼，钓饵，钓线，钓竿，垂钓，沽名钓誉\n钒\tfaan4\t金属元素\n釬\thon6\t同「焊」字\n扣\tkau3\t纽扣\n钕\tneoi5\t一种金属元素\n钍\ttou2\t一种放射性金属元素，符号Th\n釸\tzik6\t硅的旧称\n釮\tcai4\t锋利\n釴\tjik6\t(1)附耳在唇外的方鼎；(2)姓氏\n𨰿\that1\t(1)马头上的金属饰物；(2)防止马匹互相冲突的金属器具\n𫓦\tzi2\t刚硬\n钣\tbaan2\t金属板\n钭\tdau2\t姓氏\n钝\tdeon6\t钝眊，钝根，钝汉，钝器，迟钝，愚钝\n钬\tfo2\t金属元素之一，符号为「Ho」\n钫\tfong1\t(1)古代一种方形的酒壶；(2)放射化学元素之一\n𫓧\tfu1\t铡刀\n釿\tgan1\t釿锷\n𫓪\tjyun4\t(1)同「铅」字；(2)同「沿」字\n钤\tkim4\t钤记\n钙\tkoi3\t一种金属元素，符号Ca\n钪\tkong3\t金属元素之一，符号为「Sc」\n鈌\tkyut3\t(1)刺；(2)马匹的装饰品\n釽\tpik1\t(1)破裂；(2)分析\n钛\ttaai3\t钛合金一种金属元素，即Titanium符号Ti\n鈜\twang4\t金铁交击的声音\n鈚\tpai1\t鈚箭\n𫟴\tfan1\t玉名\n鈤\tjat6\t(1)化学元素「锗」的旧译；(2)化学元素「镭」的旧译\n铂\tbok6\t一种金属元素，符号Pt，通称白金\n铳\tcung3\t铳子，炮铳，拳铳，吹铳，梦梦铳铳\n钾\tgaap3\t一种金属元素，符号K\n巨\tgeoi6\t巨额，巨款，巨量，巨大，钜子，巨富，巨著\n𫓭\tjoeng1\t𫓭𫓭(象声词，形容铃声)\n钰\tjuk6\t(1)坚硬的金属；(2)宝物\n铅\tjyun4\t铅笔，铅球，铅丹，铅字\n铉\tjyun5\t横贯鼎耳以扛鼎的器具\n钺\tjyut6\t大斧\n钳\tkim4\t同「箝」字\n铃\tling4\t铃声，铃铛，铃鼓，风铃\n铆\tmaau5\t铆钉，铆接，铆工\n鉧\tmou5\t钴鉧\n钼\tmuk6\t一种金属元素\n铌\tnei6\t一种金属元素\n铇\tpaau4\t同「刨」字\n鉥\tseot6\t长针\n铈\tsi5\t金属元素\n鉌\two4\t悬于轼、衡上旳车铃\n鉒\tzyu3\t(1)古代送死者的器物；(2)祭器\n鉣\tgip3\t组带铁\n𫓬\tzaap3\t一种金属制的薰香器\n钸\tbou1\t金版\n鉎\tsang1\t铁锈\n鉓\tcik1\t饰物\n𨱃\tgu1\t(1)铁的别名；(2)一种纤夫使用的工具\n鉡\tbun6\t锹类工具\n鉖\ttung4\t钓具\n鈱\tman4\t(1)计算税款；(2)铁叶\n鉯\tji5\t未经证实的化学元素名\n鉲\tkaa1\t化学元素「镉」的旧译\n鉰\tsi1\t化学元素「钪」的旧译\n铦\tcim1\t铦利，铦诸(神话传说中住在月亮上的虾蟆)\n铨\tcyun4\t铨叙，铨选，铨衡\n铥\tdiu1\t一种金属元素，符号Tm\n銧\tgwong1\t镭\n銋\tjam4\t(1)卷曲；(2)弱\n铟\tjan1\t一种金属元素，符号In\n铕\tjau5\t一种金属元素，符号Eu\n铒\tji5\t一种金属元素，符号Er\n铏\tjing4\t古代盛菜羹的器皿\n銎\tkung4\t斤斧受柄处\n銙\tkwaa1\t古代附于腰带上的扣\n铑\tlou5\t一种金属元素，符号Rh\n银\tngan4\t银河，水银，铁画银钩，银行，银票，银币，银幕，白银，俸银，定银，饷银，白发银须，火树银花，穿金戴银\n铯\tsik1\t一种金属元素，符号Cs\n铣\tsin2\t铣刀，铣床，铣铁，铣鋧\n铖\tsing4\t用于人名\n銕\ttit3\t同「铁」字\n铜\ttung4\t铜锣，铜像，铜镜，铜管，铜器，铜鼓，铜臭，铜墙铁壁\n𫟸\tsik1\t鼎类器具\n𫓯\tgai1\t金圭\n銡\tgat1\t轧轹\n銔\tpei1\t灵姑銔(古旗名)\n銆\tmak6\t銆刀(兵器名)\n銌\tzyun6\t钻的别名\n𫓰\tseot1\t锯物发出的声音\n銇\tleoi6\t(1)钻的别称；(2)平木器\n銝\tjau1\t长针\n𫟻\tzau1\t金刀\n銢\tpik1\t器皿\n銤\tmai5\t化学元素「锇」的旧译\n钡\tbui3\t一种金属元素\n鋍\tbut6\t火盛水沸，以致水从釜中外溢\n锉\tco3\t锉刀，扁锉，锉削\n锄\tco4\t锄头，锄奸，诛锄异己\n鋀\tdau6\t钍（符号Th）之旧译\n鋄\tfaan6\t马头上的装饰\n锋\tfung1\t锋面，锋利，锋芒，锋芒毕露，谈锋，锋芒逼人\n铗\tgaap3\t(1)剑；(2)剑柄；(3)冶铸用钳\n锆\tgou3\t一种金属元素，符号Zr\n銲\thon6\t同「焊」字\n𫓶\thyun1\t𫓶人，𫓶玉\n锐\tjeoi6\t锐利，敏锐，锐不可当，锐角，锐气，锐减，尖锐，精锐，养精蓄锐\n鋈\tjuk1\t(1)白铜；(2)镀\n𨱇\tkau4\t古代一种凿子\n锂\tlei5\t金属元素\n铝\tleoi5\t铝窗，铝锭，铝板\n锒\tlong4\t锒铛\n铓\tmong4\t铓锣，锋铓，雄戟耀铓\n鋂\tmui4\t一大环贯两小环\n锇\tngo4\t一种金属元素，符号Os\n锌\tsan1\t一种金属元素，符号Zn\n销\tsiu1\t销毁，滞销，销声匿迹，销售，销路，销量，销假，销案，撤销，包销，报销，推销，香销玉殒，销魂夺魄，薄利多销，形销骨立，一笔勾销\n锑\ttai1\t一种金属元素，符号Sb\n铽\ttik1\t金属元素Tb\n鋐\twang4\t(1)器具；(2)宏大\n鋑\tzeon3\t同「镌」字\n鋕\tzi3\t铭记\n𨱈\tcuk1\t(1)金子；(2)金镯子\n𫓵\tsan6\t圆铁\n鋓\tcim1\t锐利\n銵\thang1\t(1)碰撞；(2)同「铿」字，象声词\n鋡\tham4\t(1)容纳；(2)接受\n錵\tfaa1\t化学元素「钬」的旧译\n锛\tban1\t锛锄\n锖\tcoeng1\t锖色\n锠\tcoeng1\t古器皿名\n鋹\tcong2\t锐利\n錭\tdiu1\t钝\n锦\tgam2\t锦标，锦绣前程，衣锦还乡，锦州，锦上添花，锦旗，锦石，锦囊妙计，锦缎，锦鸡\n𫓹\tgei1\t镃𫓹(大锄)\n锢\tgu3\t锢塞，禁锢\n錧\tgun2\t(1)车毂端铁；(2)田器\n锜\tkei4\t(1)一种煮食工具；(2)一种凿子\n铼\tloi4\t金属元素Re\n录\tluk6\t录影，录取，录用，附录，笔录\n锰\tmaang5\t高锰酸钾(又名「灰锰氧」，KMnO4)金属元素Manganese(Mn)\n钔\tmun4\t放射性元素Md\n錍\tpai1\t(1)箭镞名；(2)古酒器\n锗\tze2\t一种金属元素\n锱\tzi1\t锱铢，锱铢必较，锱铢较量\n錎\thaam6\t同「陷」字\n锩\tgyun6\t刀剑的刃卷曲\n𫓾\tjuk6\t钨𫓾(温器，俗称汤罐)\n𨱍\tlong4\t𨱍头(锤子)\n𨱋\tling4\t金属名\n鋷\tzeoi3\t锥子之类的工具\n錖\tduk1\t觼舌\n鋿\tsoeng4\t(1)磨损；(2)车轮绕铁\n錌\tngon6\t柔软的铁\n錋\tpaang4\t兵器\n錉\tman4\t同「缗」字，「錉」是「缗」的讹字\n鋾\ttou4\t鋾铸\n鋺\tjyun1\t锄头曲铁\n錴\tluk6\t化学元素「铑」的旧译\n錼\tnoi6\t一种银白色放射性金属元素的旧译\n錹\thang2\t化学元素「钪」的旧译\n錓\thaang1\t器具\n锸\tcaap3\t掘土之具\n锹\tciu1\t铁锹，圆锹\n镀\tdou6\t镀金，电镀\n锻\tdyun3\t锻炼，锻造\n键\tgin6\t键盘，关键\n鍧\tgwang1\t铿鍧\n鍭\thau4\t一种金镞齐羽的箭\n鍱\tjip6\t铁叶\n钖\tjoeng4\t古代马额合或盾背之饰\n锲\tkit3\t锲薄，锲而不舍镂刻\n鎏\tlau4\t(1)成色佳的金子；(2)现多只用于人名\n炼\tlin6\t链子，链条\n鍪\tmau4\t兜鍪，鞮鍪；(1)古炊具，釜也；(2)古头盔\n镁\tmei5\t金属元素之一\n锷\tngok6\t刀剑的刃\n锶\tsi1\t金属元素之一，符号为「Sr」\n锾\twaan4\t罚锾\n锅\two1\t锅炉，锅盖，铁锅，锅巴\n鍖\tzam1\t同「椹」字\n镃\tzi1\t镃基(农具名，形如锄头)\n钟\tzung1\t锺馗，钟情，时钟\n𫔄\tjau4\t同「鑐」字\n鍌\tsin2\t(1)人名用字；(2)同「铣」字\n鍷\tkwai1\t铁铲\n鍜\thaa4\t铔鍜\n鍕\tgwan1\t(1)梵语译音用字；(2)金符\n鍞\thang1\t鍞锵(即铿锵)\n鍹\tsyun1\t锅\n鍙\thuk1\t银\n鍻\tgit3\t金鍻\n鍗\ttai4\t金名\n鍡\twui2\t鍡鑸(不平)\n鍐\tzung1\t马头饰\n鍎\tdat6\t(1)覆鍎；(2)枪\n鎀\tsau1\t铤，铜铁矿石\n鎃\tpaai3\t化学元素「镤」的旧译\n镈\tbok3\t(1)古代乐器；(2)锄一类的农具\n镑\tbong6\t金镑，英镑\n镓\tgaa1\t金属元素Ga\n镒\tjat6\t百镒之金，千镒之裘，非一狐之白古代重量单位，合二十两\n蓥\tjing4\t华蓥\n镕\tjung4\t镕化，镕点，镕铸\n𨰾\tmaa5\t化学元素\n鎒\tnau6\t同「耨」字\n𨱏\tsaap3\t镂\n锁\tso2\t锁钥，封锁，雾锁云埋，门锁，锁链，枷锁，锁匙，锁匠，锁骨，连锁反应\n𫔈\tsok3\t长矛\n𫔅\tsok3\t铁绳\n鎉\ttaap3\t(1)钓；(2)金属元素之一，旧叫\"铊\"\n钨\twu1\t钨丝，钨𫓾\n镇\tzan3\t镇定，镇静，市镇\n鎟\tsong2\t铃声\n𫟿\tcaa1\t(1)钱的异名；(2)锉子\n鎕\ttong4\t鎕锑\n鎨\tseon2\t金之萌生\n鎥\ttiu4\t金石\n鎤\tfong2\t钟声\n鎱\tjyun4\t人名用字\n鎴\tsik1\t化学元素「锶」的旧译\n鎎\thei3\t(1)怒战；(2)愤怒\n镖\tbiu1\t镖客，镖师，飞镖\n铲\tcaan2\t铲除，铲平\n鏙\tceoi1\t鏙错\n戚\tcik1\t戚斧\n锵\tcoeng1\t铿锵，戛玉锵金\n𫓩\tcung1\t𫓩𫓩，铮𫓩\n镜\tgeng3\t镜子，镜面，镜台，镜屏，眼镜，借镜，破镜重圆\n铿\thang1\t铿锵\n镛\tjung4\t大钟，古时一种乐器\n镪\tkoeng5\t镪水，白镪\n镠\tlau4\t纯美的黄金，又称紫磨金\n镂\tlau6\t镂刻，镂骨铭心\n镆\tmok6\t同「莫」字\n铩\tsaat3\t铩羽\n鏒\tsam3\t金鏒\n錾\tzaam6\t錾刀，錾子\n鏔\tji4\t无刃的戟\n鏣\tsyu3\t器名\n镙\tlo4\t锉镙\n鏎\tbat1\t同「毕」字\n鏬\tlaa3\t同「罅」字，「鏬」是「罅」的讹字\n鏀\tlou5\t同「𫓺」字\n鏄\ttyun4\t铁块\n鏧\tlung4\t鏧鏧(鼓声)\n𫔍\tfaan4\t(1)宽刃釜；(2)铲\n镄\tfai3\t人造放射性元素\n鐖\tgei1\t(1)机括；(2)鱼钩上的倒刺\n鐀\tgwai6\t同「匮」字\n𫔎\tkyut3\t有舌的环\n鏻\tleon4\t(1)一种含磷的化合物；(2)健康\n镣\tliu4\t镣铐，脚镣\n铹\tlou4\t一种放射性金属元素，符号Lr\n镨\tpou2\t一种金属元素\n䥽\tput3\t一种镰刀\n锈\tsau3\t铁锈，不锈钢\n𫔌\tsin3\t阉割\n鐕\tzaam1\t无盖钉\n钟\tzung1\t钟表，钟声，钟摆，钟楼，钟鼎之家，钟鸣鼎食\n鐊\tjoeng4\t同「钖」字\n鐑\tkit3\t同「锲」字\n鐉\tcyun4\t门框上承受门枢的铁环\n鐆\tseoi6\t阳鐆，古人就日下取火的铜杯或铜镜\n鐌\tzoeng6\t(1)鐌鼻，器饰；(2)锦名\n鏼\tsuk1\t铁鎗\n鏿\tcaang1\t同「鎗」字\n𫟼\tdaat6\t金属元素\n镱\tji3\t一种金属元素，符号Yb\n镭\tleoi4\t金属元素\n镰\tlim4\t镰刀，火镰\n鑀\toi3\t化学元素，Einsteinium(Es)，原子序99\n铁\ttit3\t铁皮，铁票，铁路，铁马金戈，铁面无私，铁石心肠\n镮\twaan4\t镮钗\n镯\tzuk6\t镯子，手镯，玉镯\n𫓺\tlou5\t(1)煎胶器；(2)刀柄\n鐬\twai3\t鐬鐬(盛貌/车铃声)\n鐷\tjip6\t同「鍱」字\n鐩\tseoi6\t同「鐆」字\n镔\tban1\t镔铁\n鉴\tgaam3\t鉴定，鉴赏，鉴别，鉴戒，品鉴，评鉴\n鑋\thing1\t(1)金属撞击声；(2)切断\n镬\twok6\t镬烹，鼎镬\n铸\tzyu3\t铸造，铸铁，铸成大错\n鑏\tning4\t(1)铁鑏；(2)刃柄\n鑅\twaang4\t钟声\n鑇\tzai1\t(1)切；(2)同「剂」字；(3)持\n鑆\tzeoi6\t铜半熟\n镳\tbiu1\t镳局，保镳，分道扬镳，连镳并轸；(1)马口中所含的铁环；(2)一种金属暗器，通「镖」\n镴\tlaap6\t白镴，锡镴\n鑢\tleoi6\t(1)磋磨；(2)磋磨骨角铜铁的工具；(3)姓氏\n鑤\tpaau4\t同「刨」字\n铄\tsoek3\t铄金，铄石流金，震古铄今，矍铄；(1)锻炼；(2)光亮\n锧\tzat1\t斧锧\n鑗\tlei4\t(1)金属；(2)裂；(3)釜属\n鑝\tpung4\t首著兜𫓴\n鑫\tjam1\t兴盛、多财。常用于人名或店名\n鑪\tlou4\t同「炉」字\n鑨\tlung4\t(1)器具；(2)同「砻」字\n鑩\tngok6\t钩\n镵\tcaam4\t长镵\n钥\tjoek6\t钥匙，锁钥，宝钥，市钥\n镧\tlaan4\t金属元素La\n镶\tsoeng1\t镶嵌，镶牙，金镶玉嵌，镶金，镶满，镶边\n鑳\tgin6\t同「键」字\n鑵\tgun3\t汲水器\n𫔔\tkwai4\t(1)大盆；(2)鼎；(3)日旁气\n镊\tnip6\t镊子\n镋\ttong2\t古代武器\n鑶\tcong4\t铃声\n锣\tlo4\t锣鼓，开锣\n銮\tlyun4\t銮铃，銮舆，金銮殿；(1)系在君王车驾上的铃铛；(2)君王的车驾；(3)借指君王\n鑸\tleoi5\t鍡鑸\n钃\tsuk6\t同「斸」字\n凿\tzok6\t凿井，钢凿，穿凿附会，凿洞，凿山，证据确凿，圆凿方枘\n釭\tgong1\t油灯\n釭\tgung1\t(1)车毂口穿轴用的铁圈；(2)宫室壁带上的环形金属饰物\n釪\twaa4\t同「铧」字\n釪\tjyu4\t钵釪，錞釪(古乐器)\n釫\twaa4\t同「铧」字\n釫\twu1\n钯\tbaa2\t金属元素名称，符号为「Pd」\n钯\tpaa4\t齿钯，钉钯，镋钯，钯子拳\n钘\tgin1\t人名用字\n钘\tjing4\t古代盛酒的器皿\n钑\tzaap6\t粤语用字\n钑\tkap1\t钑戟，琼钑，钑镂\n钠\tnaap6\t一种金属元素，符号Na\n钠\tnaat3\t粤语用字\n鈂\tcam4\t铁签之类的工具\n鈂\tzam3\t沉重\n鈊\tsam1\t金属名称\n鈊\tsam3\t利也\n鉏\tceoi4\t姓氏\n鉏\tzeoi6\t鉏铻(同龃龉)\n鉏\tco4\t同「锄」字\n钿\tdin6\t钱\n钿\ttin4\t宝钿\n铍\tpei1\t(1)针砭用的长针；(2)长矛\n铍\tpei4\t一种金属元素\n铊\ttaa1\t金属名称\n铊\tsi1\t兵器名称\n铊\tto4\t秤铊(同称砣)\n钲\tzing1\t古乐器\n钲\tzing3\t化学元素「镄」之旧称\n钻\tzyun1\t「钻」的简体字\n钻\tzyun3\t「钻」的简体字\n鉐\tsek6\t以药石治铜\n鉐\tzuk1\t姓氏\n鈶\tci4\t同「柌」字，镰刀柄\n鈶\tci5\t矛类兵器\n鉼\tbeng2\t饼状金属块\n鉼\tping4\t古地名\n铫\tdiu6\t铫子\n铫\tjiu4\t(1)一种大锄；(2)姓氏\n铫\tsiu6\t放射性化学元素\n铬\tgok3\t一种金属元素，符号Cr\n铬\tlok6\t铬落\n铪\thaa1\t化学元素\n铪\thap6\t铪匝\n𫓴\tmaau4\t同「矛」字\n𫓴\tmau4\t剑锋\n锔\tgeoi3\t同「锯」字\n锔\tguk6\t一种放射性金属元素\n铻\tng4\t锟铻；(1)山名；(2)宝剑名\n铻\tjyu5\t鉏铻\n鋘\twaa4\t同「铧」字\n鋘\tng4\t锟鋘山(又作锟铻山)\n铺\tpou1\t铺叙，铺张，铺陈，铺垫，铺盖，铺天盖地，铺眉苫眼，铺张扬厉，铺锦列绣，平铺直叙\n铺\tpou3\t铺位，铺面，铺保，店铺\n鋞\thang6\t长钟\n鋞\tjing4\t(1)保温器具；(2)同「钘」字，一种古代盛酒器具\n钱\tcin4\t钱币，金钱，见钱开眼，钱财，钱庄，钱粮\n钱\tzin2\t古农具\n错\tlaap6\t同「镴」字，「错」是「镴」的简体字\n错\tco3\t错误，错谬，错觉\n错\tcok3\t错落，错综复杂，错彩镂金，交错，杂错\n错\tcou3\t通「措」字\n錞\tdeoi6\t矛戟柄末的平底金属套\n錞\tseon4\t錞于(古代一种铜制乐器)\n铔\taa1\t铔鍜(保护颈项的铠甲)\n铔\taa3\t柔刚铁\n錀\tfan1\t兔奄錀\n錀\tleon4\t金属\n锤\tceoi4\t称锤\n锤\tseoi4\t秤锤\n针\tkim4\t古地名、人名\n镉\tgaak3\t金属元素\n镉\tlik6\t同「鬲」字\n镐\tgou2\t镐头(挖土用丁字形工具)\n镐\thou6\t镐京，丰镐(周的旧都，今陕西省长安县西南)\n镏\tlau4\t镏金\n镏\tlau6\t镏子\n鎑\ttaap3\t鎑鑪\n鎑\tjip6\t(1)金坚；(2)铁器\n镟\tsyun4\t辘轳\n镟\tsyun6\t(1)回旋著切削；(2)转轴\n镗\ttong1\t鞳镗\n镗\ttong4\t镗孔\n鏕\tou1\t同「鏖」字\n鏕\tluk6\t巨鏕\n镫\tdang1\t同「灯」字\n镫\tdang3\t镫骨，马镫\n镦\tdeoi6\t同「錞」字\n镦\tdeon1\t冲压金属板，使其变形\n铙\tnaau4\t古代乐器\n铙\tnaau6\t同「挠」字\n鏸\twai6\t(1)锐；(2)同「惠」字\n鏸\tjeoi6\t古代侍臣所执的兵器\n鏸\tseoi6\t大鼎\n鐻\tgeoi3\t古乐器名\n鐻\tgeoi6\t同「虡」字\n鐻\tkeoi4\t金银耳环\n鐱\tcim1\t臿\n鐱\tgim6\t(1)金；(2)同「剑」字\n鐰\tciu1\t同「锹」字\n鐰\tcou3\t(1)金铁大刚；(2)干燥\n鐰\tcou4\t铁刚折\n鑐\tjau4\t同「𫔄」字\n鑐\tseoi1\t锁簧\n鑈\tnai5\t同「檷」字\n鑈\tnip6\t(1)正；(2)镊子\n鑯\tcim1\t刻\n鑯\tzim1\t(1)铁器；(2)尖锐\n钻\tzyun1\t钻仰，钻研，钻营，钻木取火，钻冰求酥\n钻\tzyun3\t钻石，风钻，电钻\n钀\tngai5\t同「轙」字\n钀\tjit6\t镳，马勒旁铁\n钇\tjyut3\t金属元素(Yttrium，Y)，原子序39。\n钇\tjyut6\t「钇jyut3」的异读字\n钊\tciu1\t勉励\n钊\tziu1\t「钊ciu1」的异读字\n钉\tdeng1\t「钉ding1」的异读字，口语读音\n钉\tding1\t钉书机，铁钉，斩钉截铁，钉耙，钉问，碰钉，打补钉，螺丝钉，眼中钉\n钏\tcyun1\t「钏cyun3」的异读字\n钏\tcyun3\t玉钏，金钏，钗钏(泛指妇女的饰物)手镯\n釱\tdaai6\t钳釱\n釱\tdai6\t「釱daai6」的异读字\n钞\tcaau1\t钞写，现钞，钞票，钞掠，钞逻\n钞\tcaau3\t「钞caau1」的异读字，用于「钞票」一词\n钧\tgwan1\t千钧一发，雷霆万钧\n钧\tkwan1\t「钧gwan1」的异读字\n钮\tnau2\t(1)同「纽」字；(2)姓氏\n钮\tnau5\t「钮nau2」的异读字\n鈙\tgam6\t「鈙kam4」的异读字\n鈙\tkam4\t以手按物\n鈏\tjan5\t(1)一种坚硬而呈白色的锡；(2)锡的别名\n鈏\tjan6\t「鈏jan5」的异读字\n钩\tau1\t「钩ngau1」的异读字\n钩\tgau1\t「钩ngau1」的异读字\n钩\tngau1\t钩稽，秤钩\n钹\tbat6\t门钹，鼓钹，踏钹，铜钹，铙钹\n钹\tbut6\t「钹bat6」的异读字\n铋\tbei3\t金属元素之一，符号为「Bi」\n铋\tbit1\t「铋bei3」的异读字\n钽\tdaan3\t「钽taan2」的异读字\n钽\ttaan2\t一种金属元素，符号Ta\n钴\tgu1\t「钴gu2」的异读字\n钴\tgu2\t钴鉧\n铀\tjau2\t「铀jau4」的异读字\n铀\tjau4\t一种放射性金属元素，符号U\n鉊\tciu1\t「鉊ciu1」的异读字\n鉊\tziu1\t(1)镰刀；(2)用镰刀割\n鈭\tci1\t「鈭zi1」的异读字\n鈭\tzi1\t鈭錍(短斧)\n铰\tgaau2\t铰刀，铰钉，铰链\n铰\tgaau3\t「铰gaau2」的异读字\n衔\thaam4\t衔泣，衔枚，衔恨，衔恤，衔接，衔冤，衔恩，衔华㐽实，衔环结草，官衔，职衔，燕子衔泥\n衔\tham4\t「衔haam4」的异读字\n銗\thau4\t「銗hong6」的异读字\n銗\thong6\t同「缿」字\n铱\tji1\t一种金属元素\n铱\tji2\t「铱ji1」的异读字\n铷\tjyu4\t一种金属元素，符号Rb\n铷\tjyu6\t「铷jyu4」的异读字\n铐\tkaau3\t铐镣，手铐\n铐\tkau3\t「铐kaau3」的异读字\n铭\tming4\t铭言，铭刻，铭记，铭牌，铭感，铭肌镂骨，刻骨铭心\n铭\tming5\t「铭ming4」的异读字\n铵\ton1\t化学中的阳性复根之一，从铵衍生所得的正一价复根，即铵离子\n铵\tngon1\t「铵on1」的异读字\n铢\tsyu4\t「铢zyu1」的异读字\n铢\tzyu1\t铢钝，五铢钱\n铚\tzat1\t「铚zat6」的异读字\n铚\tzat6\t短镰\n鉹\tci2\t(1)甑的别称；(2)小刀\n鉹\tji4\t「鉹ci2」的异读字\n锓\tcam2\t「锓cim1」的异读字\n锓\tcim1\t锓版\n锓\tzim1\t「锓cim1」的异读字\n鋊\tguk1\t「鋊juk1」的异读字\n鋊\tjuk6\t(1)铜屑；(2)磨光；(3)金属元素Gi\n鋧\thin2\t「鋧jin6」的异读字\n鋧\tjin6\t铣鋧\n锊\tlyut3\t古重量单位\n锊\tlyut6\t「锊lyut3」的异读字\n铤\tting2\t「铤ting5」的异读字\n铤\tting5\t铤而走险\n鋆\tgwan1\t「鋆wan4」的异读字\n鋆\twan4\t金子\n鋎\twaan5\t(1)刀刃；(2)刀的别称\n鋎\twun5\t「鋎waan5」的异读字\n锕\taa3\t放射性元素Ac\n锕\tngaa3\t「锕aa3」的异读字\n锕\to1\t「锕aa3」的异读字\n表\tbiu1\t手表，电表，水表\n表\tbiu2\t「表biu1」的异读字\n锭\tding2\t「锭ding3」的异读字\n锭\tding3\t锭剂，锭子，纺锭，纱锭，银锭\n锭\tding6\t「锭ding3」的异读字\n锯\tgeoi3\t锯齿，拉锯，电锯\n锯\tgoe3\t「锯geoi3」的异读字，口语读音\n钢\tgong1\t「钢gong3」的异读字\n钢\tgong3\t钢铁，钢琴，大炼钢，钢盔，钢筋，钢材，钢锭\n锟\tgwan1\t「锟kwan1」的异读字\n锟\tkwan1\t锟铻\n锞\tfo3\t「锞gwo2」的异读字\n锞\tgwo2\t(1)同「輠」字；(2)小块之金银锭\n鋋\tjin4\t「鋋sin4」的异读字\n鋋\tsin4\t刀铤\n锡\tsek3\t「锡sik3」的异读字，作金属元素时口语用字\n锡\tsik3\t锡杖，锡箔，锡镴\n錔\tdaap6\t金属套\n錔\ttaap3\t「錔daap6」的异读字\n铮\tcaang1\t「铮zaang1」的异读字\n铮\tzaang1\t铮𫓩\n铮\tzang1\t「铮zaang1」的异读字\n锥\tjeoi1\t「锥zeoi1」的异读字\n锥\tzeoi1\t锥形，锥心泣血，立锥之地\n錣\tzeoi3\t赶马杖上端用来刺马的铁针\n錣\tzyut3\t「錣zeoi3」的异读字\n錪\tdin2\t「錪tin2」的异读字\n錪\ttin2\t煮食用具\n𫓽\tcung4\t「𫓽zung3」的异读字\n𫓽\tzung3\t金毛\n鍑\tfu3\t大口釜\n鍑\tfuk1\t「鍑fu3」的异读字\n顉\tham6\t(1)点头或摇头；(2)下巴上曲貌\n顉\tjam1\t「顉ham6」的异读字\n锴\tgaai1\t「锴kaai2」的异读字\n锴\tkaai2\t精铁\n锚\tmaau4\t锚索，起锚，抛锚\n锚\tnaau4\t「锚maau4」的异读字\n锼\tsau1\t(1)镂刻；(2)蚀\n锼\tsau2\t「锼sau1」的异读字\n锼\tsuk1\t「锼sau1」的异读字\n锽\tcaang4\t「锽wong4」的异读字\n锽\twong4\t锽锽\n铡\tzaap6\t铡刀，铡草\n铡\tzaat3\t「铡zaap6」的异读字\n鍣\tciu1\t「鍣ziu1」的异读字\n鍣\tziu1\t锥子\n鍏\twai4\t臿，耕地的农具\n鍏\twai5\t「鍏wai4」的异读字\n鎗\tcaang1\t「鎗coeng1」的异读字，特别用于形容金钟之声\n鎗\tcoeng1\t同「枪」字\n铠\thoi2\t铠甲，铠马，铠仗\n铠\tkoi3\t「铠hoi2」的异读字\n镍\tnip1\t「镍nip6」的异读字\n镍\tnip6\t一种金属元素，符号Ni\n鏂\tau1\t鏂銗\n鏂\tngau1\t「鏂au1」的异读字\n镝\tdik1\t镝矢，镝锋，箭镝金属元素Dysprosium(Dy)\n镝\tdik6\t「镝dik1」的异读字，用于指谓金属元素Dysprosium\n鏮\thong1\t化学元素\n鏮\tkong3\t「鏮hong1」的异读字\n链\tlin2\t「链lin4」的异读字\n链\tlin4\t链条，链子，链椎，锁链\n链\tlin6\t「链lin4」的异读字\n镘\tmaan4\t「镘maan6」的异读字\n镘\tmaan6\t涂饰墙壁的工具\n鏖\tou1\t鏖兵，鏖战\n鏖\tngou1\t「鏖ou1」的异读字\n鏖\tngou4\t「鏖ou1」的异读字\n鏊\tngou4\t「鏊ngou6」的异读字\n鏊\tngou6\t鏊子，鏊盘，鏊砚烙饼用的平底锅\n鏏\twai6\t「鏏seoi6」的异读字\n鏏\tseoi6\t(1)鼎的一种；(2)小貌\n镞\tzuk1\t「镞zuk6」的异读字\n镞\tzuk6\t箭镞\n镤\tpok3\t「镤buk6」的异读字\n镤\tbuk6\t一种放射性金属元素，符号Pa\n镡\ttaam4\t古代一种似剑而小的兵器\n镡\tcam4\t「镡taam4」的异读字\n镡\tjam4\t「镡taam4」的异读字\n铧\twaa1\t「铧waa4」的异读字\n铧\twaa4\t犁铧\n𨱓\tciu4\t「𨱓ziu1」的异读字\n𨱓\tziu1\t𨱓斗\n𨱔\tzeon1\t「𨱔zyun3」的异读字\n𨱔\tzyun3\t戈柄下端冒铜为圆锥形者\n鏶\tzaap6\t「鏶cip3」的异读字\n鏶\tcip3\t(1)金属薄片；(2)炙铁\n铎\tdok6\t木铎，振铎，毁钟为铎，司铎，风铎古乐器名。有柄有舌，振舌发声，以宣布法令或示警\n铎\tnok6\t「铎dok6」的异读字\n镌\tzeon1\t「镌zyun1」的异读字\n镌\tzeon3\t「镌zyun1」的异读字\n镌\tsyun6\t「镌zyun1」的异读字\n镌\tzyun1\t镌刻，镌级，镌罚，镌心铭骨，雕镌\n𫠁\ttaap3\t「𫠁hap6」的异读字\n𫠁\thap6\t𫠁鑪\n鑮\tbok3\t同「镈」字\n鑮\tbok6\t「鑮bok3」的异读字\n镢\tgwok3\t「镢kyut3」的异读字\n镢\tkyut3\t大锄\n钆\tgaa1\t金属元素\n钆\tgaat3\t「钆gaat3」的异读字\n钆\tkau4\t同「𫟲」字\n钌\tliu4\t「钌liu6」的异读字\n钌\tliu5\t钌鈌\n钌\tliu6\t钌吊儿\n钐\tsaam1\t金属元素\n钐\tsaam3\t「钐sin3」的异读字\n钐\tsin3\t钐刀，钐草，钐镰\n𫟵\twan5\t古时侍臣所执的兵器\n𫟵\tdeoi6\t古代矛类兵器\n𫟵\tjeoi6\t「𫟵wan5」的异读字\n钶\taa3\t同「锕」字\n钶\tho1\t「钶ko1」的异读字\n钶\tko1\t金属元素「铌」之旧名\n銴\tsai6\t(1)车樘结；(2)\n锬\ttaam4\t长矛\n锬\ttaan2\t「锬taam4」的异读字\n锬\tcim1\t同「铦」字\n鋻\tgin1\t(1)刚硬的铁器；(2)一种用以割禾的农具；(3)「鋻gin3」的异读字\n鋻\tgin3\t(1)刚硬；(2)淬刀剑使之坚硬\n𫔂\tsi4\t钥𫔂\n𫔂\tdik1\t𫔂针；(1)同「镝」字，歃血器解；(2)中医九种针法之一\n𫔂\tdik6\t「𫔂dik1」的异读字\n𫔇\tbai1\t钗\n𫔇\tbei6\t「𫔇bai1」的异读字\n𫔇\tpei1\t(1)「𫔇bai1」的异读字；(2)箭镞形之刀\n铴\ttong1\t铴锣\n铴\ttong2\t(1)「铴tong1」的异读字；(2)「铴tong3」的异读字\n铴\ttong3\t打磨石木的器具\n铛\tcaang1\t瓦铛，酒铛\n铛\tcing1\t「铛caang1」的异读字\n铛\tdong1\t锒铛\n铛\ttong1\t同「镗」字\n鐹\tgwo1\t车釭\n鐹\tgwo2\t镰刀\n鐹\tgwo3\t「鐹gwo2」的异读字\n𫔁\tban1\t同「锛」字\n𫔁\tfan3\t「𫔁fan4」的异读字\n𫔁\tfan4\t(1)铁属；(2)饰；(3)佛教用具\n镺\tou2\t镺蔓(延长蔓衍)\n镻\tdit6\t毒蛇名，又称作蝁\n长\tcoeng4\t长生，长舌，长夜，长河，长途，长眠，长短，长处，长治久安，长风破浪，长袖善舞，长歌当哭，长绳系日\n长\tzoeng2\t长老，长者，长雄，生长，成长，部长\n长\tzoeng6\t身无长物\n镽\tliu4\t细长\n镽\tliu5\t长貌\n镼\tgwat6\t绣镼\n镼\twat1\t「镼wat1」的异读字\n门\tmun4\t门诊，门窗，门票，门市，门槛，门神，门路，门户，门面，门牌，门铃，门徒，门外汉，门廊，门当户对，门生，门派\n闩\tsaan1\t上闩，门闩\n闪\tsim2\t闪避，闪烁，闪光，闪电，闪亮，闪耀\n闭\tbai3\t闭会，闭塞，闭幕，闭关，关闭\n闬\thon6\t(1)里巷的门；(2)墙垣\n闫\tjim4\t(1)同「阎」字；(2)姓氏\n闲\thaan4\t防闲，闲邪\n开\thoi1\t开始，开心，避开，开设，开朗，开会\n闰\tjeon6\t闰月，闰年，闰统\n闶\tkong3\t闶阆(高大的门户)\n闵\tman5\t闵凶，闵勉，闵绵\n闳\twang4\t闳览，闬闳，崇闳，闳衍，辩知闳达，；(1)巷门；(2)宏大宽阔；(3)姓氏\n𨸂\tpaang1\t(1)宗庙门；(2)宫中门；(3)巷门\n𨸃\tsam3\t覆盖\n閟\tbei3\t(1)闭门；(2)谨慎\n闸\tzaap6\t闸门，闸口，水闸\n閛\tping1\t(1)开关门声；(2)门无隙貌\n阀\tfat6\t阀阅，门阀，官阀，军阀，财阀\n阁\tgok3\t阁揆，阁员，阁下，阁楼\n闺\tgwai1\t闺房，闺秀，闺阁，闺女，闺怨，大家闺秀，待字闺中，香闺\n阅\tjyut6\t阅读，阅卷，阅览，阅兵，阅历，阅报\n阃\tkwan2\t(1)门坎；(2)妇女居住的内室\n閰\tguk1\t(1)闲閰；(2)闭\n阊\tcoeng1\t阊风，阊阖\n阍\tfan1\t司阍，叩阍\n阉\tjim1\t阉割，阉鸡，阉人，阉党\n阎\tjim4\t阎王姓氏\n𫔴\tleon6\t𫔴鹊\n阌\tman4\t阌乡\n閺\tman4\t乡名\n闀\thung6\t哄\n板\tbaan2\t老板\n阔\tfut3\t阔别，阔绰，昂首阔步，阔落，辽阔，高谈阔论，海阔天空\n闉\tjan1\t闉阇\n阕\tkyut3\t乐阕\n阑\tlaan4\t阑干，阑珊，阑出，阑风\n闅\tman4\t同「阌」字\n闱\twai4\t闱场，宫闱\n阖\thap6\t阖家，阖府，捭阖\n𫔶\tjit6\t门中所竖短木\n阙\tkyut3\t宫阙，阙疑\n阘\ttaap3\t阘茸(微贱或愚鲁的人或物)，阘懦楼上的单扇门\n阗\ttin4\t阗咽，喧阗，阗溢，和阗\n关\tgwaan1\t关系，关切，关心，关键，关注，关闭，关键，关节，关照，机关\n闚\tkwai1\t从门中偷看\n辟\tpik1\t辟建，辟地，辟谣，辟划，独辟蹊径\n闼\ttaat3\t宫闼(王宫的门，后转称为宫中)，排闼，幽闼，连闼洞房门\n阛\twaan4\t阛阓\n间\tgaan1\t空间，中间，民间艺术，晚间，时间，间不容发，天上人间\n间\tgaan3\t间接，间断，挑拨离间，间隙，间格，间谍，间歇，反间，合作无间\n间\thaan4\t同「闲」字\n闲\tgaan1\t同「间」字，用于「空间」等词\n闲\tgaan3\t同「间」字，用于「间隙」等词\n闲\thaan4\t闲暇，清闲，游手好闲，闲话，闲心，闲日，闲事，闲居，闲气，闲书，闲散，闲雅，闲置，闲愁，闲适，闲杂，闲职，空闲，农闲，闲言碎语，闲情逸致，闲云野鹤\n閜\thaa1\t豁閜(豁然大开)\n閜\tho2\t閜砢(互相扶持)\n合\tgap3\t(1)姓氏；(2)小门\n合\thap6\t同「阖」字\n合\tgok3\t同「阁」字\n阂\that6\t隔阂\n阂\tgoi1\t同「垓」字\n阂\tngoi6\t藏塞\n閮\tting4\t同「庭」字\n閮\tting5\t门外启\n閷\tsaai3\t同「杀」字，意谓「减省」\n閷\tsaat3\t同「杀」字，意谓「伤害」\n闛\tcoeng1\t闛阖(即阊阖)\n闛\ttong1\t铿锵闛鞈(形容鼓声)\n闛\ttong4\t闛闛(旺盛的样子)\n闣\tdong3\t闪闣人\n闣\ttong1\t同「鼞」字\n𫔰\tfaan6\t「𫔰bin6」的异读字\n𫔰\tbin6\t门柱上的斗拱\n闽\tman4\t「闽man5」的异读字\n闽\tman5\t闽江，闽南\n闾\tleoi4\t闾井，闾左，闾里，闾巷，闾阎，乡闾，三闾大夫，倚闾而望\n闾\tleoi5\t「闾leoi4」的异读字\n阆\tlong5\t阆中(县名)，阆苑\n阆\tlong6\t「阆long5」的异读字\n阈\tkwik1\t「阈wik6」的异读字\n阈\twik6\t(1)门槛；(2)界限\n阒\tgwik1\t阒然\n阒\tkwik1\t「阒gwik1」的异读字\n闿\thoi1\t「闿hoi2」的异读字\n闿\thoi2\t闿阐，闿怿\n阐\tcin2\t阐士，阐明，阐述，阐扬，阐发，阐微，阐缓，阐释\n阐\tsin6\t「阐cin2」的异读字\n阐\tzin2\t「阐cin2」的异读字\n阓\tgwai6\t「阓kui2」的异读字\n阓\tkui2\t阛阓\n阓\twui6\t「阓kui2」的异读字\n闟\thap1\t安定\n闟\tjap1\t「闟hap1」的异读字\n阏\taat3\t夭阏\n阏\tngaat3\t「阏aat3」的异读字\n阏\tjin1\t阏氏\n阇\tse4\t阇梨，阿阇梨\n阇\tze1\t「阇se4」的异读字\n阇\tdou1\t城门上的台\n暗\tam1\t谅暗；(1)守丧的屋子；(2)同「谙」字；(3)\n暗\tam2\t「暗am3」的异读字\n暗\tam3\t暗淡，暗于知己\n暗\tngam2\t「暗am3」的异读字\n暗\tngam3\t「暗am3」的异读字\n闯\tcam3\t(1)伸出头来的样子；(2)窥视\n闯\tcong2\t闯将，闯祸，闯荡，瞎闯\n闯\tcong3\t「闯cong2」的异读字\n阚\thaam2\t哮阚，虓阚\n阚\thaam3\t「阚haam2」的异读字\n阚\tham3\t姓氏\n阚\tham6\t「阚ham3」的异读字\n阞\tlak6\t(1)土地的脉理；(2)同「仂」字\n阡\tcin1\t阡陌，田连阡陌，古陌荒阡\n阢\tngat6\t阢陧\n阣\tngat6\t同「屹」字\n防\tfong4\t防御，国防，防不胜防，防患未然，杜渐防微，防止，防范，防火，防守，防卫，防弹，防盗，防空，防洪，防震，防疫，防水，防线，防备，防腐剂，防盗器，防波堤，防毒面具\n阰\tpei4\t阰山(古代楚国的山名)\n阯\tzi2\t同「址」字\n阺\tdai2\t土山坡\n附\tfu6\t附近，附设，附带，附属，附表，附有，附件，附加\n阹\tkeoi1\t依山谷作栏圈\n陀\tto4\t陀螺，陀陂倾侧､不平貌\n阻\tzo2\t阻止，阻碍，阻挠，阻塞，阻挡，阻隔，阻滞\n阼\tzou6\t东面的台阶，主人迎宾客的地方\n陏\tdo6\t瓜类植物的果实\n陊\tdo6\t通「堕」字\n阜\tfau6\t阜康，阜螽，民丰物阜\n陔\tgoi1\t陔步，循陔，兰陔\n限\thaan6\t限额，极限，无可限量，限制，限定，限时，限量，限度，界限，权限，大限，期限，命限，年限，宽限，局限，象限，有限公司\n陑\tji4\t陑山(山西省山名)\n陋\tlau6\t陋习，陋规，陋巷\n陃\tbing2\t人名\n陛\tbai6\t陛贺，陛见，陛下，堂陛，阶陛\n陡\tdau2\t陡峭，陡坡，陡然，陡峻\n陉\tjing4\t山脉中断之处\n陕\tsim2\t陕北，陕西省\n阵\tzan6\t阵容，阵营，一阵子，阵线，阵地，阵势，阵亡，阵痛，阵雨，阵法，阵风，阵列\n陟\tzik1\t陟山，陟黜，陟罚，陟降，陟岵陟屺(喻游子思亲)，黜陟幽明(喻赏罚分明)；(1)登高；(2)升迁\n陎\tsyu4\t(1)古具名；(2)姓氏\n陫\tfei2\t(1)狭隘；(2)隐蔽\n陵\tling4\t陵寝，陵墓，陵园，丘陵\n陆\tluk6\t陆续，陆军，陆地，登陆，陆沉\n陴\tpei4\t城上短墙\n陪\tpui4\t陪同，陪伴，陪酒，陪审团，陪客，陪侍，陪衬，陪葬，陪审员，陪审，陪笑，陪礼，陪嫁\n陬\tzau1\t海陬，陬落，山陬，荒陬，陬月；(1)角落；(2)山脚；(3)阴历正月\n陼\tzyu2\t同「渚」字\n阶\tgaai1\t阶段，阶层，阶级，阶梯\n陾\tjing4\t陾陾(众多的样子)\n阳\tjoeng4\t阳奉阴违，太阳，阳春白雪，阳光，阳台，太阳伞，阳历，阳极，阳性反应，阳离子，阳宅，阳寿，阳间，阳世，阳具，阳痿，阳关\n隃\tjyu4\t同「逾」字\n陲\tseoi4\t边陲\n隄\ttai4\t同「堤」字\n隍\twong4\t城隍\n隈\twui1\t山隈，城隈\n陱\tguk1\t同「鞠」字\n隔\tgaak3\t隔壁，隔离，隔音，隔绝，隔阂，隔世，隔墙有耳\n隒\tjim2\t(1)层层相叠的山崖；(2)山边\n隇\twai1\t(1)险阻；(2)难危\n隀\tcung4\t地名\n隞\tngou4\t商代的都城\n际\tzai3\t际遇，际会\n障\tzoeng3\t障碍，障蔽，残障，保障\n隤\tteoi4\t同「颓」字\n隡\tsaat3\t此字收录于《国语标准汉字大字典》，字义不详\n随\tceoi4\t跟随，随即，随时，随手，随便\n险\thim2\t探险，险要，危险，冒险\n隢\tjiu5\t地名\n隰\tzaap6\t隰草，隰桑(诗经小雅的篇名)，皋隰，原隰；(1)低湿之地；(2)水边；(3)新垦之地\n隮\tzai1\t阶隮\n隬\tnei5\t古地名\n隳\tfai1\t隳坏，隳突，隳肝沥胆\n陇\tlung5\t陇山，得陇望蜀，陇断；(1)田间高地；(2)甘肃省简称\n阤\tzi6\t山坡\n阤\tto4\t陂阤(险阻)\n阬\thaang1\t同「坑」字\n阬\tgon1\t大山坡\n阬\tkong3\t同「抗」字\n阭\twan5\t(1)高；(2)石\n阭\tjin5\t地名\n降\tgong3\t降生，降旨，降级，降落，降幅，降临，下降，空降\n降\thong4\t降伏，投降，降龙伏虎，降服\n陈\tcan4\t陈述，陈设，陈腔滥调，陈酒，陈情，陈诉，陈迹，陈腐，陈旧，陈年旧事，陈规陋习，陈陈相因，敷陈，乏善可陈\n陈\tzan6\t同「阵」字\n阴\tam1\t谅阴\n阴\tjam1\t阴阳，阴天，阴暗，光阴\n阴\tjam3\t通「荫」字\n陭\tkei1\t同「崎」字\n陭\tji2\t陭氏阪(古地名)\n陶\tjiu4\t皋陶\n陶\ttou4\t陶冶，陶俑，陶遨，陶醉，陶器，陶铸，陶犬瓦鸡，陶然自得，熏陶，其乐陶陶姓名\n隋\tceoi4\t隋朝姓氏\n隋\tdo6\t通「堕」字\n队\tdeoi6\t队伍，排队，成群结队，队形，队长，队员，队友，部队，团队，领队，列队，离队，掉队，军队，球队，卫队，乐队，团队精神\n队\tzeoi6\t同「坠」字\n隆\tnaam4\t终隆山(即终南山)\n隆\tlung4\t隆兴，隆盛，隆昌，隆起\n陯\tleon4\t(1)山阜塌陷；(2)山名\n陯\tleon6\t坎陷\n隑\tkei4\t同「埼」字\n隑\tgoi1\t梯子\n陨\twan5\t陨石，陨星，陨落\n陨\tjyun4\t幅陨\n隓\tfai1\t(1)倒塌的城墙；(2)同「隳」字\n隓\tto5\t同「陊」字\n隧\tseoi6\t隧道\n隧\tzeoi6\t同「坠」字\n隐\tjan2\t隐藏，私隐，若隐若现，隐瞒，隐晦，退隐，豹隐，难言之隐，直言无隐，隐姓埋名藏匿\n隐\tjan3\t隐几而座倚靠\n阮\tjyun2\t「阮jyun5」的异读字\n阮\tjyun5\t阮咸，阮囊羞涩\n阱\tzeng2\t「阱zing6」的异读字\n阱\tzeng6\t「阱zing6」的异读字\n阱\tzing6\t陷阱\n阠\tcan2\t「阠seon3」的异读字\n阠\tsan1\t「阠seon3」的异读字\n阠\tseon3\t陵名\n阽\tdim3\t「阽jim4」的异读字\n阽\tjim4\t阽危\n陓\twu1\t「陓jyu1」的异读字\n陓\tjyu1\t杨陓(古湖泊名)\n陌\tmaak6\t「陌mak6」的异读字\n陌\tmak6\t陌生，陌生人，陌路，阡陌\n陜\thaap6\t(1)同「狭」字；(2)同「峡」字\n陜\tgip6\t「陜haap6」的异读字\n院\tjyun2\t院士，院子，院长，院落，法院，书院，庭院，学院\n院\tjyun6\t「院jyun2」的异读字\n陷\thaam6\t陷入，陷没，陷阱，陷害，陷溺，陷落，陷身囹圄，失陷，攻陷，沦陷，天塌地陷，冲锋陷阵\n陷\tham6\t「陷haam6」的异读字\n隅\tjyu4\t城隅，向隅，负隅顽抗，隅目，隅见，海隅，墙隅，一隅三反\n隅\tjyu6\t「隅jyu4」的异读字\n陧\tnip6\t杌陧\n陧\tjit6\t「陧nip6」的异读字\n隙\tgwik1\t隙缝，隙地\n隙\tkwik1\t「隙gwik1」的异读字\n阨\taai3\t阨塞\n阨\tngaai3\t「阨aai3」的异读字\n阨\tak1\t同「厄」字\n阨\tngak1\t「阨ak1」的异读字\n阪\tbaan2\t大阪(日本地名)\n阪\tbaan6\t「阪faan2」的异读字\n阪\tfaan2\t阪田\n阿\taa2\t叹词\n阿\taa3\t用在人名、姓或排行次第的前面\n阿\tngaa3\t「阿aa3」的异读字\n阿\taak3\t古发语辞\n阿\to1\t阿附，阿私，阿党\n阿\tngo1\t「阿o1」的异读字\n陂\tbei1\t山陂，大泽之陂，万顷之陂\n陂\tbei3\t不正\n陂\tpei4\t黄陂(湖北省地名)\n陂\tbo1\t「陂po1」的异读字\n陂\tpo1\t陂陀\n除\tceoi4\t除夕，除非，除掉，破除，排除，除害，铲除，革除，扣除\n除\tcyu1\t「除ceoi4」的异读字\n除\tcyu4\t「除ceoi4」的异读字\n除\tzyu6\t(1)给予；(2)过去\n隘\taai3\t隘口，险隘，关隘\n隘\tngaai3\t「隘aai3」的异读字\n隘\tai3\t「隘aai3」的异读字\n隘\tak1\t同「阨」字\n隘\tngak1\t「隘ak1」的异读字\n隗\tkwai4\t姓氏\n隗\tngai4\t「隗ngai5」的异读字\n隗\tngai5\t(1)高；(2)姓氏\n隩\tou3\t堂隩\n隩\tngou3\t「隩ou3」的异读字\n隩\tjuk1\t(1)水边弯曲之处；(2)可居住的地方\n隶\tdai6\t隶书，奴隶，隶属，隶人，隶定，隶变，楷隶，汉隶\n隶\tlai6\t「隶dai6」的异读字\n隶\tdoi6\t「隶dai6」的异读字\n隹\tzeoi1\t短尾之鸟\n只\tzek3\t只身，鸡只，只手遮天，只眼，片言只字，只字不提，形单影只\n雀\tzoek3\t雀跃，雀斑\n隿\tjik6\t同「弋」字\n雇\tgu3\t雇主，雇用，雇佣兵，雇员，雇工，雇车\n雄\thung4\t雄狮，雌雄，雄心壮志，英雄，雄性，雄黄，雄姿，雄伟，雄壮，雄厚，雄浑，雄健，雄武，雄风，雄辩，雄师，雄黄酒，雄纠纠，雄心勃勃，雄霸一方，雄才大略，雄心万丈，一决雌雄\n雁\tngaan6\t雁行，大雁，鸿雁，鱼雁(书信)\n雈\twan4\t一种属猫头鹰类的禽鸟\n雂\tkam4\t(1)鸟名；(2)鸟嘴；(3)人名用字\n雊\tgau3\t鴙鸣\n雎\tzeoi1\t雎鸠\n雉\tzi6\t雉鸡，雉尾\n雌\tci1\t雌雄，雌伏，雌威，信口雌黄\n雃\thin1\t(1)雝渠；(2)人名用字\n雓\tjyu4\t大种鸡的幼雏\n雕\tdiu1\t雕刻，雕塑，雕像，雕琢，雕镂，雕虫小技，雕漆，雕绘\n虽\tseoi1\t虽然，虽则\n鸡\tgai1\t鸡蛋，鸡毛蒜皮，鸡鸣狗吠，鸡鸣狗盗\n雝\tjung1\t同「雍」字\n双\tsoeng1\t双方，双管，双数，双亲\n雘\twok3\t赤石脂类，可作染料\n杂\tzaap6\t杂志，夹杂，杂乱无章，杂色，杂事，杂差，杂技\n雗\thon6\t(1)干鹊；(2)白鹇\n雡\tlau6\t(1)鸟大雏；(2)小鸡\n雥\tzaap6\t群鸟\n雍\tjung1\t雍和，雍容，雍睦，雍穆\n雍\tjung3\t雍州\n雚\tfun2\t雚芃\n雚\tgun3\t同「鹳」字\n雚\twun4\t同「萑」字\n离\tlei4\t离心，离别，离奇，离恨，离宫，离情，离异，离间，离愁，离绪，离谱，离愁别绪，离经叛道\n离\tlei6\t离群索居\n雟\tkwai1\t同「巂」字\n雟\tsai1\t同「巂」字\n雟\tseoi2\t同「巂」字\n雟\tseoi5\t同「巂」字\n难\tnaan4\t难过，困难，本性难移，难堪，难色，难受，难为，难耐，难产，难题，难免，难怪，难得，难字，难兄难弟，排难解纷，法网难逃，覆水难收，难分难解，勉为其难；(1)不容易；(2)艰辛；(3)不好\n难\tnaan6\t难民，灾难，大难不死，难友，发难，难荫，逃难，遭难，责难，非难，驳难，辩难；(1)灾祸；(2)叛乱；(3)质问；(4)辩驳\n难\tno4\t同「傩」字，见《诗经．小雅》\n隼\tseon2\t「隼zeon2」的异读字\n隼\tzeon2\t鸟类的一科\n集\tzaap6\t集合，聚集，集思广益，集体，集团，集会，集中，集训，集资，集邮，文集，市集，集成电路，集腋成裘，悲喜交集，冠盖云集\n集\tzap6\t「集zaap6」的异读字\n雒\tlok3\t雒邑同「洛」字\n雒\tlok6\t「雒lok3」的异读字\n雔\tcau4\t双鸟\n雔\tsau4\t「雔cau4」的异读字\n雏\tco1\t「雏co4」的异读字\n雏\tco4\t雏形，雏莺乳燕，雏凤\n雅\taa1\t同「鸦」字\n雅\tngaa1\t「雅aa1」的异读字\n雅\tngaa5\t雅致，典雅，风雅，优雅\n隽\tzeon3\t同「俊」字\n隽\tcyun5\t「隽syun5」的异读字\n隽\tsyun5\t隽永\n雩\tjyu4\t雩祀，雩祭，舞雩\n雪\tsyut3\t雪白，雪景，雪亮，雪花，雪耻，雪上加霜，雪中送炭\n雰\tfan1\t雰雰(形容下雨下雪)\n雯\tman4\t有花纹的云彩\n云\twan4\t云雾，云霄，云彩，云霞，云雨，风云，云淡风轻\n雹\tbok6\t冰雹\n电\tdin6\t电话，电脑，电影，电视，电台，电器，电讯\n雷\tleoi4\t雷达，雷同，雷鸣，雷厉风行，雷霆万钧\n雺\tmung4\t同「雾」字\n雵\tjoeng1\t(1)白云的样子；(2)雪花\n雸\tngam4\t霜\n需\tseoi1\t需要，需求，必需\n雿\tzaak6\t霄雿(虚无寂寞)\n霂\tmuk6\t霡霂，甘霂\n霈\tpui3\t霈霈；(1)大雨；(2)雨多貌\n霄\tsiu1\t霄汉，凌霄，九霄云外，霄壤之别，气冲霄汉，响彻云霄\n霆\tting4\t雷霆之怒\n震\tzan3\t震荡，震撼，震惊，震动，震央，震怒，震旦，震源，震波，震天，震幅，震慑，震裂，震天价响，震耳欲聋，震震，震撼力，震耳，震颤，震荡，震撼作用，震骇，震垮\n霏\tfei1\t雨雪霏霏\n霍\tfok3\t霍乱，霍然而愈，磨刀霍霍\n霒\tjam1\t同「阴」字\n霖\tlam4\t甘霖，霖雨\n霓\tngai4\t霓虹灯\n霎\tsaap3\t霎时\n霑\tzim1\t霑醉，霑裳，利益均霑，霑恩，霑染，霑濡，霑泥絮，霑体涂足\n霋\tcai1\t(1)雨止；(2)云行的样子\n霐\twang4\t(1)幽深的样子；(2)水名\n霞\thaa4\t霞光，霞彩，红霞，彩霞\n霙\tjing1\t雪花\n霝\tling4\t(1)同「零」字，解细雨；(2)雨点；(3)下坠\n霜\tsoeng1\t霜降，风霜\n霠\tjam1\t云遮日\n霟\thung4\t霟霘\n霘\tdung6\t霟霘(水浪急)\n霤\tlau6\t檐霤\n𫕥\twan5\t雷起出雨\n霥\tmung6\t雷声\n霪\tjam4\t霪雨，霪久雨也\n雾\tmou6\t烟雾，雾霭，雾水，大雾\n霨\twai3\t形容云起\n霫\tzap6\t霫霫(大雨)\n霦\tban1\t璘霦(玉光色)\n霬\tjik6\t荀霬(人名，见三国志魏书)\n霮\tdaam6\t形容云厚露重的字眼\n霰\tsin3\t霰弹，雪霰\n霯\tdang6\t大雨\n霹\tpik1\t霹雳\n霵\tzap1\t下雨\n霺\tmei4\t同「溦」字，意指细雨\n霿\tmung6\t霿淞\n叇\tdoi6\t叆叇云多而昏暗\n靋\tlik6\t霖靋(连绵不断地下雨)\n雨\tjyu5\t雨天，雨水，雨衣，雨季，雨伞，雨露，雨后春笋，雨过天晴，风雨\n雨\tjyu6\t雨雪动词\n零\tlin4\t先零(汉时羌族)\n零\tling4\t零件，零售，零时，零星，零乱，零下，零食，零碎\n雽\tfu1\t姓氏\n雽\twu6\t人名\n灵\tleng4\t口语用字，作「灵验」解时\n灵\tling4\t灵活，灵气，灵感，灵魂，乞灵，心灵，性灵，神灵，幽灵，轻灵，心有灵犀，生灵涂炭\n靇\tling4\t神灵\n靇\tlung4\t靇靇(象声词，形容雷声)\n雱\tpong1\t「雱pong4」的异读字\n雱\tpong4\t雰雱(形容大雪的情景)\n霉\tmei4\t「霉mui4」的异读字\n霉\tmui4\t霉烂，倒霉\n霡\tmaak6\t「霡mak6」的异读字\n霡\tmak6\t霡霂\n霩\tgwok3\t「霩kwok3」的异读字\n霩\tkwok3\t(1)雨止云散；(2)空阔开朗\n霸\tbaa3\t霸王，霸占，霸道，霸权，霸主，霸气，霸业，恶霸，争霸\n霸\tpaak3\t「霸baa3」的异读字\n露\tlau6\t「露lou6」的异读字，口语用字\n露\tlou6\t露珠，朝露，锋芒毕露，露水，露天，露营，露骨，露马脚，败露，表露，披露，暴露，繁露，吐露，透露，不露声色，抛头露面，风餐露宿，袒胸露背，原形毕露\n霾\tmaai4\t霾晦，风霾，阴霾\n霾\tmai4\t「霾maai4」的异读字\n霾\tlei4\t「霾maai4」的异读字\n霁\tcai4\t「霁cai4」的异读字\n霁\tzai3\t霁色，光风霁月\n雳\tlik1\t「雳lik6」的异读字\n雳\tlik6\t霹雳\n霭\toi2\t云霭，暮霭，烟霭，瑞霭烟雾､云气\n霭\tngoi2\t「霭oi2」的异读字\n叆\toi2\t叆叇，叆叆，氤氲叆叇；(1)云多昏暗貌；(2)不明貌\n叆\toi3\t「叆oi2」的异读字\n叆\tngoi2\t「叆oi2」的异读字\n叆\tngoi3\t「叆oi2」的异读字\n霅\tsaap3\t(1)雨雹下貌；(2)同「霎」字\n霅\tzaap6\t「霅zip3」的异读字\n霅\tzip3\t霅溪(水名)\n靃\tseoi2\t靃靡(弱草随风飞散)\n靃\tseoi5\t「靃seoi2」的异读字\n靃\tfok3\t同「霍」字\n靖\tzing6\t靖难，靖乱，绥靖，靖康耻；(1)平定；(2)安定；(3)治理\n靛\tdin6\t靛蓝，靛青\n静\tzing6\t静止，静脉，动静皆宜，静坐，静态，静电，静观其变，静悄悄，静养，静物画，静修，静穆\n靘\tcing1\t形容无色的用字\n靘\tcing3\t青黑色\n青\tceng1\t「青cing1」的异读字，用于口语\n青\tcing1\t青年，杀青，青出于蓝，青天，青史，青皮，青衣，青蚨，青眼，青鸟，青云，青丝，青冢，青面獠牙，青红皂白，青梅竹马，青黄不接，青灯黄卷\n靓\tleng3\t「靓zing6」的异读字，粤语用字，意谓漂亮\n靓\tzing6\t靓女，靓衣，靓妆，丰容靓饰\n靠\tkaau3\t靠近，靠山，靠岸，靠拢，靠在，靠边，靠垫，靠天吃饭，靠山吃山，靠背，靠海吃海，靠背椅，靠住，靠不住\n非\tfei1\t非常，是非，非卖品\n非\tfei2\t同「诽」字\n靡\tmei4\t靡敝，靡废公物，靡烂\n靡\tmei5\t风靡一时，委靡不振，靡日不思，随风而靡\n面\tmin6\t面对，面临，面积，面前，面子，面貌，面额，面向，面具，面孔，面值，面试，面色，面红耳赤，面皮，面无人色\n靥\tjip3\t笑靥，酒靥\n腼\tmin5\t腼腆，缅腼\n腼\ttin2\t腼颜，腼然人面，腼冒，腼面，腼脸，腼然，腼颜借命；(1)惭愧；(2)厚颜无耻\n靪\tding1\t补鞋底\n靮\tdik1\t御马的缰绳\n靬\tgin1\t黎靬(即大秦)，丽靬(甘肃境内的古县名)\n靰\twu1\t靰鞡\n靳\tgan3\t(1)姓氏；(2)吝惜；(3)戏弄\n靴\thoe1\t靴子，马靴，雨靴\n靷\tjan5\t引车前行的皮带\n靲\tkam4\t(1)皮制鞋带；(2)有带皮鞋；(3)皮带；(4)竹篾\n靼\tdaat3\t鞑靼\n鼗\ttou4\t两旁有耳之小鼓\n鞃\twang4\t车轼\n靻\tzou2\t(1)带嚼口的马笼头；(2)马笼头上的金属饰物\n鞂\tgaai1\t农作物的茎，用于编造祭神的席\n鞈\tgaap3\t(1)古时用皮革制成的胸甲；(2)坚硬\n巩\tgung2\t巩固\n鞋\thaai4\t鞋子，鞋袜\n鞎\than4\t古代车箱前面的遮蔽物\n鞊\tkit3\t(1)皮子；(2)屈；(3)套在牛马颈上的皮带；(4)马鞍\n鞗\ttiu4\t辔，马缰绳\n鞜\tdaap6\t(1)皮鞋；(2)鼓声\n鞠\tguk1\t鞠养，鞠躬，鞠躬尽瘁，蹴鞠，陈师鞠旅，鞠育，鞠子；(1)养育；(2)姓氏\n鞚\thung3\t飞鞚，亸鞚(纵马奔驰)拴在马脖子上，用以操控制的绳索\n鞡\tlaa1\t靰鞡\n鞭\tbin1\t鞭炮，鞭策，鞭长莫及，鞭子，鞭笞，鞭挞，皮鞭，投鞭断流\n鞤\tbong1\t同「𫄰」字\n秋\tcau1\t秋千\n鞮\tdai1\t鞮译(传译)，鞮鍪(头盔)，鞮鞻(周代官名，掌四夷音乐)；(1)古时的皮靴；(2)古西北一带外族\n鞬\tgin1\t弓鞬，鞬服\n鞫\tguk1\t鞫审，鞫讯；(1)穷困；(2)审判；(3)姓\n鞣\tjau4\t鞣料\n鞶\tpun4\t鞶帨\n鞷\tgaak3\t古代一种钟类乐器\n鞹\tkwok3\t去毛的兽皮\n鞻\tlau4\t鞮鞻(古代乐官名)\n鞿\tgei1\t马缰绳\n缰\tgoeng1\t缰绳，脱缰，信马由缰\n鞑\ttaat3\t鞑靼，鞑子；(1)北方异族之总称；(2)同「挞」字\n韅\thin2\t为驾驭之便而设于牛马腋下的皮件\n千\tcin1\t秋千\n韇\tduk6\t(1)箭筒；(2)古代卜筮用的蓍草筒\n鞯\tzin1\t鞍鞯马鞍下的垫\n靺\tmaat6\t同「袜」字\n靺\tmut6\t靺鞨\n鞘\tsaau1\t鞭鞘\n鞘\tciu3\t鞘翅，刀鞘，剑鞘，叶鞘\n鞔\tmun4\t鞔鼓，鞔鞋\n鞔\tmun6\t通「懑」字\n鞪\tmau4\t鞮鞪(即兜鍪)\n鞪\tmou6\t同「楘」字\n鞢\tzaap6\t花叶重的样子\n鞢\tsip3\t马缰\n靶\tbaa2\t靶心，打靶，箭靶，靶场\n靶\tbaa3\t「靶baa2」的异读字\n靸\tsaap3\t(1)古时小孩子穿的鞋；(2)穿鞋时不提起后跟，拖著行走\n靸\ttaat3\t「靸saap3」的异读字\n靿\taau2\t「靿aau3」的异读字\n靿\taau3\t靴靿\n靿\tngaau3\t「靿aau3」的异读字\n鞁\tbei6\t鞍辔\n鞁\tpei5\t「鞁bei6」的异读字\n靽\tbun3\t套于牲口后部的皮带\n靽\tbun6\t「靽bun3」的异读字\n靾\tjai6\t车马赠亡人\n靾\tsit3\t「靾jai6」的异读字\n鞍\ton1\t马鞍，玉勒雕鞍\n鞍\tngon1\t「鞍on1」的异读字\n鞙\tgyun1\t「鞙jyun5」的异读字\n鞙\tjyun5\t鞙鞙佩璲\n绱\tsoeng5\t「绱zoeng2」的异读字\n绱\tzoeng2\t补鞋之皮\n鞥\tang1\t马缰绳\n鞥\tngang1\t「鞥ang1」的异读字\n鞨\thot3\t鞨巾，靺鞨(古东北民族一)\n鞨\thot6\t「鞨hot3」的异读字\n鞳\tdaap6\t镗鞳\n鞳\ttaap3\t「鞳daap6」的异读字\n韄\twaak6\t「韄wu6」的异读字\n韄\twu6\t(1)佩刀柄上的皮绳；(2)束缚\n革\tgaak3\t革命，革新，革职，革囊，革故鼎新，皮革，改革，变革\n革\tgaap3\t「革gaak3」的异读字\n革\tgik1\t病革急\n鞅\tjoeng1\t「鞅joeng2」的异读字\n鞅\tjoeng2\t鞅掌，牛鞅\n鞅\tjoeng3\t鞅鞅\n鞄\tbaau6\t治革制之箧\n鞄\tpaau4\t「鞄pok3」的异读字\n鞄\tpok3\t治革工人\n鞞\tbei2\t「鞞bing2」的异读字\n鞞\tpei4\t同「鼙」字\n鞞\tbing2\t刀剑鞘\n韨\tfat1\t祭服的一种\n韐\tgaap3\t韎韐\n韏\tgyun3\t皮之绉纹\n韔\tcoeng3\t装弓的袋子\n韩\thon4\t韩国\n韕\ttou4\t《大汉和辞典》引《管子》〈白心〉「韕乎其圜也，韕韕乎莫得其门。」〈注〉「韕，复貌，谓遇圆则为圜也。」「韕」他本作「駼」\n韘\tsip3\t扳指\n韪\twai5\t不韪\n韗\twan6\t(1)制鼓的工匠；(2)皮靴\n韖\tjau5\t(1)阻止车轮转动的木头；(2)柔韧\n韬\ttou1\t韬略，韬光养晦，文韬武略，韬光韫玉剑套\n韟\tgou1\t同「櫜」字\n韡\twai5\t(1)光明；(2)美盛\n韣\tduk6\t弓韣；(1)装弓的套子；(2)同「韥」字\n韥\tduk6\t同「韣」字，弓袋\n韦\twai4\t姓氏\n韦\twai5\t「韦wai4」的异读字\n韧\tjan6\t「韧ngan6」的异读字\n韧\tngan6\t韧性，坚韧，韧带，柔韧，坚韧不拔\n韎\tmui6\t草名\n韎\tmut6\t「韎mui6」的异读字\n鞲\tgau1\t臂套\n鞲\tkau1\t「鞲gau1」的异读字\n韫\twan2\t韫匮，韫椟未酤(喻怀才不用；《论语•子罕》有「韫匮而藏诸？求善贾而沽诸？」语)包藏､蕴含\n韫\twan3\t「韫wan2」的异读字\n韭\tgau2\t韭黄，韭菜\n韰\thaai6\t韰果(心地褊狭而行为果敢)\n韱\tcim1\t(1)山中生长的韭菜；(2)通「纤」字\n音\tjam1\t声音，音信，观音，音乐，口音，佳音，配音，拼音，福音，讣音，音效，音符，音速，音频，音容宛在\n韶\tsiu4\t韶华，韶光，闻韶忘味，韶光荏苒\n韸\tpung4\t(1)鼓声和谐；(2)姓氏\n韺\tjing1\t五韺\n韾\tjam1\t声音安和\n响\thoeng2\t响亮，响应，不同凡响，响板，响声，响彻云霄，山东响马\n頀\twu6\t大頀(古乐曲名)\n韵\twan5\t「韵wan6」的异读字\n韵\twan6\t韵律，韵味，神韵，韵文，韵致，押韵，风韵，琴韵\n韽\tam1\t韽韽(声音微弱)\n韽\tngam1\t「韽am1」的异读字\n韹\twaang4\t「韹wong4」的异读字\n韹\tjing1\t铜器声\n韹\twong4\t韹韹(象声词)\n项\thong6\t项目，项链，项圈，项背，说项，弱项，事项\n须\tseoi1\t须臾，必须，须弥山，须知，终须\n顺\tseon6\t顺利，顺序，顺畅，顺延，顺从，顺差，顺应，顺理成章，顺其自然，顺手牵羊\n顼\tjuk1\t颛顼(五帝之一)，顼顼(庄子•天下)；(1)姓氏；(2)茫然自失貌\n预\tjyu6\t预兆，参预，预算案，预备，干预，预期，预言，预防，预定\n颀\tkei4\t颀长\n𫠆\tkwai2\t(1)抬头；(2)古代用以束发固冠的发饰\n顽\twaan4\t顽皮，顽强，顽固，顽童，顽劣，顽抗\n頖\tpun3\t頖宫(又称泮宫。周代诸侯的学宫。见礼记˙王制。)\n頠\tngai5\t(1)头俯仰自如；(2)安静；(3)安洋；(4)头\n頩\tping1\t面色光润\n頝\thaau1\t头凹不媚\n頛\tleoi5\t颈歪斜\n颈\tgeng2\t颈项，颈椎，颈动脉，颈饰\n颔\tham5\t颔首，颔下之珠，颔联，颔颐下巴\n颐\tji4\t颐指气使，颐养，颐和园，大快朵颐，颔颐，解颐颜面的腮颊部分\n頯\tkwai4\t颧骨\n频\tpan4\t频繁，频道，频率，频仍，频密\n头\ttau4\t头颅，锄头，头头是道，头发，头巾，头脑，头绪，头领，头奖，额头，布头，衔头，捕头，彩头，头条新闻，百尺竿头，白头偕老，抱头痛哭，豹头环眼，头昏眼花，头昏脑胀\n颓\tteoi4\t颓废，颓丧，颓然，颓坏，颓靡，颓唐，断壁颓垣\n顄\tham5\t同「颔」字\n𫖶\thaan1\t长项的样子\n𩖖\ttaam4\t脸长\n顊\tji4\t同「颐」字\n顑\tham2\t顑颔(吃不饱而面黄肌瘦貌)\n颙\tjung4\t颙望\n额\tngaak6\t额头，名额，额手称庆，额外，定额，额角峥嵘\n颜\tngaan4\t颜色，颜面，颜料，容颜，和颜悦色\n颚\tngok6\t(1)昆虫摄食器官；(2)同「腭」字\n题\ttai4\t题材，题目，题字，题名，题词，题签，题解，题款\n顐\twan6\t同「诨」字\n颛\tzyun1\t颛𫞥，颛兵，颛门，颛蒙，颛民，颛制；(1)姓氏；(2)谨慎；(3)蒙昧；(4)通「专」\n颠\tdin1\t颠倒，塔颠，颠覆，山颠\n顜\tgong2\t顜若画一\n愿\tjyun6\t愿望，许愿，心甘情愿，愿意，心愿，志愿，夙愿，祝愿，誓愿，自愿，天从人愿，如愿以偿，事与愿违\n类\tleoi6\t类似，同类，物以类聚，类型，类别，类推，类比，类属，鸟类，败类，匪类，出类拔萃，不伦不类，分门别类\n𫖮\tngai5\t(1)安静；(2)庄重、谨慎；(3)用于人名，如佛教天台宗高僧智𫖮\n颡\tsong2\t稽颡\n顝\tfui1\t(1)大头、头骨大；(2)丑；(3)独处的样子；(4)相抵触\n顠\tpiu5\t(1)头发斑白；(2)发乱貌\n顟\tliu4\t大首高鼻深目貌\n顾\tgu3\t顾虑，惠顾，顾名思义，顾客，顾问，顾及，顾惜，顾忌，照顾，环顾，顾面子，顾此失彼，顾盼自豪，顾全大局，奋不顾身\n颢\thou6\t白而发光\n顪\tfui3\t(1)颔下须；(2)颊\n顩\tjim5\t牙齿暴露不齐\n颤\tzin3\t颤抖，颤栗，心惊肉颤\n显\thin2\t显露，明显，显而易见，显微镜，显著，显现，显灵，显身手，显赫，显像管，显贵，显考，显妣\n颦\tpan4\t颦眉，一颦一笑，东施效颦\n颅\tlou4\t颅骨，头颅\n顲\tlam5\t顑顲\n颧\tkyun4\t颧骨\n顷\tking1\t同「倾」字\n顷\tking2\t顷刻\n顿\tdeon6\t顿首，顿挫，顿悟，顿笔，顿号，困顿\n顿\tduk6\t冒顿\n颂\tjung4\t同「容」字\n颂\tzung6\t颂扬，歌颂\n颇\tpo1\t偏颇\n颇\tpo2\t很\n𫖯\ttiu3\t同「眺」字\n𫖯\tfu2\t𫖯囟(叩头)，𫖯眺\n颌\tgap3\t口\n颌\thap6\t上颌，下颌\n颉\tgit3\t截取\n颉\tkit3\t颉颃，颉滑，仓颉，抗颉作用\n頧\tdeoi1\t毋頧\n頧\tdeoi6\t头不正的样子\n頨\tpin3\t狡\n頨\tjyu5\t(1)头形美好；(2)孔子头形\n颗\tfo2\t颗粒，一颗心\n颗\tfo3\t土块\n顁\tding2\t同「顶」字\n顁\tding3\t额\n顤\tjiu4\t头高长的样子\n顤\tkiu4\t抬头\n顶\tdeng2\t「顶ding2」的异读字，口语读音\n顶\tding2\t顶端，山顶，顶天立地，顶替，顶撞，顶嘴，顶戴，屋顶，顶礼膜拜，顶头上司，顶风冒雨，顶门立户\n頄\tkwai4\t颧骨\n頄\tkau4\t「頄kwai4」的异读字\n顸\thon1\t颟顸\n顸\thon4\t「顸hon1」的异读字\n颃\thong4\t颉颃\n颃\tkong3\t「颃hong4」的异读字\n领\tleng5\t「领ling5」的异读字\n领\tling5\t领土，领口，领空，领事，领受，领袖，领悟，领会，领章，领情，领教，领域，领略，领衔，领导，衣领，率领\n頞\taat3\t鼻梁\n頞\tngaat3\t「頞aat3」的异读字\n颏\tgoi2\t「颏hoi4」的异读字\n颏\thoi4\t下颏，抬颏，下巴颏\n颏\thoi5\t「颏hoi4」的异读字\n颊\tgaap3\t面颊，颊囊，两颊绯红，颊上添毫\n颊\thaap3\t「颊gaap3」的异读字\n颋\tting2\t「颋ting5」的异读字\n颋\tting5\t正直\n𫖳\tgwan1\t「𫖳wan1」的异读字\n𫖳\twan1\t𫖳砡\n𫖹\tcuk1\t同「蹙」字\n𫖹\tzuk1\t「𫖹cuk1」的异读字\n颟\tmun1\t「颟mun4」的异读字\n颟\tmun4\t颟顸\n颞\tjip6\t「颞nip6」的异读字\n颞\tnip6\t头部两侧靠近耳朵方的部份\n页\tsau2\t「页kit3」的异读字\n页\tjip6\t页码\n页\tkit3\t部首\n颁\tbaan1\t颁行，颁布，颁发，颁赏，颁赐，颁奖\n颁\tpaan1\t「颁baan1」的异读字\n颁\tfan4\t有颁其首\n颩\tbiu1\t颩抹，抹抹颩颩，迷颩模登\n颬\thaa1\t(1)开口吐气；(2)象声词\n飒\tsaap3\t飒飒，飒爽\n台\ttoi4\t台风\n飐\tzim2\t飐滟\n刮\tgwaat3\t刮风，冰前刮雪\n颲\tlit6\t烈风\n飓\tgeoi6\t飓风\n檒\tfung1\t(1)梵声；(2)同「枫」字；(3)同「风」字\n飏\tjoeng4\t飘飏\n颿\tfaan4\t同「帆」字\n颽\thoi2\t颽风(即南风)\n飖\tjiu4\t飘飖，飖飏随风飘动\n飘\tpiu1\t飘扬，轻飘，飘摇\n飁\tzaap6\t飒飁\n飙\tbiu1\t暴风\n飗\tlau4\t微风吹动的样子\n飉\tliu4\t飉厉，飉戾(风势微弱)\n𫗋\tsat1\t𫗋𫗋(风声)\n飌\tfung1\t「风」字的古体\n风\tfung1\t风暴，作风，风声鹤唳，风俗，风气，风范，风釆，风味，风韵，风骚，风度，风格，风骨，风趣，风月，风水，风光，风行，风声，风平浪静，风雨同舟，风云际会，风驰电掣，风烛残年，风土人情\n风\tfung3\t同「讽」字\n飑\tpaau4\t飑飑纷纷(众多)\n飑\tbiu1\t同「飙」字\n𩙫\tsau1\t同「飕」字\n𩙫\tsou1\t𩙫𩙫(象声词)\n飕\tsau1\t飕飗，冷飕飕\n飕\tsuk1\t「飕sau1」的异读字\n飔\tci1\t「飔si1」的异读字\n飔\tsi1\t凉风\n飂\tlau4\t飂戾\n飂\tliu4\t(1)状声词，高风的样子；(2)古国名；(3)姓氏\n飂\tluk6\t「飂liu4」的异读字\n飞\tfei1\t飞翔，起飞，飞黄腾达，飞越，飞舞，飞机，飞船，飞碟，眉飞色舞，魂飞魄散，不翼而飞\n饤\tding3\t饾饤，斗饤\n饥\tgei1\t饥饿，饥荒，饥民，饥渴，饥寒交迫，饥肠辘辘，饥不择食\n饦\ttok3\t馎饦\n饫\tjyu3\t(1)饱；(2)私宴\n飧\tsyun1\t饔飧\n饱\tbaau2\t饱受，饱和，饱满，吃饱\n饴\tji4\t饴糖\n饰\tsik1\t饰演，饰物，饰词，饰过\n饲\tzi6\t饲养，饲料，饲主\n饺\tgaau2\t饺子，水饺\n饷\thoeng2\t军饷，粮饷\n饵\tnei6\t鱼饵，果饵，诱饵\n飹\tbaau2\t同「饱」字\n饽\tbut6\t饽饽，香饽饽\n飺\tci1\t(1)嫌食；(2)憎恶\n餈\tci4\t餈粑\n饾\tdau6\t饾饤\n余\tjyu4\t余额，余地，余力，余悸犹存，余裕，余兴，余烬，余暇，余悸，余波荡漾，余韵，余味\n饿\tngo6\t挨饿，饥饿\n馂\tzeon3\t馂余\n餇\ttung4\t食\n餀\tngaai6\t食物腐败发臭\n餐\tcaan1\t餐厅，餐饮，餐会，餐馆，餐具，餐桌，餐券，餐风宿露\n馆\tgun2\t馆长，馆子，馆员，餐馆，旅馆\n肴\tngaau4\t佳肴\n馄\twan4\t馄饨\n糇\thau4\t干粮\n𫗬\tnyun5\t𫗬女\n喂\twai3\t喂食，喂养，喂给，喂奶\n𫗮\twong4\t鋹𫗮\n糊\twu4\t糊口\n餥\tfei1\t古代陈、楚一带相见后清吃麦饭叫餥\n馎\tbok3\t馎饦\n餽\tgwai6\t餽赠\n饩\thei3\t饩牢\n餮\ttit3\t老餮，饕餮\n餯\tfui3\t食物腐败发臭\n饇\tjyu3\t同「饫」字\n馍\tmo4\t饼类食品\n馐\tsau1\t珍馐百味\n饎\tci3\t酒食\n饥\tgei1\t饥饿，饥不择食，画饼充饥，饥荒，饥渴，饥馑，积谷防饥\n饐\tji3\t食物腐坏变味\n饶\tjiu4\t饶恕，饶舌，求饶\n飨\thoeng2\t飨客\n𫗴\tzin1\t𫗴粥\n饓\tcaang1\t过饱，胀\n饔\tjung1\t饔飧\n饛\tmung4\t器皿装满东西的样子\n饕\ttou1\t饕餮(传说中贪食之凶兽，古青铜器上多见)，老饕(馋嘴)贪吃\n饖\twai3\t食物经久变臭\n馋\tcaam4\t馋嘴，解馋，饕口馋舌，贪馋，眼馋，馋涎欲滴贪吃\n𫗵\thoeng2\t同「饷」字\n饡\tzaan3\t以羹浇之饭\n食\tji6\t郦食其用于人名\n食\tzi6\t拿给人吃\n食\tsik6\t食言，食邑，食客，食物，食指，食货，食欲，食谱，食粮，食不二味，食不下咽，食不甘味，食不果腹，食古不化，食玉炊桂，食肉寝皮，食言而肥，大食(国名)\n饭\tfaan5\t以食物饲人或喂牲口\n饭\tfaan6\t饭菜，晚饭\n饮\tjam2\t饮泣，饮恨，饮食，饮酒，饮茶，饮啄，饮誉，饮水思源，饮冰茹檗，饮鸩止渴\n饮\tjam3\t饮马，饮马投钱给水人或畜喝\n养\tjoeng5\t养心，养生，养育，养神，养料，养病，养殖，养廉，养虎遗患，养尊处优，养精蓄锐，休养，培养\n养\tjoeng6\t供养\n餤\tdaam6\t饼餤\n餤\ttaam4\t进食，引申为增多或加多\n饧\tcing4\t饧糖，饧眼，粥饧\n饧\ttong4\t糖浆\n𫗥\twan4\t𫗥饨(同馄饨)\n𫗥\twan6\t运粮\n餰\tgin1\t粥\n餰\tzin1\t同「𫗴」字\n馔\tzaan6\t陈设或准备食物\n馔\tsyun2\t古重量单位\n饬\tcik1\t饬令，整饬，饬办，饬厉，申饬\n饬\tsik1\t「饬cik1」的异读字\n饪\tjam5\t「饪jam6」的异读字\n饪\tjam6\t失饪，烹饪，烹饪鼎鼐\n饨\ttan1\t「饨tan4」的异读字\n饨\ttan4\t馄饨\n饨\ttyun4\t「饨tan4」的异读字\n𫗣\tbei3\t「𫗣bit6」的异读字\n𫗣\tbit1\t「𫗣bit6」的异读字\n𫗣\tbit6\t食物的香气\n饼\tbeng2\t饼干，掷铁饼，画饼充饥，月饼，柿饼，烧饼，薄饼，面饼，馅饼\n饼\tbing2\t「饼beng2」的异读字\n餂\ttim2\t「餂tim5」的异读字\n餂\ttim5\t叨餂探取、套骗\n𫗦\tbou1\t𫗦子，𫗦菜，𫗦时，𫗦啜，玉𫗦\n𫗦\tbou3\t「𫗦pou3」的异读字\n𫗧\tcuk1\t覆𫗧(败事，见《周易•鼎•九四》)鼎中食物\n𫗧\tsuk1\t「𫗧cuk1」的异读字\n馁\tneoi5\t馁怯，冻馁，气馁\n馁\tnoi5\t「馁neoi5」的异读字\n餩\tak1\t食物哽住喉咙，吞咽不下而气不顺\n餩\tngak1\t「餩ak1」的异读字\n馅\thaam2\t「馅haam6」的异读字\n馅\thaam6\t馅饼，肉馅\n餟\tzeoi3\t「餟zyut3」的异读字\n餟\tzyut3\t同「醊」字\n饯\tzin3\t饯行，蜜饯\n饯\tzin6\t「饯zin3」的异读字\n餲\taai3\t「餲aat3」的异读字\n餲\taat3\t食物腐臭变味\n餲\tngaat3\t「餲aat3」的异读字\n馊\tsau1\t馊水，馊主意，馊臭\n馊\tsuk1\t「馊sau1」的异读字\n馌\tjip3\t送饭给在田里工作的人吃\n馌\tjip6\t「馌jip3」的异读字\n馏\tlau4\t「馏lau6」的异读字\n馏\tlau6\t分馏，直馏，干馏，蒸馏水\n馑\tgan2\t年馑，饥馑\n馑\tgan6\t「馑gan2」的异读字\n馒\tmaan4\t馒头\n馒\tmaan6\t「馒maan4」的异读字\n饙\tfan1\t饙馏蒸饭\n饙\tpan3\t「饙fan1」的异读字\n馈\tgwai3\t「馈gwai6」的异读字\n馈\tgwai6\t馈赠，馈粮，回馈，反馈，中馈乏人\n餍\tjim1\t「餍jim3」的异读字\n餍\tjim3\t餍足，餍饫满足\n𫗪\twai3\t同「喂」字\n𫗪\tneoi5\t同「馁」字\n𫗪\tnoi5\t「𫗪neoi5」的异读字\n馗\tkwai4\t同「逵」字\n首\tsau2\t首级，元首，一首诗，自首，首领，首饰\n首\tsau3\t「首sau2」的异读字，用于「自首」一词\n馘\tgwik1\t(1)古时战争中割敌耳朵以计功绩；(2)面颊\n馘\tgwok3\t「馘gwik1」的异读字\n香\thoeng1\t香水，香味，香火，香油，香料\n馜\tnei5\t香气浓厚\n馞\tbut6\t馝馞(香气浓烈)\n馡\tfei1\t芳馡，馡馡\n馣\tam1\t香气\n馦\thim1\t馦馦(香)\n馨\thing1\t馨香，馨逸，温馨，清馨\n馫\thing1\t同「馨」字，芳香四溢\n馧\twan1\t香\n馧\twat1\t馧馞\n馝\tbit1\t「馝bit6」的异读字\n馝\tbit6\t馝馞\n馥\tfuk1\t馥郁\n馥\tfuk6\t「馥fuk1」的异读字\n马\tmaa5\t马戏，马车，兵马\n驭\tjyu6\t驾驭，以一驭万，长辔远驭，驭气\n驰\tci4\t驰名，驰骋，驱驰\n馵\tzyu3\t左后脚白色的马\n馰\tdik1\t馰颡\n驳\tbok3\t驳杂，班驳，辨驳，驳议，驳斥，驳倒，驳船；(1)毛色不纯的马；(2)就事理抗辩；(3)载卸货物\n駂\tbou2\t黑白杂毛的马\n馺\tsaap3\t形容马匹迅疾奔行\n馽\tzap1\t同「絷」字\n駇\tman4\t红鬃、白身、黄眼的马\n驸\tfu6\t驸马\n驾\tgaa3\t驾驶，凌驾，驾轻就熟，驾驭，驾临，驾到，驾崩，劳驾，挡驾，并驾齐驱，腾云驾雾，御驾亲征\n駏\tgeoi6\t駏驉\n駉\tgwing1\t駉駉(马肥壮)\n驹\tkeoi1\t千里驹\n驽\tnou4\t驽钝，驽马，驽才\n駓\tpei1\t駓駓(奔跑貌)黄白杂毛的马\n驷\tsi3\t驷马难追，上驷之材，车驷，结驷连骑，高车驷马，安车驷马，下驷，天驷(星宿名)；(1)马；(2)马之量词；(3)马车；(4)驾驭\n驼\tto4\t驼背，驼鸟，驼峰\n驻\tzyu3\t驻守，驻军，驻足，驻扎，进驻\n駖\tling4\t駖盖\n𩧨\tzau6\t(1)马竟驰；(2)同「骤」字\n駌\tjyun1\t污面马\n駮\tbok3\t(1)传说中的猛兽；(2)通「驳」字\n骃\tjan1\t色浅黑带白的马\n駬\tji5\t𫘧駬\n駪\tsan1\t駪駪(形容众多)\n駣\ttou4\t三至四岁的马匹\n𫘠\tzi3\t同「騺」字\n𩧲\tdung6\t(1)马快跑；(2)动，急速\n駥\tjung4\t八尺高的马\n骎\tcam1\t骎骎马行迅速的样子\n駴\thaai5\t同「骇」字\n駹\tmong4\t(1)黑白杂色的马；(2)青色马；(3)杂色\n骍\tsing1\t骍旄，骍刚(赤色的牛)\n駷\tsung2\t駷马(制动马嚼子使马快跑)\n駾\tteoi3\t马受惊奔窜\n駼\ttou4\t𫘦駼\n骏\tzeon3\t骏逸，骏马，骏驹，神采骏发\n𩧺\tguk1\t马立不定\n騑\tfei1\t騑騑\n骒\tfo3\t骒马，骒骡，骒驴，骒驼母骡或母马\n骐\tkei4\t骐骥\n𫘥\tkwan1\t骏马\n騋\tloi4\t高七尺大马\n𫘧\tluk6\t𫘧耳(周穆王八骏之一)\n騇\tse3\t母马\n𫘦\ttou4\t𫘦駼古代传说中的一种神兽\n骓\tzeoi1\t毛色青白夹杂的马匹\n騢\thaa4\t赤白相间的杂毛马\n骙\tkwai4\t骙骙\n骛\tmou6\t驰骛，外骛，好高骛远\n骗\tpin3\t骗局，骗子，骗取，受骗，欺骗，诈骗\n𫘨\ttai4\t𫘝𫘨\n𫘩\twong4\t毛色黄白相间的马\n騣\tzung1\t马鬃\n騥\tjau4\t多鬃的青黑色马\n騛\tfei1\t飞驰如兔的骏马\n𩨊\tcin4\t四蹄全白的马\n𩨃\tkin4\t𩨃𩨃(壮建的样子)\n𩨀\tgot3\t马快跑\n騲\tcou2\t(1)母马；(2)雌性牲畜的通称\n𫘬\thai4\t前足全白的马\n骞\thin1\t骞腾，骞举高举\n𫘪\tjyun4\t赤毛白腹的马\n骝\tlau4\t骅骝(周穆王八骏之一)\n骟\tsin3\t骟马(去过势的马，gelding)阉割牲畜、动物\n骚\tsou1\t骚扰，骚动，骚乱，骚人墨客\n腾\ttang4\t腾云驾雾，图腾，民怨沸腾，奔腾，翻腾，折腾，腾挪，腾空，飞黄腾达\n骘\tzat1\t评骘(评定)，阴骘(尚书•洪范)，损阴骘；(1)牡马；(2)安排；(3)分辨\n驺\tzau1\t驺从，驺卒，驺奴\n𩨄\tsau1\t同「搜」字\n騬\tsing4\t(1)马被割掉睾丸；(2)割掉牲畜的睾丸或卵巢\n𫘫\taan3\t尾根白色的马\n骖\tcaam1\t骖靳，骖乘，停骖，篠骖，咫角骖驹马的别称\n骢\tcung1\t骢马，玉骢\n騹\tkei4\t同「骐」字\n驱\tkeoi1\t驱逐，先驱，驱使，并驾齐驱\n騺\tzi3\t马騺不行(马负重难行)\n驆\tbat1\t同「跸」字\n騿\tzoeng1\t马名\n骄\tgiu1\t骄阳，不骄不躁，骄兵必败，骄傲，骄恣，骄纵，骄矜，天之骄子，骄奢淫逸，恃宠生骄\n驉\theoi1\t駏驉\n骁\thiu1\t骁勇，骁将，骁骑，骁勇善战；(1)良马；(2)勇武刚健\n驎\tleon4\t骐驎\n骕\tsuk1\t骕骦\n驔\ttim5\t脊毛黄色的黑马\n驒\tto4\t毛色呈鳞状斑纹的青色宝马\n骅\twaa4\t骅骝(周穆王八骏之一，喻才华出众的人)\n驐\tdeon1\t(1)割掉家畜；(2)家禽的睾丸\n𫘯\tcang4\t膝下白色的马\n驿\tjik6\t驿站，邮驿，骆驿不绝，驿道，驿使，驿马，郑驿留宾\n验\tjim6\t化验，实验，验证\n驖\ttit3\t驷驖\n驞\tban1\t驞駍\n驠\tjin1\t驠骐駼𫘦\n𫘱\tkwai4\t兽名\n骧\tsoeng1\t骧腾\n骦\tsoeng1\t一种良马\n驧\tguk1\t(1)马曲脊；(2)马跳跃\n驩\tfun1\t同「欢」字\n骊\tlei4\t骊歌，骊珠，盗骊(周穆王八骏之一)\n骉\tbiu1\t众马奔驰\n冯\tpang4\t通「凭」字\n冯\tfung4\t姓氏\n𫘛\thon4\t姓氏\n𫘛\thon6\t同「𫘣」字\n𫘝\tfaai3\t同「快」字\n𫘝\tkyut3\t𫘝𫘨\n驵\tcong2\t驵子(流氓)\n驵\tzong2\t驵侩\n驵\tzou2\t骏马\n駍\tpaang1\t同「軯」字\n駍\tpei4\t马名\n駺\tloeng4\t吉駺(马名)\n駺\tlong4\t白尾的马\n騆\tzau1\t神马\n騆\tdung6\t同「𩧲」字\n驯\tceon4\t「驯seon4」的异读字\n驯\tseon4\t驯良，驯服，驯养，雅驯，温驯，桀敖不驯\n馲\tlok6\t「馲tok3」的异读字\n馲\ttok3\t馲驼(即骆驼)\n驲\tjat6\t古代驿站专用的车\n驲\tjik6\t「驲jat6」的异读字\n馻\twan5\t马逆毛\n馻\tjin5\t「馻wan5」的异读字\n駜\tbat6\t肥壮的马\n駜\tbit1\t「駜bat6」的异读字\n驶\tsai2\t驾驶\n驶\tsi2\t「驶sai2」的异读字\n駋\tciu1\t「駋ziu1」的异读字\n駋\tziu1\t马名\n駗\tcan2\t駗𫘰\n駗\tleon4\t「駗can2」的异读字\n骇\thaai5\t骇突，骇异，骇人听闻，骇然失色，惊骇，惊淘骇浪\n骇\thaai6\t「骇haai5」的异读字\n骇\thoi4\t「骇haai5」的异读字\n骇\thoi5\t「骇haai5」的异读字\n骆\tlok3\t骆驼，骆马，骆驿黑色鬃毛的白马；姓氏\n骆\tlok6\t「骆lok3」的异读字\n骈\tpin4\t骈文，骈四俪六，骈拇枝指，骈衍，骈比\n骈\tping4\t「骈pin4」的异读字\n𩧴\tcyun1\t白马黑唇\n𩧴\tcyun4\t「𩧴cyun1」的异读字\n骋\tcing2\t骋目，骋足，骋能，骋望，骋骛，驰骋，游目骋怀\n骋\tping3\t「骋cing2」的异读字\n𫘣\thon2\t「𫘣hon6」的异读字\n𫘣\thon6\t𫘣马凶悍不温驯的马\n駽\tgyun1\t「駽hyun3」的异读字\n駽\thyun1\t「駽hyun3」的异读字\n駽\thyun3\t青黑色的马\n𫘤\tdaai1\t「𫘤ngoi4」的异读字\n𫘤\tngaai6\t「𫘤ngoi4」的异读字\n𫘤\tngoi4\t𫘤子，痴𫘤，愚𫘤痴呆\n騕\tjiu2\t騕褭\n騕\tjiu5\t「騕jiu2」的异读字\n䯄\tgwaa1\t「䯄waa1」的异读字\n䯄\twaa1\t身黄嘴黑的马\n騞\tfaak3\t「騞waak6」的异读字\n騞\twaak6\t騞然\n骡\tleoi4\t「骡lo4」的异读字\n骡\tlo4\t驴和马交配所的杂种\n蓦\tmaak6\t「蓦mak6」的异读字\n蓦\tmak6\t蓦地，蓦然\n骜\tngou4\t(1)古乐章名；(2)骏马\n骜\tngou6\t「骜ngou4」的异读字\n骠\tbiu1\t「骠piu3」的异读字\n骠\tbiu6\t「骠piu3」的异读字\n骠\tpiu3\t骠骑，骠勇，黄骠马\n驈\twat6\t白腹之黑马\n驈\tleot6\t「驈wat6」的异读字\n驈\tjyut6\t「驈wat6」的异读字\n骣\tzaan2\t骣骑\n骣\tcan2\t「骣zaan2」的异读字\n騽\tzaap6\t(1)马膝胫间多长毛；(2)色黑而脊黄的马\n騽\tjap6\t「騽zaap6」的异读字\n惊\tgeng1\t「惊ging1」的异读字\n惊\tging1\t惊慌，吃惊，惊弓之鸟，惊奇，惊恐，惊讶，惊愕，惊悸，惊异，惊怖，惊诧，惊魂，惊叹，惊醒，惊险，惊蛰，震惊，惊天动地，惊心动魄，惊惶失措，惊涛骇浪\n𫘰\ttaan4\t「𫘰zin1」的异读字\n𫘰\tzin1\t(1)马负重行难；(2)马名\n骤\tzaau6\t「骤zau6」的异读字\n骤\tzau6\t步骤，骤变，骤雨，骤然\n骥\tgei3\t「骥kei3」的异读字\n骥\tkei3\t骐骥，赤骥(周穆王八骏之一)\n驴\tleoi4\t驴车，驴年马月，黔驴技穷\n驴\tlou4\t「驴leoi4」的异读字\n驮\tdo6\t驮子\n驮\tto4\t牲口负物，引申为背负\n驮\tto6\t「驮do6」的异读字\n骀\tdoi6\t「骀toi5」的异读字\n骀\ttoi4\t驽骀\n骀\ttoi5\t骀荡\n骑\tke4\t「骑kei4」的异读字，口语读音\n骑\tgei6\t车骑，轻骑，铁骑，坐骑，游骑\n骑\tkei3\t「骑gei6」的异读字，口语读音\n骑\tkei4\t骑马，骑术，骑墙派，骑缝盖章\n騩\tgwai1\t大騩山(河南省山名)\n騩\tgwai3\t浅色黑马\n騩\tkwai3\t「騩gwai3」的异读字\n骨\tgwat1\t骨头，骨牌，骨折，骨气\n骫\twai2\t骫法\n骳\tbei6\t骫骳\n骷\tfu1\t骷髅\n骼\tgaak3\t骨骼，掩骼埋胔\n骹\thaau1\t(1)小腿；(2)胫骨近脚处较细的部位\n骿\tpin4\t骿胁，骿胝(即胼胝)\n髀\tbei2\t髀骨，髀枢，髀肉，搏髀\n髁\tfo1\t枕髁股骨\n髂\tkaa3\t腰骨\n髆\tbok3\t肩膀\n髅\tlau4\t骷髅，髑髅\n髍\tmo4\t偏瘫\n髐\thaau1\t骷髅骨暴露的样子\n脏\tzong1\t脏乱，脏话，肮脏\n髑\tduk6\t髑髅死人的头骨\n髓\tseoi5\t骨髓，精髓\n体\ttai2\t体格，身体，体贴入微，体无完肤，体育，体系，体制，体会，体谅，体验，体积，体罚，体察，体温，体面，体魄，体统，体裁\n髋\tfun1\t髋骨\n骭\thaan6\t「骭gon3」的异读字\n骭\tgon3\t胫骨\n骱\tgaai3\t骨节连接处\n骱\thaai6\t「骱gaai3」的异读字\n肮\tong1\t肮脏\n肮\tkong3\t「肮ong1」的异读字\n肮\tngong1\t「肮ong1」的异读字\n骰\ttau4\t骰子，掷骰子\n骰\tsik1\t「骰tau4」的异读字，口语读音\n骴\tci1\t留有腐肉的骸骨\n骴\tzi6\t「骴ci1」的异读字\n骸\thaai4\t骸骨，尸骸，残骸，遗骸，放浪形骸\n骸\thoi4\t「骸haai4」的异读字\n骻\tkwaa2\t「骻kwaa3」的异读字\n骻\tkwaa3\t腰骻\n骾\tgang2\t骾讦，骨骾在喉\n骾\tkang2\t「骾gang2」的异读字\n髊\tci1\t「髊zi6」的异读字\n髊\tzi6\t同「骴」字\n髇\thaau1\t髇箭(响箭)\n髇\thou1\t「髇haau1」的异读字\n髌\tban3\t髌骨\n髌\tpan5\t「髌ban3」的异读字\n高\tgou1\t高峰，高兴，高潮，高雅，登高\n髜\thaau1\t高\n髟\tbiu1\t部首\n髡\tkwan1\t髡发，髡钳；(1)剃发之刑；(2)修剪树木的枝叶\n髣\tfong2\t同「仿」字，用于「仿佛」一词\n髲\tbei6\t假发\n髬\tpei1\t披发走\n髫\ttiu4\t髫龄(童年)，垂髫，髦髫小童额前垂下的头发\n髱\tpaau3\t多须的样子\n髻\tgai3\t发髻\n髹\tjau1\t涂漆\n髺\tkut3\t髺发(束发)\n髭\tzi1\t髭须\n髷\tkuk1\t卷发的样子\n髼\tpung4\t髼松\n髾\tsaau1\t发尾\n髽\tzaa1\t髽髻\n鬈\tkyun4\t鬈发\n松\tsung1\t松懈，松散，松弛，松动，松软，松脱\n鬎\tlaat6\t鬎鬁(即瘌痢)\n胡\twu4\t胡子，胡须\n鬊\tseon3\t乱发\n鬐\tkei4\t马鬣\n鬑\tlim4\t形容须发长\n鬘\tmaan4\t鬘华，鬘陀\n鬖\tsaam1\t毛发散乱的样子\n鬕\tmaa6\t(1)绕在髻上的装饰品；(2)束在额上的巾\n须\tsou1\t须髯如戟，胡须，巾帼须眉，须根，捋虎须，碧眼紫须\n鬟\twaan4\t髻鬟，丫鬟，风鬟雾鬓\n鬞\tnung4\t鬞鬤\n鬓\tban3\t鬓毛，鬓发，鬓云，霜鬓，华鬓\n鬣\tlip6\t马鬣，鬣蜥；(1)马颈上的长毛；(2)长而硬的胡须「鬣null」的异读字「鬣null」的异读字\n鬤\tjoeng5\t头发乱貌\n髶\tji6\t古代先驱骑兵披著头发的装束\n髶\tjung4\t乱发\n鬅\tpang4\t鬅鬙，鬅松，鬅头垢面头发散乱\n鬅\tpung4\t同「髼」字\n鬄\ttai3\t(1)剃发；(2)假发\n鬄\ttik1\t同「剔」字\n𫘽\tkui3\t用五彩束发\n𫘽\tkut3\t同「髺」字\n髧\tdaam6\t头发下垂的样子\n髧\tdam3\t「髧daam6」的异读字，口语读音\n髦\tmou1\t「髦mou4」的异读字\n髦\tmou4\t时髦\n发\tfaat3\t头发，发夹，发髻，发指，发妻\n发\tfat3\t「发faat3」的异读字\n髯\tjim4\t两腮的胡子，也泛指胡子\n髯\tjim6\t「髯jim4」的异读字\n髳\tmaau4\t「髳mau4」的异读字\n髳\tmau4\t古代西南少数民族名\n鬁\tlei1\t「鬁lei6」的异读字\n鬁\tlei6\t鬎鬁(同瘌痢)\n鬃\tcung4\t「鬃zung1」的异读字\n鬃\tzung1\t鬃毛，猪鬃\n鬌\tdo2\t(1)小童剪发后剩下的一部份头发；(2)头发亮丽\n鬌\tdo6\t「鬌do2」的异读字\n鬋\tzin1\t下垂的鬓发\n鬋\tzin2\t「鬋zin1」的异读字\n鬒\tcan2\t鬒发\n鬒\tzan2\t「鬒can2」的异读字\n鬗\tmaan6\t「鬗maan6」的异读字\n鬗\tmun4\t发长\n鬙\tsang1\t「鬙zang1」的异读字\n鬙\tzang1\t鬅鬙\n斗\tdau3\t斗争，奋斗，勾心斗角，斗志，斗士，斗气，斗嘴，斗趣，斗鸡眼，搏斗，打斗，批斗，明争暗斗，单打独斗，两虎相斗，龙争虎斗\n闹\tnaau6\t闹事，闹剧，闹市，闹翻，喧闹\n阋\thik1\t「阋jik1」的异读字\n阋\tjik1\t阋墙，盱阋(皱眉)，兄弟阋墙\n鬫\thaam2\t虎叫声\n鬫\thaam3\t「鬫haam2」的异读字\n阄\tgau1\t拈阄\n阄\tkau1\t「阄gau1」的异读字\n哄\thong6\t同「巷」字\n哄\thung3\t「哄hung6」的异读字\n鬯\tcoeng3\t匕鬯，秬鬯\n郁\twat1\t郁闷，郁积，郁抑，郁结\n鬳\tgyun3\t鬲类炊具\n鬷\tzung1\t(1)姓氏；(2)总合\n鬺\tsoeng1\t烹煮\n鬲\tgaak3\t鬲津，胶鬲\n鬲\tlik6\t古代炊具，像鼎，足部中空\n鬻\tjuk6\t鬻文，獯鬻，卖官鬻爵，典鬻，鬻德\n鬻\tzuk1\t同「粥」字\n鬵\tcam4\t釜鬵\n鬵\tcim4\t「鬵cam4」的异读字\n鬼\tgwai2\t鬼混，鬼斧神工，鬼屋，鬼话，鬼神，鬼魂，鬼火，鬼脸\n魁\tfui1\t魁梧，夺魁，罪魁祸首，魁星，魁伟\n鬾\tgei6\t冥衣\n鬿\tkei4\t古星名\n魂\twan4\t鬼魂，魂魄，神魂颠倒，失魂落魄\n魆\tfat1\t魆魆\n魈\tsiu1\t山魈\n魌\thei1\t魌头(驱鬼人所戴的面具)\n魉\tloeng5\t魍魉\n魍\tmong5\t魍魉\n魊\twik6\t鬼魊\n魒\tpiu1\t斗星名\n魖\theoi1\t使人财物虚耗的恶鬼\n魕\tkei4\t(1)奉信鬼的风俗；(2)南方之鬼\n魙\tzim6\t旧习俗中用以辟邪的字符\n魄\tpaak3\t魂魄，魄力，气魄\n魄\tbok6\t旁魄\n魄\ttok3\t落魄\n魏\tngai4\t高大貌\n魏\tngai6\t魏国，魏征，魏碑\n魋\tceoi4\t魋结\n魋\tteoi4\t兽名\n魋\tzeoi1\t通「椎」字\n魃\tbaat6\t旱魃(传说中引起旱灾的鬼)\n魃\tbat6\t「魃bat6」的异读字\n魅\tmei6\t魅人，魅力，魅惑，鬼魅，魑魅\n魅\tmui6\t「魅mei6」的异读字\n魑\tlei4\t「魑ci1」的异读字\n魑\tci1\t魑魅，山魑，魑魅魍魉\n魔\tmo1\t魔鬼，魔方，魔幻，魔术，妖魔，病魔\n魔\tmo4\t「魔mo1」的异读字\n魇\tjim2\t梦魇\n魇\tjip3\t「魇jim2」的异读字\n鱼\tjyu4\t鱼池，鱼类，鱼船，鱼村\n鱽\tdou1\t(1)一种外形如尖刀的鱼；(2)带鱼的别称\n魠\ttok3\t古代泛指一些口大的鱼类\n魬\tbaan2\t即比目鱼\n鲂\tfong4\t鱼名\n鱿\tjau4\t鱿鱼\n鲁\tlou5\t鲁莽，粗鲁，鲁钝\n𫚌\tsaa1\t同「鲨」字\n鲀\ttyun4\t河豚\n魱\twu4\t当魱(即鲥鱼)\n魰\tman4\t(1)鱼名；(2)文鳐鱼\n魶\tnaap6\t(1)鲵鱼；(2)鲸的异名；(3)𫚉鱼\n𫚑\tbit1\t即赤眼鳟\n鮂\tcau4\t白鯈\n鲋\tfu6\t鲫鱼\n魼\tkeoi1\t即比目鱼\n鮇\tmei6\t嘉鱼的别名\n鮀\tto4\t吹沙小鱼\n𩾀\tgu1\t鱼名\n鲛\tgaau1\t鲛绡，鲛人(神话传说中的人鱼)\n鲑\tgwai1\t鲑鱼，鲑目，鲑菜\n鲕\tji4\t鱼卵\n𫚓\tlit6\t𫚓鱼(即鱽鱼)\n鮛\tsuk1\t较细小的鲟鱼类\n鮠\twai4\t鱼名\n𫚗\tgap3\t鱼名\n鮢\tzyu1\t鱼名\n鲪\tgwan1\t黑鲪(鱼名)\n鲤\tlei5\t鲤鱼，鲤跃龙门\n𩾃\tmin5\t鱼名\n𫚙\tpou1\t江豚的别名\n鲨\tsaa1\t鲨鱼\n鮹\tsaau1\t海鱼之一\n鲩\twaan5\t草鱼\n𫚚\tzip3\t干鱼\n鯃\tng4\t鱼名\n𩾁\tkau4\t鱼名\n鮽\tjyu4\t鱼名\n𫚛\tdyut6\t体型较小的乌鳢\n鯓\tsan1\t青鲲鯓(台湾地名)，南鲲鯓(台湾地名)\n鯜\tcip3\t鱼名\n鲳\tcoeng1\t银鲳鱼\n鲷\tdiu1\t真鲷，雀鲷\n鲱\tfei1\t鲱鱼(海鱼名)\n鯚\tgwai3\t鯚鱼(即鳜鱼)\n鲯\tkei4\t鲯鳅(鱼名)\n鲸\tking4\t鲸鱼\n鯥\tluk6\t鯥鱼(鱼名)\n鲵\tngai4\t一种两栖动物，又名娃娃鱼\n鲶\tnim4\t鱼名\n鲞\tsoeng2\t白鲞，鳗鲞\n𫚡\tzau2\t鳜𫚡(鱼名)\n鲻\tzi1\t鱼名\n𫚞\tlai4\t𫚞鯠(即鲥鱼)\n鯠\tloi4\t鳝类一种\n鯙\tseon4\t鱼名\n鳅\tcau1\t泥鳅\n鲽\tdip6\t鱼名\n鯸\thau4\t鯸鲐(河豚的别名)\n𫚢\tjin2\t鱼名\n鳀\ttai4\t一种群集于浅海的小型鱼类\n鳇\twong4\t鳇鱼\n鰔\tzam1\t针鱼\n䲠\tceon1\t鱼名\n鱀\tgei6\t白鱀豚(即白鳍豚)\n鰇\tjau4\t鱼名\n鰗\twu4\t河豚\n鰎\tgin2\t鰎鱼(一种干鱼，见《汉书》货殖传)\n鳒\tgim1\t鱼名\n鳏\tgwaan1\t鳏夫，鳏寡，鳏寡孤独，鳏居，鳏守\n鰝\thou6\t大海虾\n鳐\tjiu4\t鱼名\n鳍\tkei4\t鱼鳍，背鳍\n鰬\tkin4\t鰬鱼(鱼名)\n鰡\tlau4\t(1)吹沙鱼；(2)鲨鱼\n𫚕\tsi1\t𫚕鱼(鱼名)\n鲥\tsi4\t鱼名\n鳖\tbit3\t鳖闷，鳖鸟，鳖裙，鳖爪，鳖煞，鳖燥，脾鳖，马鳖，田鳖，尿鳖，酒鳖，石鳖，跛鳖千里，瓮中之鳖\n鰴\tfai1\t强而有力的鱼\n鲣\tgin1\t鱼名\n鳓\tlak6\t鳓鱼\n鲢\tlin4\t鲢鱼\n鰶\tman5\t青鰶鱼(鱼名)\n鳌\tngou4\t鳌头，独占鳌头；(1)大鱼；(2)同「鼇」字\n鳕\tsyut3\t鳕鱼\n鲦\ttiu4\t鲦鱼\n鳛\tzaap6\t鳛水\n鰿\tzik1\t同「鲫」字\n鱁\tzuk6\t鱀的别名\n𫠒\tzeon1\t𫠒鱼(即章鱼)\n𫚧\tcau4\t(1)鲚鱼别名；(2)同「鯦」字\n鲟\tcam4\t鱼名\n鱎\tgiu2\t阳鱎(即白鱼)\n鳞\tleon4\t鳞次，鳞片，鳞次栉比，鱼鳞，鱼鳞图册\n鳝\tsin5\t鳝鱼，白鳝，黄鳝\n鱌\tzoeng6\t鱼名，似𫚉\n鱕\tfaan1\t鱼名\n鱋\tkeoi1\t同「魼」字\n鱙\tmiu4\t三鱙(古国名，也作三苗)\n鲎\thau6\t鲎鱼\n鳢\tlai5\t鱼名\n𫚫\tsou1\t腥味\n鱞\tgwaan1\t同「鳏」字\n鲿\tsoeng4\t鱼名\n𫚈\tzeoi6\t鲢鱼的别名\n鱵\tzam1\t鱵鱼(即针鱼)\n鱹\tgun3\t人名用字\n鱱\tlai6\t方言用字，意指鳢鱼\n鱴\tmit6\t𫚖鱼\n鲈\tlou4\t鲈鱼\n鳄\tngok6\t鳄鱼\n鲡\tlei4\t鳗鲡\n𫚉\tgung1\t鱼名\n𫚉\thung4\t赤𫚉(海鱼名)，白𫚉\n魤\tfaa3\t鱼名\n魤\tngo4\t鱼名\n鲍\tbaau1\t(1)人名用字；(2)姓氏\n鲍\tbaau6\t鲍鱼，鲍肆\n魾\tpei1\t鱼名\n魾\tpei4\t鲂鱼的别称\n鲄\tgo2\t经过加工的鱼类食品\n鲄\tho4\t河豚\n魻\thaap3\t魻鲽\n魻\thaap6\t鱼名\n𫠐\thaam4\t蛤\n𫠐\tham1\t同「蚶」字\n鲜\tsin1\t鲜明，新鲜，鲜车怒马，鲜艳，鲜活，鲜美，鲜红，鲜奶，鲜肉，鲜花，鲜卑，海鲜，鲜衣美食\n鲜\tsin2\t鲜有，鲜为人知，屡见不鲜，寡廉鲜耻，倨傲鲜腆\n𫚖\tzai1\t一种外形似刀的鱼\n𫚖\tci2\t鱼名\n鮥\tgaak3\t鳄鱼\n鮥\tgok3\t鱼名\n鮥\tlok6\t叔鲔\n鳃\tsaai2\t忧心的样子\n鳃\tsoi1\t曝鳃龙门，鳃虱，鳃叶\n𫚋\ttyun4\t传说中的鱼名\n𫚋\tzyun1\t鱼名\n鳜\tgwai3\t桂鱼\n鳜\tkyut3\t鳜鱼，鳜豚\n鳣\tsin5\t同「鳝」字\n鳣\tzin1\t一种无鳞的大鱼\n鱦\tmaang5\t蛙的一种\n鱦\tsing4\t鱼子\n鱦\tsing6\t小鱼\n鱳\tlik6\t鰅鱼\n鱳\tlok6\t鱼名\n鱳\tluk6\t古具名\n𫚍\tfan4\t「𫚍fan5」的异读字\n𫚍\tfan5\t𫚍鱼，翔鸥轻𫚍\n魧\tgong1\t「魧hong4」的异读字\n魧\thong4\t(1)大贝；(2)鱼膏；(3)哆口鱼；(4)鱼名\n鮈\tgeoi1\t鳀鮈(鱼名)\n鮈\tkeoi1\t「鮈geoi1」的异读字\n鲐\ttoi1\t「鲐toi4」的异读字\n鲐\ttoi4\t鲐背\n鲊\tzaa2\t鲊肉，鲊酱，鱼鲊\n鲊\tzaa3\t「鲊zaa2」的异读字\n鲖\tzau6\t「鲖tung4」的异读字\n鲖\ttung4\t鱼名\n鲔\twai5\t「鲔fui2」的异读字\n鲔\tfui2\t鱼名\n鲒\tgit3\t蚌的一种\n鲒\tgit6\t「鲒git3」的异读字\n鮡\tsiu6\t「鮡ziu6」的异读字\n鮡\tziu6\t一种生活在山涧溪流中的小鱼\n鲠\tgang2\t骨鲠在喉，鲠直\n鲠\tkang2\t「鲠gang2」的异读字\n鲧\tgwan2\t(1)大鱼；(2)人名，夏禹的父亲\n鲧\tkwan2\t「鲧gwan2」的异读字\n鯈\tjau4\t鱼名，即白鲦\n鯈\ttiu4\t「鯈jau4」的异读字\n鲫\tzak1\t「鲫zik1」的异读字\n鲫\tzik1\t鲫鱼\n鲲\tgwan1\t「鲲kwan1」的异读字\n鲲\tkwan1\t传说中的大鱼\n鲮\tleng4\t「鲮ling4」的异读字\n鲮\tling4\t鲮鲤，土鲮鱼\n鳆\tfuk1\t鲍鱼\n鳆\tfuk6\t「鳆fuk1」的异读字\n鰅\tjung4\t「鰅jyu4」的异读字\n鰅\tjyu4\t鰅鱼(即斑鱼)\n𫚦\tjung4\t𫚦鱼(鱼名)\n𫚦\tsung4\t「𫚦jung4」的异读字\n鳎\ttaap3\t鳎目鱼\n鳎\ttaat3\t「鳎taap3」的异读字\n鳗\tmaan4\t鳗鲡，电鳗，泥鳗，海鳗\n鳗\tmaan6\t「鳗maan4」的异读字\n鳔\tbiu1\t「鳔piu5」的异读字\n鳔\tpiu5\t鳔胶，鱼鳔\n鱍\tbut3\t「鱍but6」的异读字\n鱍\tbut6\t鱼跳跃的样子\n鱐\tsau1\t鱐鱼(干鱼)\n鱐\tsuk1\t「鱐sau1」的异读字\n𫚪\twat6\t一种小鱼\n𫚪\tleot6\t「𫚪wat6」的异读字\n鳟\tzeon1\t「鳟zyun6」的异读字\n鳟\tzyun1\t「鳟zyun6」的异读字\n鳟\tzyun6\t鳟鱼\n鲙\tkui2\t鱼名\n鲙\tkui3\t「鲙kui2」的异读字\n鲚\tcai4\t「鲚cai5」的异读字\n鲚\tcai5\t刀鱼\n魡\tdik1\t系鱼\n魡\tdik6\t「魡dik1」的异读字\n魡\tdiu3\t同「钓」字\n鮨\tngai6\t鮨鱼鱼名之一\n鮨\tkei4\t鮨酱，鮨羹\n鮨\tzi1\t「鮨kei4」的异读字\n鮨\tzi2\t「鮨kei4」的异读字\n鲭\tzaang1\t「鲭zing1」的异读字\n鲭\tcing1\t鱼名\n鲭\tzing1\t鱼肉杂烩\n鲰\tzau1\t鲰生\n鲰\tzau6\t「鲰zau1」的异读字\n鲰\tzip3\t鱼干\n鯦\tcau4\t「鯦gau6」的异读字\n鯦\tgau6\t鲥鱼\n鯦\toi2\t鱼名\n凫\tfu4\t凫茈\n鳪\tbuk1\t鳪鴙(黄色野鸡)\n凤\tfung6\t凤凰，凤梨，凤仪，凤毛麟角，凤眼\n鸣\tming4\t鸣枪，鸣笛，鸣金收兵，鸣冤，鸣谢，共鸣，一鸣惊人\n鸤\tsi1\t鸤鸠\n鳵\tbou2\t同「鸨」字\n鸨\tbou2\t鸨母，鸨鸟，老鸨开妓院的女人\n鳺\tfu1\t鳺𫛜(即火斑鸠)\n鳿\tjuk6\t鸀鳿(水鸟名)\n𫛞\tkyut3\t𫛢𫛞，𫛞舌\n鴈\tngaan6\t同「雁」字\n鸩\tzam6\t鸩毒，饮鸩止渴\n𫛛\tzi1\t𫛛鹊\n鴄\tpat1\t鸭\n𫛝\tfun1\t传说中的怪鸟，人面鸟喙\n𪉃\tman4\t鹌鹑的幼鸟\n鸱\tci1\t鸱鸮(鸟名)\n𫛡\tfuk6\t𫛡鵖(即戴胜)\n𫛤\tgaa1\t野鹅\n鸪\tgu1\t鹧鸪\n鸮\thiu1\t鸱鸮，见弹求鸮，荣膺鸮荐\n鸯\tjoeng1\t鸳鸯(鸟名)\n鸲\tkeoi4\t鸲鹆\n𫁡\tlap6\t即翠鸟\n鸰\tling4\t鸰原\n鸵\tto4\t鸵鸟，鹬鸵\n鴠\tdaan3\t渴鴠(即寒号鸟)\n鴩\ttit3\t鸟名\n鴙\tzi6\t同「雉」字，意指野鸡\n鴘\tbin6\t(1)鹰鹞两岁时的羽毛颜色；(2)姓氏\n䴔\tgaau1\t䴔䴖\n鸿\thung4\t鸿儒，鸿沟，鸿文，鸿雁\n鸺\tjau1\t鸱鸺(鸟名)，鸺鹠(鸟名)\n鸸\tji4\t鷾鸸\n𫛪\tjyu4\t鹌鹑之类的小鸟\n鸹\tkut3\t鸧鸹\n䴕\tlit6\t啄木鸟\n鴱\tngaai6\t雄性的鹪鹩\n𫛦\twu1\t匏鸅(鹈鹕的别名)\n鴸\tzyu1\t传说中一种不祥的怪鸟\n鴭\tdeoi1\t鸟名，雀一类的鸟\n鴾\tmau4\t鴾母(一种似鹌鹑的小鸟)\n鹁\tbut6\t鹁鸽，鹁鸪，鹁角\n鵋\tgei6\t鵋鶀(猫头鹰)\n鵛\tging1\t鸒鵛(鸟名)\n鵖\tgip3\t𫛡鵖(即戴胜)\n鹃\tgyun1\t杜鹃，啼鹃，杜鹃啼血\n鹆\tjuk6\t鸲鹆\n鹅\tngo4\t鹅蛋，鹅毛，鹅黄，天鹅\n鹈\ttai4\t鹈鹕\n鵌\ttou4\t一种喜欢与鼠同穴而居的鸟类\n𪉍\ttuk1\t𪉍鹙\n𫛥\tgaap3\t鹎𫛥(即催明鸟)\n鵗\thei1\t雉\n鵘\tgwan6\t鸡无尾\n雕\tdiu1\t一箭双雕\n鸫\tdung1\t鸟名\n𫛳\tfuk6\t𫛳鸟(鸟名，外形酷似猫头鹰)\n鹒\tgang1\t鸧鹒\n鶋\tgeoi1\t鹎鶋(即寒鸦)，鶢鶋(一种海鸟)\n鵳\tgin1\t鶙鵳(即鹞)\n鶁\tging1\t鸟名\n𫛵\tgwat6\t𫛵鸠，𫛵鶋(鸟名)\n鹓\tjyun1\t鹓鶵\n鵹\tlei4\t黄鵹\n鶆\tloi4\t鶆鸠\n鹉\tmou5\t鹦鹉\n鹏\tpaang4\t鹏程，鹏程万里\n𫛱\tzaau6\t白雉\n鵻\tzeoi1\t一种小鸠\n䴖\tzing1\t䴔䴖\n鵱\tluk6\t鵱鷜(即野鹅)\n鶅\tzi1\t(1)古代东方野鸡的别名；(2)鵵轨鸟\n鵽\tzyut3\t(1)鵽鸠；(2)古代传说中的忘母之鸟\n鵸\tkei4\t传说中的一种怪鸟\n鶈\tcai1\t古代在中国东部出没的一种怪鸟\n鵿\tsing1\t腾飞\n鵴\tguk1\t鴶鵴\n鵵\ttou3\t老鵵\n鵨\tsyu1\t鸟名\n𫛨\tpei4\t𫛨鷑\n鹙\tcau1\t秃鹙，𪉍鹙\n鹚\tci4\t鸬鹚\n𫛶\tcik1\t㶉𫛶\n鶠\tjin2\t凤凰\n鹜\tmou6\t趋之若鹜，心无旁鹜，刻鹄类鹜鸟类中的游禽类\n鹗\tngok6\t飞鸟名称，俗称「鱼鹰」\n鶙\ttai4\t鶙鹕(尔雅云今剃胡好飞入水食鱼故曰洿泽俗亦呼之为淘河鸟也)同「𫛸」字\n𫛸\ttai4\t𫛸鵳(即鹞)\n鹕\twu4\t鹈鹕\n𫛷\twu4\t鶟𫛷(即白头翁鸟)\n鶟\tdat6\t鶟𫛷(即白头翁鸟)\n鶔\tjau4\t鶝鶔\n鶞\tceon1\t鳻鶞\n鶐\tseot6\t翠鸟\n鶜\tmaau4\t鶜鸱\n鶧\tjing1\t鸟名\n鹣\tgim1\t鹣鲽，鹣鹣\n鹤\thok6\t鹤立鸡群，白鹤，风声鹤唳，鹤寿，童颜鹤发，煮鹤焚琴\n鶾\thon6\t肥鸡\n鹢\tjik6\t鹢首，彩鹢\n鹝\tjik6\t同「鹢」字\n鹟\tjung1\t鸟类的一科\n鷇\tkau3\t鷇食，鷇音(喻众说纷纭)，哺鷇初生小鸟\n鹠\tlau4\t鸺鹠\n𫛽\tleot6\t鹠𫛽(即黄鹂)\n䴘\ttai4\t䴙䴘\n鶱\thin1\t形容鸟飞\n鷎\tgou1\t鸟名，属鸠鸟类\n𫛯\tfong2\t水鸟名\n鶸\tjoek6\t昆鸟\n鶷\that6\t白头乌\n鶶\ttong4\t鶶鷵(鸟名)\n鶳\tsi1\t(1)鸟名；(2)大雀名\n鷍\thiu1\t同「枭」字\n鷏\ttin4\t鸟名，又名蚊母\n鷌\tmaa5\t鸟名\n鷘\tcik1\t同「𫛶」字\n鷕\tjiu6\t野鸡叫声\n鷛\tjung4\t鷛渠(一种似鸭的鸟类)\n𫜀\tsan4\t𫜀风(鸟名)\n鷞\tsoeng1\t鹔鷞(鸟名)，鷞鸠(鹰类之一)\n鷋\ttou4\t鷋鸠(鸟名)\n鷒\ttyun4\t鹳鷒\n鹧\tze3\t鹧鸪\n鸷\tzi3\t性情凶猛的鸟\n鷝\tbat1\t鸟名\n鷜\tlau4\t鵱鷜\n鷭\tfaan4\t鷭鹉(鸟名)\n鹇\thaan4\t白鹇(鸟名)\n鷰\tjin3\t同「燕」字\n鷮\tgiu1\t鷮雉\n鹩\tliu4\t鹩哥，鹪鹩\n鸶\tsi1\t鹭鸶\n鹔\tsuk1\t鹔鷞\n鷻\ttyun4\t雕类的别名\n鹫\tzau6\t秃鹫\n鹪\tziu1\t鹪鹩\n鷵\ttou4\t鶶鷵\n𫜄\tzeon1\t野鸡名\n鷡\tmou4\t鴾鷡\n鷶\tmaai5\t鸟名\n鷢\tkyut3\t白鷢\n鷬\twong4\t鹂鷬\n𪉊\twaa4\t鸟名\n鷑\tkap6\t鷑鸠\n鸴\thok6\t鸴鸠笑鹏\n鷾\tji3\t鷾鸸\n鸃\tji4\t鵔鸃\n鹰\tjing1\t鹰犬\n鸉\tjoeng4\t今天称为白鹞子的野生鸟类\n鸆\tjyu4\t鸅鸆(即护田鸟)\n㶉\tkai1\t㶉𫛶\n鸁\tlo4\t鸟名\n鹭\tlou6\t鹭鸶，白鹭，苍鹭\n䴙\tpik1\t䴙鹈，䴙䴘\n鹯\tzin1\t一种猛禽\n鸄\tgik1\t鸟名\n鸅\tzaak6\t鸅鸆\n鸒\tjyu4\t乌鸦的别称\n鹲\tmung4\t红嘴鹲(鸟名)\n鸑\tngok6\t鸑鷟\n𫛢\tning4\t鸟名\n鸐\tdik6\t鸐雉\n鸍\tsi1\t(1)野鸭；(2)鸩鸟\n鸓\tleoi5\t鸓鼠(即小飞鼠)\n鸬\tlou4\t鸬鹚\n𫛟\tlung4\t(1)野鸭；(2)姓氏\n鹦\tjing1\t鹦鹉，鹦哥，鹦鹉学舌\n鸙\tjoek6\t天鸙(鸟名，又名云雀)同「鹨」字\n鹳\tgun3\t鸟名\n鹂\tlei4\t黄鹂\n鸾\tlyun4\t鸾凤和鸣，红鸾星动，颠鸾倒凤，乘鸾跨凤凤凰一类的鸟\n鸟\tdiu2\t同「屌」字\n鸟\tniu5\t鸟类，鸟儿，鸟瞰，鸟语花香，鸟笼，候鸟\n鳱\tgon1\t鳱鹊(喜鹊)，鳱鹄\n鳱\thon6\t鳱鴠(鸟名)\n鳻\tbaan1\t鳻鸠(即斑鸠)\n鳻\tfan4\t鳻鶞(一种候鸟)\n𫛚\thang1\t鹡鸰\n𫛚\tgin1\t(1)䴔䴖；(2)动物学中鹳形目鹭科鸟的通称\n𫛚\tzin1\t同「鹯」字\n鵅\tgaak3\t鸲鵅(鸟名，又称为鸺鹠)\n鵅\tlok6\t水鸟名\n鹄\tguk1\t鹄的，中鹄\n鹄\thuk6\t鹄立，鹄志，鹄候，鹄望，鸿鹄，鹄面鸟形\n鶨\tdeon6\t鸟名\n鶨\tzi6\t同「雉」字\n鶣\tbin1\t姓氏\n鶣\tpin1\t轻的样子轻的样子\n鶛\tgaai1\t雄鹩鹑\n鶛\tgaai3\t鸟名\n鸧\tcoeng1\t金饰貌\n鸧\tcong1\t鸧鹒(黄莺)，鸧鸹，鸧鸧\n鹘\tgwat1\t鹘鸼，兔起鹘落\n鹘\twat6\t鹘突，回鹘，鹘仑吞枣\n鸀\tsuk6\t红嘴山鸦\n鸀\tzuk1\t鸀鳿(水鸟名)\n鳦\tjyut3\t燕子\n鳦\tjyut6\t「鳦jyut3」的异读字\n鳭\tdiu1\t「鳭dou1」的异读字\n鳭\tdou1\t鳭鹩(鸟名)\n鸠\tgau1\t斑鸠\n鸠\tkau1\t「鸠gau1」的异读字\n鸢\tjyun1\t老鹰\n鸢\tjyun4\t「鸢jyun1」的异读字\n鸦\taa1\t鸦片，乌鸦，鸦雀无声，寒鸦\n鸦\tngaa1\t「鸦aa1」的异读字\n𫛜\tfau2\t「𫛜fau4」的异读字\n𫛜\tfau4\t鳺𫛜(鹁鸠的别名)\n鳹\tkam4\t(1)勾喙鸟；(2)雀鸟啄食\n鳹\tkim4\t「鳹kam4」的异读字\n鸭\taap3\t鸭绿，野鸭\n鸭\tngaap3\t「鸭aap3」的异读字\n鸳\tjin1\t「鸳jyun1」的异读字\n鸳\tjyun1\t鸳侣，鸳鸯，鸳鸯折颈\n𫛣\twat6\t疾飞的样子\n𫛣\tjyut6\t「𫛣wat6」的异读字\n鴢\taau2\t鸟名，又称为鱼䴔\n鴢\tjiu2\t「鴢aau2」的异读字\n𫛩\taan3\t同「鷃」字\n𫛩\tngaan3\t「𫛩aan3」的异读字\n鸽\tgaap3\t「鸽gap3」的异读字\n鸽\tgap3\t鸽子，鸽派，白鸽，信鸽\n鵀\tjam4\t戴胜鸟\n鵀\tjam6\t「鵀jam4」的异读字\n鸼\tzaau1\t「鸼zau1」的异读字\n鸼\tzau1\t鹘鸼\n鴶\tgat1\t「鴶git3」的异读字\n鴶\tgit3\t鴶鵴(布谷鸟的别称)\n鵏\tbou2\t「鵏bou2」的异读字\n鵏\tbou6\t鵏鶆(鸠鸟之一)，地鵏(大鸨的别名)\n𫛭\tkong4\t「𫛭kwong4」的异读字\n𫛭\tkwong4\t(1)即猫头鹰；(2)鹰科鸟类之一\n鵙\tgwik1\t伯劳鸟\n鵙\tkyut3\t「鵙kyut3」的异读字\n鵔\tseon3\t「鵔zeon3」的异读字\n鵔\tzeon3\t鵔鸃(即锦鸡)\n鹌\tam1\t鹌鹑\n鹌\tngam1\t「鹌am1」的异读字\n鹎\tpat1\t鹎鶋(即寒鸦)，鹎𫛥(即催明鸟)\n鹎\tbei1\t「鹎pat1」的异读字\n鹊\tcoek3\t鹊报，鹊语，鹊噪，鹊巢鸠占，喜鹊，声名鹊起，鸦鹊无声\n鹊\tzoek3\t「鹊coek3」的异读字\n鶂\tjik1\t「鶂jik6」的异读字\n鶂\tjik6\t(1)水鸟名；(2)鹅叫声\n鹑\tceon1\t「鹑seon4」的异读字\n鹑\tseon4\t鹌鹑，鹑衣\n鶀\thei1\t「鶀kei4」的异读字\n鶀\tkei4\t鵋鶀(猫头鹰的别称)\n鶤\tgwan1\t鶤鸡\n鶤\tkwan1\t「鶤gwan1」的异读字\n䴗\tgwik1\t鸟名\n䴗\tkyut3\t「䴗gwik1」的异读字\n鹖\thot3\t鹖冠(汉代武官所戴的帽子，后喻遁世隐士)，鹖冠子(书名)鸟名，指古时一种善斗的鸟类\n鹖\thot6\t「鹖hot3」的异读字\n鶢\twun4\t「鶢jyun4」的异读字\n鶢\tjyun4\t鶢鶋(海鸟也)\n鷃\taan3\t鷃雀\n鷃\tngaan3\t「鷃aan3」的异读字\n莺\tang1\t莺花，莺歌，莺飞草长，莺莺燕燕，流莺\n莺\tngang1\t「莺ang1」的异读字\n鶵\tco1\t「鶵co4」的异读字\n鶵\tco4\t鹓鶵\n鹞\tjiu2\t「鹞jiu6」的异读字\n鹞\tjiu4\t「鹞jiu6」的异读字\n鹞\tjiu6\t鹞鹰，纸鹞\n鹡\tzek3\t「鹡zik3」的异读字\n鹡\tzik3\t鹡鸰\n鸥\tau1\t海鸥\n鸥\tngau1\t「鸥au1」的异读字\n𫜁\tbai6\t「𫜁bit3」的异读字\n𫜁\tbit3\t𫜁冕，𫜁衣\n鹥\tai1\t「鹥ji1」的异读字\n鹥\tngai1\t「鹥ji1」的异读字\n鹥\tji1\t凫鹥(野鸭之小者也，见《一切经音义》)鸥\n鹨\tlau4\t「鹨lau6」的异读字\n鹨\tlau6\t百灵鸟\n鷟\tzok6\t鸑鷟\n鷟\tzuk1\t「鷟zok6」的异读字\n鹬\twat6\t鹬蚌相争，鹬鸵一种鸟类，嘴脚均长\n鹬\tleot6\t「鹬wat6」的异读字\n鹬\tneot6\t「鹬wat6」的异读字\n鹬\tjyut6\t「鹬wat6」的异读字\n𫜃\tjam4\t鹞的别名\n𫜃\tjiu6\t「𫜃jam4」的异读字\n鸔\tbok3\t「鸔buk1」的异读字\n鸔\tbou6\t「鸔buk1」的异读字\n鸔\tbuk1\t乌鸔\n鶝\tbik1\t(1)「鶝fuk1」的异读字；(2)鸟名\n鶝\tfuk1\t鶝鶔\n𫛴\ttaan4\t鹳𫛴(怪鸟名)\n𫛴\tdai6\t「𫛴tai4」的异读字\n𫛴\ttai4\t杜鹃鸟的别名\n卤\tlou5\t卤莽，卤素(halogens)，粗卤\n咸\thaam4\t咸鱼，咸水，咸菜，咸肉\n碱\tgaan2\t碱性，碱液\n盐\tjim4\t盐水，盐分，盐酸，盐湖，盐田\n鹾\tco1\t「鹾co4」的异读字\n鹾\tco4\t鹾使，鹾务\n鹿\tluk6\t鹿茸，鹿死谁手，复鹿寻蕉\n麂\tgei2\t兽名，似鹿而小\n麀\tjau1\t聚麀(父子同牝，喻乱伦)母鹿\n麆\tcyu4\t幼獐\n麈\tzyu2\t鹿一类的动物，尾巴可以做拂尘\n麉\tgin1\t古书中称力气极大的鹿\n麌\tjyu5\t麌麌；(1)雄鹿；(2)群聚貌；(3)同「噳」字\n麎\tsan4\t雌性麋鹿\n麍\tlau4\t一种鹿属动物\n麒\tkei4\t麒麟姓氏\n麑\tngai4\t小鹿\n麔\tkau5\t雄性麋鹿\n麚\tgaa1\t雄鹿\n麜\tleot6\t雌性的獐子\n麝\tse6\t麝香，麝牛\n麟\tleon4\t麒麟，麟儿，凤毛麟角\n麠\tging1\t大鹿\n麡\tcai4\t麡狼\n麤\tcou1\t麤疏，麤语，麤犷，心麤胆壮同「粗」字\n麃\tpaau4\t鹿类动物名称\n麃\tbiu1\t勇武\n麃\tpiu2\t同「皫」字\n麇\tgwan1\t(1)獐；(2)地名\n麇\tkwan4\t麇至，麇集，麇聚，麇聚蜂萃\n丽\tlai6\t丽泽，美丽，壮丽，附丽，亮丽，高丽(韩国古称谓之一)\n丽\tlei4\t鱼丽(诗经小雅篇名)\n麋\tmai4\t「麋mei4」的异读字\n麋\tmei4\t麋鹿，麋集，麋沸蚁动，麋茸\n麊\tmai4\t「麊mei4」的异读字\n麊\tmei4\t同「麋」字\n麓\tluk1\t山麓，林麓山脚\n麓\tluk6\t「麓luk1」的异读字\n麙\thaam4\t麙羊野麋(典出扬雄〈蜀都赋〉)《说文》：山羊而大者细角。\n麙\tngaam4\t「麙haam4」的异读字\n麛\tmai4\t麛夭初生的小鹿\n麛\tngai4\t「麛ngai4」的异读字\n麧\that6\n麸\tfu1\t麸子，麸皮\n麭\tpaau3\t糕饼\n麮\theoi3\t(1)大麦粥；(2)糗\n麰\tmau4\t大麦\n面\tmin6\t面包，面粉，面条，面店，面团\n麶\tnim4\t同「黏」字\n𫜑\tfung1\t煮麦\n麦\tmaak6\t「麦mak6」的异读字\n麦\tmak6\t麦秋，麦浪，麦饭豆羹，麦穗两歧，大麦，小麦，燕麦\n曲\tguk1\t「曲kuk1」的异读字\n曲\tkuk1\t酒曲，曲车\n麻\tmaa4\t麻醉，麻烦，麻痹，麻布，麻木不仁\n麾\tfai1\t麾下，麾军前进\n黀\tzau1\t(1)麻秆；(2)聚麻\n黂\tfan4\t麻之有实者\n么\tmaa1\t「么mo1」的异读字\n么\tmo1\t那么，甚么，这么\n么\tmo5\t「么mo1」的异读字\n黄\twong4\t黄昏，青黄不接，信口雌黄，蛋黄，金黄，硫黄，明日黄花，面黄肌瘦，黄粱梦断，牝牡骊黄，飞黄腾达，黄袍，直捣黄龙\n黈\ttau2\t黄色\n黉\twaang4\t「黉hung4」的异读字\n黉\thung4\t黉门，黉宫\n黍\tsyu2\t黍米，黍稷，玉蜀黍\n黎\tlai4\t黎民，黎庶，黎黑，黎明，黎国，；(1)众多；(2)黑色的；(3)即将；(4)国名；(5)姓氏\n黐\tci1\t黐胶\n黏\tnim1\t「黏nim4」的异读字\n黏\tnim4\t黏土，黏贴，黏糊，黏液\n黓\tjik6\t黑色\n黕\tdam2\t(1)污垢；(2)黝黑\n黔\tkim4\t黔首，黔驴之技，黔驴技穷\n默\tmak6\t默契，缄默，沉默，默认\n黖\thei3\t不明的样子\n点\tdim2\t点滴，斑点，画龙点睛，点心，点头，点名，点燃，点缀，点收，点歌，点化，点穴，检点，起点，提点，点石成金\n黛\tdoi6\t黛眉，粉黛，黛绿年华，黛黑，黛蛾，翠黛\n黝\tjau2\t黝黑\n黚\tkim4\t浅黄黑色\n黟\tji1\t黟县(县名)\n黤\tjim2\t黤黮(黑暗不明)\n黥\tking4\t黥面\n黧\tlai4\t黧黑\n黫\tjan1\t黑色\n黭\tjim2\t黭幽，黭黯，黭浅鄙陋\n黪\tcaam2\t黪淡，黪黩(昏暗不清)浅青黑色\n黳\tji1\t(1)小黑点；(2)黑色\n黡\tjim2\t黡子，黡翳\n黩\tduk6\t穷兵黩武，干黩(冒犯)\n党\tdong2\t党部，党员，党内，党籍，党政，党派，党务，党羽，党证，党委，党法，党义，党徽\n党\ttong2\t(1)通「傥」字；(2)通「谠」字\n黦\twat1\t脱色\n黦\tjyut3\t黦颜；(1)黄黑色；(2)脸色变坏\n黑\thaak1\t「黑hak1」的异读字\n黑\thak1\t黑人，黑子，黑手，黑店，黑祲，黑货，黑道，黑暗，黑幕，黑帮，黑心肠，黑匣子，黑不溜秋，黑白分明，黑色幽默，漆黑\n黜\tceot1\t黜免，黜退，黜辱，黜陟，黜逐，黜职，罢黜，扶正黜邪；(1)贬降；(2)罢免；(3)废除\n黜\tzeot1\t「黜ceot1」的异读字\n黜\tzyut3\t「黜ceot1」的异读字\n黜\tzyut6\t「黜ceot1」的异读字\n黠\twaat6\t「黠hat6」的异读字\n黠\that1\t「黠hat6」的异读字\n黠\that6\t黠巧，黠吏，狡黠，慧黠；(1)机灵；(2)狡猾\n黠\tkit3\t「黠hat6」的异读字\n黯\tam2\t黯然，黯淡\n黯\tam3\t「黯am2」的异读字\n黯\tngam2\t「黯am2」的异读字\n黰\tcan2\t黰发\n黰\tzan2\t「黰can2」的异读字\n霉\tmei4\t霉菌\n霉\tmui4\t「霉mei4」的异读字\n黵\tdaam2\t黵面\n黵\tzaam2\t「黵daam2」的异读字\n黵\tzin2\t「黵daam2」的异读字\n黮\tdaam6\t黑色\n黮\ttaam2\t「黮daam6」的异读字\n黮\ttaam3\t黮暗(不明白)，黯黮(昏暗不明)\n黮\ttaam5\t「黮daam6」的异读字\n黮\ttaan2\t「黮taam3」的异读字\n黮\tsam6\t同「葚」字\n黹\tzi2\t针黹\n黺\tfan2\t彩色花纹\n黻\tfat1\t黻冕(古代一种祭服)，黼黻(衣裳绘绣的花纹，又可喻为文章)；(1)古代礼服上绣的半青半黑的花纹；(2)系印的丝带；(3)\n黼\tfu2\t黼黻(衣裳绘绣的花纹，又可喻为文章)，黼帐，黼座(帝王座处)，黼扆(绣有花纹的屏风)古代礼服上的刺绣花纹\n鼋\tjyun4\t鼋鱼\n鼁\theoi3\t蟾蜍\n鼀\tcuk1\t蟾蜍，见《尔雅》\n鼆\tman4\t句鼆(古地名)\n鼇\tngou4\t(1)同「鳌」字；(2)一说为一种海中的大龟\n鼍\tto4\t鼍龙，蛟鼍，鼍皮鼓，鼍更爬虫纲鼍科动物，产于长江下游､太湖一带，或称为鼍龙､灵鼍､猪婆龙､扬子鳄等。\n鼊\tbik1\t龟之一种\n黾\tmaang5\t(1)部首；(2)一种似青蛙的动物\n黾\tman5\t黾勉(努力)，黾池(古地名)勤勉\n黾\tmin5\t「黾man5」的异读字，用于「黾池」一词\n鼎\tding2\t鼎盛，钟鼎文，鼎足而立，人声鼎沸，鼎力相助，鼎鼎大名\n鼏\tmik6\t(1)鼏盖；(2)覆盖酒瓶的布\n鼒\tzi1\t口小的鼎\n鼐\tnaai5\t大鼎\n鼐\tnoi6\t「鼐naai5」的异读字\n鼓\tgu2\t锣鼓，鼓励\n鼖\tfan4\t钟鼖古代行军时所击的大鼓，长八尺\n鼚\tcoeng1\t鼚声\n鼛\tgou1\t用于役事的鼓\n鼘\tjyun1\t鼓声\n鼙\tpei4\t鼙鼓\n鼜\tcik1\t守夜的鼓声\n鼞\ttong1\t鼓声\n冬\tdung1\t鼓声\n冬\ttung4\t「冬dung1」的异读字\n鼠\tsyu2\t滑鼠，白鼠，鼠辈，鼠害，过街老鼠\n鼣\tfai6\t鼠名\n鼢\tfan4\t鼢鼠\n鼤\tman4\t鼤鼠(即班鼠)\n鼥\tbat6\t土拔鼠\n鼩\tkeoi4\t鼱鼩\n鼫\tsek6\t鼫鼠\n鼨\tzung1\t豹文鼠\n鼭\tsi4\t鼠名\n鼯\tng4\t鼯鼠技穷\n鼮\tting4\t身有豹纹之鼠\n鼰\tgwik1\t同「鼳」字，「鼰」是「鼳」的讹字\n鼱\tzing1\t鼱鼩(即奚鼠)\n鼵\tdat6\t鼵鼠(即兀儿鼠)\n鼹\tjin2\t鼹鼠\n鼲\twan4\t鼲鼠\n鼳\tgwik1\t兽名\n鼷\thai4\t鼷鼠，鼷穴\n鼸\thim2\t一种颊内能藏食的鼠\n鼬\tjau2\t「鼬jau6」的异读字\n鼬\tjau6\t黄鼬\n鼪\tsaang1\t「鼪sang1」的异读字\n鼪\tsang1\t黄鼬，即黄鼠狼\n鼶\ttai4\t「鼶si1」的异读字\n鼶\tsi1\t鼶鼠(大田鼠)\n鼻\tbei6\t鼻子，鼻头，鼻孔，鼻酸，鼻祖，鼻涕，鼻青脸肿，鼻炎，鼻塞，鼻血，鼻咽癌，鼻音，鼻水，鼻尖，鼻梁，鼻窦炎，鼻部，鼻腔\n鼽\tkau4\t鼻塞\n鼾\thon4\t鼾声，鼾睡\n齁\thau1\t齁声\n齂\thei3\t(1)鼻息、鼾声；(2)止息\n齄\tzaa1\t同「皻」字\n齈\tnung4\t鼻病，多鼻涕\n齉\tnong6\t鼻塞\n齀\tngat6\t(1)鼻；(2)兽以鼻摇物；(3)鼻仰\n齀\tfui1\t猪以鼻掘地\n齃\taat3\t同「頞」字\n齃\tngaat3\t「齃aat3」的异读字\n齆\tung3\t齆鼻\n齆\tngung3\t「齆ung3」的异读字\n斋\tzaai1\t斋菜，书斋，斋戒沐浴，斋醮，斋堂，斋供，打斋，斋心涤虑\n齌\tzai1\t齌怒\n齍\tzi1\t齍盛盛黍稷的祭器\n齑\tzai1\t齑粉\n齐\tzaai1\t同「斋」字\n齐\tcai4\t齐全，整齐，百花齐放，齐名，齐集，齐备，齐大非耦，齐心协力，白发齐眉，齐头并进，等量齐观，并驾齐驱，良莠不齐，洪福齐天，金鼓齐鸣，见贤思齐\n齐\tzai6\t火齐珠\n齐\tzi1\t齐衰，齐盛\n赍\tzai1\t赍恨，赍发，赍志而没\n赍\tzi1\t「赍zai1」的异读字\n齿\tci2\t齿轮，牙齿，齿冷，齿列，齿遇，齿班，啮齿科，锯齿，何足挂齿，马齿徒增\n龀\tcan3\t龆龀，童龀\n齘\thaai6\t噤齘(切齿含怒)\n龂\tngan4\t牙龂\n齖\tngaa6\t𫜬齖(上下牙齿不对应)，齖齵(牙齿不平正)\n出\tceot1\t出子，出儿，一出戏\n齝\tci1\t牛只反刍\n齞\tjin6\t齞唇历齿(兔唇露齿)\n龄\tling4\t年龄，芳龄\n龆\ttiu4\t龆年，龆龀\n齛\tsit3\t羊反刍\n齤\tkyun4\t齤然而笑(露齿而笑)\n齥\tsit3\t同「齛」字，因避唐太宗讳，改为「齥」\n龊\tcuk1\t龊龊，龌龊，打龊\n龉\tjyu5\t龃龉\n齫\tkwan2\t(1)齿起的样子；(2)啮\n𫠜\tngai4\t𫠜齿\n龋\tgeoi2\t龋齿\n齵\tjyu4\t齵差\n腭\tngok6\t腭裂，软腭\n齻\tdin1\t牙两畔之最长者\n齺\tzau1\t(1)牙齿折断；(2)啮咬\n齸\tjat6\t(1)麋鹿反刍；(2)麋鹿的反刍胃；(3)泛指牛羊之类动物\n𫜰\tngaa3\t缺𫜰，疵𫜰，高城𫜰𫜰\n齱\tzau1\t齱齵(牙齿不正)\n齱\tcuk1\t同「龊」字\n𫜮\tngaan5\t栈𫜮巉崄\n𫜮\tjin6\t同「齞」字，意指牙齿外露\n齹\tci1\t牙齿参差不齐\n齹\tco4\t齿根\n龁\tngaat6\t「龁hat6」的异读字\n龁\that6\t齮龁\n龅\tbaau6\t龅牙\n龅\tpaau4\t「龅baau6」的异读字\n龃\tzeoi2\t龃龉\n龃\tzeoi6\t「龃zeoi2」的异读字\n啮\tngaat6\t「啮jit6」的异读字\n啮\tjit3\t「啮jit6」的异读字\n啮\tjit6\t啮臂，虫咬鼠啮，啮雪餐毡，啮合，啮齿动物，穷鼠啮猫；(1)啃、咬；(2)侵蚀；(3)缺口\n啮\tngit6\t「啮jit6」的异读字\n龇\tci1\t「龇zi1」的异读字\n龇\tzi1\t龇牙咧嘴\n齮\tngai5\t「齮ji2」的异读字\n齮\tji2\t齮龁\n龌\tak1\t龌龊\n龌\tngak1\t「龌ak1」的异读字\n龈\than2\t咬啮\n龈\tngan4\t牙龈，齿龈，龈腭，龈沟\n龈\thang2\t「龈han2」的异读字\n𫜬\tzaa6\t𫜬齖(牙齿不齐合)\n𫜬\tzaak3\t「𫜬zaak6」的异读字\n𫜬\tzaak6\t𫜬舌(咬舌)\n龙\tlung4\t龙舟，龙门，龙华，龙女，龙子，龙穴，龙船，龙争虎斗，龙凤呈祥，龙吟虎啸\n龒\tlung4\t同「龙」字\n龚\tgung1\t姓氏\n龛\tham1\t神龛，壁龛，佛龛\n龘\tdaap6\t龙飞的状态\n庞\tpong4\t庞大，庞杂，庞然大物\n庞\tlung4\t「庞pong4」的异读字\n䶮\tjim2\t人名用字\n䶮\tjin2\t「䶮jim2」的异读字\n龟\tgwai1\t龟年，龟板，龟卜，龟跌，龟鉴，龟龄鹤算，龟鹤遐寿，乌龟\n龟\tgwan1\t龟裂，不龟药，龟坼，不龟手药\n龟\tgau1\t龟兹(古西域国名)\n龟\tkau1\t「龟gau1」的异读字\n龠\tjoek6\t(1)古乐器；(2)古代量度单位；(3)部首之一\n龢\two4\t翁同龢(清一代名臣，官至军机大臣)同「和」字\n龤\thaai4\t同「谐」字，意指乐声和谐\n娴\thaan4\t娴熟，娴静\n恒\tgang2\t月上弦之貌\n碁\tgei1\t石碁(地名)\n碁\tkei4\t同「棋」字\n里\tlei5\t「里leoi5」的异读字\n里\tleoi5\t表里，里应外合\n\n#繁体\n丟\tdiu1\t丟棄，丟掉，丟下，丟臉，丟人，丟開，丟失\n並\tbing3\t「並bing6」的異讀字\n並\tbing6\t並且，並世無兩，並行不悖，並肩作戰，並駕齊驅，並列，圖文並茂\n亂\tlyun6\t亂世，亂闖，動亂，暴亂，叛亂，亂七八糟，亂成一團，撥亂反正，兵荒馬亂\n乾\tkin4\t乾坤，乾隆，乾顧，乾斷，乾道，乾元，乾造，乾宅，乾曜；(1)八卦之一；(2)易經六十四重卦之一；(3)男性、陽剛\n乾\tgon1\t乾果，乾杯，乾枯，乾笑，乾脆，乾涸，乾淨，乾爽，乾燥，外強中乾；(1)缺乏水份；(2)枯竭\n亙\tgang2\t亙古亙今\n亞\taa3\t亞洲，亞軍，亞熱帶\n亞\tngaa3\t「亞aa3」的異讀字\n佈\tbou3\t佈置，佈局，佈署，佈景，佈道，佈告\n佇\tcyu5\t佇立，佇足，佇候\n侖\tleon4\t美侖美奐，語無侖次條理分析\n侷\tguk6\t侷限，侷促\n係\thai6\t關係\n俁\tjyu5\t俁俁\n侶\tleoi5\t伴侶，情侶，僧侶\n俬\tsi1\t傢俬(粵語用詞，意為家具)\n倉\tcong1\t倉庫，倉儲，倉促，倉皇，倉猝\n個\tgo3\t個人，個案，個性，個體，個別，個例，個子，個中滋味\n倖\thang6\t倖免，倖存，倖臣，寵倖\n倫\tleon4\t倫理，倫常\n倆\tloeng5\t伎倆，夫婦倆\n們\tmun4\t你們\n偽\tngai6\t真偽，偽造，偽君子，偽裝，偽證，偽藥，偽善，偽證罪\n偉\twai5\t偉大，偉人，偉業\n側\tzak1\t側面，側目，側門，側重，側耳，側身，側邊，側臥，側室，側睡\n偵\tzing1\t偵查，偵破，偵測，偵察，偵緝\n偑\tfung1\t(1)姓氏；(2)地名\n備\tbei6\t備用，備查，備案，備而不用\n傢\tgaa1\t傢俱，傢伙，傢具\n傑\tgit6\t傑出，傑作，英雄豪傑\n傌\tmaa6\t同「罵」字\n傘\tsaan3\t傘兵，雨傘，跳傘\n僉\tcim1\t僉謀，僉同，僉議，僉押，僉望，打僉；(1)全部；(2)眾人的代稱\n傴\tjyu2\t傴僂\n傾\tking1\t傾倒，傾向，傾斜，傾心\n傷\tsoeng1\t傷害，傷亡，傷者，傷心，傷勢，傷口，傷痕，傷人，傷殘，傷感，傷痕累累，傷天害理，傷風，傷兵\n債\tzaai3\t債務，公債，債券，債權\n僕\tbuk6\t僕人，奴僕，女僕，僕從\n僱\tgu3\t同「雇」字\n僑\tkiu4\t僑民，歸僑，僑胞，僑居，華僑\n價\tgaa3\t價格，價值，價位，價錢，價廉物美\n儉\tgim6\t儉約，節儉\n儀\tji4\t儀表，儀容，儀式\n億\tjik1\t億萬，億兆\n儂\tnung4\t儂語，偎儂，儂本多情\n儕\tcaai4\t儕輩，朋儕，同儕，吾儕，友儕，儕居同輩、同類的人\n儔\tcau4\t儔伴，儔儷，朋儔\n儘\tzeon2\t儘管，儘意隨心\n優\tjau1\t優先，優勢，優良，優秀，優待，優異，優點，優美，優勝，優雅，優劣，優越，優厚，優勝劣敗，優柔寡斷\n償\tsoeng4\t償還，補償，血債血償，償命，賠償，抵償，索償，無償契約，得償所願，得不償失，如願以償\n儷\tlai6\t儷影，儷詞，伉儷\n儸\tlo4\t僂儸\n儺\tno4\t(1)迎神賽會以樂舞驅逐疫鬼；(2)柔美的樣子\n儼\tjim5\t儼然，儼如\n儻\ttong2\t儻若，儻蕩，倜儻\n俔\tjin5\t(1)間見；(2)同「睍」字\n俔\tjin6\t譬喻\n傳\tcyun4\t傳人，傳世，傳言，傳染，傳神，傳教，傳授，傳媒，傳統，傳說，傳達，傳誦，傳播，傳宗接代，宣傳，流傳，言傳身教\n傳\tzyun3\t傳馬，傳置，傳驛\n傳\tzyun6\t傳記，傳詰，傳略，自傳，經傳\n傭\tcung1\t圴等\n傭\tjung2\t傭金\n傭\tjung4\t傭工，僱傭\n儐\tban1\t尊敬\n儐\tban3\t儐相，儐從，儐接\n俠\thaap6\t俠客，豪俠，武俠\n俠\thap6\t「俠haap6」的異讀字\n傖\tcaang1\t「傖cong1」的異讀字\n傖\tcam2\t「傖cong1」的異讀字\n傖\tcong1\t寒傖，傖俗\n僅\tgan2\t僅見，不僅，碩果僅存\n僅\tgan6\t「僅gan2」的異讀字\n僂\tlau4\t佝僂，垂白上僂\n僂\tleoi5\t「僂lau4」的異讀字\n傯\tzung2\t倥傯，戎馬倥傯\n傯\tzung3\t「傯zung2」的異讀字\n僨\tfan3\t「僨fan5」的異讀字\n僨\tfan5\t僨事，僨興\n儈\tkui2\t市儈，牙儈\n儈\tkui3\t「儈kui2」的異讀字\n儲\tcyu1\t「儲cyu5」的異讀字\n儲\tcyu4\t「儲cyu5」的異讀字\n儲\tcyu5\t儲君，儲值，儲蓄，儲存，儲備\n佔\tcim1\t佔畢\n佔\tzim1\t「佔cim1」的異讀字\n佔\tzim3\t佔據，霸佔，佔盡先機，佔便宜，佔領，佔地，佔有，侵佔\n併\tbing3\t併吞，合併，併發症，歸併，併攏\n併\tbing6\t同「並」字\n併\tping3\t「併bing3」的異讀字\n來\tlai4\t「來loi4」的異讀字\n來\tloi4\t來往，來世，來歷，來龍去脈，未來\n來\tloi6\t勞來\n倀\tcaang1\t「倀coeng1」的異讀字\n倀\tcaang4\t獨立貌\n倀\tzan3\t童子，特指用以逐鬼的童男童女\n倀\tcoeng1\t倀倀，倀鬼，為虎作倀\n僥\tgiu1\t「僥hiu1」的異讀字\n僥\tgiu2\t「僥hiu1」的異讀字\n僥\thiu1\t僥倖\n僥\tjiu4\t僬僥\n兇\thung1\t兇嫌，兇手，兇殺，兇猛，兇惡，兇悍，兇案，兇殘\n兒\tngai4\t姓氏\n兒\tji4\t兒童，弄潮兒，兒女情長，男兒，健兒，兒戲，一會兒\n兗\tjin2\t「兗jin5」的異讀字\n兗\tjin5\t兗洲(山東省縣名)\n兌\tdeoi3\t兌現，匯兌，兌換率，兌付，兌卦\n兌\tdeoi6\t「兌deoi3」的異讀字\n兌\tjeoi6\t同「銳」字\n內\tnaap6\t同「納」字\n內\tnoi6\t內容，內疚，內憂外患，內外，內閣，內政，內情，內涵，內向，內陸，內戰，內亂，內科，內衣，內閣制，內人，內鬨\n兩\tloeng2\t「兩loeng5」的異讀字，只用於「斤兩」一詞\n兩\tloeng5\t兩邊，兩岸，斤兩\n兩\tloeng6\t同「輛」字\n冊\tcaak3\t冊子，冊封，冊頁，冊立\n冑\tzau6\t介冑(披甲戴盔)，貝冑，躬擐甲冑\n冢\tcung2\t冢墓，喪冢，冢嗣，冢婦，冢土，冢子，冢宰，叢冢，發冢；(1)墳墓；(2)同「塚」字\n冪\tmik6\t冪冪，降冪，乘冪；(1)覆蓋器物的布；(2)覆蓋；(3)數學中一數自乘的「次方」\n凍\tdung3\t凍結，凍傷，凍僵，凍瘡，冰凍\n凜\tlam5\t凜冽，凜然，凜凜\n凈\tzeng6\t「凈zing6」的異讀字，用於「乾凈」一詞\n凈\tzing6\t凈重，乾凈，純凈\n凱\thoi2\t凱旋，凱歌，奏凱而歸，凱風，凱復\n凱\tngoi2\t「凱hoi2」的異讀字\n刪\tsaan1\t刪除，刪減，刪改，刪繁就簡\n剄\tging2\t自剄用刀割頸\n則\tzak1\t法則，規則，以身作則\n剛\tgong1\t剛才，金剛，剛愎自用，剛強，剛毅，剛烈，剛直，剛健，剛好，剛柔並濟，剛巧\n剷\tcaan2\t同「鏟」字\n劃\twaak6\t劃分，劃出，劃一，劃清界線\n劍\tgim3\t寶劍，劍術，劍蘭，劍及履及，舌劍脣槍\n劌\tgwai3\t(1)傷；(2)割\n劇\tkek6\t劇團，劇場，劇本，劇院，劇情\n劊\tkui2\t劊子手\n劉\tlau4\t虔劉(蹂躪)；(1)姓氏；(2)殺戮；(3)斧鉞一類的兵器\n別\tbit3\t別扭(同彆扭)\n別\tbit6\t別人，別墅，別緻，別號，別離，別名\n創\tcong1\t創傷，創痍，創巨痛深，重創\n創\tcong3\t創造，首創，創業守成，創作，創舉，草創，創立，創刊，創見，創始，創設，創新，創意\n剎\tcaat3\t「剎saat3」的異讀字\n剎\tsaat3\t剎車，剎那(ksana)，古剎\n剋\thaak1\t「剋hak1」的異讀字\n剋\thak1\t剋日，剋扣，剋星，相生相剋\n剝\tbok1\t「剝mok1」的異讀字\n剝\tmok1\t剝削，剝落，剝奪，剝蝕，剝離，剝絲抽繭\n剮\tgwaa2\t剮刑，千刀萬剮古刑罰，即凌遲\n剮\twaa2\t「剮gwaa2」的異讀字\n剴\tgoi1\t「剴hoi2」的異讀字\n剴\thoi2\t剴切\n劑\tzai1\t劑量，藥劑\n劑\tzai6\t「劑zai1」的異讀字\n動\tdung6\t動靜，運動，明豔動人，動物，動作，動機，動向，動心，動怒，動盪，動亂，動畫，發動，浮動，波動，暴動，盲動，變動不居，風吹草動，不動聲色，大動干戈\n務\tmou6\t務必，務實，務農，務本，務求，務須\n勛\tfan1\t勛章，功勛，勛爵\n勢\tsai3\t勢力，勢在必行，勢均力敵，勢所難免，勢在必得，勢如破竹，勢不兩立\n勣\tzik1\t功績\n勱\tmaai6\t勉力\n勳\tfan1\t勳爵，功勳，勳章，勳績，勳業\n勵\tlai6\t勵志，勵行，鼓勵，激勵，勵精圖治\n勸\thyun3\t勸解，勸勉，勸告\n勞\tlou4\t勞力，勞工，勞心，勞役，勞苦，勞動，勞碌，勞損，勞民傷財，勞燕分飛，疲勞，勤勞\n勞\tlou6\t犒勞，慰勞，勞軍\n勝\tsing1\t勝任，不勝枚舉，高處不勝寒，防不勝防，數不勝數，美不勝收\n勝\tsing3\t勝利，名勝古蹟，勝券在握，邪不勝正，反敗為勝，優勝劣敗\n勁\tging3\t「勁ging6」的異讀字\n勁\tging6\t勁旅，勁敵，勁頭，雄勁，幹勁，衝勁\n勩\tjai6\t疲勩\n勩\tji6\t「勩jai6」的異讀字\n勻\twan4\t勻稱，勻淨，均勻\n匭\tgwai2\t票匭，匭函，匭院(古代民意蒐羅機構)匣子\n匯\twui6\t匯合，外匯，匯報，匯票，匯款，匯聚，匯流\n匱\tgwai6\t匱乏，金匱，金匱要略(中醫重要經典)；(1)缺乏，竭盡；(2)儲放東西的箱子。同櫃\n區\tau1\t姓氏\n區\tngau1\t「區au1」的異讀字\n區\tkeoi1\t區域，區分，區別\n協\thip3\t「協hip6」的異讀字\n協\thip6\t協助，妥協，同心協力，協議，協定，協商，協辦，協調，協會，協奏曲\n巹\tgan2\t合巹，巹席，巹筵，合巹酒古時行婚禮所用的酒杯。孔穎達《禮記正義》：「巹謂半瓢，以一瓢分為兩瓢，謂之巹……」\n卹\tseot1\t撫卹，體卹，振窮卹貧，旌卹，卹金\n卻\tkoek3\t卻之不恭，冷卻，望而卻步，退卻，忘卻，卻病延年\n厙\tse3\t(1)姓氏；(2)同「庫」字\n厤\tlik6\t(1)同「歷」字；(2)同「曆」字\n厴\tjim2\t(1)蟹腹下的薄殼；(2)螺類介殼口的圓片狀蓋\n厭\tjim1\t厭厭(安靜的樣子)\n厭\tjim3\t厭世，厭恨，厭食，厭倦，厭棄，厭惡，厭煩，討厭，厭舊貪新，貪得無厭，學而不厭\n厲\tlaai3\t「厲laai6」的異讀字\n厲\tlaai6\t同「癘」字\n厲\tlai6\t厲害，厲行，嚴厲，正言厲色\n參\tcaam1\t參加，參考，參差不齊，參半，參天，參觀，參謁，參互，參見，參事，參政，參酌，參照，參謀，參賽，參贊，參議\n參\tsaam1\t同「三」字\n參\tcam1\t「參caam1」的異讀字\n參\tsam1\t參商(參、商均星名，分居於西與東方)，人參，月沒參橫，海參，曾參殺人\n叢\tcung4\t叢生，叢林，叢書，叢聚，叢刊，樹叢\n呂\tleoi5\t律呂\n吳\tng4\t吳下阿蒙，吳牛喘月，吳宮教陣，吳市吹簫姓氏\n唚\tcam3\t胡唚，混唚\n啟\tkai2\t啟用，啟程，啟發，啟示，啟動，啟事，啟航，啟蒙，啟開，啟齒，啟口，啟封\n問\tman6\t問題，問卷調查，問卷，問世，問到，問候，問津，問道，問好，問鼎，問心無愧，問話，問答，問起，問號，問出，問訊，問案，問安，問答題，問罪，問倒，問斬，問心，問供，問上，問住\n喲\tjo1\t助詞\n喬\tkiu4\t喬木，喬遷，喬裝打扮，喬梓\n喚\twun6\t喚起，喚醒，呼喚\n嗇\tsik1\t嗇夫，吝嗇，嗇己奉公\n嗩\tso2\t嗩吶\n嗚\twu1\t嗚呼，嗚呼哀哉，嗚咽，嗚嗚的\n嗶\tbat1\t嗶啁\n嘓\tgwok3\t嚥下食物聲\n嗹\tlin4\t嗹嘍\n嘜\tmak1\t英語mark的譯音，貨物包裝上用以辨識一批貨物不同於另一批貨物的標記\n嘗\tsoeng4\t嘗試，嘗到\n噚\tcam4\t英美制計水深單位，fathom之譯音，合六英尺\n嘰\tgei1\t嘰嘰喳喳\n噓\theoi1\t噓聲，噓唏，噓寒問暖\n嘵\thiu1\t嘵舌，嘵咋\n嘺\tkiu4\t不知是誰\n嘳\tkwaai3\t(1)同「喟」字；(2)譏諷；(3)哀憐\n嘪\tmaai5\t羊叫聲\n噅\tfai1\t(1)口部長得斜歪難看；(2)譏誚\n噠\tdaat6\t咯噠，巴噠著嘴\n噹\tdong1\t噹啷，叮噹，響噹噹，噹啷落地，叮噹作響，叮叮噹噹\n噲\tfaai3\t(1)吞咽；(2)動物的嘴；(3)通「快」字；(4)姓氏\n噥\tnung4\t咕噥，嘟嘟噥噥\n嚀\tning4\t叮嚀(囑咐)，嚶嚀\n嚐\tsoeng4\t嚐試，嚐到\n嚌\tzai6\t嚐食、嚐滋味\n嚕\tlou1\t嚕囌，嘰哩咕嚕\n嚥\tjin3\t狼吞虎嚥，嚥氣\n嚲\tdo2\t垂下\n嚴\tjim4\t嚴重，嚴格，嚴厲，嚴密，嚴謹，嚴肅，嚴寒\n嚶\tjing1\t嚶嚀，嚘嚶，嚶鳴求友\n嚨\tlung4\t喉嚨\n嚽\tzyut3\t同「啜」字\n囃\tzaa3\t囃呼(即咋呼，口快話多)\n囈\tngai6\t囈語，夢囈\n囌\tsou1\t嚕囌\n囑\tzuk1\t囑咐，遺囑，千叮萬囑，囑託\n吒\tzaa1\t哪吒(神話人物)\n吒\tzaa3\t叱吒，悲吒\n員\twan4\t增益\n員\twan6\t姓氏\n員\tjyun4\t員工，成員，員外，幅員，會員，演員，團員\n唸\tnim6\t唸書，唸唸有詞，唸經，唸誦\n唸\tdin6\t呻吟\n喪\tsong1\t喪事，喪服，喪葬，喪儀，喪禮，治喪，哭喪\n喪\tsong3\t喪生，喪失，喪志，喪命，喪氣，喪心病狂，喪家之犬，喪盡天良，喪權辱國，頹喪\n嗆\tcoeng1\t嗆咳\n嗆\tcoeng3\t油煙或辣味觸鼻，以致感到難受\n嗊\tgung3\t嗊吥\n嗊\thung2\t嗊嘴，羅嗊曲\n嘍\tlau1\t語助詞\n嘍\tlau4\t嘍囉\n嘯\tcik1\t通「叱」字\n嘯\tsiu3\t呼嘯，嘯傲\n嚇\thaak1\t感嘆詞\n嚇\thaak3\t嚇人，嚇阻，嚇唬，恫嚇，威嚇，恐嚇\n嚮\thoeng2\t同「享」字\n嚮\thoeng3\t嚮導，嚮往，嚮明而治，嚮晦，嚮慕，嚮用\n囂\thiu1\t囂張，喧囂\n囂\tngou4\t同「隞」字\n囉\tlo1\t囉唆\n囉\tlo3\t粵語助詞\n囉\tlo4\t嘍囉\n啢\tloeng2\t英兩，也譯作「盎斯」\n啢\tloeng5\t「啢loeng2」的異讀字\n喫\tjaak3\t喫飯\n喫\that1\t「喫jaak1」的異讀字\n喫\thek3\t「喫jaak3」的異讀字\n嘆\ttaan1\t「嘆taan3」的異讀字\n嘆\ttaan3\t嘆息，嘆氣，嘆服，嗟嘆，感嘆，嘆為觀止\n嘖\tzaak3\t嘖言，嘖聲，嘖嘖稱奇\n嘖\tzaak6\t「嘖zaak3」的異讀字\n嘖\tzik1\t「嘖zaak3」的異讀字\n噴\tfan5\t「噴pan3」的異讀字\n噴\tpan1\t「噴pan3」的異讀字\n噴\tpan3\t噴泉，噴雲吐霧，噴薄欲出，含血噴人\n嘩\tfaa1\t「嘩waa1」的異讀字\n嘩\twaa1\t(1)象聲詞；(2)同「譁」字\n嘩\twaa4\t「嘩waa1」的異讀字\n嘩\tjip6\t「嘩waa1」的異讀字\n嘮\tlou4\t嘮叨\n嘮\tlou6\t「嘮lou6」的異讀字\n噁\tok3\t噁心\n噁\tngok3\t「噁ok3」的異讀字\n噁\twu3\t「噁ok3」的異讀字\n噸\tdeon1\t重量單位\n噸\tdeon6\t「噸deon1」的異讀字\n噞\tjim1\t「噞jim2」的異讀字\n噞\tjim2\t噞喁\n嚙\tngaat6\t「嚙ngit6」的異讀字\n嚙\tjit6\t「嚙ngit6」的異讀字\n嚙\tngit6\t同「齧」字\n嚦\tlik1\t「嚦lik6」的異讀字\n嚦\tlik6\t嚦嚦，嘹嚦\n嚳\tguk1\t傳說中的上古帝王，為五帝之一的高辛氏\n嚳\tkuk1\t「嚳guk1」的異讀字\n囁\tjip6\t「囁zip3」的異讀字\n囁\tzip3\t囁嚅\n囀\tzyun2\t鳥叫聲\n囀\tzyun3\t「囀zyun2」的異讀字\n囅\tcin2\t囅然\n囅\tzin2\t「囅cin2」的異讀字\n吶\tnaap6\t吶喊，嗩吶\n吶\tnat6\t「吶neot6」的異讀字\n吶\tneot6\t同「訥」字\n咼\tkwaa1\t「咼waa1」的異讀字\n咼\twaa1\t咼斜(嘴歪斜不正)\n咼\tgwo1\t姓氏\n咼\two4\t同「和」字\n唄\tbaa6\t「唄bui6」的異讀字\n唄\tbaai6\t唄唱，唄讚，梵唄，讚唄在印度，唄泛指詠經或唱讚，在中國則只指唱讚。\n唄\tbui6\t語氣詞\n啞\taa1\t咿啞\n啞\taa2\t啞巴，啞謎，啞口無言\n啞\tngaa2\t「啞aa2」的異讀字\n啞\tak1\t啞啞，啞然而笑\n啞\tngak1\t「啞ak1」的異讀字\n單\tdaan1\t單一，單方，單元，單身，單弦，單純，單獨，單據，單薄，單刀直入，單刀赴會，單槍匹馬，孤單，簡單\n單\tsim4\t「單sin4」的異讀字\n單\tsin4\t單于\n單\tsin6\t(1)姓氏；(2)縣名\n喎\tkwaa1\t「喎waa1」的異讀字\n喎\twaa1\t同「咼」字\n喎\two3\t粵語用字，語氣詞\n喎\two5\t粵語用字，語氣詞\n嗎\tmaa1\t助詞，表示疑問\n嗎\tmaa3\t「嗎maa1」的異讀字\n嗎\tmaa4\t方言用字\n嗎\tmaa5\t嗎啡\n嘔\tau1\t同「謳」字\n嘔\tau2\t嘔吐，作嘔，嘔心瀝血，嘔氣，乾嘔\n嘔\tngau1\t「嘔au1」的異讀字\n嘔\tngau2\t「嘔au2」的異讀字\n嘔\theoi1\t嘔咐(愛養)，嘔喻(和悅的樣子)\n嘽\ttaan1\t嘽緩，嘽嘽\n嘽\tcin2\t寬舒聲\n嘽\tzin2\t「嘽cin2」的異讀字\n嘸\tm4\t方言用字，意謂「沒有」\n嘸\tmou5\t(1)驚愕；(2)「嘸m4」的異讀字\n嘸\tfu2\t懵然\n噦\twai3\t噦噦輕緩有節的鳥叫聲\n噦\tjyut3\t「噦jyut6」的異讀字\n噦\tjyut6\t乾噦胃氣不順而打嗝\n噯\taai1\t嘆詞\n噯\toi2\t噯氣\n噯\toi3\t「噯oi2」的異讀字\n噯\tngoi2\t「噯oi2」的異讀字\n噯\tngoi3\t「噯oi2」的異讀字\n國\tgwok3\t國家，國貨，國際，國術，國文，國王，國父，國手，國會，國策，國產，國籍，國語，祖國，盟國，叛國，愛國，國計民生\n圇\tleon4\t囫圇吞棗\n圍\twai4\t圍牆，圍觀，圍堵，圍繞，圍巾，圍裙，外圍，入圍\n圓\tjyun4\t圓滿，圓形，圓桌，圓滑，圓筒\n園\tjyun4\t園地，園藝，園林，園丁，園圃，花園，校園\n圖\ttou4\t圖書，圖片，圖形，貪圖，地圖\n團\ttyun4\t團體，團結，團聚\n圞\tlyun4\t團圞\n囪\tcoeng1\t同「窗」字\n囪\tcung1\t煙囪(即煙筒)\n囪\ttung1\t「囪cung1」的異讀字，口語讀音\n埰\tcoi3\t埰地\n堅\tgin1\t堅固，堅強，堅定不移，堅持，堅決，堅守，堅信，堅實，堅拒，堅挺，堅硬，堅貞，堅韌，堅忍，堅壁清野，堅牢，堅苦卓絕，堅苦，堅厚，堅果\n堐\tngaai4\t同「堐」字\n執\tzap1\t執行，執政，執法，執意，執業，執著，執紼，執掌，執迷不悟，各執一詞，固執己見，父執\n埬\tdung1\t上埬(地名)\n報\tbou3\t報紙，海報，以德報怨，報告，報導，報銷，業報，報答，果報，善有善報，怨怨相報，精忠報國\n場\tcoeng4\t場所，場面，場地，場合，場景，場子，場記，場規\n堯\tjiu4\t堯舜，堯年，堯齡\n塚\tcung2\t貝塚，墳塚，疑塚，孤墳野塚；(1)墳墓；(2)同「冢」字\n塊\tfaai3\t塊頭，塊莖，塊根，方塊，壘塊\n塏\thoi2\t爽塏\n塋\tjing4\t塋地，祖塋，墳塋\n塒\tsi4\t在牆上鑿的雞窩\n塵\tcan4\t塵土，塵囂，塵埃，塵封，塵世，塵事，塵垢，塵緣，塵俗，風塵，紅塵\n塹\tcim3\t塹壕，天塹(天險)，欲塹，地塹(地質學上斷層引致的狹長的低地)；(1)坑、壕溝；(2)險阻的地形；(3)喻困難\n墜\tzeoi6\t天花亂墜，墜落，耳墜子，下墜，墜毀，墜機，墜地，搖搖欲墜\n墾\than2\t開墾，墾闢，墾荒，墾地，墾殖，墾丁，墾民，屯墾，耕墾\n壈\tlam5\t坎壈\n壇\ttaan4\t花壇，祭壇，講壇，神壇，藝壇\n壚\tlou4\t壚土，當壚賣酒\n壟\tlung5\t壟斷，田壟\n壞\twaai6\t壞人，壞事，壞處，壞死，壞話，壞蛋，敗壞，破壞\n壣\tleon4\t菜畦\n壩\tbaa3\t壩子，堤壩，水壩\n塿\tlau4\t墳頭\n塿\tlau5\t培塿(小土山)\n墮\tfai1\t同「隳」字\n墮\tdo6\t墮馬，墮胎，呱呱墮地，墮落\n墳\tfan4\t墳墓，墳籍\n墳\tfan5\t肥土\n壘\tleoi5\t壘球，堡壘，兩軍對壘，壘牆，壘塊，壘壩，深溝高壘\n壘\tleot6\t神荼鬱壘\n垵\tam1\t播種時挖的小坑\n垵\tam2\t「垵am1」的異讀字\n埡\taa3\t黃角埡\n埡\tngaa3\t「埡aa3」的異讀字\n堊\tok3\t白堊，堊帚\n堊\tngok3\t「堊ok3」的異讀字\n堝\tgwo1\t「堝wo1」的異讀字\n堝\two1\t坩堝\n塤\tfan1\t「塤hyun1」的異讀字\n塤\thyun1\t同「壎」字\n塗\tcaa4\t「塗tou4」的異讀字\n塗\ttou4\t塗料，塗抹，塗改，塗鴉，塗上，塗掉，塗潭\n塢\tou3\t「塢wu2」的異讀字，用於「船塢」一詞\n塢\twu2\t花塢，山塢，船塢\n壓\taat3\t壓力，壓迫，壓制，壓抑，壓倒，壓陣，欺壓，氣壓\n壓\tngaat3\t「壓aat3」的異讀字\n壎\tfan1\t「壎hyun1」的異讀字\n壎\thyun1\t壎箎相和，頌壎，伯壎仲篪\n壙\tkong3\t「壙kwong3」的異讀字\n壙\tkwong3\t壙埌，壙遠\n壢\tlek6\t「壢lik6」的異讀字\n壢\tlik6\t中壢(臺灣地名)\n墊\tdim3\t「墊din3」的異讀字，用於「昏墊」一詞\n墊\tdin2\t「墊din3」的異讀字，用於「鞋墊」、「草墊」等詞\n墊\tdin3\t墊付，鋪墊，鞋墊，墊款，墊底，墊沒，墊腳石，草墊，昏墊(溺陷，見《書經》)\n墊\tdin6\t「墊din3」的異讀字，用於「墊款」、「墊支」等詞\n墊\tzin3\t「墊din3」的異讀字，用於「鞋墊」、「草墊」等詞\n墊\tdip6\t墊江(四川省舊縣名)\n壺\twu4\t茶壺，銅壺滴漏，壺天日月\n壼\tkwan2\t壼闈，內壼，壼範\n壽\tsau6\t壽命，壽星，壽辰，壽終正寢\n壯\tzong1\t姓氏\n壯\tzong3\t壯觀，壯大，壯年，壯圍，壯麗，壯碩，壯士，壯烈，壯舉，壯盛，壯丁，壯膽，壯實，壯健，壯志凌雲\n壯\tzong6\t壯族\n夠\tgau3\t足夠，受夠，夠數，能夠\n夥\tfo2\t夥伴，合夥，夥計，夥眾\n夢\tmung4\t夢雨\n夢\tmung6\t夢想，夢話，夢寐以求\n奐\twun6\t奐然，美輪美奐\n奪\tdyut6\t奪取，定奪，光彩奪目，奪標，奪魁，奪回，奪門，攫奪，掠奪，搶奪，褫奪，剝奪，奪眶而出，巧取豪奪，橫刀奪愛，巧奪天工，強詞奪理，喧賓奪主，先聲奪人，爭分奪秒\n奩\tlim4\t妝奩，奩敬\n獎\tzoeng2\t獎勵，褒獎，獎券，獎品，獎學金，獎章，獎狀，獎助，獎賞，獎盃\n夾\tgaap3\t夾雜，夾擊，夾帶私逃，文件夾，夾攻，夾注，夾棍\n夾\tgap3\t「夾gaap3」的異讀字\n夾\tgep6\t「夾gaap3」的異讀字\n夾\tgip6\t「夾gaap3」的異讀字\n奮\tfan3\t「奮fan5」的異讀字\n奮\tfan5\t奮鬥，振奮，奮發圖強，奮不顧身，興奮，自告奮勇\n奧\tou2\t通「燠」字\n奧\tou3\t奧妙，深奧\n奧\tngou3\t「奧ou3」的異讀字\n奧\tjuk1\t同「澳」字\n妝\tzong1\t妝扮，化妝，梳妝\n姦\tgaan1\t姦淫，通姦，姦情，姦污\n娛\tjyu4\t娛樂，娛賓，娛悅，自娛，歡娛\n婦\tfu5\t婦女，婦人，婦女會，婦產科，婦聯會，婦聯，婦孺，婦女節，婦科，婦聯總會，婦幼醫院，婦女運動，婦道人家，婦女雜誌，婦幼衛生，婦人之仁，婦道，婦德\n媯\tgwai1\t河北省河流名\n媰\tco4\t婦女懷孕\n嬌\tgiu1\t嬌柔，百媚千嬌，嬌生慣養，嬌滴滴，嬌妻，嬌艷，嬌嫩，嬌客，嬌憨，嬌媚，嬌豔，嬌小玲瓏\n嫻\thaan4\t同「\n嬃\tseoi1\t古楚國人對姊姊的稱呼\n嫿\twaak6\t姽嫿\n嬙\tcoeng4\t嬙媛，妃嬙\n嬰\tjing1\t嬰兒，棄嬰，棄璧負嬰，連體嬰\n嬦\tcau4\t女子人名用字\n嬣\tning4\t姘嬣(女劣貌，一說女子姿態舒緩)\n嬸\tsam2\t嬸母，大嬸，嬸娘\n孃\tnoeng4\t耶孃，舞孃\n孇\tsoeng1\t女子人名用字\n孋\tlei4\t(1)古國名；(2)同「儷」字；(3)姓氏\n姍\tsaan1\t姍笑，姍姍來遲\n姍\tsin1\t便姍\n婁\tlau4\t星名，二十八宿之一\n婁\tleoi4\t(1)拉；(2)牽\n嫋\tniu1\t細而長\n嫋\tniu5\t嫋娜，嫋嫋\n嬈\tjiu4\t嬌嬈，妖嬈\n嬈\tjiu5\t煩擾\n奼\tcaa3\t奼女，奼紫嫣紅\n奼\tzaa3\t「奼zaa3」的異讀字\n婭\taa3\t姻婭，婭婿\n婭\tngaa3\t「婭aa3」的異讀字\n媧\tgwaa1\t「媧wo1」的異讀字\n媧\two1\t女媧，女媧補天\n媼\tou2\t老媼，媼神，富媼\n媼\tngou2\t「媼ou2」的異讀字\n嫗\tjyu2\t老婦\n嫗\tjyu3\t「嫗jyu2」的異讀字\n嫵\tmou4\t「嫵mou5」的異讀字\n嫵\tmou5\t嫵媚\n嬋\tsim4\t嬋娟(形容月色明媢或人姿態嫋娜)\n嬋\tsin4\t「嬋sim4」的異讀字\n嬇\tfaai3\t「嬇kui2」的異讀字\n嬇\tkui2\t女子人名用字\n嬡\toi3\t令嬡\n嬡\tngoi3\t「嬡oi3」的異讀字\n嬪\tban3\t「嬪pan4」的異讀字\n嬪\tpan4\t嬪從，嬪御，嬪婦，嬪儷，妃嬪\n嬤\tmaa1\t嬤嬤，老嬤\n嬤\tmaa4\t「嬤maa1」的異讀字\n嬤\tmo5\t「嬤maa1」的異讀字\n孌\tlyun2\t「孌lyun5」的異讀字\n孌\tlyun5\t相貌美\n媽\tmaa1\t媽媽，姑媽，姨媽\n媽\tmaa2\t粵語用字，指女僕\n媽\tmaa4\t粵語用字，指祖母\n媽\tmaa5\t媽祖，媽祖廟「媽maa1」的異讀字\n學\thok6\t學生，學校，學者，學習，學歷，學子，學業，學位，學問，學理，學養，學究，學員\n孫\tseon3\t通「遜」字\n孫\tsyun1\t子孫，孫子，祖孫\n孿\tlyun4\t孿生，孿生兄弟雙胞胎\n孿\tsyun3\t「孿lyun4」的異讀字\n宮\tgung1\t宮廷，宮殿，宮女，宮燈，宮闈，宮闕，宮庭，宮扇，宮門，迷宮，冷宮\n寢\tcam2\t寢室，寢具，寢食不安，就寢\n實\tsat6\t實踐，實施，實際，實心任事，實現，實業，實習，實惠，實物，實效，實證，實幹，實驗室，貨真價實，實錄，實業家，現實，果實，實至名歸，荷槍實彈，華而不實，實事求是，虛實，寨\tzaai6\t寨子，山寨，營寨\n寬\tfun1\t寬闊，寬恕，寬大，寬鬆，寬裕，寬宏大量；(1)大；(2)廣；(3)不緊；(4)不嚴苛\n審\tsam2\t審慎，公審，審時度勢，陪審團，審判，審定，審核，精審\n寫\tse2\t寫作，描寫，輕描淡寫，寫生，寫實，寫真，寫照，寫意，書寫\n寵\tcung2\t寵物，寵愛，寵兒，寵信，寵幸，納寵(納妾)；(1)溺愛；(2)恩惠；(3)偏好；(4)妾\n寶\tbou2\t寶座，寶貴，寶石，寶玉，寶劍，寶藏，寶慶，寶地，寶殿，寶物，寶刀未老，寶藍，寶庫，寶典，寶鑑，寶刀，寶位，寶剎\n寠\tlau4\t甌寠\n寠\tgeoi6\t貧寠\n寀\tcoi2\t寮寀\n寀\tcoi3\t「寀coi2」的異讀字\n寧\tning4\t寧靜，寧願，寧謐，寧缺勿濫，安寧\n寧\tning6\t「寧ning4」的異讀字\n專\tzyun1\t專心，專注，專業\n尋\tcam4\t尋找，尋求，尋常，找尋，追尋，尋花問柳，尋人啟事，尋幽探勝\n對\tdeoi3\t對錯，面對，對症下藥，對講機，對簿公堂，對象，對抗，對策，對立，對手，對話，對峙，對付，對比，對質，對照，對聯，對調，對白，對稱，對流，對角，對偶，對牛彈琴\n導\tdou6\t導師，引導，導火線，導航，導致，導演，導向，導遊，導電，導體，導源，導出，導熱，導言，導線，導論，導電性\n將\tcoeng1\t(1)請求；(2)願望\n將\tzoeng1\t將軍，將來，將功贖罪，將計就計\n將\tzoeng3\t將帥，麻將牌，干將莫邪，激將法，將領，點將，兵來將擋，過關斬將，調兵遣將\n尷\tgaam1\t尷尬\n屆\tgaai3\t屆時，屆滿，屆臨，無遠弗屆；(1)到達；(2)定期舉行的活動的計算單位；(3)臚列某種職務或身分的次第單位\n屍\tsi1\t屍體，屍骨，屍首，屍骸\n屜\ttai3\t抽屜\n屢\tleoi5\t屢次，屢試不爽，屢敗屢戰，屢見不鮮；(1)每每；(2)多次\n層\tcang4\t層次，層面，層出不窮，層次分明，層層疊疊\n屨\tgeoi3\t劍及屨及麻鞋\n屩\tgoek3\t草鞋\n屬\tsuk6\t屬於，家屬，神仙眷屬，下屬，隸屬，藩屬，屬性，心有所屬\n屬\tzuk1\t屬意，屬文，前後相屬，屬心，屬望\n屬\tzuk6\t屬鏤\n岡\tgong1\t山岡，岡陵，井岡山，景陽岡\n島\tdou2\t島嶼，孤島，半島\n峴\tjin6\t山小而險\n崗\tgong1\t山崗，崗位，崗哨，崗警，崗亭；(1)同「岡」字；(2)值勤時的處所；(3)比喻職掌或本分\n崙\tleon4\t崙背\n崍\tloi4\t崍山\n嵐\tlaam4\t山嵐，煙嵐，曉嵐\n嶇\tkeoi1\t崎嶇\n嶁\tlau5\t岣嶁\n嵼\tcaan2\t踡嵼(特起的樣子)\n嶔\tjam1\t嶔崟(山勢聳立貌)，嶇嶔，欹嶔歷落(喻人品高潔，有骨氣)\n嶢\tjiu4\t形容高峻\n嶗\tlou4\t嶗山山名\n嶮\thim2\t嶮巇\n嶨\thok6\t嶨口\n嶧\tjik6\t山東省山名\n嶽\tngok6\t山嶽，五嶽，淵渟嶽峙\n巔\tdin1\t巔峰，山巔\n巒\tlyun4\t峰巒，山巒連綿不絕的山峰丘嶺\n嶼\tzeoi6\t島嶼\n嶼\tjyu4\t大嶼山(香港地方名)\n峽\thaap6\t峽谷，海峽\n峽\thap6\t「峽haap6」的異讀字\n崑\tgwan1\t「崑kwan1」的異讀字\n崑\tkwan1\t崑崙，崑曲\n崢\tcaang4\t「崢zaang1」的異讀字\n崢\tzaang1\t崢嶸\n崢\tzang1\t「崢zaang1」的異讀字\n嶴\tou3\t山間平地\n嶴\tngou3\t「嶴ou3」的異讀字\n嶸\twang4\t「嶸wing4」的異讀字\n嶸\tjing4\t「嶸wing4」的異讀字\n嶸\twing4\t崢嶸，崢嶸歲月，山勢崢嶸\n嶺\tleng5\t「嶺ling5」的異讀字\n嶺\tling5\t嶺南，山嶺，五嶺，崇山峻嶺\n巋\tkwai1\t巋然獨存\n巋\tkwai2\t「巋kwai1」的異讀字\n巖\tngaam4\t巖石，巖洞，熔巖\n巖\tjim4\t「巖ngaan4」的異讀字\n嶄\tcaam4\t嶄巖\n嶄\tcaam5\t「嶄zaam2」的異讀字\n嶄\tzaam2\t嶄新，嶄露頭角\n嶄\tzaam3\t「嶄zaam2」的異讀字\n嶠\tgiu2\t「嶠giu6」的異讀字\n嶠\tgiu6\t山道\n嶠\tkiu4\t山尖而高\n巰\tkau4\t一種有機化合物，符號SH\n師\tsi1\t師生，師大，師傅，師資，師院，師父，師範\n帶\tdaai3\t帶領，佩帶，披星帶月，皮帶，鞋帶，地帶，熱帶雨林，面帶笑容，帶領，帶路，白帶病，帶壞，帶傷，披麻帶孝，帶髮修行\n帳\tzoeng3\t帳戶，帳目，帳號，帳簿，結帳\n幃\twai4\t幃幔，幃帳，羅幃\n幀\tzing3\t裝幀，橫幀\n幣\tbai6\t幣值，硬幣，輔幣，貨幣\n幗\tgwok3\t巾幗英雄\n幟\tci3\t標幟，幡幟，旗幟，易幟，獨樹一幟；(1)旌旗；(2)標記\n幩\tfan4\t馬御兩旁的綢條飾物\n幫\tbong1\t幫助，幫忙，幫派，幫手，幫會，幫兇，幫腔\n帥\tseoi3\t帥印，主帥，元帥，將帥\n帥\tseot1\t同「率」字\n幘\tzaak3\t「幘zik1」的異讀字\n幘\tzik1\t古代的一種頭巾\n幬\tcau4\t(1)床帳；(2)車帷\n幬\tdou6\t覆蓋\n幬\ttou4\t「幬dou6」的異讀字\n幹\tgon3\t幹部，幹了，主幹，才幹\n幹\thon4\t(1)井欄；(2)井垣\n幾\tgei1\t幾乎，庶幾，幾微\n幾\tgei2\t幾多，幾何，寥寥無幾，幾許\n廄\tgau3\t馬廄\n廂\tsoeng1\t廂房，包廂\n廈\thaa6\t廈門，大廈\n廕\tjam3\t廕庇，封妻廕子\n廎\tking2\t小廳堂\n廠\tcong2\t工廠，紗廠，廠家\n廢\tfai3\t廢除，廢棄，廢料，廢氣，廢紙，廢墟，廢寢忘食\n廣\tgwong2\t廣闊，推廣，大庭廣眾，廣袤，廣泛，廣告，廣場，廣播，廣漠，廣義，廣博，寬廣，廣開言路，廣結善緣\n廟\tmiu6\t廟宇，廟堂，廟祝，寺廟\n廡\tmou5\t正房對面和兩側的小屋子\n廝\tsi1\t廝殺，廝混，廝守，廝打，小廝\n廧\tcoeng4\t廧崒\n廩\tlam5\t廩生，倉廩\n廬\tlou4\t廬山真面，初出茅廬，三顧草廬\n庫\tse3\t同「厙」字，姓氏\n庫\tfu3\t庫房，庫存量，倉庫，庫藏，庫倫，庫頁島\n廚\tceoi4\t廚房，廚師，入廚，大廚，下廚\n廚\tcyu1\t「廚ceoi4」的異讀字\n廚\tcyu4\t「廚ceoi4」的異讀字\n廳\tteng1\t廳房，廳堂，客廳\n廳\tting1\t「廳teng1」的異讀字\n廁\tcak1\t廁足\n廁\tzak1\t「廁cak1」的異讀字\n廁\tci3\t廁身，廁所，公廁，雜廁\n弒\tsi3\t弒君，篡弒，弒父\n弳\tging3\t弧度\n彆\tbit3\t彆扭\n彎\twaan1\t彎曲，轉彎，彎路，彎弓\n張\tzoeng1\t張力，張本，張目，張狂，張揚，張羅，張口結舌，張牙舞爪，張冠李戴，張皇失措，開張，慌張，鋪張\n張\tzoeng3\t(1)同「帳」字；(2)同「脹」字\n彈\tdaan2\t粵語用字\n彈\tdaan6\t彈弓，子彈，動彈不得，炸彈，槍彈\n彈\ttaan4\t彈劾，彈指，彈奏，彈射，彈琴，彈詞，彈壓，彈冠相慶，評彈\n弔\tdik1\t「弔diu3」的異讀字\n弔\tdiu3\t弔唁，憑弔\n彌\tmei4\t彌月，彌留，彌撒，彌天大罪，彌天大謊，彌天蓋地，沙彌\n彌\tnei4\t「彌mei4」的異讀字\n強\tgoeng6\t倔強\n強\tkoeng3\t「強goeng6」的異讀字\n強\tkoeng4\t強硬，富強，強弩之末，強人，強大，強化，強攻，強者，強固，強勁，強烈，強盜，強盛，強項，強調，強權\n強\tkoeng5\t強求，勉強，強顏歡笑，強迫，強辯，強出頭，強人所難，強詞奪理\n彔\tluk6\t同「錄」字\n彙\twai6\t彙集，彙編，詞彙，語彙；(1)聚集；(2)聚眾而成的集合\n彙\twui6\t「彙wai6」的異讀字\n彥\tjin6\t俊彥，碩彥名儒\n彫\tdiu1\t(1)繪飾；(2)通「凋」字；(3)同「雕」字\n彫\ttiu1\t「彫diu1」的異讀字\n彿\tfat1\t彷彿\n後\thau6\t後來，後悔，後勁，後代，後世，後進，後備，後起之秀，後悔莫及，後埔，後裔，後繼無力，後患無窮，後生可畏\n徑\tging3\t途徑，半徑，田徑比賽，大相徑庭，曲徑通幽\n徹\tcit3\t徹底，徹查，徹夜，徹頭徹尾\n徿\tlung5\t直行\n徠\tloi4\t招徠\n徠\tloi6\t慰勞\n復\tfau6\t日復一日，復還，復來\n復\tfuk1\t同「覆」字\n復\tfuk6\t復甦，恢復，克己復禮，復活，復古，復辟，復興，復國，復職，復讎，復出，復元，回復，報復，失而復得，反清復明\n徵\tzi2\t徵調，變徵，雜以流徵宮、商、角、徵、羽合稱中國古代「五音」\n徵\tcing4\t同「懲」字\n徵\tzing1\t徵召，象徵，特徵，徵文，徵引，徵兆，徵收，徵兵，徵求，徵見，徵信，徵候，徵集，徵象，徵聘，徵詢，徵募，徵調，徵購\n從\tcung1\t「從sung1」的異讀字，用於「從容」一詞\n從\tcung4\t從事，從軍，從速，從屬，從一而終，從中作梗，從令如流，從長計議，從善如流，跟從，隨從\n從\tsung1\t從容，從然，從頌\n從\tzung1\t(1)同「縱」字；(2)同「蹤」字\n從\tzung3\t「從zung1」的異讀字，用於「從橫」一詞\n從\tzung6\t從兄弟(即堂兄弟)，從三品(古官位)\n恥\tci2\t恥辱，恥笑，羞恥\n悅\tjyut6\t悅耳，悅目\n悽\tcai1\t悽慘，悽厲，悽苦，悽然，悽愴，悽悽，悽涼\n悶\tmun6\t悶熱，悶氣，悶悶不樂，悶聲不響，悶死，悶著，悶酒，悶葫蘆\n惱\tnou5\t惱怒，憂惱，惱懆\n愷\thoi2\t愷悌，愷切，爽愷和樂友善\n慄\tleot6\t戰慄，不寒而慄\n慘\tcaam2\t慘劇，慘遭，慘重，慘案，慘痛，慘跌，慘不忍睹，慘死，慘烈，慘狀，慘敗，慘澹經營，慘淡，慘白，慘絕人寰，慘叫，慘澹，慘兮兮，慘酷，慘無人道\n慚\tcaam4\t慚愧，慚怍，慚德，大言不慚\n慟\tdung6\t慟哭，哀慟，悲慟\n慣\tgwaan3\t慣例，習慣，嬌生慣養，慣性，慣常，慣壞\n慳\thaan1\t慳吝，緣慳一面，大破慳囊，粉吝紅慳(喻少近女色)；(1)吝嗇；(2)阻礙；(3)欠缺\n愨\tkok3\t愨士，忠愨\n態\ttaai3\t態度，世態炎涼，故態復萌，形態，姿態，窘態，事態，狀態，變態，老態龍鍾，神態自若，生態平衡，惺惺作態\n慼\tcik1\t憂慼，慘慼\n憚\tdaan6\t怕\n憤\tfan5\t憤怒，憤慨，憤恨，憤憤不平，憤懣，憤世嫉俗，公憤\n憂\tjau1\t憂慮，憂心，憂鬱，憂傷，憂愁，憂憤，憂思，憂心忡忡，憂患意識，憂國憂民，擔憂\n慾\tjuk6\t慾火，情慾，利慾薰心，慾望，慾念，食慾，慾海，慾令智昏\n憐\tlin4\t憐憫，憐愛，憐才，可憐\n憫\tman5\t憐憫，悲憫，垂憫，其情可憫，悲天憫人；(1)憐恤；(2)憂傷\n憮\tmou5\t憮然\n慫\tsung2\t慫恿\n憸\tcim1\t憸佞，憸邪，憸人\n憲\thin3\t憲法，憲政，憲章，立憲\n憶\tjik1\t回憶，記憶，追憶，憶舊，憶測\n懌\tjik6\t懌懷，悅懌，不懌，闓懌喜悅\n懍\tlam5\t危懼\n懇\than2\t懇求，誠懇，情詞懇切，懇請，懇談，懇託，懇辭，懇摯，勤懇\n懨\tjim1\t悶懨懨，病懨懨，懨懨欲睡，懨煎\n懞\tmung5\t同「懵」字\n懲\tcing4\t懲治，懲罰，懲處，懲戒，懲辦\n懶\tlaan5\t懶惰，偷懶，懶洋洋，懶散，懶人，懶骨頭\n懷\twaai4\t懷疑，懷孕，懷念，懷抱，懷恨，懷舊，情懷，胸懷，懷璧其罪，懷才不遇\n懸\tjyun4\t懸掛，懸疑，懸崖勒馬，懸殊，懸案，懸浮，懸賞，懸崖，懸吊，懸空，懸腕，懸而未決，懸壺濟世\n愾\thei3\t嘆息\n愾\tkoi3\t敵愾同仇\n慶\thing3\t慶賀，喜慶，慶功宴，慶祝，慶典，慶幸，慶祝會，慶功，慶城\n慶\tgoeng1\t發語辭，同「羌」字\n慮\tleoi6\t顧慮，考慮，深謀遠慮，疑慮，思慮\n慮\tlou4\t漢代縣名\n慮\tluk6\t同「錄」字\n應\tjing1\t應分，應該，應然，應有盡有，理應\n應\tjing3\t應付，應用，應對，應卯，應承，應景，應酬，應徵，應變，應驗，應付自如，應接不暇，應運而生，回應，答應，適應，感應\n悵\tcoeng3\t悵恨，悵望，悵悵，悵惘，悵然若失，惆悵\n悵\tzoeng3\t「悵coeng3」的異讀字\n惻\tcaak1\t「惻cak1」的異讀字\n惻\tcak1\t惻怛，惻惻，惻然，惻隱，淒惻\n愜\thip3\t愜心，愜意，愜當，愜懷合適、滿足\n愜\thip6\t「愜hip3」的異讀字\n惲\twan2\t「惲wan6」的異讀字\n惲\twan6\t(1)姓氏；(2)渾厚；(3)籌劃\n愴\tcong2\t「愴cong3」的異讀字，用於「愴怳」一詞\n愴\tcong3\t悲愴，悽愴，愴然淚下，愴怳\n愛\toi3\t愛心，愛情，愛護，愛惜，博愛，熱愛，偏愛，疼愛\n愛\tngoi3\t「愛oi3」的異讀字\n慍\twan2\t「慍wan3」的異讀字\n慍\twan3\t慍怒，慍恨，面有慍色\n慪\tau1\t吝惜\n慪\tau3\t「慪au1」的異讀字\n慪\tngau1\t「慪au1」的異讀字\n憒\tkui2\t憒亂，昏憒\n憒\tkui3\t「憒kui2」的異讀字\n憊\tbaai6\t憊乏，憊色，困憊，疲憊，昏憊極度疲乏\n憊\tbei6\t「憊baai6」的異讀字\n憑\tbang6\t「憑pang4」的異讀字\n憑\tpang4\t憑心，憑空，憑信，憑借，憑據，憑空杜撰，憑高望遠\n懟\tdeoi6\t懟怒，怨懟，慍懟，讎懟，忿懟，恚懟，力盡則懟(穀梁傳)怨恨、埋怨\n懟\tzeoi6\t「懟deoi6」的異讀字。顏師古:「懟音直類反」\n懣\tmun5\t「懣mun6」的異讀字\n懣\tmun6\t憤懣，煩懣，中懣之症\n懺\tcaam3\t懺悔，懺禮，懺事，拜懺，水懺；(1)悔悟；(2)佛教僧侶為人祈禱悔過所誦的經文\n懺\tcim3\t「懺caam3」的異讀字\n懼\tgeoi2\t「懼geoi6」的異讀字\n懼\tgeoi6\t恐懼，懼內，懼怕\n懾\tsip3\t懾服，懾風屏跡，威懾，聲懾四海\n懾\tzip3\t「懾sip3」的異讀字\n戀\tlyun2\t戀愛，眷戀\n戀\tlyun5\t「戀lyun2」的異讀字\n戇\tngong6\t「戇zong3」的異讀字\n戇\tzong3\t戇直，愚戇\n恆\tgang1\t「恆gang3」的異讀字\n恆\tgang2\t「恆gang3」的異讀字\n恆\tgang3\t月上弦之貌\n恆\thang4\t恆心，永恆，持之以恆\n惡\tok3\t醜惡，邪惡，惡劣，惡俗，惡化\n惡\tngok3\t「惡ok3」的異讀字\n惡\tfu1\t惡池(山西省河名，又作滹沱)\n惡\twu1\t(1)疑問詞；(2)嘆詞\n惡\twu3\t厭惡，好惡\n戔\tzin1\t戔戔微少\n戩\tzin2\t戩穀，戩滅\n戰\tzin3\t戰爭，戰火，戰鬥，戰局，戰術\n戧\tcoeng1\t(1)逆、不順；(2)意見牴觸、不合\n戧\tcoeng3\t(1)支撐；(2)在器物圖案上填金\n戲\tfai1\t同「麾」字\n戲\thei3\t戲子，戲曲，戲言，戲弄，戲法，戲筆，戲慢，戲劇，戲墨，戲謔，兒戲，遊戲，嬉戲\n戲\tfu1\t於戲\n戶\twu6\t戶籍，門戶，戶外活動，戶口，戶主，戶頭，戶內\n拋\tpaau1\t拋擲，拋棄，拋磚引玉，拋開，拋錨，拋下，拋出，拋空，拋售，拋繡球，拋頭露面\n採\tcoi2\t採取，採用，採購，採行，採訪，採納，採信，採集，採礦，採茶，採下，採擷，採擇，採桑，採伐，採料，採辦\n捲\tgyun2\t捲曲，龍捲風，捲土重來，捲簾，捲袖，捲尺，捲舌，捲軸，捲筒，捲煙，捲髮，席捲，膠捲，捲入漩渦，風捲殘雲\n掄\tleon4\t掄才，掄元\n捱\tngaai4\t捱打，捱苦，捱罵，捱肩擦背\n捨\tse2\t捨棄，捨身，捨命，捨本逐末，捨我其誰，捨己為人，捨生取義\n揮\tfai1\t揮手，揮毫，揮舞，揮霍，揮之不去，指揮\n撝\tfai1\t撝謙\n揀\tgaan2\t揀選，揀去\n揚\tjoeng4\t揚手，宣揚，揚名，讚揚，趾高氣揚\n換\twun6\t換取，替換，變換，交換\n搗\tdou2\t搗毀，搗蛋，搗碎，搗亂，搗衣，搗衣杵，直搗黃龍\n搖\tjiu4\t搖擺，動搖，搖頭晃腦，搖手，搖籃，搖鈴，搖船，搖槳，搖錢樹，搖滾樂，搖曳生姿，搖搖欲墜，搖旗吶喊，搖尾乞憐，風雨飄搖\n損\tsyun2\t損失，損害，損壞，損傷，損毀，損益，損耗，損友\n摜\tgwaan3\t粵語用字，意謂「跌倒」\n摳\tkau1\t(1)提起；(2)挖；(3)掏\n摋\tsaat3\t側手擊\n摶\ttyun4\t(1)盤旋；(2)同「團」字\n撐\tcaang1\t撐竿跳，撐腰，撐傘，撐起，撐場面，撐不下去，撐開，撐下去，撐持，撐住，撐起來\n撫\tfu2\t撫養，安撫，撫今追昔，撫琴，撫恤，撫掌，撫摸，撫慰，撫弄，撫順\n撳\tgam6\t以手按物\n摯\tzi3\t摯友，摯愛，真摯\n據\tgeoi3\t據說，盤據，佔據，據點，證據，收據\n撿\tgim2\t拾取\n擄\tlou5\t擄人勒贖，擄掠，擄獲\n撻\ttaat3\t撻伐，鞭撻\n擇\tzaak6\t擇偶，選擇，擇善固執，擇吉，飢不擇食\n擯\tban3\t擯棄，擯斥，擯黜，擯除，排擯\n擣\tdou2\t同「搗」字\n擊\tgik1\t擊敗，擊中，擊潰，擊倒，擊掌，擊節贊賞\n擱\tgok3\t擱置，擱淺，擱下，耽擱，延擱\n擠\tzai1\t擠塞，排擠，擠眉弄眼，擠壓，擠迫，擠擁，擠兌，擠奶\n擺\tbaai2\t擺布，搖擺，擺架子，擺脫，擺設，擺平，擺放，擺明，擺動，擺開，擺陣，擺攤子\n擽\tlik1\t(1)擊打；(2)衝擊\n攆\tlin5\t攆走，倒攆猴(太極拳招式一)趕走\n攄\tsyu1\t攄懷，攄誠，攄憤，攄情\n擲\tzaak6\t擲地有聲，拋擲，投擲，孤注一擲，一擲千金\n擼\tlou5\t動也\n攙\tcaam1\t攙扶，攙雜，攙話接舌，打攙，攙奪\n攖\tjing1\t難攖其鋒\n攔\tlaan4\t攔截，阻攔，遮攔\n攜\tkwai4\t攜帶，攜手，攜槍，攜眷，攜款，攜幼，攜手同心，攜伴\n攤\ttaan1\t攤位，攤開，攤還，攤子，攤派，書攤\n攪\tgaau2\t攪拌，攪亂，攪動，胡攪\n挩\tseoi3\t擦拭\n挩\ttyut3\t(1)解脫；(2)遺漏；(3)捶打\n摟\tlau1\t摟財，摟錢，摟搜\n摟\tlau4\t牽引\n摟\tlau5\t摟抱\n摻\tcaam1\t同「攙」字\n摻\tsaam1\t摻摻(形容女手纖美)\n摻\tsaam2\t(1)執；(2)操\n摻\tcam3\t摻雜，摻和，漁陽摻撾(鼓曲名)\n撏\tcam4\t撏扯，撏撦，揪撏，撏毛搗鬢，撏綿扯絮\n撏\tcim4\t拔\n撣\tdaan6\t拂塵\n撣\tsin6\t撣族\n撲\tpok3\t撲打，撲粉，撲救，反撲\n撲\tpuk1\t同「仆」字\n擔\tdaam1\t擔任，擔負，擔保，擔待，擔當，擔憂，承擔\n擔\tdaam3\t擔子，重擔\n擋\tdong2\t擋光，擋風，擋駕，擋箭牌，阻擋，抵擋\n擋\tdong3\t摒擋\n擁\tung2\t粵語用字\n擁\tjung2\t擁抱，擁戴，擁擠，擁護，擁遏不通，擁經問疾，蜂擁\n擻\tsau2\t抖擻精神\n擻\tsau3\n攝\tnip6\t安定\n攝\tsip3\t攝影，攝氏，攝政，攝製\n掛\tgwaa3\t掛心，懸掛，牽腸掛肚，掛念，掛慮，掛失，掛名，掛單，掛一漏萬\n掛\tkwaa3\t「掛gwaa3」的異讀字\n捫\tmun1\t「捫mun4」的異讀字\n捫\tmun4\t捫心自問\n掃\tsou2\t「掃sou3」的異讀字\n掃\tsou3\t掃平，掃尾，掃盲，掃射，掃除，掃黃，掃描，掃墓，掃蕩，掃興，掃愁帚，掃眉才子\n摐\tcoeng1\t撞擊\n摐\tcung1\t「摐coeng1」的異讀字\n摑\tgwaak3\t掌摑，摑耳光\n摑\tgwok3\t「摑gwaak3」的異讀字\n摺\tzaap3\t「摺zip3」的異讀字\n摺\tzip3\t摺子，摺扇，摺紙，摺疊，存摺\n撟\tgiu2\t鉗口撟舌，撟捷\n撟\tgiu6\t「撟giu2」的異讀字\n撊\thaan5\t兇猛\n撊\thaan6\t「撊haan5」的異讀字\n撈\tlaau1\t「撈lou4」的異讀字\n撈\tlaau4\t「撈lou4」的異讀字\n撈\tlou1\t「撈lou4」的異讀字，口語用字\n撈\tlou4\t撈魚，撈本，撈漉，撈摸，撈稻草，打撈，大海撈針\n撓\tnaau4\t不撓，阻撓，不屈不撓\n撓\tnaau5\t「撓naau4」的異讀字\n撓\tnaau6\t「撓naau4」的異讀字\n擬\tji4\t「擬ji5」的異讀字\n擬\tji5\t擬訂，模擬，擬人法，草擬，摹擬，虛擬，擬規畫圓\n擷\tgit3\t「擷kit3」的異讀字\n擷\tkit3\t擷芳，擷取，擷華，採擷；(1)以衣衽扱物謂之襭；(2)摘取\n擴\tgwok3\t「擴kwok3」的異讀字\n擴\tkwok3\t擴展，擴建，擴張勢力，擴散，擴充，擴音器\n擴\tkong3\t「擴kwok3」的異讀字\n擴\tkwong3\t「擴kwok3」的異讀字\n擾\tjiu2\t「擾jiu5」的異讀字\n擾\tjiu5\t擾亂，擾攘，干擾，打擾\n攏\tlung4\t「攏lung5」的異讀字\n攏\tlung5\t共攏，拉攏，攏絡，靠攏，輕攏慢撚，談不攏聚集、靠近\n攛\tcyun1\t「攛cyun3」的異讀字\n攛\tcyun3\t攛掇\n攣\tlyun1\t「攣lyun4」的異讀字\n攣\tlyun4\t痙攣，攣縮\n攬\tlaam2\t「攬laam5」的異讀字\n攬\tlaam5\t攬秀，招攬，獨攬大權，攬持，攬轡，包攬，承攬，攬權納賄\n挾\tgaap3\t挾帶(同夾帶)\n挾\thaap6\t「挾hip6」的異讀字\n挾\thip3\t「挾hip6」的異讀字\n挾\thip6\t挾持，要挾，挾恨，挾制，挾勢凌人，挾嫌報復，裹挾\n掗\taa2\t(1)揮動；(2)舀取\n掗\taa3\t掗賈\n掗\tngaa2\t「掗aa2」的異讀字\n掗\tngaa3\t「掗aa3」的異讀字\n掗\tngaa6\t粵語用字\n掙\tzaang1\t「掙zang1」的異讀字\n掙\tzaang6\t掙錢\n掙\tzang1\t掙扎，掙揣，掙脫枷鎖\n搶\tcoeng1\t呼天搶地，搶風，搶水\n搶\tcoeng2\t搶掠，搶購，搶白，搶劫，搶救，搶修，搶奪，搶火，搶水，搶手，搶佔，搶步，搶眼，搶嘴，搶險\n搶\tcong1\t搶攘，攙搶\n搶\tcong2\t「搶coeng1」的異讀字\n搵\tman5\t「搵wan3」的異讀字\n搵\twan2\t粵語用字，意謂「找尋」\n搵\twan3\t(1)揩拭；(2)擦\n撥\tbut3\t「撥but6」的異讀字\n撥\tbut6\t撥火，撥弄，撥開，挑撥，調撥\n撥\tput3\t粵語用字\n撾\tzaa1\t撾鼓罵曹\n撾\tgwo1\t「撾wo1」的異讀字\n撾\two1\t老撾\n擰\tling2\t「擰ning4」的異讀字\n擰\tling6\t「擰ning6」的異讀字\n擰\tning1\t粵語用字\n擰\tning4\t擰手巾，擰眉立目\n擰\tning6\t擰轉，擰性\n攢\tzaan2\t積攢\n攢\tzaan6\t「攢cyun4」的異讀字\n攢\tcyun4\t攢錢，攢湊，怒目攢眉，攢盒，攢宮，攢聚\n攢\tzyun1\t同「鑽」字\n攢\tzyun6\t「攢cyun4」的異讀字\n敗\tbaai6\t敗壞，敗訴，敗北，敗露，敗筆，敗陣，敗仗，敗類，敗落，敗局，敗軍，敗德，失敗\n敓\tdyut6\t同「奪」字\n敘\tzeoi6\t敘述，敘舊，記敘，敘事，敘說，敘別，銓敘\n敵\tdik6\t敵人，敵對，敵意，敵視，敵手，敵愾同仇，夙敵，樹敵\n斃\tbai6\t斃命，擊斃，坐而待斃，作法自斃；(1)死；(2)傾覆\n數\tsok3\t頻數，數見不鮮\n數\tsou2\t數一數二，數落，數典忘祖，不可勝數，數說，數九寒天，數不勝數，數白論黃，數米而炊，數米量柴，數往知來\n數\tsou3\t數目，總數，數學，數字，數列，數據，數額，定數，劫數\n數\tcuk1\t細密\n斂\tlim5\t斂足，斂財，斂跡，收斂，賦斂，暴斂\n斂\tlim6\t「斂lim5」的異讀字\n斕\tlaan4\t斑斕顏色駁雜\n斬\tzaam2\t斬首，斬斷，斬草除根\n斷\tdyun3\t斷定，判斷，獨斷獨行，斷言，斷語，診斷，明斷，斷無此理\n斷\tdyun6\t斷絕，折斷，斷章取義，斷奶，斷交，斷念，斷腸，斷氣，斷送，斷裂，斷崖，斷頭台，斷代史，片斷，買斷，斷斷續續，斷篇殘簡，當機立斷，夢斷黃粱\n斷\ttyun5\t「斷dyun6」的異讀字，口語讀音\n旂\tkei4\t同「旗」字\n於\twu1\t於菟\n於\tjyu1\t於是，由於，聲聞於今\n於\tjyu4\t姓氏\n昇\tsing1\t同「升」字\n時\tsi4\t時間，時代，時機，時刻，時常，時光，時空，時速，時勢，時裝，時事，時尚，不合時宜，風靡一時，廢時失事\n晉\tzeon3\t晉見，晉級\n晝\tzau3\t晝夜，晝分，晝伏夜出，晝日\n暉\tfai1\t春暉，落暉，餘暉\n暘\tjoeng4\t暘谷\n暢\tcoeng3\t暢通，暢銷，暢旺，暢遊，暢談，暢所欲言，暢飲，暢快，暢通無阻，暢所欲為\n暫\tzaam6\t暫時，短暫，暫停，暫定，暫且，暫別\n曉\thiu2\t曉得，曉諭，破曉，拂曉，曉以大義\n曏\thoeng3\t從前\n曄\tjip6\t韡曄，曄曄；(1)光明的樣子；(2)繁盛的樣子\n曆\tlik6\t曆法，日曆\n曇\ttaam4\t曇花，曇花一現；(1)雲氣；(2)雲氣布於天空\n曨\tlung4\t曚曨，曈曨\n曬\tsaai3\t曬乾，曬場，暴曬\n暈\tjan3\t血暈\n暈\twan4\t暈厥，頭暈\n暈\twan6\t暈珥，暈氣，暈場，日暈，月暈\n曊\tfai3\t「曊fei1」的異讀字\n曊\tfei1\t曝曬、曬乾\n曖\toi2\t「曖oi3」的異讀字\n曖\toi3\t曖昧，堙曖(埋藏隱晦)昏暗、不明\n曖\tngoi3\t「曖oi3」的異讀字\n曠\tkong3\t「曠kwong3」的異讀字\n曠\tkwong3\t曠野，空曠，心曠神怡，曠日長久，曠世奇才，曠古未聞，曠達，曠職，曠課，鰥曠\n書\tsyu1\t書記，書法，書籍，書包，書店，書寫，書院，書本\n會\tkui2\t會計\n會\tkui3\t「會kui2」的異讀字\n會\twui3\t「會wui5」的異讀字\n會\twui5\t懂得\n會\twui6\t會考，會社，會面，會客，會診，會意，會盟，會聚，會戰，會館，機會，體會\n朧\tlung4\t朦朧，朧光\n朮\tseot6\t蒼朮，白朮\n東\tdung1\t東西，東道主，東瀛\n枴\tgwaai2\t同「柺」字\n柺\tgwaai2\t柺杖，柺棍\n棄\thei3\t棄置，棄權，拋棄，遺棄，離棄，見棄，棄市(古執行死刑後，將屍體棄置街頭示眾)\n梟\thiu1\t梟雄，私梟，毒梟，梟首\n梔\tzi1\t梔子植物名，俗稱雞蛋花，可入藥，亦可做染料\n梖\tbui3\t梖多(貝葉樹)\n棖\tcaang4\t棖撥，棖觸\n棶\tloi4\t一種落葉喬木\n棗\tzou2\t棗子，紅棗，棗泥，蜜棗，囫圇吞棗\n楓\tfung1\t楓樹，楓葉\n極\tgik6\t極端，太極，登峰造極，極度，極限，極權，極刑，極點，極致，極品，北極光\n業\tjip6\t業務，事業，雄圖霸業，業餘，業主，業績，業已，業師，業障，業報，業務員，營業部，學業，農業，專業，職業，不務正業，兢兢業業\n楊\tjoeng4\t楊柳，白楊，百步穿楊，楊梅，楊桃，垂楊，綠楊垂柳\n楨\tzing1\t(1)古代築牆時立在兩端的木柱；(2)支柱、主幹；(3)植物名\n榮\twing4\t榮譽，榮獲，榮華，榮耀，榮幸，榮華富貴，光榮\n標\tbiu1\t目標，標題\n槨\tgwok3\t棺槨\n樣\tjoeng6\t樣子，樣本，樣貌，樣式，樣板，模樣，榜樣\n槼\tkwai1\t同「規」字\n樓\tlau4\t樓梯，樓房，樓宇，閣樓\n樑\tloeng4\t同「梁」字\n樞\tsyu1\t樞紐，中樞\n槳\tzoeng2\t划槳，螺旋槳\n樁\tzong1\t木樁，打樁\n槤\tlin4\t榴槤，槤枷\n槶\tkui3\t(1)器物的內腔；(2)古時婦女穿帶的頭飾，又稱為幗\n機\tgei1\t機心，飛機，機不可失，機構，機關，機會，機械，機智，機率，機密，機要，機警，先機，動機，機緣，機靈，機遇\n橋\tkiu4\t橋樑，獨木橋，過橋抽板，橋頭堡，橋墩，橋身，奈何橋，橋牌，橋藝，陳橋兵變\n樹\tsyu6\t樹林，樹木，樹立，樹幹，樹敵，樹梢\n檉\tcing1\t檉柏，檉柳\n檣\tcoeng4\t檣櫓，桅檣，風檣陣馬，檣帆，連檣船的桅桿\n檟\tgaa2\t楸樹或茶樹\n檢\tgim2\t檢定，檢查，檢驗，檢討\n檁\tlam5\t脊檁\n櫛\tzit3\t櫛風沐雨，鱗次櫛比\n櫃\tgwai6\t櫃台，櫃檯，櫃子\n檯\ttoi4\t檯面，檯燈，櫃檯\n檮\ttou4\t檮杌\n櫅\tzai1\t樹木名稱\n檭\tngan4\t銀杏的別名，又名白果\n櫝\tduk6\t買櫝還珠，韞櫝；(1)木製的盒子；(2)棺材；(3)封藏\n櫠\tfai3\t果木名\n櫞\tjyun4\t香櫞，枸櫞\n櫓\tlou5\t櫓槳，櫓棹，搖櫓\n櫫\tzyu1\t揭櫫\n櫧\tzyu1\t一種常綠喬木\n櫬\tcan3\t靈櫬，爇櫬，輿櫬棺材\n櫨\tlou4\t黃櫨，欂櫨\n櫳\tlung4\t(1)窗戶；(2)養獸的籠檻\n櫸\tgeoi2\t山毛櫸\n櫻\tjing1\t櫻花，櫻唇，櫻桃小嘴\n欄\tlaan4\t欄干，勾欄，木欄，花欄，牛欄\n櫺\tling4\t舊式房屋的窗\n權\tkyun4\t權利，權力，特權，兵權\n欑\tcyun4\t同「攢」字\n欐\tlai6\t(1)屋樑；(2)樹木名；(3)小船\n欏\tlo4\t桫欏\n欒\tlyun4\t欒樹，團欒(團聚)；(1)植物名；(2)柱子上用以承載橫梁重量的弓形曲木；(3)鐘口的兩角\n欓\tdong2\t(1)果木名；(2)木桶\n欖\tlaam5\t橄欖\n欞\tling4\t同「櫺」字\n梲\tjeoi6\t同「銳」字\n梲\ttyut3\t杖\n梲\tzyut3\t梁上的短柱\n椲\tfai1\t同「楎」字，指懸掛衣服的木橛\n椲\twai5\t樹木名稱\n槍\tcaang1\t欃槍\n槍\tcoeng1\t槍林彈雨，請槍，脣槍舌劍，手槍，單槍匹馬\n榦\tgon3\t同「幹」字\n榦\thon4\t井榦(井上的木欄)\n槓\tgong3\t槓桿，槓鈴，木槓，竹槓，單槓\n槓\tlung5\t粵語用字\n樂\tngaau6\t樂業，仁者樂山，敬業樂群\n樂\tlok3\t樂亭(地名)，樂陵(縣名)姓氏\n樂\tlok6\t樂土，樂事，樂意，樂趣，樂觀，樂天知命，樂不可支，樂不思蜀，樂此不疲，樂極生悲，快樂，安樂\n樂\tngok6\t音樂，樂器，樂譜，樂府，奏樂，樂壇，樂章\n槮\tsam1\t形容樹木高聳\n槮\tsam2\t水中積架柴木以圍捕魚群\n橫\twaang4\t橫行，縱橫，橫徵暴斂，橫向，天才橫溢，橫豎，橫刀立馬\n橫\twaang6\t橫逆，驕橫，橫民，橫流，橫恣，橫禍，橫肆，橫議\n橫\tgwong1\t橫門古長安城門之一\n檔\tdong2\t檔冊，檔案，存檔\n檔\tdong3\t攤檔，拍檔，搭檔，檔次\n檻\thaam5\t檻羊，檻阱，檻車\n檻\tlaam6\t門檻\n杴\thin1\t挖土或鏟東西的用具\n杴\thin3\t「杴hin1」的異讀字\n桿\tgon1\t桿菌，桿棒，筆桿，槍桿，槓桿\n桿\tgon2\t「桿gon1」的異讀字\n桿\tgon3\t「桿gon1」的異讀字\n條\ttiu4\t條子，條目，便條，條令，條件，條約，條陳，條款，條理，條貫，條幅，條暢，條分縷析，條件反射，木條，戒條\n條\ttiu5\t「條tiu4」的異讀字\n椏\taa1\t椏杈，枝椏\n椏\tngaa1\t「椏aa1」的異讀字\n棲\tcai1\t棲身之處，兩棲動物\n棲\tsai1\t「棲cai1」的異讀字\n棟\tdung3\t棟梁，棟桴，汗牛充棟，棟幹，棟宇，畫棟雕梁，棟折榱崩\n棟\tdung6\t「棟dung3」的異讀字\n棡\tgong1\t青棡\n棡\tgong3\t「棡gong1」的異讀字\n棧\tzaan2\t「棧zaan6」的異讀字\n棧\tzaan6\t棧道，客棧，棧橋，貨棧，棧山航海\n構\tgau3\t構兵，構思，構怨，構造，構想，構置，構圖，構難，佳構，結構\n構\tkau3\t「構gau3」的異讀字\n榿\thei1\t榿木\n榿\tkei1\t「榿hei1」的異讀字\n榪\tmaa5\t「榪maa6」的異讀字\n榪\tmaa6\t榪槎\n槧\tcim3\t(1)書的刻本；(2)古代記事用的木板\n槧\tcim5\t「槧cim3」的異讀字\n樅\tcung1\t冷杉\n樅\tzung1\t「樅cung1」的異讀字\n樿\tsin6\t樿傍\n樿\tzin2\t「樿sin6」的異讀字\n橢\tto2\t「橢to5」的異讀字\n橢\tto5\t橢圓\n樺\twaa4\t「樺waa6」的異讀字\n樺\twaa6\t白樺，黑樺\n檜\tkui2\t木名\n檜\tkui3\t「檜kui2」的異讀字\n檳\tban1\t檳城，檳榔，香檳\n檳\tbing1\t「檳ban1」的異讀字\n檸\tling4\t「檸ning4」的異讀字\n檸\tning4\t檸檬\n櫥\tceoi4\t「櫥cyu4」的異讀字\n櫥\tcyu1\t「櫥cyu4」的異讀字\n櫥\tcyu4\t櫥窗，衣櫥，書櫥\n櫚\tleoi3\t「櫚leoi4」的異讀字\n櫚\tleoi4\t棕櫚\n櫪\tlik1\t老驥伏櫪\n櫪\tlik6\t「櫪lik1」的異讀字\n柵\tcaak3\t柵欄，柵門\n柵\tsaan1\t柵極\n柵\tzaap3\t「柵caak3」的異讀字\n樸\tpok3\t樸直，樸茂，樸陋，樸素，樸鈍，樸訥，樸實，純樸，儉樸\n樸\tbuk1\t「樸buk6」的異讀字\n樸\tbuk6\t叢生的樹木\n橈\tnaau4\t橈骨\n橈\tnaau6\t枉橈；(1)彎曲；(2)屈服；(3)冤屈\n橈\tling4\t穆橈縣\n橈\tjiu4\t「橈naau4」的異讀字\n櫟\tlik1\t樗櫟，櫟散\n櫟\tlik6\t「櫟lik1」的異讀字\n櫟\tngok6\t陝西省縣名\n櫱\tbaak3\t(1)同「柏」字；(2)同「檗」字\n櫱\tpaak3\t「櫱baak3」的異讀字\n櫱\tjip6\t「櫱jit6」的異讀字\n櫱\tjit6\t樹木砍伐後長出的新芽\n欽\tjam1\t欽佩，欽羡，欽慕，欽賜，欽命，欽犯，欽定；(1)尊敬、佩服；(2)古代對皇帝尊稱的用語\n歎\ttaan3\t同「嘆」字\n歟\tjyu4\t文言助詞，表示疑問\n歡\tfun1\t歡喜，狂歡，悲歡離合，歡迎，歡送，聯歡會，合家歡，盡歡，歡天喜地，歡喜冤家，強顏歡笑，不歡而散，男歡女愛，尋歡作樂\n歐\tau1\t歐洲\n歐\tau2\t同「嘔」字\n歐\tngau1\t「歐au1」的異讀字\n歐\tngau2\t「歐au2」的異讀字\n歲\tseoi3\t歲月，年歲，歲出，歲入，去歲，富歲，歉歲\n歷\tlik6\t歷史，歷程，歷時，歷來，歷練，歷險，歷劫，歷久彌新，歷歷可見，履歷，經歷\n歸\tgwai1\t歸還，當歸，賓至如歸，歸帆，歸國，歸家，歸宿，歸期，歸納，歸類，歸咎，歸罪，歸功，歸化，歸根究柢，改邪歸正，落葉歸根，殊途同歸，天與人歸，放虎歸山，滿載而歸，反璞歸真\n歸\tgwai6\t同「饋」字\n歸\tkwai3\t同「愧」字\n歿\tmut6\t亡歿，存歿，齎志而歿死\n殘\tcaan4\t傷殘，兇殘，殘而不廢，殘缺不全，殘冬，殘忍，殘酷，殘局\n殞\twan5\t殞落，殞命，殞石，殞滅，香消玉殞\n殤\tsoeng1\t未成年而死\n殫\tdaan1\t殫力，殫心，殫心竭慮，殫思極慮\n殭\tgoeng1\t殭屍\n殮\tlim6\t大殮，殯殮，殮衣\n殯\tban3\t殯儀，殮殯，出殯\n殰\tduk6\t胎兒死於腹中\n殲\tcim1\t殲滅，圍殲，殲敵，殲擊機，殲滅戰；(1)消滅；(2)殺盡\n殼\thok3\t貝殼，甲殼，軀殼，地殼，枳殼，外殼\n毀\twai2\t毀滅，毀壞，毀掉，毀譽，毀傷，毀害\n殺\tsaai3\t殺哀，隆殺\n殺\tsaat3\t殺生，殺伐，殺戒，殺青，殺氣，殺掠，殺價，殺戮，殺機，殺一儆百，殺人如麻，殺人越貨，殺伐用張，殺身成仁，殺雞取卵，自殺，刺殺，廝殺，謀殺，自相殘殺\n毆\tau2\t毆打，毆傷，互毆\n毆\tngau2\t「毆au2」的異讀字\n毊\thiu1\t樂器名，即大磬\n毊\tkiu4\t「毊hiu1」的異讀字\n毿\tsaam1\t毿毿(垂拂紛披的樣子/散亂的樣子)\n氈\tzin1\t氈毯，氈帽，毛氈，如坐針氈\n氌\tlou5\t氆氌\n氂\tlei4\t氂牛，氂纓，毫氂\n氂\tmou4\t「氂lei4」的異讀字，用於「氂牛」一詞\n氣\thei3\t氣候，志氣，氣勢磅礡，氣氛，氣息，氣憤，氣溫，氣體，氣質，氣功，氣味，氣派，氣槍，氣球，骨氣，脾氣，名氣，霉氣，煤氣，排氣，屏氣凝神，平心靜氣，氣急敗壞，頤指氣使\n氫\thing1\t氫氣，氫彈，氫氧化鈉\n氳\twan1\t氤氳，氛氳\n氬\taa3\t一種氣體元素\n氬\tngaa3\t「氬aa3」的異讀字\n沖\tcung1\t沖洗，謙沖，一飛沖天，沖刷，沖印，沖淡，沖蝕，沖積，沖擊，沖銷，沖壓，沖倒，沖出，沖喜，沖激，沖掉，沖犯，沖壞\n況\tfong3\t況且，情況，每下愈況，以古況今，何況，境況，狀況，病況\n泝\tsou3\t同「溯」字\n洶\thung1\t洶湧\n涇\tging1\t涇水(陝西河名)，涇渭分明\n涗\tseoi3\t(1)溫水；(2)清澈\n淒\tcai1\t淒涼，淒慘，淒厲，淒然，淒淒，淒楚，淒冷，淒迷\n淵\tjyun1\t淵博，淵源，天淵之別，淵藪，淵谷，深淵\n淚\tleoi6\t淚水，淚痕，淚流滿面，淚眼，淚滴，淚珠，淚雨，淚汪汪，淚如雨下，淚人兒，淚人，淚管\n淪\tleon4\t淪為，淪落，淪喪，淪陷，淪入，淪陷區，淪亡\n淩\tling4\t同「凌」字\n淶\tloi4\t淶水\n淥\tluk6\t淘淥，波波淥淥\n湊\tcau3\t湊足，湊巧，湊合，拼湊，緊湊\n減\tgaam2\t減少，減輕，減低，減弱，減退，減價，減小，減數\n溈\tgwai1\t湖南省河流名\n渙\twun6\t渙散，渙然冰釋\n湞\tzing1\t湞水\n滄\tcong1\t滄桑，滄海，滄浪，滄海桑田\n滅\tmit6\t滅亡，消滅，大義滅親，滅絕，滅頂，滅口，滅火，滅種，毀滅，滅音器，毀屍滅跡，天誅地滅\n溼\tsap1\t同「濕」字\n溮\tsi1\t溮河(河名)\n溫\twan1\t溫暖，溫故知新，溫柔敦厚，溫馨，溫泉，溫度，溫和，溫室，溫情，溫床，溫飽，溫差，溫馴，溫文儒雅，溫帶，溫婉，溫存，溫習\n溳\twan4\t溳水(湖北省水名)\n溡\tsi4\t溡水(古河流名稱)\n滻\tcaan2\t滻滻，滻河\n滌\tdik6\t滌蕩，滌除，洗滌，沖滌\n滾\tgwan2\t滾筒，滾落，滾動，滾滾而來，翻滾\n漢\thon3\t漢語，羅漢，楚河漢界，漢族，漢化，漢賦，滿漢全席，漢白玉，男子漢，英雄好漢\n滎\tjing4\t滎經，滎陽\n漁\tjyu4\t漁船，漁民，漁港，漁獲，漁具，漁網\n漣\tlin4\t漣漪，漣洏\n漊\tlau4\t漊水(水名)\n滷\tlou5\t滷蛋，滷菜，滷肉以醬油及其他佐料烹煮的烹飪方法\n滲\tsam3\t滲透，滲入，滲漏，滲出，滲透壓，滲透性\n滬\twu6\t滬江，滬瀆\n滯\tzai6\t滯留，阻滯，停滯不前，滯悶，滯銷，滯礙難行\n漵\tzeoi6\t漵浦(湖南省地名)\n潯\tcam4\t江潯，江潯海裔，潯江(水名)水邊\n潛\tcim4\t潛水，潛能，潛移默化，潛力，潛入，潛在，潛逃，潛藏，潛伏，潛心，潛艇，潛伏期，潛修，潛行，潛匿，潛近\n潔\tgit3\t潔白，清潔，潔身自愛，潔淨，潔癖，廉潔，光潔，皎潔，簡潔，貞潔，整潔，純潔，聖潔，心誠意潔，冰清玉潔\n潤\tjeon6\t潤滑，潤澤，光潤，利潤\n潰\tkui2\t潰瘍，潰爛，潰決，潰散，潰敗，潰不成軍\n潑\tput3\t潑水，潑辣，潑墨，潑婦罵街\n潿\twai4\t潿州\n澐\twan4\t江中大波浪\n潁\twing6\t潁河(河名)\n漿\tzoeng1\t漿糊，豆漿，玉液瓊漿，漿汁，血漿，灌漿，泥漿摔角\n澅\twaa6\t澅水(山東省河流名稱)\n澱\tdin6\t澱粉，沉澱\n澦\tjyu6\t灩澦堆(瞿塘峽口的巨石)\n濄\two1\t水流迴旋\n澤\tzaak6\t澤深恩重，光澤，竭澤而漁，沼澤，山澤，水鄉澤國，色澤，芳澤，福澤\n濁\tzuk6\t濁世，污濁，激濁揚清，濁水，濁流，渾濁\n濱\tban1\t海濱\n澩\thok6\t(1)夏有水冬無水的溪澤；(2)涸泉；(3)河川名，渭水的支流\n濛\tmung4\t濛濛細雨，溟濛\n濘\tning6\t泥濘，濘滯，濘淖路上淤積的汙水爛泥\n濕\tsap1\t濕潤，潮濕，濕漉漉，濕度，濕透，濕氣，濕熱，濕疹，濕地\n濤\ttou4\t濤聲，怒濤，驚濤駭浪\n濰\twai4\t山東省河流名稱\n濜\tzeon6\t湖北省河流名稱\n濧\tdeoi6\t浸漬\n濿\tlai6\t槌骨濿髓\n瀏\tlau4\t瀏覽，瀏亮，瀏海\n濾\tleoi6\t濾紙，過濾，濾水器，濾水池，濾液\n瀋\tsam2\t瀋陽市，安瀋鐵路，墨瀋未乾\n瀇\twong2\t水深廣的樣子\n瀦\tzyu1\t瀦澤，停瀦\n瀠\tjing4\t瀠洄，瀠瀠\n瀨\tlaai6\t(1)急流；(2)湍急\n瀘\tlou4\t四川省市名\n瀟\tsiu1\t瀟灑，瀟洒，瀟瀟\n灃\tfung1\t灃水(水名)\n灄\tsip3\t灄口(地名)水名\n灕\tlei4\t灕江(水名)\n灑\tsaa2\t灑脫，灑水，灑落，灑掃應對，瀟灑，揮灑自如\n灘\ttaan1\t河灘，海灘，暗灘\n灒\tzaan3\t用水揮灑\n灝\thou6\t(1)同「浩」字；(2)同「皓」字\n灡\tlaan4\t同「瀾」字\n灤\tlyun4\t灤河(河名)，灤縣(縣名，位於唐山市東北，灤河西岸)\n灩\tjim6\t瀲灩\n氾\tfaan3\t同「泛」字\n氾\tfaan4\t姓氏\n汙\twaa1\t汙尊\n汙\twu1\t同「污」字\n決\thyut3\t迅疾急速的樣子\n決\tkyut3\t決策，解決，一決雌雄，決定，決心，決議，決賽，決戰，決鬥，決斷，決絕，處決，斬立決，懸而未決\n洩\tjai6\t洩洩(和樂的樣子)\n洩\tsit3\t同「泄」字\n浹\tgaap3\t浹渫\n浹\tzip3\t浹洽，汗流浹背\n淺\tcin2\t深淺，膚淺，輕談淺唱，淺薄，淺陋，淺色\n淺\tzin1\t流水聲\n涼\tloeng4\t天涼，涼快\n涼\tloeng6\t輔佐\n渦\tgwo1\t安徽省河流名稱\n渦\two1\t旋渦，渦輪，梨渦淺笑，渦流，水渦，酒渦\n湯\tjoeng4\t湯谷\n湯\tsoeng1\t湯湯\n湯\ttong1\t湯池，湯藥，湯鑊，米湯，肉湯，熱湯，赴湯蹈火\n湯\ttong3\t同「燙」字\n渾\tgwan2\t渾渾(同滾滾，水流暢盛的樣子)\n渾\twan4\t渾人，雄渾，渾身是膽，渾水，渾厚，渾然，渾圓，渾天儀，渾水摸魚，渾然天成，渾渾噩噩\n渾\twan6\t渾沌(同混沌)\n準\tzeon2\t準備，準則，準時，準確，標準\n準\tzyut3\t隆準\n滿\tmun5\t滿載而歸，自滿，滿目瘡痍，滿州，心滿意足，滿懷，密雲滿佈，滿城風雨，滿月，滿腹牢騷，滿頭大汗，滿座，滿腔熱血，滿腹經綸\n滿\tmun6\t通「懣」字\n漸\tcaam4\t漸漸之石\n漸\tzim1\t漸染，漸漬，漸澤，漸仁摩誼，西風東漸\n漸\tzim6\t漸進，漸漸，漸變，漸入佳境，逐漸，防微杜漸\n濆\tfan4\t水邊\n濆\tpan3\t濆泉\n澇\tlou4\t(1)水名；(2)大波\n澇\tlou6\t澇災，澇害，澇倒\n澬\tci4\t澬水(古河流名稱)\n澬\tzi1\t(1)久雨積水；(2)湖南省河流「資水」的別稱\n濫\thaam5\t濫泉\n濫\tlaam6\t濫用，泛濫，濫調，濫竽充數，寧缺勿濫\n濟\tzai2\t濟南，濟濟一堂\n濟\tzai3\t濟世，經濟，和衷共濟，濟時，濟貧，接濟，剛柔並濟，緩不濟急\n瀆\tdau6\t通「竇」字\n瀆\tduk6\t瀆神，瀆職，褻瀆，輕瀆，自瀆；(1)輕慢、不敬；(2)小溝；(3)弄污\n濺\tzin1\t濺濺即「淺淺」的意思\n濺\tzin3\t飛濺，水花四濺\n瀕\tban1\t同「濱」字\n瀕\tpan4\t瀕臨，瀕危\n瀾\tlaan4\t波瀾，波瀾壯闊，推波助瀾\n瀾\tlaan6\t瀾漫\n灠\tlaam5\t(1)把柿子放於熱水或石灰水中泡幾天，去掉澀味；(2)用鹽腌\n灠\tlaam6\t同「濫」字\n汎\tfaan3\t同「泛」字\n汎\tfaan4\t「汎faan3」的異讀字\n沒\tmei6\t「沒mut6」的異讀字\n沒\tmut6\t沒收，沒落，沒用，沒頭沒腦，沒精打采，沒沒無聞\n淨\tzeng6\t「淨zeng6」的異讀字，用於「乾淨」一詞\n淨\tzing6\t淨土，淨化，淨重，乾淨\n測\tcaak1\t「測cak1」的異讀字\n測\tcak1\t測字，測度，測量，測試，測驗，推測，預測\n渢\tfung1\t「渢fung4」的異讀字\n渢\tfung4\t(1)水聲；(2)風聲；(3)形容樂聲婉轉悠揚\n溝\tgau1\t「溝kau1」的異讀字\n溝\tkau1\t溝洫，溝通，溝渠，溝壑，陰溝\n漬\tzi3\t血漬，浸漬，漬麻\n漬\tzi6\t「漬zi3」的異讀字\n漬\tzik1\t「漬zi3」的異讀字，口語讀音\n漲\tzoeng2\t「漲zoeng3」的異讀字\n漲\tzoeng3\t漲潮，水漲船高，漲價，高漲\n潀\tcung4\t水匯流的地方\n潀\tzung1\t「潀cung4」的異讀字\n潷\tbat1\t濾去渣滓\n潷\tbei3\t「潷bat1」的異讀字\n澗\tgaan2\t「澗gaan3」的異讀字\n澗\tgaan3\t溪澗，山澗\n潣\tman5\t「潣mui5」的異讀字\n潣\tmui5\t(1)同「浼」字；(2)形容水流平緩\n濃\tjung4\t「濃nung4」的異讀字\n濃\tnung4\t濃淡，濃郁，濃妝艷抹，濃密，濃縮\n澮\tkui2\t田間的水溝\n澮\tkui3\t「澮kui2」的異讀字\n澀\tsaap3\t澀味，澀訥，澀體，苦澀，晦澀，艱澀\n澀\tsap1\t「澀saap3」的異讀字\n澀\tsik1\t「澀saap3」的異讀字\n澀\tgip3\t「澀saap3」的異讀字\n瀅\tjing3\t「瀅jing4」的異讀字\n瀅\tjing4\t水清澈的樣子\n瀉\tse2\t「瀉se3」的異讀字\n瀉\tse3\t瀉藥，傾瀉，一瀉千里，瀉肚，腹瀉，滿瀉，崩瀉，銀河倒瀉\n瀝\tlik1\t「瀝lik6」的異讀字\n瀝\tlik6\t瀝血，瀝青，瀝陳，瀝膽披肝，嘔心瀝血\n瀲\tlim5\t「瀲lim6」的異讀字\n瀲\tlim6\t瀲灩\n瀰\tmei4\t「瀰nei4」的異讀字\n瀰\tmei5\t「瀰nei4」的異讀字\n瀰\tnei4\t瀰迤，瀰漫，瀰瀰，瀰山遍野\n灣\twaan1\t河灣，海灣，港灣\n灣\twaan4\t「灣waan1」的異讀字\n湧\tcung1\t小河\n湧\tjung2\t湧泉，湧現，洶湧\n湧\tjung5\t「湧jung2」的異讀字\n漚\tau1\t浮漚\n漚\tau3\t漚麻\n漚\tngau1\t「漚au1」的異讀字\n漚\tngau3\t「漚au3」的異讀字\n滸\theoi2\t滸墅關\n滸\tfu2\t「滸wu2」的異讀字\n滸\twu2\t水邊\n澆\tgiu1\t澆水，澆漓，澆築，澆灌，澆鑄，澆薄\n澆\thiu1\t「澆giu1」的異讀字\n澆\tjiu6\t「澆ngou6」的異讀字\n澆\tngou6\t姓氏\n澠\tman5\t澠池\n澠\tmin5\t「澠man5」的異讀字\n澠\tsing4\t山東省河流名稱\n濼\tbaak3\t「濼pok3」的異讀字\n濼\tbok6\t「濼pok3」的異讀字\n濼\tlok6\t山東省河流名稱\n濼\tpok3\t同「泊」字\n瀧\tsoeng1\t瀧岡，瀧水河川名。源出湖南省臨武縣西，流入廣東省，合於東江\n瀧\tlong4\t「瀧lung4」的異讀字\n瀧\tlung4\t瀧夫，瀧船；(1)下雨貌；(2)湍急的河流\n災\tzoi1\t災害，災難，天災人禍，災厄，災情，災變，災區，災民，災胞，災殃\n烏\twu1\t烏魚，烏合之眾，烏天黑地\n煩\tfaan4\t煩惱，煩瑣，心煩意亂，煩躁，煩悶，煩言，煩憂，煩心，煩擾，煩請，煩難\n煙\tjin1\t煙霧，煙草，煙斗，煙消雲散，煙幕，煙花，煙霧迷漫\n煢\tking4\t煢獨，煢煢\n煉\tlin6\t煉油，煉製，煉獄\n煒\twai5\t光明\n煥\twun6\t煥然一新，煥發，炳煥\n熗\tcoeng3\t一種烹飪方法\n熒\tjing4\t熒光，熒屏\n熉\twan4\t形容黃色的樣子\n熂\thei3\t放火燒除野草\n熲\tgwing2\t光明\n熱\tjit6\t熱鬧，熱心，熱情，熱愛，熱忱，熱誠，熱衷\n熡\tlau4\t火炎\n熾\tci3\t熾烈，熾熱，熾盛\n燈\tdang1\t燈光，燈塔，燈籠，燈火，燈謎，燈芯\n燁\tjip6\t燁然，燁煜，煒燁\n燒\tsiu1\t燒毀，燒燬，燒傷，燒死，燒掉，燒飯\n燙\ttong3\t燙傷，燙手山芋，燙髮，燙手，燙金，燙洗，燙斗\n燦\tcaan3\t燦爛\n營\tjing4\t營業，營養，營救，營役，營生，營火，營利，結黨營私，鑽營\n燬\twai2\t焚燬\n燴\twui6\t燴飯，大雜燴，燴三鮮\n燭\tzuk1\t燭光，蠟燭，燭火，燭台\n燻\tfan1\t燻炙，煙燻，燻魚兒，燻肉，燻赫\n爃\twing4\t人名用字\n爐\tlou4\t爐灶，炭爐，爐火純青，爐床，爐渣\n爛\tlaan6\t爛漫，腐爛，破爛，潰爛\n爧\tling4\t形容火光的樣子\n無\tmo4\t南無\n無\tmou4\t無奈，有無，無可厚非，無線電，無法，無論，無疑，無關，無意，無數，無辜，無限，無聊，無條件，無故，無需，無須，無非，無期徒刑，無論如何，無可奈何，無所適從，無利可圖\n煬\tjoeng4\t熔化金屬\n煬\tjoeng6\t隋煬帝火旺\n烴\tging2\t「烴ting1」的異讀字\n烴\tting1\t碳氫化合物之總稱\n燉\tdan6\t燉肉，燉酒，燉藥，清燉\n燉\tdeon6\t「燉dan6」的異讀字\n燜\tman1\t「燜man1」的異讀字\n燜\tmun6\t一種煮食方法\n燾\tdou6\t「燾tou4」的異讀字\n燾\ttou4\t燾育\n燼\tzeon2\t「燼zeon6」的異讀字\n燼\tzeon6\t灰燼，餘燼，蘭艾同燼\n煇\tfai1\t同「輝」字\n煇\twai1\t「煇fai1」的異讀字\n煇\twan6\t同「暈」字，指日月周圍的光圈\n熅\twan1\t不熅不火\n熅\twan2\t(1)「熅wan1」的異讀字；(2)「熅wat1」的異讀字\n熅\twat1\t熅斗(即熨斗)\n爍\tlik1\t「爍soek3」的異讀字\n爍\tsoek3\t閃爍，爍金，爍亮，爍石流金，閃爍其詞\n爍\tlok6\t爆爍\n為\twai4\t行為，為難，為富不仁，為人，為所欲為，為首\n為\twai6\t為何，因為，為虎作倀，為國捐軀\n爭\tcaang1\t「爭zang1」的異讀字\n爭\tzaang1\t「爭zang1」的異讀字\n爭\tzang1\t爭執，戰爭，爭權奪利，爭吵，爭鬥，爭鳴，爭議，爭霸，競爭，爭風吃醋\n爺\tje4\t爺爺，老爺\n爾\tji5\t爾後，爾來，爾雅，爾虞我詐\n牆\tcoeng4\t牆壁，鬩牆，隔牆有耳，騎牆派，牆頭草，牆垣，城牆，變起蕭牆，銅牆鐵壁，路柳牆花，紅杏出牆\n牘\tduk6\t案牘，尺牘，文牘，連篇累牘，案牘勞形；(1)古時用作書寫的木片；(2)文書；(3)信札\n牽\thin1\t牽涉，牽連，牽扯，牽制，牽動，牽引，牽強，牽掛\n犞\tkiu4\t乾肉\n犢\tduk6\t牛犢，舐犢情深，初生之犢小牛\n犧\thei1\t犧牲，犧尊，伏犧氏\n犖\tlok3\t「犖lok6」的異讀字\n犖\tlok6\t犖犖大者，卓犖(卓絕不凡)，卓犖不羈，犖确；(1)毛色不純的牛；(2)色彩斑爛；(3)顯著\n犛\tmaau4\t「犛lei4」的異讀字\n犛\tlei4\t犛牛\n犛\tmou4\t「犛lei4」的異讀字\n狀\tzong6\t狀況，狀態，狀元\n狽\tbui3\t狼狽，狼狽不堪，狼狽為奸\n猶\tjau4\t猶疑，過猶不及，猶可，猶豫，猶如，猶自，猶豫不決\n猌\tngan6\t狗怒張牙的樣子\n獅\tsi1\t獅子\n猻\tsyun1\t猢猻\n獊\tcong1\t獊囊(紛亂的樣子)\n獄\tjuk6\t獄卒，監獄，牢獄之災，獄吏，冤獄\n獨\tduk6\t獨特，單獨，獨善其身，獨木舟，獨腳戲，獨立，獨奏，獨白，獨裁，獨斷，獨資，獨創，獨身，獨一無二，獨樹一幟，獨當一面，獨佔鰲頭，獨排眾議，獨斷獨行；(1)單一；(2)僅；(3)\n獫\thim2\t獫狁\n獪\tkui2\t狡獪\n獰\tning4\t獰笑，獰視，面目猙獰\n獮\tsin2\t古稱秋天打獵\n獷\tgwong2\t獷悍，粗獷\n獵\tlip6\t獵犬，涉獵，獵奇，獵取，狩獵，獵物，獵槍，獵人，獵裝，獵鷹，獵獲，獵豔\n獸\tsau3\t獸醫，獸性，獸皮\n獻\thin3\t獻禮，貢獻，獻殷勤，獻藝，獻金，獻上，獻技，獻策，獻媚，獻計，獻醜，獻酒，獻身，獻花\n玀\tlo4\t豬玀\n玁\thim2\t玁狁\n獲\twaai4\t獲鹿(河北地名)\n獲\twok6\t獲悉，獲得，獲勝，捕獲，破獲，擒獲\n狹\thaap6\t狹隘，狹義，狹路相逢，狹小，狹窄，狹斜，狹韻\n狹\tgip6\t「狹haap6」的異讀字\n猙\tzaang1\t「猙zang1」的異讀字\n猙\tzang1\t猙獰\n獃\tdaai1\t「獃ngoi4」的異讀字\n獃\tngoi4\t獃頭獃腦，發獃，書獃子，獃板，獃話\n獺\tcaat3\t獺祭魚，海獺，水獺，旱獺\n獺\ttaat3\t「獺caat3」的異讀字\n獼\tmei4\t獼猴\n獼\tnei4\t「獼mei4」的異讀字\n現\tjin6\t現場，現在，現象，現代，現實，現況，現狀，現成，現身說法，現形\n珼\tbui3\t貝飾\n琱\tdiu1\t(1)同「雕」字；(2)通「彫」字\n瑋\twai5\t瑋質，瑋奇美玉\n瑲\tcoeng1\t玉器相擊的響聲\n瑤\tjiu4\t瑤池，瓊瑤，苗瑤語族，瑤函，瑤琴\n瑪\tmaa5\t瑪瑙\n瑣\tso2\t瑣碎，繁瑣，瑣事，瑣細，瑣言\n瑩\tjing4\t晶瑩，澄瑩\n璊\tmun4\t赤色的玉\n璣\tgei1\t璣琲，珠璣，璇璣\n璡\tzeon3\t象玉的石頭\n璫\tdong1\t耳飾\n環\twaan4\t環節，循環，燕瘦環肥，環球，環境，環繞，環顧，花環，連環畫，山環水抱，豹頭環眼，結草銜環，強敵環伺\n璸\tban1\t同「玢」字，美玉的紋理\n璵\tjyu4\t璵璠\n瓊\tking4\t瓊瑤，玉液瓊漿，瓊樓玉宇，瓊麻，瓊音；(1)瓊，玉之美者；(2)泛指美好\n璽\tsaai2\t玉璽，國璽，符璽\n瓏\tlung4\t瓏璁，玲瓏，嬌小玲瓏\n瓔\tjing1\t瓔珞\n瑒\tcoeng3\t古祭祀用之一種圭\n瑒\tjoeng4\t(1)玉名；(2)花名\n瑒\tdong6\t人名\n琿\tfai1\t璦琿條約\n琿\twan4\t玉名\n璯\tfaai3\t人名用字\n璯\twui6\t玉飾冠縫\n璾\tcai5\t玉病\n璾\tzi1\t(1)同「齍」字；(2)似玉的石\n瓕\tsaai2\t弛弓\n瓕\tmei4\t玉名\n琺\tfaat3\t琺瑯\n琺\tfat3\t「琺faat3」的異讀字\n瑽\tcung1\t瑽瑢，琤瑽\n瑽\tcung4\t「瑽cung1」的異讀字\n璉\tlin4\t「璉lin5」的異讀字\n璉\tlin5\t瑚璉\n璦\toi3\t璦琿(縣名)，璦琿條約美玉\n璦\tngoi3\t「璦oi3」的異讀字\n瓚\tzaan3\t古代祭祀用的玉製酒勺\n瓚\tzaan6\t「瓚zaan3」的異讀字\n甌\tau1\t茶甌\n甌\tngau1\t「甌au1」的異讀字\n甕\tung3\t甕中捉鱉，酒甕\n甕\tngung3\t「甕ung3」的異讀字\n產\tcaan2\t產品，產生，生產，破產，財產，特產\n甦\tsou1\t甦醒，復甦，民生以甦\n甯\tning4\t通「寧」字\n甯\tning6\t姓氏\n畝\tmau5\t畝產，田畝\n畢\tbat1\t畢業，完畢，鋒芒畢露，畢命，畢竟，畢恭畢敬，原形畢露\n異\tji6\t異議，異才，離異，異常，奇異\n疇\tcau4\t範疇，田疇\n當\tdong1\t當代，相當，當仁不讓，當然，當前，當地，當局，當值，當政，當道，當權，擔當，應當，正當(指示時間)，當時得令，當之無愧，當務之急，當機立斷，門當戶對，當頭棒喝\n當\tdong3\t當票，適當，大而無當，當作，恰當，得當，正當，用詞不當，非法勾當，典當，便當\n疊\tdaap6\t「疊dip6」的異讀字\n疊\tdip6\t疊字，疊印，疊韻，疊嶂，疊床架屋，重疊，堆疊，摺疊\n畫\twaa2\t「畫waa6」的異讀字\n畫\twaa6\t畫皮，畫苑，畫眉，畫廊，畫譜，畫棟雕樑，書畫\n畫\twaak6\t畫一，畫卯，畫押，畫地而趨，畫地為牢，畫虎類狗，畫蛇添足，畫餅充飢，畫龍點睛\n痙\tging6\t痙攣\n痠\tsyun1\t痠痛，痠軟\n瘋\tfung1\t瘋子，瘋狂，瘋癲，瘋話\n瘧\tjoek6\t瘧疾，瘧蚊\n瘍\tjoeng4\t潰瘍，膿瘍\n瘓\twun6\t癱瘓\n瘡\tcong1\t瘡疤，瘡痍，瘡痍滿目\n瘺\tlau6\t瘺管\n瘲\tzung3\t瘛瘲中醫所云一種小兒驚風症狀\n癆\tlou4\t肺癆，癆病，饞癆(貪涎美食或女色)，話癆\n癒\tjyu6\t癒合，痊癒，大病初癒，不藥而癒\n癤\tzit3\t癤子\n癟\tbit6\t癟子，癟三(流氓)，乾癟，吃癟(吃虧)；(1)下陷、委縮；(2)倒閉；(3)窘迫\n癡\tci1\t癡情，白癡，癡人說夢，癡騃，癡呆，癡心，書癡\n癢\tjoeng5\t痛癢，技癢，隔靴搔癢\n癭\tjing2\t癭瘤，蟲癭，頦下癭\n癬\tsin2\t癬疥，頑癬，頭癬，腳癬\n癲\tdin1\t癲癇，癲狂，瘋癲\n痺\tbei1\t雌鶉\n痺\tbei3\t同「痹」字\n痾\to1\t沉痾，養痾\n痾\tngo1\t「痾o1」的異讀字\n瘞\tai3\t「瘞ji3」的異讀字\n瘞\tngai3\t「瘞ji3」的異讀字\n瘞\tji3\t瘞埋，瘞錢(陪葬的錢)，瘞玉埋香，斂瘞；(1)掩埋；(2)埋藏\n瘱\tai3\t「瘱ji3」的異讀字\n瘱\tngai3\t「瘱ji3」的異讀字\n瘱\tji3\t婉瘱；(1)文靜、柔順；(2)深邃\n癇\tgaan2\t「癇haan4」的異讀字\n癇\thaan4\t癲癇\n療\tliu4\t療養，治療\n療\tliu6\t「療liu4」的異讀字\n癘\tlaai3\t「癘lai6」的異讀字\n癘\tlaai6\t「癘lai6」的異讀字\n癘\tlai6\t癘疫\n癥\tzing1\t癥結\n癥\tzing3\t「癥zing1」的異讀字\n癮\tjan2\t「癮jan5」的異讀字\n癮\tjan5\t癮君子，上癮，過癮，酒癮\n癰\tjung1\t癰疽，養癰成患\n癰\tjung2\t「癰jung1」的異讀字\n癱\ttaan1\t癱子，癱瘓，癱軟，風癱，面癱，偏癱\n癱\ttaan2\t「癱taan1」的異讀字，口語讀音\n癉\tdaan1\t癉瘧，火癉\n癉\tdaan3\t(1)病；(2)勞苦；(3)憎恨\n癉\ttaan1\t手足風病，今謂風癱\n癉\tdo3\t「癉daan3」的異讀字\n癩\tlaai3\t癩病，癩瘡，癩哈蟆\n癩\tlaai6\t「癩laai3」的異讀字\n癩\tlaat6\t癩痢\n發\tfaat3\t發生，發言，啟發，暴發，頒發，發達，發展，發酵，發憤圖強，發悶，發凡舉例，併發，批發，百發百中\n發\tfat3\t「發faat3」的異讀字\n發\tbut3\t形容魚躍的聲音\n發\tbut6\t「發but3」的異讀字\n皂\tzou6\t肥皂，香皂，皂白，青紅皂白，不問青紅皂白；(1)去汙鹼性用品；(2)黑色。同「皁」字\n皁\tzou6\t黑色，同「皂」字\n皚\tji4\t「皚ngoi4」的異讀字\n皚\tngoi2\t「皚ngoi4」的異讀字\n皚\tngoi4\t皚然，皚皚白雪\n皰\tpaau3\t皰疹，水皰\n皸\tgwan1\t皸裂\n皺\tzau3\t皺紋，褶皺，皺眉\n盃\tbui1\t同「杯」字\n盜\tdou6\t盜竊，偷盜，掩耳盜鈴，盜賊，盜匪，盜版，盜印，防盜，海盜，強盜，欺世盜名，雞鳴狗盜，姦淫邪盜，監守自盜，江洋大盜\n盞\tzaan2\t酒盞，一盞明燈\n盤\tpun4\t盤查，盤旋，盤問，盤算\n監\tgaam1\t監視，監國，監禁，監管，監察，監製，監獄，監護，監守自盜\n監\tgaam3\t太監，國子監，阿監，欽天監\n盡\tzeon2\t同「儘」字\n盡\tzeon6\t盡量，殆盡，苦盡甘來，盡歡，自盡，盡善盡美，歷盡滄桑，鳥盡弓藏，趕盡殺絕，淋漓盡致，仁至義盡，一言難盡，同歸於盡，筋疲力盡\n盧\tleoi4\t古兗州河流名稱\n盧\tlou4\t(1)古漢語中有黑色、盛飯器具等解；(2)今幾乎只用於姓氏\n盪\tdong6\t盪漾，震盪，動盪不安，掃盪，盪滌，盪鞦韆，傾家盪產\n盪\ttong3\t同「趟」字\n睏\tkwan3\t(1)睡；(2)疲乏想睡\n睞\tloi6\t青睞\n瞜\tlau1\t視看\n瞞\tmun4\t瞞騙，隱瞞，瞞天過海，掩瞞，欺上瞞下\n矇\tmung4\t矇騙，矇混，矇矓\n矉\tpan4\t(1)因恨而瞪眼張目；(2)皺眉\n矓\tlung4\t矇矓\n矚\tzuk1\t矚目，高瞻遠矚\n眾\tzung1\t(1)姓氏；(2)穀物名稱\n眾\tzung3\t眾人，群眾，眾望所歸，眾說紛紜，眾所周知，眾矢之的，眾生相，眾志成城，眾目睽睽，眾口鑠金，眾叛親離\n睪\tzaak6\t同「澤」字，指一種香草，如澤蘭\n睪\tjik6\t官吏購引線捕人，《說文》：伺視也，令吏將目補罪人也\n睪\tgou1\t同「睾」字\n睍\tjin5\t睍睍，睍睆\n睍\tjin6\t「睍jin5」的異讀字\n睜\tzaang1\t睜眼\n睜\tzang1\t「睜zaang1」的異讀字\n瞶\tgwai3\t瞎子\n瞶\tkui2\t「瞶gwai3」的異讀字\n瞼\tgim2\t眼瞼\n瞼\tlim4\t「瞼gim2」的異讀字\n眥\tzaai6\t眥裂，睚眥\n眥\tzai6\t「眥zi6」的異讀字\n眥\tzi6\t決眥\n矯\tgiu2\t矯健，矯情，矯枉過正，矯形，矯捷，矯若游龍，矯揉造作\n矯\tkiu2\t「矯giu2」的異讀字\n硃\tzyu1\t朱砂\n硨\tce1\t硨磲(一種蛤貝類)\n硜\thang1\t硜硜喻淺見而固執\n硯\tjin6\t墨硯，硯友，硯臺，硯席，硯耕(賣文維生)；(1)磨墨的石製用具；(2)指有同窗之誼\n碙\tgong1\t山崗、石岩\n碕\tkei4\t彎曲的岸\n碭\tdong6\t碭山(縣名)\n碩\tsek6\t碩士，碩大\n確\tkok3\t確定，正確，千真萬確，確定，證據確鑿，確保，確認，確立，確切，確實，明確，準確\n碼\tmaa5\t碼頭，電碼，尺碼，籌碼\n磣\tcam2\t割磣，砢磣，可磣，口磣，寒磣，牙磣，磣磕磕\n磠\tlou5\t磠砂\n磚\tzyun1\t磚頭，拋磚引玉\n磯\tgei1\t磯釣，燕子磯，采石磯，臺磯\n磽\thaau1\t磽瘠，磽地，磽薄\n礄\tkiu4\t礄頭(地名，在四川省)，礄口(地名，在漢口)\n礎\tco2\t礎石，基礎，礎潤而雨，巢礎\n礒\tngai5\t碕礒(山石錯落不平)\n礙\tngoi6\t礙事，防礙，心無罣礙，障礙物，礙眼，辯才無礙，礙手礙腳\n礪\tlai6\t磨礪，砥礪\n礱\tlung4\t(1)磨；(2)去掉稻殼的工具\n硤\thaap6\t硤石(浙江省地名)\n硤\tgip3\t「硤haap6」的異讀字\n礬\tfaan4\t礬土，明礬\n礬\tfaan6\t「礬faan4」的異讀字\n礦\tgwong3\t「礦kwong3」的異讀字\n礦\tkong3\t「礦kwong3」的異讀字\n礦\tkwong3\t礦產，煤礦，礦物質，礦泉水，礦工，礦井，礦石，礦藏，開礦\n礫\tlik1\t砂礫，瓦礫\n礫\tlik6\t「礫lik1」的異讀字\n磑\tngai4\t山石高聳的樣子\n磑\twai3\t「磑ngoi6」的異讀字\n磑\thoi2\t「磑ngoi6」的異讀字\n磑\tngoi6\t石磨\n磧\tzaak3\t粵語用字\n磧\tcik1\t「磧zik1」的異讀字\n磧\tzik1\t沙磧，磧鹵\n祿\tluk6\t祿位，爵祿，俸祿\n禕\tji1\t美好\n禎\tzing1\t禎祥，禎符\n禦\tjyu6\t禦寒，禦侮\n禮\tlai5\t禮貌，典禮，分庭抗禮，禮讓，禮拜，禮儀，禮遇，禮數，禮尚往來，禮賢下士，聘禮，禮義廉恥\n禡\tmaa6\t禡牙\n禡\tngaa2\t粵語用字，指每月初二、十六的祭祀\n祕\tbai3\t「祕bei3」的異讀字\n祕\tbei3\t祕密，祕書，祕而不宣，祕方，祕訣\n禍\two5\t「禍wo6」的異讀字\n禍\two6\t禍害，災禍，禍國殃民，禍根，禍端，禍亂，禍不單行，紅顏禍水，包藏禍心，罪魁禍首，禍起蕭牆\n禱\tdou2\t「禱tou2」的異讀字\n禱\ttou2\t禱告，禱求，禱祝，祈禱，盼禱\n禪\tsim4\t禪心，禪杖，禪宗，禪定，禪房，禪林，禪師，禪堂，坐禪，野狐禪\n禪\tsin4\t「禪sim4」的異讀字\n禪\tsin6\t禪位，禪讓，受禪，封禪\n禰\tnai5\t(1)「禰nei4」的異讀字；(2)「禰nei5」的異讀字\n禰\tnei4\t姓氏\n禰\tnei5\t考廟\n禿\ttuk1\t禿頭，禿髮，禿子，禿鷹，光禿，禿筆\n秈\tsin1\t秈稻，秈米\n稈\tgon2\t禾莖，泛草木的莖\n穇\tsaam1\t穇子\n穌\tsou1\t同「蘇」字\n穎\twing6\t聰穎，新穎，穎悟，脫穎而出；(1)禾的尖端；(2)喻為才華出眾的人；(3)新的\n積\tzik1\t積極，積習，面積，累積\n穠\tnung4\t穠豔，穠華，穠纖合度，穠飾，夭桃穠李\n穡\tsik1\t穡夫，穡事，稼穡；(1)成熟的穀物；(2)收割；(3)耕種\n穢\twai3\t污穢，穢土，穢行\n穩\twan2\t穩重，平穩，穩如泰山，穩固，穩定，穩健，十拿九穩，穩步前進，穩紮穩打\n穭\tleoi5\t野生的穀物\n稅\tseoi3\t納稅，報稅，繳稅，抽稅，徵稅\n稅\tteoi3\t(1)喪期過而追服喪；(2)變易\n稅\ttyut3\t同「脫」字\n稟\tlam5\t同「廩」字\n稟\tban2\t稟告，稟見，稟帖，稟受，稟命，稟氣，稟賦，回稟\n稜\tling4\t同「棱」字\n稜\tling6\t量詞，唐宋時估計田畝的單位\n種\tzung2\t種姓，種類，種子選手，種族主義，人種，火種，變種\n種\tzung3\t種植，種牛痘，耕種，種因，芒種(二十四節氣之一)\n穀\tgau3\t(1)哺乳；(2)孺子\n穀\tguk1\t穀倉，穀物，穀類，五穀\n穀\thuk6\t連穀\n穫\twok6\t收穫，秋穫，一樹百穫\n穫\twu6\t焦穫\n稱\tcan3\t「稱cing3」的異讀字\n稱\tcing1\t稱述，稱呼，稱病，稱道，稱許，稱謂，稱誦，稱觴，稱霸，稱讚，稱兄道弟，稱孤道寡，俗稱，號稱\n稱\tcing3\t稱心，衣不稱身，稱意，稱職，稱心如意，稱體裁衣，對稱\n窪\twaa1\t窪地，低窪\n窩\two1\t窩藏，巢窩，窩囊，窩心，賊窩，安樂窩，心窩，腋窩\n窯\tjiu4\t窯洞(居住的洞穴)，官窯，窯變，炭窯\n窮\tkung4\t窮人，窮困，窮苦，窮追不捨，窮途末路，窮鄉僻壤，窮極無聊，窮寇莫追\n窵\tdiu3\t窵遠\n窺\tkwai1\t窺伺，窺見，窺測，窺探，管中窺豹，管窺之見，坐不窺堂，以管窺天\n竊\tsit3\t竊取，盜竊，竊竊私語，竊案，竊賊，竊嫌，竊位，竊聽，竊犯，竊名，竊用，竊喜，竊鉤者誅，竊國者侯\n窶\tlau4\t甌窶\n窶\tgeoi6\t窶家子，貧窶\n竇\tdau3\t狗竇粵語用字\n竇\tdau6\t疑竇，情竇初開，鼻竇，；(1)孔穴、縫隙；(2)姓\n竄\tcyun2\t「竄cyun3」的異讀字\n竄\tcyun3\t竄改，流竄\n竅\thiu3\t竅門，開竅，訣竅，一竅不通；(1)孔穴；(2)要點\n竅\tkiu3\t「竅hiu3」的異讀字\n競\tging3\t「競ging6」的異讀字\n競\tging6\t競選，競爭，競相效尤，競走，競技，競逐，競賽，端陽競渡\n筆\tbat1\t筆墨，敗筆，筆走龍蛇，筆袋，筆筒，筆畫，筆順，筆跡，筆記，筆戰，筆觸，筆友，筆算，筆直，筆挺，毛筆，鐵筆，筆墨紙硯，筆夢生花，秉筆直書\n筍\tseon2\t竹筍，雨後春筍\n筧\tgaan2\t引水的長竹管\n節\tzit3\t節目，節省，節約，節日，節制，節奏，節外生枝，節儉，節拍，節令，節食，節錄，節衣縮食\n箇\tgo3\t箇中\n箋\tzin1\t箋注，信箋\n範\tfaan6\t範圍，模範，範疇，範例，範本，範式\n篘\tcau1\t濾酒用的竹具\n篤\tduk1\t篤信，篤實，篤志，篤學，篤厚，篤行\n簑\tso1\t同「蓑」字\n篔\twan4\t篔簹\n築\tzuk1\t築成，築起，築堤，築巢，築牆，築路，築屋，築城\n篳\tbat1\t篳門，篳篥，篳路藍縷泛指用竹編成之器物\n簂\tgwok3\t(1)古代婦女的首飾；(2)古代婦女的喪冠\n簍\tlau5\t簍子，簍筐，字紙簍\n簀\tzaak3\t用竹片蘆葦編成的床墊子\n簞\tdaan1\t古代盛飯竹器\n簡\tgaan2\t簡單，竹簡，簡短，簡直\n簣\tgwai6\t功虧一簣\n簫\tsiu1\t管樂器名\n簢\tman5\t一種可以做席的竹\n簽\tcim1\t簽約，簽名，簽收\n簹\tdong1\t篔簹\n簾\tlim4\t簾幕，窗簾\n籌\tcau4\t籌碼，籌備，籌組，籌措，籌設，籌劃，籌募，籌款\n籃\tlaam4\t籃子，籃球，提籃，菜籃，搖籃\n籟\tlaai6\t天籟，萬籟無聲\n籙\tluk6\t符籙，圖籙\n籜\ttok3\t竹筍皮\n籛\tzin1\t姓氏\n籤\tcim1\t籤詩，竹籤，書籤，浮籤，牙籤\n籪\tdyun6\t插置在水中，便於捕捉魚、蝦、螃蟹等的竹柵\n籩\tbin1\t籩豆，籩祭\n籬\tlei4\t籬笆，籬下，寄人籬下\n籮\tlo4\t籮筐，竹籮\n筴\tcaak3\t同「策」字\n筴\tgaap3\t梵筴，竹筴魚\n籔\tsau2\t淘米用的竹器，廣東俗稱「筲箕」\n籔\tsou2\t斗籔\n籠\tlung4\t籠絡，燈籠，籠罩，蒸籠\n籠\tlung5\t籠統，箱籠\n箏\tzaang1\t風箏，古箏\n箏\tzang1\t「箏zaang1」的異讀字\n篋\thaap6\t籐篋，書篋\n篋\tgip2\t「篋haap6」的異讀字\n篋\thip3\t「篋haap6」的異讀字\n篩\tsai1\t篩選，篩酒\n篩\tsi1\t「篩sai1」的異讀字\n籲\tjoek6\t「籲jyu6」的異讀字\n籲\tjyu6\t籲請，呼籲，籲天，籲求\n粵\tjyut6\t粵曲，兩粵，粵犬吠雪，粵語，粵劇\n糞\tfan3\t糞便，糞土，糞除\n糧\tloeng4\t糧食，糧倉，糧餉，糧草\n糰\ttyun4\t米或粉做成的圓球形食物\n糲\tlai6\t糲飯\n糴\tdek6\t糴米\n糶\ttiu3\t糶出，平糶，糴糶(米稻的買賣)賣出糧食\n糝\tsaam2\t以米和羹\n糝\tsam2\t「糝saam2」的異讀字\n糝\tsam3\t「糝saam2」的異讀字\n約\tjoek3\t約定，約談，約束，約會，約法三章，約定俗成，公約，合約\n紆\tjyu1\t彎曲\n紈\tjyun4\t紈牛，紈扇\n紂\tzau6\t紂棍，助紂為虐\n紛\tfan1\t紛爭，紛飛，糾紛\n紡\tfong2\t紡織，紡車，紡紗，紡錘\n級\tkap1\t級別，階級，幾何級數，首級，等級\n紋\tman4\t紋身，掌紋，紋風不動，紋路，紋眉，紋理，條紋，花紋\n納\tnaap6\t納涼，出納，納悶，納粹黨，納吉，納妾，納賄，納聘\n紗\tsaa1\t紗布，紡紗，浣紗，紗窗，紗廠，紗門，紗錠，紗線，紗帽\n紓\tsyu1\t紓難，紓困，紓解\n紜\twan4\t紛紜，眾說紛紜\n紘\twang4\t(1)結於頷下的帽帶；(2)廣大\n紙\tzi2\t紙張，報紙，紙醉金迷，紙幣，紙袋，紙盒，紙條，紙屑，紙鳶，紙牌，紙老虎，白紙，蠟紙，卡紙，羊皮紙，貼紙，廢紙，力透紙背，面如金紙，洛陽紙貴\n紵\tcyu5\t指苧麻纖維織的布\n紼\tfat1\t執紼(送葬時手執繩索以牽引靈柩，後泛指送葬)\n紱\tfat1\t(1)古代繫印章的絲繩；(2)同「黻」字\n紺\tgam3\t紺青，發紺，紺殿，紺宇，微紅帶深青的\n絅\tgwing2\t罩在外面的單衣\n絃\tjin4\t絃樂，絃歌，琴絃，絃外之音\n細\tsai3\t細節，細心，細則，細胞，細菌，細緻，細微，細想，細雨\n紳\tsan1\t紳士，鄉紳，官紳\n絁\tsi1\t粗綢\n紲\tsit3\t縲紲\n紹\tsiu6\t介紹，紹興(地名)\n統\ttung2\t統一，統計，統治，統籌，統領，統帥，統稱，統御，統率，統轄\n組\tzou2\t組織，組成，組合，組件\n終\tzung1\t終於，終止，終結，終點，終須，終老，終歸\n絰\tdit6\t墨絰，苴絰，縗絰古時喪服上的麻帶\n絳\tgong3\t絳脣，絳帳，絳帳授徒；(1)大紅色；(2)一種絲織品\n絎\thong4\t縫紉針法之一\n絨\tjung4\t絨毛，絲絨，燈心絨，絨布\n給\tkap1\t給予，交給，俸給，配給，家給，供給\n絲\tsi1\t絲毫，絲綢，絲竹，絲襪，絲質，絲織，絲帶\n綁\tbong2\t綁架，綁票，綁匪，綁紮，捆綁\n絺\tci1\t絺纊，絺綌，絺繡\n綆\tgang2\t綆短汲深\n經\tging1\t經驗，經緯，經年累月，經脈，經常，經典，經綸，經濟，經營，經紀，經世致用，經久耐用，月經，聖經\n絹\tgyun3\t絹帛，絹本，絹裱，絹猴，絹印，禾絹，扃絹，手絹\n綑\tkwan2\t同「捆」字\n綏\tseoi1\t綏靖，綏遠，綏服，綏撫，綏定，綏靖(舊省名、市名)；(1)上落車時拉穩的繩索；(2)安撫；(3)制止\n綃\tsiu1\t綃頭，絳綃，羅綃\n綀\tso1\t綀巾\n綈\ttai4\t綈袍\n絛\ttou1\t絛蟲，絛子\n綢\tcau4\t綢子，綢緞，絲綢，未雨綢繆\n綽\tcoek3\t綽號，綽綽有餘，綽約\n綵\tcoi2\t綵球，綵排\n緋\tfei1\t緋紅\n緊\tgan2\t緊密，繃緊，緊要關頭，緊急，緊縮，緊迫，緊鄰，緊湊，緊閉，緊張，緊接，緊握，緊身，緊追不捨，緊貼，緊縛\n綱\tgong1\t綱紀，綱要，提綱挈領，綱目，三綱五常網的大繩。《說文》：「綱，網紘也。」\n綺\tji2\t綺麗，綺羅，綺雲\n綖\tjin4\t古代覆在冠冕上的裝飾\n綹\tlau5\t割綹，剪綹，順絲順綹\n綾\tling4\t綾錦，綾羅綢緞，繒綾\n綟\tlit6\t青綠色\n綠\tluk6\t綠化，綠色，綠地，綠豆，綠意盎然，綠蔭，綠油油，綠草如茵，嫩綠\n綿\tmin4\t綿密，絲綿，綿延不斷，網\tmong5\t魚網，網絡，天羅地網，網路，網狀，視網膜，網球，自投羅網，網開一面\n綬\tsau6\t綬帶\n緒\tseoi5\t心緒，思緒，情緒，頭緒，愁緒，緒言，餘緒，意緒\n綯\ttou4\t綯首，綯紋\n綻\tzaan6\t綻放，綻開，破綻\n緇\tzi1\t緇衣\n綡\tloeng4\t冠纚\n綞\tdo2\t綞子(綾的一種)\n緝\tcap1\t緝私，緝捕，緝拿，編緝，通緝\n緞\tdyun6\t緞帶，綵緞，綾羅綢緞，錦緞\n練\tlin6\t練習，練武，練兵\n緬\tmin5\t緬懷，緬想，緬邈，緬甸(中南半島國名)；(1)細絲；(2)悠遠\n緲\tmiu5\t虛無縹緲\n編\tpin1\t編列，編輯，編號，編織，編排，編纂，編譯，編訂，編撰，改編，收編\n緰\tseoi1\t同「繻」字\n緦\tsi1\t緦麻服，緦麻之喪，服緦\n線\tsin3\t線索，線條，防線，底線\n緗\tsoeng1\t緗縹\n緹\ttai4\t緹縈\n緻\tzi3\t細緻，精緻，密緻\n緮\tfau6\t絹緮(語見篇海，其義不明)\n縗\tceoi1\t縗墨，縗絰\n縑\tgim1\t縑素\n縞\tgou2\t縞素\n縎\tgwat1\t縎結\n縈\tjing4\t縈迴，縈懷，緹縈\n縟\tjuk6\t縟節，繁文縟禮\n縐\tzau3\t縐布，湖縐，文縐縐，縐紗\n縋\tzeoi6\t用繩子拴住人、物往下送\n縉\tzeon3\t縉紳，簪纓縉紳赤色絲帛\n繈\tkoeng5\t通「襁」字\n縭\tlei4\t結縭，帨縭\n縲\tleoi4\t縲紲\n繂\tleot6\t麻繩、大索\n縵\tmaan6\t縵布，縵立，風寒紗縵\n繅\tsou1\t繅絲，繅車\n縮\tsuk1\t縮短，縮小，縮減，縮影，縮緊\n縶\tzap1\t縶維(挽留)，羈縶(繫馬的韁繩)，拘縶，幽縶(拘禁)；(1)捆綁；(2)拘囚；(3)繫馬\n總\tzung2\t總會，總理，總裁，總計，總數，總部，總務，總和，總管，總匯\n縳\tzyun3\t紡縳\n縺\tlin4\t(1)絲線糾結不能解；(2)一種漁網\n繓\tcyut3\t結縫\n繢\tkui2\t同「繪」字\n繚\tliu4\t繚繞，眼花繚亂\n繡\tsau3\t繡花，錦繡\n繕\tsin6\t繕寫，修繕\n織\tzik1\t織布，織機，織女，織花，編織\n繟\tcin2\t寬的絲帶\n繨\tdaat6\t紇繨\n繫\thai6\t繫於，繫繩，維繫\n繶\tjik1\t飾履的圓絲帶\n繹\tjik6\t尋繹，演繹，絡繹不絕\n繸\tseoi6\t所以連繫瑞玉者\n繩\tsing4\t繩索，準繩，繩之以法，繩結，繩墨，繩鋸木斷，月書赤繩\n繷\tnung4\t紛繷(不善)\n辮\tbin1\t髮辮，髫辮，辮子，梳辮\n纁\tfan1\t淺紅色\n繼\tgai3\t繼續，繼承，繼任，繼往開來\n繾\thin2\t繾綣\n纇\tleoi6\t疵纇\n續\tzuk6\t續約，續集，續聘，續弦，持續，繼續\n纖\tcim1\t纖細，纖維素，十指纖纖，纖弱，纖維工業，纖腰\n纔\tcoi4\t剛纔，方纔，纔可，恰纔\n纓\tjing1\t紅纓槍，請纓，被髮纓冠，長纓，纓緌之徒\n纘\tzyun2\t繼承\n纜\tlaam6\t纜線，纜繩，電纜\n紇\tgat1\t紇繨(用繩線等物打成的結)，紇絡(角落)\n紇\that6\t回紇(古代少數民族名)人名、族群名\n紅\tgung1\t女紅\n紅\thung4\t紅色，紅豆，紅花，紅定，紅娘，紅袖，紅教，紅暈，紅塵，紅潮，紅顏，紅鸞，紅外線，紅羊浩劫，紅男綠女，紅紛佳人，紅顏白髮，紅顏薄命\n純\tseon4\t純一，純正，純利，純度，純真，純淨，純粹，純潔，純熟，純樸，單純\n純\tzeon2\t鑲邊\n純\ttyun4\t量詞\n紬\tcau1\t紬繹\n紬\tcau4\t粗綢\n絞\tgaau2\t絞痛，絞盡腦汁，絞刑，絞纏，絞索，心如刀絞\n絞\thaau4\t(1)蒼黃色；(2)古代喪禮中斂屍用的束帶\n絧\tdung6\t鴻絧(直馳/相連)\n絧\ttung1\t遲緩而直通的樣子\n絧\ttung4\t布名\n綸\tgwaan1\t綸巾\n綸\tleon4\t綸音，纏綿綸至，蕭索綸囷，滿腹經綸\n維\twai4\t維護，維生素，維妙維肖，維持，維修，維繫，維新，維艱，維文\n維\tjung1\t盧維(古袞州水名)\n緣\tjyun4\t緣故，緣由，緣份，緣木求魚，緣起，緣起緣滅，緣因，緣分\n緣\tjyun6\t衣服的邊飾\n緶\tbin1\t同「辮」字\n緶\tpin4\t用針縫\n緟\tcung4\t同「重」字，增益重疊的意思\n緟\tzung6\t繒縷\n縍\tbong1\t鞋之旁部\n縍\tbong2\t同「綁」字\n縣\tjyun4\t通「懸」字\n縣\tjyun6\t縣城，郡縣，縣令，縣志，縣官，縣治\n縫\tfung4\t縫合，縫紉，縫補，裁縫\n縫\tfung6\t縫隙，門縫，裂縫，見縫插針，天衣無縫\n繆\tmau4\t綢繆\n繆\tmau6\t繆巧，繆戾，繆悠，繆然，繆種流傳，紕繆\n繆\tmiu6\t姓氏\n繆\tmuk6\t同「穆」字\n縱\tzung1\t縱深，縱貫，縱橫，縱軸，縱橫捭闔，縱橫馳騁，合縱\n縱\tzung2\t縱臾\n縱\tzung3\t縱令，縱言，縱步，縱使，縱波，縱酒，縱容，縱覽，放縱\n縸\tmok6\t絡縸(張羅的樣子，又寫作絡幕)\n縸\tmou6\t劣絮\n繰\tciu1\t繰邊\n繰\tsou1\t同「繅」字\n繰\tzou2\t絳紫色帛\n繭\tgaan2\t蠶繭，破繭而出，作繭自縛\n繭\tgin2\t同「研」字，手腳因過度摩擦所生的厚皮\n繳\tgiu2\t繳付，繳稅，繳費，繳納，繳械，繳獲，繳繞，收繳\n繳\tzoek3\t繫在箭尾的絲繩\n繻\tseoi1\t(1)彩色的絲織品；(2)古代以割裂的繻，作為出入關隘的憑證\n繻\tjyu4\t同「襦」字\n纍\tleoi4\t(1)繩索；(2)纏繞\n纍\tleoi5\t重疊\n纍\tleoi6\t牽連\n糾\tdau2\t「糾gau2」的異讀字\n糾\tgau2\t糾正，糾紛，糾眾，糾集，糾葛，糾察，糾彈，糾謬，糾纏；(1)纏繞；(2)集聚；(3)督察；(4)矯正\n紀\tgei2\t紀元，紀年，紀事，紀念，紀要，紀律，世紀，軍紀，綱紀；(1)絲的頭緒；(2)法度、準則；(3)史書紀傳體體例之一；(4)記錄\n紀\tgei3\t「紀gei2」的異讀字\n紉\tjan4\t「紉jan6」的異讀字\n紉\tjan6\t紉針，縫紉，紉佩，感紉\n紝\tjam4\t紡織\n紝\tjam6\t「紝jam4」的異讀字\n紐\tnau2\t紐扣，衣紐，樞紐，紐帶\n紐\tnau5\t「紐nau2」的異讀字\n紖\tzan3\t「紖zan6」的異讀字\n紖\tzan6\t牛鼻繩，引申為牽牲口的繩子\n絆\tbun3\t「絆bun6」的異讀字\n絆\tbun6\t絆腳石，羈絆，絆手絆腳\n絀\tceot1\t「絀zyut3」的異讀字\n絀\tzeot1\t「絀zyut3」的異讀字\n絀\tzyut3\t左支右絀，相形見絀\n絀\tzyut6\t「絀zyut3」的異讀字\n紿\tdoi6\t「紿toi5」的異讀字\n紿\ttoi5\t欺哄\n紮\tzaap3\t「紮zaat3」的異讀字\n紮\tzaat3\t紮根，紮實，紮下，紮營，紮起，紮好，紮緊\n結\tgit3\t結交，結合，結束，結伴，結果，結怨，結納，結婚，結晶\n結\tlit3\t「結git3」的異讀字\n絢\tseon1\t「絢hyun3」的異讀字\n絢\thyun3\t絢目，絢燦，絢麗，絢爛\n絡\tlok3\t絡紗，絡絲，絡頭，絡繹不絕，絡腮鬍子，經絡\n絡\tlok6\t「絡lok3」的異讀字\n絕\tzyut3\t「絕zyut6」的異讀字\n絕\tzyut6\t絕世，絕交，絕句，絕色，絕祀，絕技，絕育，絕招，絕版，絕俗，絕食，絕望，絕情，絕筆，絕嗣，絕學，絕藝，絕代佳人，絕妙好辭，絕處逢生，絕無僅有，斷絕，拍案叫絕，超然絕詣\n綌\tgwik1\t粗葛布\n綌\tkwik1\t「綌gwik1」的異讀字\n緄\tgwan2\t緄邊\n緄\tkwan2\t「緄gwan2」的異讀字\n綣\thyun2\t「綣hyun3」的異讀字\n綣\thyun3\t繾綣\n綰\twaan2\t綰髮，綰結，赤繩綰足\n綰\twaan5\t「綰waan2」的異讀字\n綜\tzung1\t「綜zung3」的異讀字\n綜\tzung3\t綜合，綜計，綜述，綜括，綜理，綜達，綜觀，綜合藝術，綜名核實，錯綜\n締\tdai3\t締造，取締，締交，締約\n締\tdai6\t「締dai3」的異讀字\n締\ttai3\t「締dai3」的異讀字\n緡\tfan1\t「緡man4」的異讀字\n緡\tman4\t緡錢，緡幣，告緡(告發別人不依法捐稅)；(1)釣魚用的絲繩；(2)貫錢用的絲繩，見《史記•平準書》李斐集解；(3)錢的計算單位；(4)儲錢；(5)古代一種稅捐制度；(6)古人名，戰國時有齊緡王；(7)地名\n緘\tgaam1\t緘口，緘札，緘封，緘密，緘默，三緘其口\n緘\tzin1\t「緘gamm1」的異讀字\n緱\tgau1\t(1)纏劍柄的繩索；(2)姓氏\n緱\tkau1\t「緱gau1」的異讀字\n緙\tkaak1\t「緙hak1」的異讀字\n緙\tkaak3\t「緙hak1」的異讀字\n緙\thak1\t緙絲\n緯\twai5\t緯度，經緯\n緯\twai6\t「緯wai5」的異讀字\n緩\twun4\t「緩wun6」的異讀字\n緩\twun6\t緩和，緩刑，緩不濟急，緩帶，緩禍，緩慢，緩衝，緩頰，緩兵之計，緩步代車，緩歌縵舞\n縊\tai3\t縊女，縊頸，縊死，絞縊，自縊\n縊\tngai3\t「縊ai3」的異讀字\n縛\tbok3\t束縛，作繭自縛捆綁\n縛\tbok6\t「縛bok3」的異讀字\n縛\tfok3\t「縛bok3」的異讀字\n縝\tcan2\t縝密\n縝\tzan2\t「縝can2」的異讀字\n縴\thin1\t縴夫，縴手，拉縴\n縴\thin3\t「縴hin1」的異讀字\n縷\tlau5\t「縷leoi5」的異讀字\n縷\tleoi5\t縷述，一縷煙，不絕如縷，絲縷，縷陳，條分縷析\n縹\tpiu1\t「縹piu5」的異讀字\n縹\tpiu2\t「縹piu5」的異讀字\n縹\tpiu5\t縹緲，縹緗\n縰\tsaai2\t同「纚」字\n縰\tsi2\t「縰saai2」的異讀字\n績\tzek3\t「績zik1」的異讀字\n績\tzik1\t績火，績麻，績線，績學之士，成績，功績，戰績，業績\n繞\tjiu2\t「繞jiu5」的異讀字\n繞\tjiu5\t繞行，繞圈，繞嘴，繞口令，繞梁三日，環繞\n繐\tseoi3\t「繐seoi6」的異讀字\n繐\tseoi6\t繐帳，繐裳，繐帷\n繯\twaan4\t「繯waan6」的異讀字\n繯\twaan6\t繯首死刑，投繯自盡，繯橐\n繯\tjyun6\t「繯waan6」的異讀字\n繪\tkui2\t繪畫，繪圖，描繪\n繪\tkui3\t「繪kui2」的異讀字\n繽\tban1\t五彩繽紛，落英繽紛\n繽\tpan1\t「繽ban1」的異讀字\n纏\tcin4\t纏繞，糾纏，纏綿悱惻，纏足，纏身，糾纏不清，纏擾\n纏\tzin6\t「纏cin4」的異讀字，口語讀音\n纈\tkit3\t纈取，採纈，纈草(植物名:Valerianroot)\n纈\tlit3\t「纈kit3」的異讀字，口語讀音\n纊\tkong3\t「纊kwong3」的異讀字\n纊\tkwong3\t絺纊，黈纊，屬纊\n纗\twaa6\t「纗kwai4」的異讀字\n纗\tkwai4\t(1)維綱中繩；(2)繩結；(3)帶子；(4)琴弦中絕\n纚\tsaai2\t「纚lei4」的異讀字\n纚\tlei4\t綝纚\n纚\tsi2\t「纚lei4」的異讀字\n紟\tgam1\t繫衣帶\n紟\tgam3\t單被\n紟\tkam1\t「紟gam1」的異讀字\n紕\tpai1\t「紕pei1」的異讀字\n紕\tpei1\t紕繆，紕漏，紕越\n紕\tpei4\t縞冠素紕\n綴\tzeoi3\t綴文，綴合，綴綴，綴輯，綴玉聯珠，綴字成句，點綴\n綴\tzeoi6\t「綴zeoi3」的異讀字\n綴\tzyut3\t同「輟」字\n綴\tzyut6\t「綴zyut3」的異讀字\n緷\tgwan2\t量詞，指用一百根羽毛捆成的一束\n緷\tkwan2\t「緷gwan2」的異讀字\n緷\twan6\t緯線\n縕\twan1\t絪縕\n縕\twan2\t縕袍，紛縕，束縕請火\n縕\twan3\t「縕wan2」的異讀字\n繃\tbaang6\t「繃bang1」的異讀字\n繃\tmaang1\t繃著臉\n繃\tbang1\t繃帶\n繃\tmang2\t「繃maang1」的異讀字\n繒\tcang4\t「繒zang1」的異讀字\n繒\tzang1\t絲織品總稱\n繒\tzang6\t緊纏\n缽\tbut3\t缽頭，缽子，缽盂，托缽，擂缽，乳缽，沿門託缽\n罈\ttaam4\t罈子，骨罈，醋罈子\n罌\taang1\t罌粟，酒罌，瓦罌盛水酒的瓦器\n罌\tngaang1\t「罌aang1」的異讀字\n罌\tang1\t「罌aang1」的異讀字\n罌\tngang1\t「罌aang1」的異讀字\n网\tmong5\t同「網」字\n罰\tfat6\t罰款，賞罰，責罰，處罰\n罵\tmaa6\t罵人，咒罵，潑婦罵街，打情罵趣，指桑罵槐\n羆\tbei1\t非羆，熊羆\n羅\tlo4\t羅漢，羅織，羅致，羅列\n羈\tgei1\t羈絆，羈留，羈旅\n罷\tbaa6\t罷工，作罷，欲罷不能，罷休，罷手，罷免，罷官，罷戰，罷職，罷黜\n罷\tpei4\t同「疲」字\n義\tji6\t義理，義務，義氣，仁義，名義，意義\n羵\tfan4\t羵羊\n羨\tjin4\t同「埏」字\n羨\tsin6\t羨慕，豔羨，臨淵羨魚，欣羨，羨煞旁人\n羥\tcoeng1\t「羥koeng5」的異讀字\n羥\tkoeng5\t羥基氫氧原子團\n羶\tsaan1\t「羶sin1」的異讀字\n羶\tsin1\t「羶zin1」的異讀字\n羶\tzin1\t如蟻附羶羊身上的臊味\n羋\tme1\t羊叫聲\n羋\tme5\t「羋me1」的異讀字\n羋\tmei5\t(1)姓氏；(2)「羋me1」的異讀字\n翬\tfai1\t翬飛，鳥革翬飛\n翽\twai3\t鳥飛聲\n習\tzaap6\t習慣，練習，習以為常，習俗，習氣，習染，學習，修習，熏習，複習，補習，見習，實習，陋習，習非勝是，積習難改\n習\tzap6\t「習zaap3」的異讀字\n翹\tgiu6\t「翹kiu4」的異讀字\n翹\tkiu4\t翹楚，翹首\n耬\tlau4\t耬播，耬車\n聖\tsing3\t聖火，聖地，聖經，聖人，聖哲，聖賢，聖旨，聖雄，聖潔，聖靈，聖女，聖德，聖明，聖城，聖徒，聖恩，聖詩，聖典\n聰\tcung1\t聰明，聰敏，聰慧，聰穎，耳聰目明\n聯\tlyun4\t聯合，聯盟，聯絡，聯誼，聯想，聯袂，聯結\n聳\tsung2\t聳立，聳人聽聞，聳肩，聳動，高聳，危言聳聽\n職\tzik1\t職務，職業，職權，職責，職位，職能，職司，職守，職稱\n聹\tning4\t耵聹(耳垢，勿與「叮嚀」混淆)\n聾\tlung4\t聾啞，聾子\n聶\tnip6\t(1)姓氏，如戰國時的聶政；(2)附於耳逿細語\n聶\tsip3\t木葉動貌\n聲\tseng1\t「聲sing1」的異讀字，口語讀音\n聲\tsing1\t聲母，聲色，聲言，聲明，聲音，聲討，聲望，聲張，聲援，聲腔，聲勢，聲調，聲價，聲樂，聲辯，聲名狼藉，聲色俱厲，聲淚俱下，聲震遐邇，聲譽鵲起，雨聲，歌聲\n聵\tngoi6\t「聵kui2」的異讀字\n聵\tkui2\t聵眊，昏聵，振聾發聵\n聵\tkui3\t「聵kui2」的異讀字\n聵\twui6\t「聵kui2」的異讀字\n聞\tman2\t「聞man4」的異讀字\n聞\tman4\t新聞，聞名，聞知，聞所未聞\n聞\tman6\t聞人\n聽\tteng1\t(1)「聽ting1」的異讀字；(2)「聽ting3」的異讀字\n聽\tting1\t聽信，聽差，聽訟，聽從，聽診，聽話，聽聞，聽覺，聽而不聞\n聽\tting3\t聽任，聽便，聽憑，聽之任之，聽其自然\n肅\tsuk1\t嚴肅，肅立，肅穆，肅靜，肅清\n脩\tsau1\t脩金，束脩\n脣\tseon4\t嘴脣\n脹\tzoeng3\t膨脹，腫脹\n腸\tcoeng4\t腸胃，腸胃炎，腸胃病\n腦\tnou5\t腦袋，頭腦，腦滿腸肥，腦海，腦漿，腦殼，腦門，腦力，腦筋，腦部，腦汁，腦髓，腦神經，腦震盪，腦溢血，腦充血，腦膜炎，樟腦，探頭探腦\n腫\tzung2\t腫瘤，腫脹，腫大，腫起來\n膃\twat1\t膃肭(動物名)，膃肭獸，膃肭臍(中藥，俗稱海狗腎)\n膚\tfu1\t膚色，膚淺，皮膚，身無完膚，身體髮膚\n膠\tgaau1\t膠合，橡膠，塑膠，膠柱調瑟\n膕\tgwok3\t膝部的後面\n膞\tzyun1\t鳥類之胃、肫\n膽\tdaam2\t肝膽，膽量，膽識\n膾\tkui2\t膾炙人口\n臉\tlim5\t臉色，嘴臉，臉上無光\n膿\tnung4\t膿包，化膿，信口捏膿，膿腫，膿血\n臍\tci4\t臍帶，肚臍\n臗\tfun1\t同「髖」字\n臚\tlou4\t臚列，臚陳，臚情，臚歡\n臟\tzong6\t內臟，五臟六腑，心臟病\n脫\tteoi3\t脫脫\n脫\ttyut3\t脫離，脫落，脫胎\n脥\tgaap3\t同「頰」字，「脥」是「頰」的俗字\n脥\thim2\t腹下\n脥\thip3\t(1)腋下；(2)與「脅」字相通，意謂收歛\n腳\tgoek3\t腳步，腳踏實地，腳印，腳鐐，腳力，腳趾，腳夫\n腳\tgok3\t腳色(同角色)\n脅\thip3\t脅持，要脅，脅肩諂笑，脅逼，脅制，威脅，脅肩累足\n脅\thip6\t「脅hip3」的異讀字\n脈\tmaak6\t「脈mak6」的異讀字\n脈\tmak6\t脈動，脈絡，脈波，脈搏，脈衝，脈脈\n脛\tging3\t脛骨，不脛而走\n脛\thing5\t「脛ging3」的異讀字\n腎\tsan5\t「腎san5」的異讀字\n腎\tsan6\t腎臟，洗腎，雕肝琢腎，腎元，腎炎，腎虧，腎上腺，敗腎，補腎\n腡\tgwaa1\t「腡lo4」的異讀字\n腡\tlo4\t手指紋\n膢\tlau4\t古代祭名\n膢\tleoi4\t「膢lau4」的異讀字\n膩\tnau6\t「膩nei6」的異讀字\n膩\tnei6\t膩煩，油膩，肥膩，膩蟲，膩壤，滑膩\n膹\tfan5\t(1)肉羹；(2)切熟肉；(3)粗切生肉\n膹\tfei2\t「膹fan5」的異讀字\n臏\tban3\t臏足，舉鼎絕臏\n臏\tpan5\t「臏ban3」的異讀字\n臘\tlaap6\t臘月，臘八，臘日，臘肉，臘味，臘梅，臘鼓，臘鴨，臘八粥，年臘，戒臘；(1)陰曆十二月；(2)歲終的祭祀；(3)醃製的肉類；(4)僧受戒得度的年歲\n臘\tlip6\t「臘laap6」的異讀字\n臢\tzaam1\t「臢zim1」的異讀字\n臢\tzaan3\t「臢zim1」的異讀字\n臢\tzim1\t腌臢\n臢\tzim3\t「臢zim1」的異讀字\n臠\tlyun4\t「臠lyun5」的異讀字\n臠\tlyun5\t臠割，嘗鼎一臠\n臥\tngo6\t臥室，躺臥，臥薪嘗膽，臥姿，臥床，臥鋪，臥榻，臥遊，臥底，醉臥，仰臥，橫臥，臥虎藏龍，臥病在床，坐臥不安\n臨\tlam4\t臨摹，蒞臨，臨危受命，臨床，臨時，臨終，臨別，臨歧，臨界點，來臨，瀕臨，面臨，臨陣脫逃，臨淵羨魚，臨渴掘井，臨風顧盼，大禍臨頭\n臨\tlam6\t哭弔死者\n臺\ttoi4\t臺階，樓臺\n舉\tgeoi2\t舉動，舉止，舉辦，舉世，舉薦，舉債，舉棋不定，舉足輕重，舉手之勞，舉目無親，舉步維艱，舉手投足，舉一反三，科舉\n舊\tgau6\t舊式，舊事，舊時\n與\tjyu4\t同「歟」字\n與\tjyu5\t與其，施與，與日俱增，與人方便，與世無爭，與虎謀皮，與別不同\n與\tjyu6\t與聞，參與，與會\n興\tjan6\t同「釁」字\n興\thing1\t興亡，興旺，興衰，興訟，興盛，興隆，興奮，興利除弊，興風作浪，興師動眾，興滅繼絕，時興，振興\n興\thing3\t興味，興會，興頭，興趣，興致勃勃，興高彩烈，高興，掃興\n艙\tcong1\t艙房，艙底，船艙，貨艙\n艤\tngai5\t艤舟，艤船停船靠岸\n艦\tlaam6\t艦艇，艦隊，艦隻，戰艦\n艫\tlou4\t舳艫\n艱\tgaan1\t艱苦，時艱，舉步維艱，艱辛，艱難，艱鉅，艱澀，艱深，艱貞，艱虞，艱苦卓絕\n艷\tjim6\t艷麗，艷陽，艷舞，艷羨，艷福，艷陽天，艷事，艷福不淺，艷色\n芻\tco1\t芻議，反芻，芻狗\n荊\tging1\t荊棘，負荊請罪\n莢\tgaap3\t豆莢，蓂莢，莢果\n莧\tjin6\t莧菜\n莊\tzong1\t莊重，莊稼，莊嚴，莊敬自強，莊園，茶莊，康莊大道\n萇\tcoeng4\t萇楚\n菸\tjin1\t菸葉，菸草，菸酒，菸絲\n萊\tloi4\t萊菔\n葷\tfan1\t葷腥，葷食，葷菜\n葒\thung4\t葒草\n葦\twai5\t蘆葦\n萵\two1\t萵苣\n萴\tzak1\t藥名\n蒞\tlei6\t蒞臨，蒞任，蒞蒞；(1)到來；(2)象聲詞，象水流聲\n蓀\tsyun1\t蘭蓀(香草，喻具美德的賢士)一種香草\n蔔\tbaak6\t蘿蔔，胡蘿蔔，花心蘿蔔\n蓽\tbat1\t蓽門，蓽路藍縷，蓬蓽，蓬蓽生輝荊竹樹枝等物編成的籬笆\n蔯\tcan4\t茵蔯\n蔥\tcung1\t蔥嶺，蔥蒜，蔥綠，青蔥，蔥蔥郁郁\n蓯\tcung1\t蓯蓉，蘢蓯\n蓮\tlin4\t蓮花，蓮池，蓮座，金蓮，蓮蓬\n蔦\tniu5\t蔦蘿\n蓴\tseon4\t蓴菜\n蕩\tdong6\t蕩婦，放蕩，蕩然無存，蕩漾，蕩船，蕩寇，遊蕩，蕩氣回腸\n蕢\tgwai6\t盛土之草包\n蕕\tjau4\t薰蕕同器\n蕘\tjiu4\t蕘花，芻蕘\n蕎\tkiu4\t蕎麥，蕎麵\n蕪\tmou4\t蕪雜，荒蕪，蕪湖\n蕭\tsiu1\t蕭條，蕭瑟，蕭然，禍起蕭牆\n蕓\twan4\t蕓薹\n蕝\tzyut3\t蕝茅\n薘\tdaat6\t車前草\n薊\tgai3\t薊馬，大薊\n薑\tgoeng1\t薑餅，薑汁\n蕷\tjyu6\t薯蕷\n藍\tlaam4\t藍色，藍圖，藍天，藍本，湛藍，青出於藍\n薴\tning4\t薺薴(植物名)\n薩\tsaat3\t菩薩，薩滿教\n薹\ttoi4\t薹菜，蕓薹\n薦\tzin3\t薦任，薦舉，保薦，引薦\n藭\tkung4\t芎藭\n藝\tngai6\t藝術，藝高膽大，才藝，手藝\n藪\tsau2\t淵藪，藪澤，藪幽，利藪(利之所在)，盜藪(賊窩)；(1)走獸所聚之處；(2)密生雜草的湖澤；(3)人物聚集之地\n蘄\tkei4\t蘄求\n藺\tleon6\t馬藺姓氏\n藶\tlik6\t葶藶\n蘆\tlou4\t蘆葦，蘆薈，依樣葫蘆，蘆竹，蘆洲，蘆筍，蘆花\n蘢\tlung4\t蘢蔥\n蘇\tsou1\t紫蘇，白蘇，江蘇姓氏\n蘀\ttok3\t草木脫落的皮或葉\n蘭\tlaan4\t蘭花，蘭閨，蘭臺，蘭湯，蘭若，偑蘭，幽蘭，蕙質蘭心\n蘚\tsin2\t苔蘚，白蘚，蘚帽，蘚書\n蘺\tlei4\t江蘺\n蘿\tlo4\t蘿蔔，女蘿\n虆\tleoi4\t(1)藤蔓；(2)纏繞；(3)土筐\n茲\tci4\t龜茲\n茲\tzi1\t茲日，茲事體大，今茲，來茲\n華\tfaa1\t華嚴宗，春華秋實\n華\twaa4\t華夏，精華，華而不實，華麗，華美，華人，華僑，華胄，華裔，華表，光華，韶華，年華，中華，華亭鶴唳，華屋山丘，含英咀華\n華\twaa6\t姓氏\n葉\tjip6\t葉舟，葉拱而對，葉落知秋，葉落歸根，枝葉，樹葉\n葉\tsip3\t姓氏\n葯\tjoek3\t花葯白芷\n葯\tjoek6\t同「藥」字\n萬\tmaak6\t「萬俟」，複姓\n萬\tmaan6\t萬全，萬能，萬不得已，萬無一失，萬劫不復，萬念俱灰，萬眾一心\n蒼\tcong1\t蒼白，蒼生\n蒼\tcong2\t莽蒼\n蒔\tsi4\t蒔蘿\n蒔\tsi6\t蒔花\n蔭\tjam1\t同「陰」字\n蔭\tjam3\t蔭庇，蔭蔽，蔭棚，蔭封，蔭涼，蔭翳，庇蔭，綠蔭，官蔭，遮蔭，樹蔭，餘蔭\n蔞\tlau4\t蔞蒿\n蔞\tlau5\t蔞翣\n蔣\tzoeng1\t菰蔣\n蔣\tzoeng2\t姓氏\n葝\tging3\t鼠尾草的別稱\n葝\tking4\t生於山中的野薤菜\n薌\thoeng1\t一種香草\n薌\thoeng2\t通「響」字\n薔\tsik1\t(1)姓氏；(2)水草名稱\n薔\tcoeng4\t薔薇\n蔘\tsaam1\t蔘綏(下垂)\n蔘\tsaam2\t初生的葦草\n蔘\tsam1\t(1)同「參」字，意指人參；(2)同「槮」字，形容樹木高聳\n薺\tcai4\t荸薺\n薺\tcai5\t薺菜\n薺\tci4\t通「茨」字\n藥\tjoek6\t藥材，火藥，藥石無靈，藥劑師，藥房，藥物，藥劑，藥商，藥師，藥廠，藥水，藥膏，藥效，藥包，藥方，藥局，藥用，藥酒，藥性，藥店，藥味，藥粉，藥瓶，藥行，藥量，藥丸，藥學，藥單，藥草，藥理學，藥典，藥箱，藥片，藥王，藥液，藥引，藥石，藥罐，藥力，藥餌\n藥\tngok6\t姓氏\n藷\tsyu4\t同「薯」字\n藷\tzyu1\t藷蔗\n蘋\tpan4\t草名\n蘋\tping4\t蘋果\n莖\thang4\t「莖ging3」的異讀字\n莖\tging1\t「莖ging3」的異讀字\n莖\tging3\t花莖，根莖，球莖，枯莖朽骨\n菴\tam1\t尼菴，菴堂，菴羅\n菴\tngam1\t「菴am1」的異讀字\n蒍\twai2\t(1)一種草；(2)姓氏；(3)地名\n蒍\twai5\t「蒍wai2」的異讀字\n蒐\tsau1\t蒐集，蒐羅，春蒐(春季展開的狩獵)，蒐證，蒐購，蒐求\n蒐\tsau2\t「蒐sau2」的異讀字\n蓆\tzek6\t「蓆zik6」的異讀字，口語讀音\n蓆\tzik6\t蓆子，竹蓆，草蓆，枕蓆，涼蓆\n蕁\tcam4\t蕁麻，蕁麻疹\n蕁\tcim4\t「蕁cam4」的異讀字\n蕆\tcin2\t解決、完成\n蕆\tzin2\t「蕆cin2」的異讀字\n薈\twai3\t人文薈萃，蘆薈，薈蔚，翳薈\n薈\tkui2\t「薈wai3」的異讀字\n薈\twui3\t「薈wai3」的異讀字\n薈\twui6\t「薈wai3」的異讀字\n薆\toi3\t薆然，蓊薆，薆薆；(1)隱蔽；(2)草木茂盛貌\n薆\tngoi3\t「薆oi3」的異讀字\n薀\twan2\t積聚\n薀\twan3\t「薀wan2」的異讀字\n藎\tzeon2\t藎草，忠藎，藎臣，藎篋\n藎\tzeon6\t「藎zeon2」的異讀字\n藹\toi2\t和藹可親，藹然\n藹\tngoi2\t「藹oi2」的異讀字\n蘊\twan2\t蘊藏，底蘊，蘊結\n蘊\twan3\t「蘊wan2」的異讀字\n蘊\twan5\t「蘊wan2」的異讀字\n蓋\tgap3\t姓氏\n蓋\thap6\t同「盍」字\n蓋\tgoi3\t蓋印，掩蓋，蓋棺論定，蓋巾，蓋天，蓋世，蓋代，蓋章，蓋頭，蓋世太保，覆蓋\n蓋\tkoi3\t「蓋goi3」的異讀字\n薟\tcim1\t豨薟\n薟\thim1\t「薟cim1」的異讀字\n薟\tlim5\t白薟\n薟\tlim6\t「薟lim5」的異讀字\n薳\twai2\t姓氏\n薳\twai5\t「薳wai2」的異讀字\n薳\tjyun5\t薳志\n蘞\tlim4\t草名\n蘞\tlim5\t同「薟」字\n蘞\tlim6\t「蘞lim4」的異讀字\n虛\theoi1\t虛弱，虛偽，虛實，虛心，心虛，空虛，虛位以待\n虜\tlou5\t俘虜，虜獲，強虜，胡虜；(1)擒獲；(2)搶奪；(3)戰俘；(4)奴僕\n虧\tkwai1\t理虧，吃虧，虧本，幸虧，功虧一簣，虧心事，虧空，虧欠，血虧\n處\tcyu2\t處士，處女，處方，處分，處世，處決，處理，處暑，處置，處境，處罰，處之泰然，處心積慮，判處\n處\tcyu3\t處所，用處，好處，住處，長處\n處\tsyu3\t粵語用字\n號\thou4\t號叫，號哭，號喪，號啕，怒號\n號\thou6\t號令，號外，號召，號角，號稱，國號，符號\n虯\tkau4\t虯龍，虯髯，虯蟠\n蛺\tgaap3\t蛺蝶\n蜆\thin2\t軟體動物\n蝨\tsat1\t蝨子，頭蝨，跳蝨\n蝟\twai6\t刺蝟，蝟集\n螢\tjing4\t螢幕，螢光，雪案螢窗\n螄\tsi1\t螺螄\n螮\tdai3\t螮蝀\n蟈\tgwok3\t昆蟲名\n螻\tlau4\t螻蟻，螻蛄\n螿\tzoeng1\t寒螿\n蟂\tgiu1\t水獺一類的動物\n蟲\tcung4\t昆蟲，蟲類，害蟲，懶蟲，蠹蟲，毛蟲\n蟜\tgiu2\t夭蟜\n蟳\tcing4\n蠆\tcaai3\t蠆芥，蠆尾，水蠆\n蟶\tcing1\t蟶子，蟶乾一種海產貝類\n蠅\tjing4\t蠅虎，蒼蠅，蠅頭小利，蠅蛆病，果蠅，如蠅逐臭\n蟻\tngai5\t螞蟻\n蠐\tcai4\t蠐螬\n蠔\thou4\t蠔油，生蠔\n蠑\twing4\t蠑螈，蠑螺\n蠟\tlaap6\t蠟燭，蠟像，味同嚼蠟，蠟油，蠟染，蠟炬，蠟板印刷\n蠣\tlai6\t牡蠣\n蠦\tlou4\t蠦蜰\n蠨\tsiu1\t蠨蛸\n蠱\tgu2\t蠱毒，蠱惑，巫蠱；(1)毒害人的小蟲；(2)迷惑；(3)《易》卦名一\n蠶\tcaam4\t蠶蛾，蠶絲，蠶食鯨吞，蠶豆，蠶桑\n蠻\tmaan4\t蠻橫，蠻幹，蠻荒，蠻行，野蠻\n蛻\tseoi3\t同義異讀\n蛻\tteoi3\t蛻化，蛻皮，蛻變，蛇蛻，嬋蛻\n蝦\thaa1\t蝦米，蝦蟹，蝦鬚，蝦兵蟹將\n蝦\thaa4\t蝦蟆\n螞\tmaa1\t螞螂\n螞\tmaa5\t螞蟻\n螞\tmaa6\t螞蚱\n蟣\tgei2\t蟣蝨相弔\n蟣\tkei4\t水蛭\n蝕\tsik6\t蝕本，日蝕，腐蝕，月蝕，虧蝕，侵蝕\n蝕\tsit6\t「蝕sik6」的異讀字，粵語用字\n蝸\tgwaa1\t「蝸wo1」的異讀字\n蝸\twaa1\t「蝸wo1」的異讀字\n蝸\two1\t蝸牛，蝸居\n蟄\tzaap6\t「蟄zat6」的異讀字\n蟄\tzat6\t驚蟄(二十四節氣之一)，蟄伏，蟄居，蟄獸，蟄雷；(1)冬眠中的動物；(2)隱藏潛伏\n蟄\tzik6\t「蟄zat6」的異讀字\n蟄\tzit3\t「蟄zat6」的異讀字\n蟘\tdak6\t吃苗葉的害蟲\n蟘\tdat6\t「蟘dak6」的異讀字\n蠁\thoeng2\t(1)土蛹；(2)醯雞\n蠁\thoeng3\t「蠁hoeng2」的異讀字\n蟯\tnaau4\t「蟯jiu4」的異讀字\n蟯\tjiu4\t蟯蟲\n蟬\tsim4\t蟬聯(連任)，蟬蛻，寒蟬，噤若寒蟬\n蟬\tsin4\t「蟬sim4」的異讀字\n蠍\thit3\t蠍子，蛇蠍，剔蠍撩蜂同「蝎」字\n蠍\tkit3\t「蠍hit3」的異讀字\n衊\tmit6\t誣衊，污衊\n術\tseot6\t技術，術士，術語，術數\n衛\twai6\t衛生，衛星，守衛\n衚\twu4\t衚衕\n衕\tdung6\t腹瀉\n衕\ttung4\t衚衕\n衝\tcung1\t衝突，衝動，衝鋒陷陣，衝刺，衝撞，衝擊，要衝，衝口而出，首當其衝\n衝\tcung3\t(1)猛烈；(2)向著\n補\tbou2\t補償，補充，補救，補給，補綴，補白\n裝\tzong1\t裝置，裝備，裝飾，裝甲，裝卸，裝配，裝載，裝扮，裝修，裝璜，裝模作樣，裝蒜\n複\tfuk1\t重複，複雜\n褌\tgwan1\t褲子\n製\tzai3\t製造，製作，製品，製成，製圖，製版，複製，粗製濫造\n褲\tfu3\t褲子，褲袋，短褲，褲管，褲襪，褲帶，褲腰，褲腳，褲裙，褲襠\n褳\tlin4\t褡褳\n襉\tgaan2\t衣服上之摺子\n褻\tsit3\t褻衣，褻玩，褻瀆，猥褻，褻瀆神明；(1)貼身衣服；(2)輕慢；(3)汙穢；(4)親近\n襓\tjiu4\t劍套\n襠\tdong1\t褲襠，開襠褲，裲襠(古代婦女穿著的背心)\n襤\tlaam4\t襤褸，篳路襤褸\n襬\tbaai2\t下襬，直襬(古代的家居常服；後指僧服)上衣、裙子等的下緣部分\n襯\tcan3\t襯衫，襯托，襯衣，配襯\n襴\tlaan4\t襴裙\n褘\tfai1\t古王后祭服\n褘\twai4\t婦人用以蔽膝物\n袞\tgwan2\t袞袞諸公，袞服\n袞\tkwan2\t「袞gwan2」的異讀字，口語讀音\n裡\tlei5\t「裡leoi5」的異讀字\n裡\tleoi5\t同「\n裊\tniu1\t「裊niu5」的異讀字\n裊\tniu5\t裊繞，裊娜\n襆\tbuk6\t「襆fuk6」的異讀字\n襆\tfuk6\t包襆\n襏\tbut3\t「襏but6」的異讀字\n襏\tbut6\t襏襫\n襗\tzaak6\t寒不施襗\n襗\tdok6\t「襗zaak6」的異讀字\n襘\tkui2\t「襘kui3」的異讀字\n襘\tkui3\t(1)古指消除災病；(2)古凶禮之一\n襝\tlim5\t襝衽\n襝\tlim6\t「襝lim5」的異讀字\n襖\tou2\t棉襖，夾襖\n襖\tou3\t「襖ou2」的異讀字\n襖\tngou2\t「襖ou2」的異讀字\n襖\tngou3\t「襖ou2」的異讀字\n襪\tmaat6\t「襪mat6」的異讀字\n襪\tmat6\t襪子，襪帶，襪線，衣襪，布襪，絲襪\n襲\tzaap6\t襲擊，襲取，世襲，因襲，抄襲，偷襲\n襲\tzap6\t「襲zaap6」的異讀字\n褸\tlau1\t粵語用字，意指「大衣」\n褸\tlau5\t「褸leoi5」的異讀字\n褸\tleoi5\t襤褸\n覈\that6\t同「核」字\n規\tkwai1\t規矩，規定，規劃，規模，規則，規條\n覓\tmik6\t覓得，覓食，覓保，覓句\n視\tsi6\t視覺，視力，電視，漠視，忽視，怒目而視，虎視眈眈\n覡\that6\t巫覡(說文解字：能齋肅事神明者，在男曰覡，在女曰巫。)男巫\n覷\tceoi3\t覷步，覷付，覷空，覷絕，覷眼，打覷，偷覷，觀覷，可覷，面面相覷，小覷；(1)窺視；(2)看\n覹\tmei4\t窺視、探察\n覽\tlaam5\t覽勝，便覽，泛覽，閱覽，遊覽\n覿\tdik6\t覿武，覿面(當面)，眇覿；(1)相見；(2)拜訪\n見\tgin3\t見外，見效，見習，見解，見聞，見機，見證，見識，見仁見智，見異思遷，見義勇為，見微知著，見獵心喜，主見，看見，遠見，真知灼見\n見\tjin6\t見龍在田\n親\tcan1\t親友，親切，親信，親族，親善，親貴，親暱，雙親，親痛仇快\n親\tcan3\t親家\n覺\tgaau3\t午覺，睡覺\n覺\tgok3\t覺悟，覺得，覺察，覺醒，知覺，味覺，視覺，感覺，聽覺\n觀\tgun1\t觀光，觀念，觀音，觀看，觀風，觀望，觀測，觀感，觀察，觀摩，觀賞，觀禮，觀點，觀往知來，觀過知仁，奇觀，參觀，人生觀，洞若觀火\n觀\tgun3\t道觀，庵觀，鼻觀\n覘\tcim1\t「覘zim1」的異讀字\n覘\tzim1\t偷看\n覦\tjyu4\t覬覦\n覦\tjyu6\t「覦jyu4」的異讀字\n覯\tgau3\t罕覯\n覯\tkau3\t「覯gau3」的異讀字\n覬\tgei3\t覬覦(存非分之想)\n覬\tkei3\t「覬gei3」的異讀字\n覲\tgan2\t「覲gan6」的異讀字\n覲\tgan3\t「覲gan6」的異讀字\n覲\tgan6\t覲見，覲禮，朝覲\n覛\tmak6\t察看\n覛\tmik6\t(1)同「覓」字；(2)「覛mak6」的異讀字\n觴\tsoeng1\t觴詠\n觶\tzi1\t「觶zi3」的異讀字\n觶\tzi3\t古代飲酒器\n觸\tcuk1\t「觸zuk1」的異讀字\n觸\tzuk1\t觸覺，感觸，觸類旁通，觸犯，觸及，觸角，觸動，接觸，一觸即發，觸目驚心，觸景生情\n訃\tfu6\t訃聞，訃告\n訓\tfan3\t訓練，訓導，訓誡，訓令，訓斥，訓示，教訓\n記\tgei3\t記者，記錄，記載，記憶，記取，記號，記住，記憶猶新，記敘，記誦\n訒\tjan6\t其言也訒言語遲緩、謹慎\n訕\tsaan3\t訕笑，訕議，搭訕(攀談)，訕訕(難為情貌)；(1)嘲諷；(2)誹謗\n訊\tseon3\t訊息，訊號，審訊，資訊\n託\ttok3\t託付，託夢，託管，託辭，託大，託孤，託福，交託，寄託\n討\ttou2\t討論，討厭，討教，討價還價，檢討\n設\tcit3\t設計，設備，設立，設置，設施，設想，設身處地\n訪\tfong2\t訪問，探訪，明查暗訪，訪客，訪求，訪親，採訪\n訣\tkyut3\t訣竅，要訣，訣別\n訝\tngaa6\t訝異，驚訝\n訛\tngo4\t訛詐，訛傳，訛言\n訟\tzung6\t訟案，訟費，訟事\n訞\tjiu1\t(1)同「妖」字；(2)巧言的樣子\n詞\tci4\t詞彙，詩詞，義正詞嚴，詞語，詞曲，詞句，詞意，詞令，詞典，詞牌，詞藻，詞人，詞章，言詞，講詞，單詞，詞鋒銳利，詞不達意\n詆\tdai2\t詆毀，詆譭\n詎\tgeoi6\t詎料，詎意，詎知\n訶\tho1\t同「呵」字\n評\tping4\t評估，評價，評論，評議，評分，批評\n訴\tsou3\t訴求，訴訟，訴願，訴請，訴苦，訴說，訴冤\n詠\twing6\t詠嘆，吟詠，歌詠，詠絮之才\n詐\tzaa3\t詐騙，欺詐，詐稱，詐死，敲詐，爾虞我詐\n証\tzing3\t同「證」字，「証」是「證」的俗字\n註\tzyu3\t註冊，註明，註解，註銷，註腳，註釋\n詊\tpun3\t巧言\n詫\tcaa3\t詫異，驚詫\n詮\tcyun4\t詮釋，詮說，真詮\n詼\tfui1\t詼諧\n該\tgoi1\t該當，活該，應該，命不該絕\n詭\tgwai2\t詭異，詭譎，詭辯，詭詐，詭計，詭奇，詭辭，弔詭；(1)欺詐；(2)奇異\n詡\theoi2\t自詡，誇詡\n誇\tkwaa1\t誇張，誇大，浮誇\n詣\tngai6\t造詣，苦心孤詣，詣闕(到天子的宮闕見駕)；(1)拜訪、進見上級；(2)修為境界\n詢\tseon1\t詢問，查詢\n詩\tsi1\t詩人，詩詞，詩歌，詩意，詩興，詩篇，詩情畫意\n誠\tsing4\t誠意，誠懇，誠實，誠信，誠心\n話\twaa6\t說話，話題，話語，話柄，話筒，話頭，話別，話舊\n誅\tzyu1\t誅滅，誅殺，誅戮，誅心之論，天誅地滅，伏誅\n誨\tfui3\t誨人不倦，教誨\n誡\tgaai3\t誡律，告誡\n誋\tgei6\t(1)告誡；(2)禁忌\n誥\tgou3\t誥封，誥命，誥誡，制誥\n誘\tjau5\t誘惑，誘人\n誣\tmou4\t誣陷，誣告，誣賴，誣蔑，誣衊，誣害，誣控，誣詆\n誤\tng6\t誤會，誤解，誤導，誤傳，誤入歧途，誤殺，誤打誤撞，誤闖，誤人子弟，誤用，誤事，誤人誤己，誤時\n誌\tzi3\t誌喜，誌慶，雜誌\n誦\tzung6\t誦經，誦讀，誦習\n誫\tzan3\t同「震」字\n諂\tcim2\t諂媚，諂笑，脅肩諂笑\n諑\tdoek3\t謠諑\n誹\tfei2\t誹謗\n課\tfo3\t課題，課稅，課外活動，課程，課業，課本，課室，課堂，課目，課文，課程標準\n諛\tjyu4\t諛詞，諂諛，阿諛奉承\n誾\tngan4\t誾誾\n誰\tseoi4\t誰人\n談\ttaam4\t談判，談話，談論，談心，談天，談吐，談笑，談笑風生，談天說地，談虎色變，談笑自若\n諉\twai2\t諉過\n諏\tzau1\t諮諏，諏訪，諏吉；(1)商量､諮詢；(2)選擇\n諸\tzyu1\t諸公，諸葛，諸君，諸侯，諸子百家，失諸交臂\n諦\tdai3\t真諦，妙諦，諦視，諦聽\n諜\tdip6\t諜報，間諜，諜諜；(1)祕密打探情報；(2)同「喋」字\n諷\tfung3\t諷刺，反諷，諷諭，諷誦，嘲諷\n諫\tgaan3\t勸諫\n諧\thaai4\t諧音，諧和，諧謔，諧趣，諧音，詼諧，和諧\n諴\thaam4\t和協\n諺\tjin6\t諺語，謠諺，古諺，俚諺，民間口傳\n謔\tjoek6\t謔稱，謔而不虐，戲謔\n諭\tjyu6\t諭示，諭旨，訓諭\n謀\tmau4\t陰謀，謀求，謀生，謀殺，謀取，謀職，謀利，謀略，謀事，謀反\n諤\tngok6\t正直之言\n諾\tnok6\t諾言\n諶\tsam4\t(1)相信；(2)真誠\n謂\twai6\t稱謂，無謂，謂語，所謂\n諢\twan6\t諢名，諢話，插科打諢戲謔的言辭\n諮\tzi1\t諮商，諮詢，諮議\n講\tgong2\t講話，演講，講義\n謙\thim1\t謙虛，謙和，謙稱，謙讓，謙恭，謙詞，謙辭\n謠\tjiu4\t謠言，歌謠，闢謠，謠傳，民謠，童謠\n謐\tmat6\t安謐，靜謐，恬謐，寧謐\n謆\tsin3\t以言惑人\n謖\tsuk1\t謖謖，謖爾，馬謖\n謄\ttang4\t謄錄，謄寫，謄清，謄本\n謝\tze6\t謝忱，凋謝，敬謝不敏，謝恩，謝意，謝禮，謝罪，謝絕，謝幕，謝師宴，答謝，道謝，鳴謝，感謝，酬謝，辭謝，新陳代謝\n謹\tgan2\t謹慎，謹防，嚴謹，謹小慎微，謹言慎行，謹記在心\n謬\tmau6\t謬誤，謬論\n謨\tmou4\t典謨\n謫\tzaak6\t謫仙，貶謫，遷謫\n譏\tgei1\t譏笑，譏諷，反脣相譏，譏評，譏刺\n譆\thei1\t譆譆出出(形容鬼神的聲音)\n譊\tnaau4\t(1)爭辯；(2)喧囂\n譜\tpou2\t譜寫，譜子，譜系，曲譜\n譚\ttaam4\t(1)同「談」字；(2)姓氏\n譁\twaa1\t譁然，諠譁，譁眾取寵\n證\tzing3\t證明，證實，證據，證件，證書，證物，證道，證驗，證悟\n譑\tgiu2\t收取\n譂\tcin2\t虛妄的言論\n譟\tcou3\t同「噪」字\n譯\tjik6\t譯音，翻譯，譯註，譯者，譯筆\n譨\tnung4\t多言\n譭\twai2\t同「毀」字\n譫\tzim1\t譫妄，譫語\n譴\thin2\t譴責\n譅\tsap1\t訥譅\n護\twu6\t護士，護理，護送，護衛，護短，護持，護花\n譸\tzau1\t詛咒\n讅\tsam2\t讅悉\n譾\tzin2\t譾薄，材譾，學識譾陋淺薄\n變\tbin3\t變化，演變，變更\n讌\tjin3\t同「醼」字\n讋\tzip3\t讋服，震讋，讋敵；(1)懼怕；(2)懾服\n讒\tcaam4\t讒臣，進讒，讒言佞語，讒害，讒間，聽讒惑亂；(1)說他人壞話；(2)顛倒是非以中傷別人的人\n讓\tjoeng6\t讓步，謙讓，退位讓賢，出讓，讓路，讓座，讓受人\n讚\tzaan3\t讚賞，頌讚，讚不絕口，讚美，讚許，讚揚，讚譽，讚嘆，稱讚，盛讚，誇讚\n讜\tdong2\t讜論\n訑\tdaan3\t通「誕」字\n訑\tji4\t訑訑(洋洋自得的樣子)\n許\theoi2\t許可，許願，默許，嘉許，容許，特許，寧許，也許，少許\n許\tfu2\t邪許(《淮南子˙道應》：「今夫舉大木者，前呼邪許，後亦應之，此舉重勸力之歌也。」)\n訢\tjan1\t同「欣」字\n訢\tngan4\t訢訢(又寫作誾誾，恭謹誠敬的樣子)\n訢\thei1\t訢合(和氣交感，又泛指意氣相投)\n詘\twat1\t詘指，詘寸伸尺，充詘(得意忘形)，撙詘(謙卑)；(1)彎曲；(2)言語鈍拙；(3)冤屈；(4)\n詘\tzeot1\t貶低，同「黜」字\n詑\tji4\t詑詑(自得的樣子)淺意\n詑\tto4\t欺\n詑\tto5\t輕\n詳\tcoeng4\t詳細，安詳\n詳\tjoeng4\t同「佯」字\n詵\tsaang2\t粵語用字\n詵\tsan1\t發言、詢問\n詷\tdung6\t(1)說謊；(2)會；(3)調；(4)儈\n詷\ttung4\t共同\n語\tjyu5\t語言，詞語，語重心長，語塞，語系，語法，語音，語病，語氣，語彙，語意，語調，語錄，語無倫次，語焉不詳，成語，俗語\n語\tjyu6\t動詞，意謂告訴\n說\tseoi3\t說服，遊說，說客\n說\tjyut6\t同「悅」字\n說\tsyut3\t說明，說笑，說話，說教，說謊，小說，傳說\n論\tleon4\t在詩文中為平仄所限時的讀音，據《粵正》\n論\tleon6\t論文，論列，論交，論旨，論述，論理，論著，論說，論敵，論調，論壇，論據，論戰，論點，論題，論斷，論證，論難，論辯，討論，結論\n諒\tloeng4\t諒陰，子諒\n諒\tloeng6\t諒解，諒必\n誺\tci1\t(1)不知；(2)以言相誣\n誺\tloi6\t吳\n諞\tpin4\t巧言\n諞\tpin5\t自誇\n謱\tleoi5\t委曲\n謱\tlou4\t謰謱(形容委曲繁雜，絮語不清)\n謾\tmaan4\t欺謾，謾天謾地，訑謾，誖謾\n謾\tmaan6\t謾罵，誕謾，謾道\n謯\tzaa2\t謯訝(大聲斥責)\n謯\tze1\t(1)愚鈍；(2)吟詠\n謯\tzo3\t同「詛」字，意指詛咒\n識\tzi3\t款識，標識，默識，博聞強識\n識\tsik1\t識丁，識見，識別，識拔，識相，識破，識荊，識羞，識貨，識趣，識鑒，常識，認識，學識\n讀\tdau6\t句讀\n讀\tduk6\t讀書，朗讀，讀本，讀者，讀物，閱讀，誦讀，宣讀，讀數，讀秒，讀卡機，讀脣術，三讀，攻讀，破讀，唯讀記憶體\n訂\tdeng6\t「訂ding3」的異讀字\n訂\tding3\t訂約，預訂，緣訂三生，訂盟，訂購，訂閱，訂貨單，訂交，訂金，編訂，擬訂，釐訂，考訂，校訂，簽訂，修訂，增訂，合訂本\n計\tgai3\t計畫，計算，計較，計數，估計，計謀\n計\tgei3\t「計gai3」的異讀字\n訖\tgat1\t「訖ngat6」的異讀字\n訖\tngat6\t收訖，查訖，起訖，驗訖\n訌\thung3\t「訌hung4」的異讀字\n訌\thung4\t訌亂，內訌\n訌\thung6\t「訌hung4」的異讀字\n訐\tgit3\t「訐kit3」的異讀字\n訐\tkit3\t攻訐，訐發，訐告，訐揚揭發、攻擊別人的隱私\n訥\tnaap6\t「訥neot6」的異讀字\n訥\tnat6\t「訥neot6」的異讀字\n訥\tneot6\t訥澀，木訥，訥言敏行，訥口\n詖\tbei1\t「詖bei3」的異讀字\n詖\tbei3\t詖行，詖辭\n詖\tpei4\t「詖bei3」的異讀字\n診\tcan2\t診治，診所，診脈，診視，診療，診斷，門診，應診\n診\tzan2\t「診can2」的異讀字\n詁\tgu2\t訓詁\n詁\tgu3\t「詁gu2」的異讀字\n詗\tgwing2\t「詗hing3」的異讀字\n詗\thing3\t詗伺，詗察，詗邏\n詔\tziu3\t詔令，詔旨，詔制，詔書，詔獄，詔告天下，詔書掛壁\n詔\tziu6\t「詔ziu3」的異讀字\n詛\tzo2\t「詛zo3」的異讀字\n詛\tzo3\t詛咒，詛罵\n詬\tgau3\t詬病，詬罵，尤詬；(1)恥辱；(2)指責\n詬\tkau3\t「詬gau3」的異讀字\n詿\tgwaa3\t詿誤\n詿\twaa6\t「詿gwaa3」的異讀字\n誆\tgwaang6\t「誆hong1」的異讀字\n誆\tgwong6\t「誆hong1」的異讀字\n誆\thong1\t誆哄，誆騙，誆言詐語\n詰\tgat1\t「詰kit3」的異讀字\n詰\tkit3\t反詰，詰問，詰責，詰難；(1)責問；(2)追究\n誄\tleoi5\t「誄loi6」的異讀字\n誄\tleoi6\t「誄loi6」的異讀字\n誄\tloi6\t誄辭，哀誄，誄讚；(1)哀祭文；(2)述死者功德\n試\tsi3\t試驗，嘗試，初試啼聲，試金石，試卷，試探，試問，試想，試圖，試刀，試帖，試管，試婚，考試，測試，比試，筆試，面試，口試，石蕊試紙，小試牛刀，屢試不爽\n試\tsi5\t「試si3」的異讀字\n誚\tciu3\t誚讓，譏誚，詆誚，誚呵\n誚\tziu6\t「誚ciu3」的異讀字\n誒\te6\t語助詞\n誒\tei6\t「誒e6」的異讀字\n誑\tgwong2\t誑語，誑惑，誑騙，欺誑\n誑\tgwong3\t「誑gwong2」的異讀字\n誑\tkong4\t「誑gwong2」的異讀字\n誑\twong2\t「誑gwong2」的異讀字\n認\tjan6\t「認jing6」的異讀字\n認\tjing6\t認識，認可，認同，認定，認真，公認，承認\n誕\tdaan3\t誕生，誕辰\n誕\tdaan6\t「誕dann3」的異讀字\n諄\tdeon1\t「諄zeon1」的異讀字\n諄\tzeon1\t諄託，諄復，諄囑，諄諄告誡，諄諄教導\n誼\tji4\t「誼ji6」的異讀字\n誼\tji6\t誼士，友誼，仁誼，情誼，鄉誼\n誶\tseoi3\t「誶seoi6」的異讀字\n誶\tseoi6\t誶語，詬誶，朝誶夕替責問\n諳\tam1\t諳練，諳熟，諳習，不諳世務；(1)熟悉；(2)記誦\n諳\tam2\t「諳am1」的異讀字\n諳\tngam1\t「諳am1」的異讀字\n諼\thyun1\t永矢弗諼，馮諼彈鋏\n諼\thyun2\t「諼hyun1」的異讀字\n謁\tjit3\t謁見，拜謁，謁告，謁者，謁刺，謁舍，謁急，謁陵，謁歸，進謁；(1)名片；(2)稟明；(3)進見\n謁\tkit3\t「謁jit3」的異讀字\n謏\tsau2\t「謏siu2」的異讀字\n謏\tsiu2\t謏才，謏聞\n諝\tseoi1\t謀無遺諝\n諝\tseoi2\t「諝seoi1」的異讀字\n諰\tsaai2\t擔心害怕的樣子\n諰\tsi2\t「諰saai2」的異讀字\n諡\tsi3\t同「謚」字\n諡\tsi6\t「諡si3」的異讀字\n諱\twai3\t「諱wai5」的異讀字\n諱\twai5\t諱言，諱莫如深，諱疾忌醫\n諯\tcyun3\t「諯zyun1」的異讀字\n諯\tsyun4\t「諯zyun1」的異讀字\n諯\tzyun1\t責罵\n謊\tfong1\t謊言，謊花，說謊，彌天大謊\n謊\tfong2\t「謊fong1」的異讀字\n謎\tmai4\t謎團，啞謎，猜謎語，謎面，謎底，燈謎，打謎\n謎\tmai6\t「謎mai4」的異讀字\n謗\tbong3\t「謗pong3」的異讀字\n謗\tpong3\t誹謗，毀謗\n謚\tsi3\t謚號，追謚，私謚人死後封號\n謚\tsi6\t「謚si3」的異讀字\n謅\tzau1\t瞎謅，胡吹亂謅\n謅\tzau3\t「謅zau1」的異讀字，用於口語\n謳\tau1\t謳歌\n謳\tngau1\t「謳au1」的異讀字\n譖\tcam3\t「譖zam3」的異讀字\n譖\tcam6\t「譖zam3」的異讀字\n譖\tzam3\t譖言\n譎\tgwat1\t「譎kyut3」的異讀字\n譎\tkyut3\t譎詐，詭譎\n議\tji3\t「議ji5」的異讀字\n議\tji5\t議決，議案，議員，議程，議會，議論，議價，議題，議事日程，議論風生，商議，會議，橫議\n譽\tjyu4\t「譽jyu6」的異讀字\n譽\tjyu6\t譽滿寰中，毀譽，沽名釣譽，榮譽勛章，鄉曲之譽\n讎\tcau4\t讎校，報讎，復讎，寇讎，反目成讎，公報私讎\n讎\tsau4\t「讎cau4」的異讀字\n讖\tcaam3\t「讖cam3」的異讀字\n讖\tcam3\t讖緯，符讖，一語成讖，讖語，讖文，圖讖，經讖，詩讖\n讕\tlaan4\t抵讕，讕言\n讕\tlaan5\t「讕laan4」的異讀字\n讞\tjin5\t「讞jin6」的異讀字\n讞\tjin6\t讞訊，定讞\n讞\tjit6\t「讞jin6」的異讀字\n詀\tzaam1\t詀諵\n詀\tzim1\t「詀zaam1」的異讀字\n詀\tcip3\t詀讘\n詒\tji4\t詒訓\n詒\tdoi6\t「詒toi5」的異讀字\n詒\ttoi5\t欺騙\n誂\tdiu3\t倉猝\n誂\ttiu1\t「誂tiu5」的異讀字\n誂\ttiu5\t誂越\n請\tceng2\t「請cing2」的異讀字，用於口語\n請\tcing1\t請室\n請\tcing2\t請願，邀請，負荊請罪，請求，請示，請安，請命，請客，請柬，請便，請託，請益，請教，請纓，請君入甕\n請\tking4\t同「擎」字\n請\tzing6\t古朝聘\n調\tdeu6\t「調diu6」的異讀字\n調\tdiu6\t調任，調查，調換，調動，調集，調號，調撥，調職，調兵遣將，調虎離山，曲調，音調，格調，腔調\n調\ttiu4\t調和，調治，調侃，調配，調唆，調理，調解，調教，調停，調節，調馴，調劑，調整，調戲，調脂弄粉，調嘴學舌，協調，風調雨順\n諗\tlam2\t「諗nam2」的異讀字\n諗\tnam2\t粵語用字，意指認為、想\n諗\tsam2\t諗念，諗思\n諍\tzaang1\t同「爭」字\n諍\tzaang3\t諍友，諫諍，諍訟，諍言\n諍\tzang1\t「諍zaang1」的異讀字\n諍\tzang3\t「諍zaang3」的異讀字\n譙\tciu3\t「譙ziu6」的異讀字\n譙\tciu4\t譙樓\n譙\tziu6\t同「誚」字\n豎\tsyu6\t豎立，橫豎，豎琴，豎笛，逆豎(叛逆之人)，二豎(疾病)；(1)使物體直立；(2)僮僕、小子\n豐\tfung1\t豐富，豐收，豐厚，豐年，豐滿，豐裕，豐盈；(1)古代用以承酒觶的禮器。《儀禮˙公食大夫》：「飲酒實于觶，加于豐」。；(2)肥美、富饒、茂盛\n豔\tjim6\t豔麗，豔福，豔光四射，豔陽\n豈\thei2\t豈敢，豈料，豈有此理，豈止，豈能難道，表示反詰\n豈\thoi2\t(1)通「凱」字；(2)同「愷」字\n豬\tzyu1\t豬肉，豬油，豬肝，豬肚，豬腰，豬鬃，豬瘟，豬圈\n豵\tzung1\t一歲的小豬\n豶\tfan4\t雄性的牲畜\n貗\tgeoi6\t豬獾所生的小獸\n貓\tmaau1\t貓狗，貓鼠同眠，野貓\n貓\tmaau4\t「貓maau1」的異讀字\n貓\tmiu4\t「貓maau1」的異讀字\n貙\tceoi1\t「貙syu1」的異讀字\n貙\tkeoi1\t「貙syu1」的異讀字\n貙\tsyu1\t獸名\n貝\tbui3\t貝類，貝殼，寶貝\n負\tfu6\t負責，負擔，負荷，負債，負載，負傷，負數，負荊請罪，負心，負氣，負隅頑抗，負號，正負，勝負\n貞\tzing1\t貞節，貞潔，貞人，貞烈，貞珉，，貞操，堅貞，艱貞\n財\tcoi4\t財政，財產，財源，財富，財經，錢財\n貢\tgung3\t貢獻，貢寮，貢品，朝貢\n貧\tpan4\t貧窮，貧困，貧苦，貧瘠，貧賤\n貪\ttaam1\t貪污，貪心，貪財，貪官污吏，貪得無厭\n貶\tbin2\t貶低，貶抑，褒貶\n貺\tfong3\t賜贈\n貴\tgwai3\t貴賓，貴重，貴族\n貽\tji4\t貽笑，貽害，貽禍，貽誤\n貳\tji6\t貳卿(指待郎，即尚書之副)，貳臣(前朝降臣)，貳心(謀叛之心)，懷貳，疑貳，不貳(忠誠)，；(1)同「二」字；(2)「二」之會計用寫法；(3)第二、副的；(4)不專一\n買\tmaai5\t買賣，買主，買通，買走\n貿\tmau6\t貿易，貿然\n貰\tsai3\t貰船，貰貸，貰酒(史記•高祖本紀)，貰赦\n貼\ttip3\t貼切，體貼，貼現率，貼上，貼身，貼紙，貼心，貼近，貼題，貼金，貼好，津貼，黏貼，妥貼，補貼\n賊\tcaak6\t賊贓，盜賊，作賊心虛，賊船，賊黨，賊害，賊寇，狗賊，山賊，奸賊，賣國賊，亂臣賊子，家賊難防，擒賊擒王，認賊作父，賊眉賊眼，捉賊拿贓\n賅\tgoi1\t賅備，賅博，賅括，言簡意賅；(1)充足；(2)兼備、齊全\n賃\tjam6\t租賃\n賂\tlou6\t賄賂\n資\tzi1\t資產，工資，排資論輩，資訊，資料，資金，資源，資格，資深，資政，資助，資質，物資，天資，投資，年資，資本主義，勞資糾紛\n貲\tzi1\t所費不貲，貲簿，家貲萬貫財貨\n賕\tkau4\t賄賂\n賒\tse1\t賒帳，賒欠，賒貸\n賑\tzan3\t賑災，賑濟\n賜\tci3\t賜予，賜教，賜福，賜給，賜死，賜姓\n賧\tdaam6\t指古代東方、南方民族以財贖罪\n賭\tdou2\t賭博，賭場，賭徒，賭債，賭注，賭局\n賦\tfu3\t賦予，賦稅，賦閒，賦與，賦有，賦歸，賦詩\n賢\tjin4\t賢達，聖賢，賢妻良母，賢明，賢士，賢淑，賢慧，賢內助，賢德，賢孝，賢才，賢能\n賚\tloi6\t賚品，賞賚\n賠\tpui4\t賠償，索賠，割地賠款，賠錢，賠本，賠光，賠不是，賠罪，賠嫁(又作陪嫁)，賠笑(又作陪笑)\n賞\tsoeng2\t賞月，賞識，賞心悅目，賞金，賞賜，賞罰分明，賞玩，賞給，賞罰，賞錢，賞心\n賙\tzau1\t賙濟\n賤\tzin6\t貴賤，賤民，輕賤，貧賤，卑賤\n賬\tzoeng3\t同「帳」字\n賟\ttin2\t富裕\n賰\tceon2\t富有\n賵\tfung3\t賻賵\n賴\tlaai6\t賴帳，依賴，賴以為生，賴皮，賴床，賴債，抵賴\n賽\tcoi3\t賽程，賽馬，賽車，賽跑\n賻\tfu6\t賻贈，賻儀，賻金\n賺\tzaan6\t賺錢，賺取，賺到\n贄\tzi3\t贄敬，贄見，執贄見面禮\n贇\twan1\t美好\n贊\tzaan3\t贊成，贊同，贊助，贊許，贊賞，贊美，贊歎\n贈\tzang6\t贈送，贈與，贈品，贈予，贈閱\n贔\tbei6\t贔屭(傳說中的一種像龜的動物)\n贓\tzong1\t贓物，賊贓，貧贓枉法，人贓並獲，插贓嫁禍\n贗\tngaan6\t贗品\n贖\tsuk6\t贖款，贖金，贖回，贖罪\n貫\tgwaan3\t通「慣」字\n貫\tgun3\t貫通，連貫，貫徹始終，貫穿，全神貫注\n責\tzaai3\t同「債」字\n責\tzaak3\t責任，責備，責罰，負責\n費\tfai3\t費力，費心，費用，費神，費解，費盡心機，收費，耗費，經費，學費\n費\tbei3\t(1)古代邑名；(2)姓氏\n貸\ttaai3\t貸宥，貸款，借貸，高利貸，責無旁貸，嚴懲不貸\n貸\ttik1\t同「忒」字\n賈\tgaa2\t姓氏\n賈\tgaa3\t通「價」字\n賈\tgu2\t賈人，賈客，賈害，賈禍，賈儈，賈其餘勇，商賈，富商大賈\n賓\tban1\t賓客，賓主，賓從，賓至如歸，賓主盡歡\n賓\tban3\t通「擯」字\n賡\tgang1\t賡續，賡酬\n賡\tzuk6\t接賡\n賣\tmaai6\t賣出，賣座，賣力，賣方，賣掉，賣弄，賣乖，賣帳，賣藝\n賣\tjuk6\t同「鬻」字\n質\tzat1\t質料，物質，蕙質蘭心，質量，質問，質樸，本質，性質，變質，弱質纖纖，天生麗質，當面對質\n質\tzi3\t人質，交質\n贛\tgam3\t贛江，贛語，贛劇江西省簡稱\n贛\tgung3\t(1)賜予(《說文》)；(2)姓氏\n販\tfaan3\t販賣，販運，小販，商販\n販\tfaan5\t「販faan3」的異讀字\n貨\tfo3\t貨幣，貨車，貨櫃，貨物，貨品，貨倉\n貨\tfo6\t「貨fo3」的異讀字\n貯\tcyu2\t「貯cyu5」的異讀字\n貯\tcyu5\t貯備，貯藏\n貯\tzyu2\t「貯cyu5」的異讀字\n賀\tho3\t「賀ho6」的異讀字\n賀\tho6\t賀儀，慶賀，賀客盈門，賀卡，賀禮，賀歲，賀電，賀客，賀詞，賀年，賀函，賀帖，恭賀，祝賀\n賄\tfui2\t「賄kui2」的異讀字\n賄\tkui2\t賄買，賄賂，賄選，行賄\n賝\tcam1\t同「琛」字\n賝\tsam1\t「賝cam1」的異讀字\n購\tgau3\t購物，購買，購銷，購辦，購物天堂，收購，採購，訂購\n購\tkau3\t「購gau3」的異讀字\n賾\tzaak3\t探賾索隱\n賾\tzaak6\t「賾zaak3」的異讀字\n贅\tzeoi3\t「贅zeoi6」的異讀字\n贅\tzeoi6\t贅婿，贅言，贅瘤，贅述，贅子，入贅，出贅，累贅\n贉\tdaam6\t「贉taam5」的異讀字\n贉\ttaam5\t(1)買東西預先付錢；(2)書冊卷首貼綾之處\n贏\tjeng4\t「贏jing4」的異讀字，口語讀音\n贏\tjing4\t贏家，贏得，輸贏\n贍\tsim6\t贍足，贍私，贍恤，贍養，贍麗，贍學淵聞，宏贍，詳贍\n贍\tsin6\t「贍sim6」的異讀字\n贐\tzeon2\t贐儀，餽贐，贐行\n贐\tzeon6\t「贐zeon2」的異讀字\n賁\tban1\t賁門，虎賁\n賁\tban3\t「賁ban1」的異讀字\n賁\tfan4\t(1)宏大；(2)三足龜\n賁\tfan5\t(1)通「憤」字；(2)通「僨」字\n賁\tbei3\t賁臨\n赬\tcing1\t赬尾，魴魚赬尾淺紅色\n赬\tzing1\t「赬cing1」的異讀字\n趕\tgon2\t趕路，追趕\n趙\ttiu5\t趙繚\n趙\tziu6\t姓氏\n趨\tceoi1\t趨向，趨勢，趨炎附勢，趨時，趨奉，趨吉避凶，趨之若鶩\n趨\tcuk1\t通「促」字\n趲\tzaan2\t趕路\n趲\tzyun2\t「趲zaan2」的異讀字\n蹕\tbat1\t蹕路，駐蹕，清蹕，犯蹕，扈蹕，古帝王出行時實施的交通管制\n蹔\tzaam6\t同「暫」字\n蹟\tzik1\t遺蹟，奇蹟，名勝古蹟\n蹤\tzung1\t蹤影，蹤跡，芳蹤，行蹤，遺蹤\n蹳\tbut6\t踢踏、踢落\n躉\tdan2\t躉船，躉批\n躂\ttaat3\t蹓躂，踢躂\n躊\tcau4\t躊躇，躊躇滿志\n躋\tzai1\t躋身，攀躋，躋躋蹌蹌\n躎\tnin5\t(1)踐蹈；(2)停止\n躚\tsin1\t蹁躚形容舞姿妙曼\n躓\tzi3\t(1)絆倒；(2)事情不順利\n躥\tcyun1\t向上跳\n躡\tnip6\t躡蹤，躡足其間\n躦\tzyun1\t向上或往前沖\n躪\tleon6\t蹂躪\n蹌\tcoeng1\t蹌捍，蹌蹌濟濟\n蹌\tcoeng3\t踉蹌\n跡\tzek3\t「跡zik1」的異讀字\n跡\tzik1\t跡近，跡捕，跡象，跡跡，古跡，足跡，遺跡\n踐\tcin5\t踐踏，踐諾，實踐，踐言，踐祚，踐約，踐履\n踐\tzin6\t「踐cin5」的異讀字\n踴\tjung2\t踴躍，抃踴，踴躍\n踴\tjung5\t「踴jung2」的異讀字\n踰\tjyu4\t踰越，踰矩，踰輪(周穆王八駿之一)\n踰\tjyu6\t「踰jyu4」的異讀字\n蹣\tmun4\t「蹣pun4」的異讀字\n蹣\tpun4\t蹣跚\n蹺\thiu1\t蹺課，蹺足而待，蹊蹺\n蹺\tkiu3\t「蹺hiu1」的異讀字\n躕\tcyu1\t「躕cyu4」的異讀字\n躕\tcyu4\t踟躕，搔首踟躕\n躑\tzaak6\t躑躅\n躑\tzik6\t「躑zaak6」的異讀字\n躝\tlaan1\t「躝laan4」的異讀字\n躝\tlaan4\t過分\n蹻\tgiu2\t蹻勇，蹻捷\n蹻\thiu1\t同「蹺」字\n蹻\tkiu3\t「蹻hiu1」的異讀字\n蹻\tgoek3\t躡蹻擔簦，踏高蹻\n蹻\tkoek6\t「蹻giu2」的異讀字\n躍\ttik1\t同「趯」字\n躍\tjoek3\t「躍joek6」的異讀字\n躍\tjoek6\t躍躍欲試，踴躍，魚躍龍門，躍進，跳躍，雀躍，龍騰虎躍，魚躍鳶飛\n躒\tlik1\t走動\n躒\tlik6\t「躒lik1」的異讀字\n躒\tlok3\t「躒lok6」的異讀字\n躒\tlok6\t卓躒\n軀\tkeoi1\t軀體，軀殼，身軀，形軀\n軉\tjuk1\t(1)道家指精氣凝結；(2)父母對小孩的愛稱\n軌\tgwai2\t軌道，軌跡，不軌\n軍\tgwan1\t軍隊，軍火，軍械，敵軍\n軒\thin1\t軒輊，軒昂，軒然；(1)古代一種有篷的車子；(2)車子的通稱；(3)窗子；(4)小房間\n軔\tjan6\t發軔，雲程發軔阻止車輪滑轉的橫木\n軏\tjyut6\t車軒橫木\n軗\tguk1\t同「轂」字\n軟\tjyun5\t軟弱，軟語，軟化，軟禁，軟硬兼施\n軜\tnaap6\t驂馬內轡繫軾前者\n軷\tbat6\t軷涉\n軺\tjiu4\t軺車\n軨\tling4\t車輪\n軹\tzi2\t軹城(鎮名)\n輅\tlou6\t(1)古車前橫木；(2)古大車\n軿\tping4\t輜軿，油軿，軿訇，軿湊(即併湊)\n軾\tsik1\t伏軾，憑軾\n輈\tzau1\t車轅\n輊\tzi3\t軒輊車後較低的部分\n輔\tfu6\t輔導，輔幣，輔助，輔育院，輔佐，輔弼，輔翼，畿輔\n輓\twaan5\t輓歌，輓聯，輓詞\n輝\tfai1\t輝煌，輝映，清輝，爭輝，交輝\n輪\tleon4\t輪流，輪船，輪椅，輪值，輪休，輪迴，輪班，輪調，輪機，輪軸\n輦\tlin5\t輦道，龍車鳳輦，車輦，輦載帝王之車\n輬\tloeng4\t轀輬\n輛\tloeng6\t車輛\n輞\tmong5\t車輪四週之框子\n輗\tngai4\t輗軏\n輖\tzau1\t軒輖\n輜\tzi1\t輜車，輜重\n輯\tcap1\t輯錄，編輯，邏輯，專輯\n輳\tcau3\t輳遇，並輳，輻輳\n輻\tfuk1\t輻射，輻湊\n輷\tgwang1\t車行聲\n輸\tsyu1\t輸出，輸入，輸送，輸贏，輸血，輸電，輸送管\n轂\tguk1\t轂下，轂轆鷹，轂擊肩摩\n轄\that6\t轄區，轄境，轄地，統轄，管轄，直轄，車轄；(1)管治；(2)以防輪子脫落的軸鍵\n輿\tjyu4\t輿馬，方輿，輿論，輿情，堪輿，肩輿；(1)轎子、車；(2)地域；(3)扛抬；(4)公眾的\n轅\tjyun4\t轅門，南轅北轍，改轅易轍\n轀\twan1\t轀輬車\n轍\tcit3\t覆轍，離轍，軌轍，合轍，南轅北轍，改轅易轍\n轇\tgaau1\t轇轕\n轗\tham2\t轗軻\n轟\tgwang1\t轟炸，轟動，轟轟烈烈，轟隆，轟擊\n轡\tbei3\t轡頭，頓轡，長轡遠御，轡銜，奉轡，韁轡\n轠\tleoi4\t(1)車輛碾壓；(2)接連不斷的樣子；(3)車；(4)碰擊\n轣\tlik6\t轣轆\n轤\tlou4\t轆轤\n軼\tjat6\t軼事，軼聞，軼群，軼倫越等，侵軼，超軼；(1)散失；(2)超過；(3)侵略\n軼\tdit6\t同「迭」字\n軸\tzau6\t軸子\n軸\tzuk6\t軸線，軸心，輥軸\n較\tgaau3\t較量，比較，計較，錙銖必較\n較\tgok3\t較力\n載\tzoi2\t千載難逢，一年半載\n載\tzoi3\t載客，載荷，載雪，載福，載譽，載體，載酒問字，載沉載浮，刊載，運載，怨聲載道\n轉\tzyun2\t轉口，轉手，轉化，轉世，轉注，轉向，轉折，轉述，轉託，轉眼，轉側，轉移，轉換，轉載，轉播，轉機，轉瞬，轉變，轉讓，轉捩點，轉危為安，轉敗為勝\n轉\tzyun3\t轉子，轉悠，轉動，轉軸，轉臺，轉盤，轉爐\n轔\tleon4\t形容車子行走時的聲音\n轔\tleon6\t輾壓、蹂躪\n軋\taat3\t「軋zaat3」的異讀字\n軋\tgaat3\t「軋zaat3」的異讀字\n軋\tngaat3\t「軋zaat3」的異讀字\n軋\tzaat3\t傾軋\n軑\tdaai6\t(1)車輪；(2)車軸前端的冒蓋\n軑\tdai6\t「軑daai6」的異讀字\n軛\taak1\t衡軛，車軛，共軛角牛馬拉物件時駕在脖子上的器具\n軛\tngaak1\t「軛aak1」的異讀字\n軬\tfaan5\t「軬faan6」的異讀字\n軬\tfaan6\t軬客\n軻\to1\t轗軻(形容車行顛簸，或喻人不得志)\n軻\tho2\t「軻o1」的異讀字\n軻\tngo1\t「軻o1」的異讀字\n軫\tcan2\t(1)車後橫木，借指車；(2)二十八宿之一；(3)悲痛\n軫\tzan2\t「軫can2」的異讀字\n輋\tce4\t輋人\n輋\tse4\t「輋ce4」的異讀字\n輇\tcyun4\t輇才\n輇\tsyun4\t「輇cyun4」的異讀字\n輕\theng1\t「輕hing1」的異讀字，口語讀音\n輕\thing1\t輕巧，年輕，輕諾寡信，輕生，輕狂，輕快，輕易，輕佻，輕便，輕盈，輕重，輕浮，輕率，輕視，輕敵，輕鬆，輕描淡寫，輕歌曼舞，輕舉妄動\n輒\tzip3\t輒入，輒囊，輒以為是，動輒得咎，聞聽輒行，淺嚐輒止\n輒\tzit3\t「輒zip3」的異讀字\n輩\tbei3\t「輩bui3」的異讀字\n輩\tbui3\t輩子，輩份，輩出，輩分\n輥\tgwan2\t能滾動的圓柱形機件\n輥\tkwan2\t「輥gwan2」的異讀字\n輟\tzyut3\t輟筆，輟業，輟演，輟學，中輟\n輟\tzyut6\t「輟zyut3」的異讀字\n輮\tjau4\t輮轢\n輮\tjau5\t「輮jau4」的異讀字\n轆\tluk1\t轆軸，轆轤，饑腸轆轆\n轆\tluk6\t「轆luk1」的異讀字\n轐\tpok3\t「轐buk6」的異讀字\n轐\tbuk6\t古代車制\n轎\tgiu2\t「轎giu6」的異讀字\n轎\tgiu6\t轎夫，花轎\n轎\tkiu4\t「轎giu6」的異讀字\n轢\tlik1\t(1)車輪碾壓；(2)欺凌\n轢\tlik6\t「轢lik1」的異讀字\n車\tce1\t車次，車廂，車禍，車裂，車間，車輛，火車，汽車「車geoi1」的異讀字，多用於口語\n車\tgeoi1\t車馬，車馬費，車水馬龍，舟車「車ce1」的異讀字，多用於書面語\n輾\tnin5\t同「碾」字\n輾\tnin6\t「輾nin5」的異讀字\n輾\tzin2\t輾轉，輾轉反側\n辦\tbaan6\t辦法，創辦，革職查辦，辦事處，辦案\n辭\tci4\t辭職，辭呈，辭典，辭退，辭世，辭行，辭令，辭句，辭藻，辭別，請辭\n辯\tbin6\t辯論，爭辯，百辭莫辯，辯護，辯解，辯駁，辯白，詭辯，狡辯，辯證法，辯才無礙，能言善辯\n農\tnung4\t農民，務農，農曆，佃農，農作物\n迴\twui4\t迴避，迴響，迴轉，迴旋，迴廊，迴向，輪迴\n連\tlin4\t連續，連絡，連繫，連接，連環，連結，連袂，連貫，連累，連載，連續不斷\n週\tzau1\t週刊，週期，週延，週全，週到，週會，週歲，週密\n進\tzeon3\t進退，前進，進軍，進步，進化\n違\twai4\t違反，違規，違法，違背\n運\twan6\t運動，運用，運輸，運算，命運\n遙\tjiu4\t遙遠，逍遙，遙遙無期，遙望，遙控器，遙遙領先，遙遙相對\n遜\tseon3\t遜色，遜位\n遷\tcin1\t遷移，遷就，遷居，遷怒，遷徙，遷延，遷善，變遷，遷地為良\n遼\tliu4\t遼闊，遼遠\n邁\tmaai6\t邁向，邁進，邁出，邁開，邁步，豪邁\n邇\tji5\t名聞遐邇，行遠自邇\n邊\tbin1\t旁邊，邊境，邊界，邊緣\n邐\tlei5\t迆邐\n達\tdaat6\t達成，達到，達觀，表達，傳達，通情達理\n達\ttaat3\t挑達\n遞\tdaai3\t圍繞\n遞\tdai6\t遞交，傳遞，層遞，遞解，遞減，驛遞，郵遞，快遞，速遞，遞眼色，遞增，遞減，遞補，關山迢遞；(1)傳送；(2)更迭；(3)順序\n遞\tsai6\t同「逝」字\n遠\tjyun5\t遠見，遠近，遠視，遠景，遠交近攻，遠走高飛，長遠\n遠\tjyun6\t敬而遠之\n適\tzaak6\t通「謫」字\n適\tdik1\t同「嫡」字\n適\tsik1\t適合，舒適，適可而止，適中，適宜，適度，適從，適意，適當，適應，適齡，不適，適者生存，適得其反，適逢其會\n選\tsyun2\t選舉，選手，選取，選定，選拔\n選\tsyun3\t通「算」字\n遺\twai4\t遺少，遺失，遺民，遺老，遺忘，遺事，遺風，遺容，遺訓，遺書，遺產，遺詔，遺傳，遺墨，遺憾，遺願，遺孀，遺腹子，遺大投艱，遺文軼事，遺世獨立，遺臭萬年，路不拾遺\n遺\twai6\t遺贈\n還\twaan4\t還擊，歸還，討價還價，還鄉，還俗，還陽，退還，清還，還原反應，返老還童，買櫝還珠，借屍還魂，欠債還錢\n還\tsyun4\t通「旋」字\n逕\tgaang3\t「逕ging3」的異讀字\n逕\tging3\t大相逕庭，逕自\n這\tze2\t這些，這麼，這樣\n這\tze3\t「這ze2」的異讀字\n這\tze5\t「這ze2」的異讀字\n過\tgwo1\t「過gwo3」的異讀字\n過\tgwo3\t過往，過眼雲煙，過猶不及，過年，過門，過客，過渡，過程，過身，過繼，過度，過火，過分，過失，過敏，過剩，過獎，過謙，過目不忘，過甚其詞\n遊\tjau4\t遊戲，遊說，遊覽，遊玩，遊蕩，遊學，遊樂，炳燭夜遊，旅遊\n遊\tjau6\t「遊jau4」的異讀字\n邏\tlo4\t邏輯，巡邏\n邏\tlo6\t「邏lo4」的異讀字\n遲\tci4\t遲暮，延遲\n遲\tzi3\t「遲zi6」的異讀字\n遲\tzi6\t(1)等待；(2)比及\n郟\tgaap3\t(1)姓氏；(2)河南省內縣市名稱之一\n郵\tjau4\t郵局，郵票，郵件，郵政，郵寄，郵包，郵差，郵報，郵電，郵政儲金，郵務，郵筒，郵輪\n鄆\twan6\t鄆城\n鄖\twan4\t湖北省縣名\n鄔\twu1\t姓氏\n鄒\tzau1\t(1)姓氏；(2)周代國名\n鄟\tzyun1\t古國名\n鄲\tdaan1\t邯鄲學步，邯鄲\n鄧\tdang6\t姓氏\n鄰\tleon4\t鄰近，鄰居，鄰家，毗鄰，睦鄰\n鄭\tzeng6\t鄭重，鄭重其事，鄭衛之聲，鄭人買履\n鄴\tjip6\t(1)姓氏；(2)河南省古地名\n酈\tlik6\t姓氏\n鄉\thoeng1\t鄉村，故鄉，衣錦還鄉，夢鄉，窮鄉僻壤，離鄉背井，鄉黨鄰里，鄉愿\n鄉\thoeng3\t同「嚮」字\n鄶\tkui2\t(1)姓氏；(2)周朝國名\n鄶\tkui3\t「鄶kui2」的異讀字\n鄳\tmaang4\t「鄳maang5」的異讀字\n鄳\tmaang5\t鄳阨(古地名)，鄳縣(古地名)\n鄺\tkong3\t「鄺kwong3」的異讀字\n鄺\tkwong3\t姓氏\n酇\tzaan3\t(1)古縣名，在今湖北省境內；(2)古代地方組織單位；(3)姓氏\n酇\tco4\t酇白\n酇\tzyun2\t「酇zaan3」的異讀字\n醜\tcau2\t醜聞，醜陋，醜化，醜惡，醜事，醜態，醜態百出，醜行，醜劇，醜八怪，醜詆，醜名\n醣\ttong4\t有機化合物中的類碳水化合物，為多羥醛或多羥酮和其衍生物或聚合物\n醫\tji1\t醫院，醫療，醫生，醫學，醫藥，醫治，醫術，醫科，醫德，醫病，醫葯，醫書\n醬\tzoeng3\t醬油，花生醬，加油添醬，醬菜\n醱\tput3\t醱酵\n釀\tjoeng6\t釀酒，醞釀，釀製，釀造，釀禍，佳釀，新釀，陳釀；(1)以發酵方法製造；(2)逐漸孕育；(3)借喻為酒\n釃\tsi1\t(1)濾酒；(2)斟酒；(3)疏導\n釅\tjim6\t釅酒，釅茶\n醃\tjim1\t醃魚，醃肉，醃藏\n醃\tjip3\t「醃jim1」的異讀字\n醞\twan2\t醞釀，良醞(美酒)，風流醞藉；(1)釀酒；(2)借喻為酒\n醞\twan3\t「醞wan2」的異讀字\n醞\twan5\t「醞wan2」的異讀字\n釁\tjan3\t「釁jan3」的異讀字\n釁\tjan6\t釁兆，釁浴，釁鼓，釁端，釁鐘，挑釁\n釋\tsik1\t釋懷，解釋，冰釋前嫌，釋文，釋迦，釋疑，釋放，釋例，保釋，稀釋，如釋重負，手不釋卷\n釐\thei1\t同「禧」字\n釐\thei2\t「釐hei1」的異讀字\n釐\tlei4\t釐正，釐定，釐金，釐清，毫釐\n釚\tkau4\t弩牙\n釙\tpok3\t一種放射性金屬元素，符號Po\n針\tzam1\t針對，針線，針孔，指南針\n釵\tcaai1\t釵股，釵釧，寶釵，髮釵，裙釵\n釣\tdiu3\t釣魚，釣餌，釣線，釣竿，垂釣，沽名釣譽\n釩\tfaan4\t金屬元素\n釦\tkau3\t紐扣\n釹\tneoi5\t一種金屬元素\n釷\ttou2\t一種放射性金屬元素，符號Th\n釳\that1\t(1)馬頭上的金屬飾物；(2)防止馬匹互相衝突的金屬器具\n釨\tzi2\t剛硬\n鈑\tbaan2\t金屬板\n鈄\tdau2\t姓氏\n鈍\tdeon6\t鈍眊，鈍根，鈍漢，鈍器，遲鈍，愚鈍\n鈥\tfo2\t金屬元素之一，符號為「Ho」\n鈁\tfong1\t(1)古代一種方形的酒壺；(2)放射化學元素之一\n鈇\tfu1\t鍘刀\n鈅\tjoek6\t同「鑰」字\n鈆\tjyun4\t(1)同「鉛」字；(2)同「沿」字\n鈐\tkim4\t鈐記\n鈣\tkoi3\t一種金屬元素，符號Ca\n鈧\tkong3\t金屬元素之一，符號為「Sc」\n鈦\ttaai3\t鈦合金一種金屬元素，即Titanium符號Ti\n鈖\tfan1\t玉名\n鉑\tbok6\t一種金屬元素，符號Pt，通稱白金\n銃\tcung3\t銃子，炮銃，拳銃，吹銃，夢夢銃銃\n鉀\tgaap3\t一種金屬元素，符號K\n鉅\tgeoi6\t鉅額，鉅款，鉅量，鉅大，鉅子，鉅富，鉅著\n鉠\tjoeng1\t鉠鉠(象聲詞，形容鈴聲)\n鈺\tjuk6\t(1)堅硬的金屬；(2)寶物\n鉛\tjyun4\t鉛筆，鉛球，鉛丹，鉛字\n鉉\tjyun5\t橫貫鼎耳以扛鼎的器具\n鉞\tjyut6\t大斧\n鉗\tkim4\t同「箝」字\n鈴\tling4\t鈴聲，鈴鐺，鈴鼓，風鈴\n鉚\tmaau5\t鉚釘，鉚接，鉚工\n鉬\tmuk6\t一種金屬元素\n鈮\tnei6\t一種金屬元素\n鉋\tpaau4\t同「刨」字\n鈰\tsi5\t金屬元素\n鉔\tzaap3\t一種金屬制的薰香器\n鈽\tbou1\t金版\n鈲\tgu1\t(1)鐵的別名；(2)一種縴夫使用的工具\n銛\tcim1\t銛利，銛諸(神話傳說中住在月亮上的蝦蟆)\n銓\tcyun4\t銓敘，銓選，銓衡\n銩\tdiu1\t一種金屬元素，符號Tm\n銦\tjan1\t一種金屬元素，符號In\n銪\tjau5\t一種金屬元素，符號Eu\n鉺\tji5\t一種金屬元素，符號Er\n鉶\tjing4\t古代盛菜羹的器皿\n銠\tlou5\t一種金屬元素，符號Rh\n銀\tngan4\t銀河，水銀，鐵畫銀鉤，銀行，銀票，銀幣，銀幕，白銀，俸銀，定銀，餉銀，白髮銀鬚，火樹銀花，穿金戴銀\n銫\tsik1\t一種金屬元素，符號Cs\n銑\tsin2\t銑刀，銑床，銑鐵，銑鋧\n鋮\tsing4\t用於人名\n銅\ttung4\t銅鑼，銅像，銅鏡，銅管，銅器，銅鼓，銅臭，銅牆鐵壁\n鉽\tsik1\t鼎類器具\n銈\tgai1\t金圭\n銊\tseot1\t鋸物發出的聲音\n銂\tzau1\t金刀\n鋇\tbui3\t一種金屬元素\n銼\tco3\t銼刀，扁銼，銼削\n鋤\tco4\t鋤頭，鋤奸，誅鋤異己\n鋒\tfung1\t鋒面，鋒利，鋒芒，鋒芒畢露，談鋒，鋒芒逼人\n鋏\tgaap3\t(1)劍；(2)劍柄；(3)冶鑄用鉗\n鋯\tgou3\t一種金屬元素，符號Zr\n鋗\thyun1\t鋗人，鋗玉\n銳\tjeoi6\t銳利，敏銳，銳不可當，銳角，銳氣，銳減，尖銳，精銳，養精蓄銳\n銶\tkau4\t古代一種鑿子\n鋰\tlei5\t金屬元素\n鋁\tleoi5\t鋁窗，鋁錠，鋁板\n鋃\tlong4\t鋃鐺\n鋩\tmong4\t鋩鑼，鋒鋩，雄戟耀鋩\n鋨\tngo4\t一種金屬元素，符號Os\n鋅\tsan1\t一種金屬元素，符號Zn\n銷\tsiu1\t銷毀，滯銷，銷聲匿跡，銷售，銷路，銷量，銷假，銷案，撤銷，包銷，報銷，推銷，香銷玉殞，銷魂奪魄，薄利多銷，形銷骨立，一筆勾銷\n銻\ttai1\t一種金屬元素，符號Sb\n鋱\ttik1\t金屬元素Tb\n鋉\tcuk1\t(1)金子；(2)金鐲子\n鋠\tsan6\t圓鐵\n錛\tban1\t錛鋤\n錆\tcoeng1\t錆色\n錩\tcoeng1\t古器皿名\n錦\tgam2\t錦標，錦繡前程，衣錦還鄉，錦州，錦上添花，錦旗，錦石，錦囊妙計，錦緞，錦雞\n錤\tgei1\t鎡錤(大鋤)\n錮\tgu3\t錮塞，禁錮\n錡\tkei4\t(1)一種煮食工具；(2)一種鑿子\n錸\tloi4\t金屬元素Re\n錄\tluk6\t錄影，錄取，錄用，附錄，筆錄\n錳\tmaang5\t高錳酸鉀(又名「灰錳氧」，KMnO4)金屬元素Manganese(Mn)\n鍆\tmun4\t放射性元素Md\n鍺\tze2\t一種金屬元素\n錙\tzi1\t錙銖，錙銖必較，錙銖較量\n錈\tgyun6\t刀劍的刃卷曲\n錥\tjuk6\t鎢錥(溫器，俗稱湯罐)\n鎯\tlong4\t鎯頭(錘子)\n錂\tling4\t金屬名\n鍤\tcaap3\t掘土之具\n鍬\tciu1\t鐵鍬，圓鍬\n鍍\tdou6\t鍍金，電鍍\n鍛\tdyun3\t鍛煉，鍛造\n鍵\tgin6\t鍵盤，關鍵\n鍚\tjoeng4\t古代馬額合或盾背之飾\n鍥\tkit3\t鍥薄，鍥而不捨鏤刻\n鍊\tlin6\t鍊子，鍊條\n鎂\tmei5\t金屬元素之一\n鍔\tngok6\t刀劍的刃\n鍶\tsi1\t金屬元素之一，符號為「Sr」\n鍰\twaan4\t罰鍰\n鍋\two1\t鍋爐，鍋蓋，鐵鍋，鍋巴\n鎡\tzi1\t鎡基(農具名，形如鋤頭)\n鍾\tzung1\t鍾馗，鍾情，時鍾\n鍒\tjau4\t同「鑐」字\n鎛\tbok3\t(1)古代樂器；(2)鋤一類的農具\n鎊\tbong6\t金鎊，英鎊\n鎚\tceoi4\t同「錘」字\n鎵\tgaa1\t金屬元素Ga\n鎰\tjat6\t百鎰之金，千鎰之裘，非一狐之白古代重量單位，合二十兩\n鎣\tjing4\t華鎣\n鎔\tjung4\t鎔化，鎔點，鎔鑄\n鎌\tlim4\t同「鐮」字\n鎷\tmaa5\t化學元素\n鎝\tsaap3\t鏤\n鎖\tso2\t鎖鑰，封鎖，霧鎖雲埋，門鎖，鎖鏈，枷鎖，鎖匙，鎖匠，鎖骨，連鎖反應\n鎙\tsok3\t長矛\n鎍\tsok3\t鐵繩\n鎲\ttong2\t同「钂」字，一種像叉的武器\n鎢\twu1\t鎢絲，鎢錥\n鎮\tzan3\t鎮定，鎮靜，市鎮\n鎈\tcaa1\t(1)錢的異名；(2)銼子\n鏢\tbiu1\t鏢客，鏢師，飛鏢\n鏟\tcaan2\t鏟除，鏟平\n鏚\tcik1\t鏚斧\n鏘\tcoeng1\t鏗鏘，戛玉鏘金\n鏦\tcung1\t鏦鏦，錚鏦\n鏡\tgeng3\t鏡子，鏡面，鏡台，鏡屏，眼鏡，借鏡，破鏡重圓\n鏗\thang1\t鏗鏘\n鏞\tjung4\t大鐘，古時一種樂器\n鏹\tkoeng5\t鏹水，白鏹\n鏐\tlau4\t純美的黃金，又稱紫磨金\n鏤\tlau6\t鏤刻，鏤骨銘心\n鏌\tmok6\t同「莫」字\n鎩\tsaat3\t鎩羽\n鏨\tzaam6\t鏨刀，鏨子\n鏍\tlo4\t銼鏍\n鐇\tfaan4\t(1)寬刃釜；(2)鏟\n鐨\tfai3\t人造放射性元素\n鐍\tkyut3\t有舌的環\n鐐\tliu4\t鐐銬，腳鐐\n鐒\tlou4\t一種放射性金屬元素，符號Lr\n鐠\tpou2\t一種金屬元素\n鏺\tput3\t一種鐮刀\n鏽\tsau3\t鐵鏽，不鏽鋼\n鏾\tsin3\t閹割\n鐘\tzung1\t鐘錶，鐘聲，鐘擺，鐘樓，鐘鼎之家，鐘鳴鼎食\n鐽\tdaat6\t金屬元素\n鐿\tji3\t一種金屬元素，符號Yb\n鐳\tleoi4\t金屬元素\n鐮\tlim4\t鐮刀，火鐮\n鐵\ttit3\t鐵皮，鐵票，鐵路，鐵馬金戈，鐵面無私，鐵石心腸\n鐶\twaan4\t鐶釵\n鐲\tzuk6\t鐲子，手鐲，玉鐲\n鐪\tlou5\t(1)煎膠器；(2)刀柄\n鑌\tban1\t鑌鐵\n鑒\tgaam3\t同「鑑」字\n鑑\tgaam3\t鑑定，鑑賞，鑑別，鑑戒，品鑑，評鑑\n鑊\twok6\t鑊烹，鼎鑊\n鑄\tzyu3\t鑄造，鑄鐵，鑄成大錯\n鑣\tbiu1\t鑣局，保鑣，分道揚鑣，連鑣並軫；(1)馬口中所含的鐵環；(2)一種金屬暗器，通「鏢」\n鑞\tlaap6\t白鑞，錫鑞\n鑠\tsoek3\t鑠金，鑠石流金，震古鑠今，矍鑠；(1)鍛鍊；(2)光亮\n鑕\tzat1\t斧鑕\n鑱\tcaam4\t長鑱\n鑰\tjoek6\t鑰匙，鎖鑰，寶鑰，市鑰\n鑭\tlaan4\t金屬元素La\n鑲\tsoeng1\t鑲嵌，鑲牙，金鑲玉嵌，鑲金，鑲滿，鑲邊\n鑴\tkwai4\t(1)大盆；(2)鼎；(3)日旁氣\n鑷\tnip6\t鑷子\n钂\ttong2\t古代武器\n鑼\tlo4\t鑼鼓，開鑼\n鑾\tlyun4\t鑾鈴，鑾輿，金鑾殿；(1)繫在君王車駕上的鈴鐺；(2)君王的車駕；(3)借指君王\n鑿\tzok6\t鑿井，鋼鑿，穿鑿附會，鑿洞，鑿山，證據確鑿，圓鑿方枘\n鈀\tbaa2\t金屬元素名稱，符號為「Pd」\n鈀\tpaa4\t齒鈀，釘鈀，钂鈀，鈀子拳\n鈃\tgin1\t人名用字\n鈃\tjing4\t古代盛酒的器皿\n鈒\tzaap6\t粵語用字\n鈒\tkap1\t鈒戟，瓊鈒，鈒鏤\n鈉\tnaap6\t一種金屬元素，符號Na\n鈉\tnaat3\t粵語用字\n鈿\tdin6\t錢\n鈿\ttin4\t寶鈿\n鈹\tpei1\t(1)針砭用的長針；(2)長矛\n鈹\tpei4\t一種金屬元素\n鉈\ttaa1\t金屬名稱\n鉈\tsi1\t兵器名稱\n鉈\tto4\t秤鉈(同稱砣)\n鉦\tzing1\t古樂器\n鉦\tzing3\t化學元素「鐨」之舊稱\n鉆\tzyun1\t「鑽」的簡體字\n鉆\tzyun3\t「鑽」的簡體字\n銚\tdiu6\t銚子\n銚\tjiu4\t(1)一種大鋤；(2)姓氏\n銚\tsiu6\t放射性化學元素\n鉻\tgok3\t一種金屬元素，符號Cr\n鉻\tlok6\t鉻落\n鉿\thaa1\t化學元素\n鉿\thap6\t鉿匝\n鉾\tmaau4\t同「矛」字\n鉾\tmau4\t劍鋒\n鋦\tgeoi3\t同「鋸」字\n鋦\tguk6\t一種放射性金屬元素\n鋙\tng4\t錕鋙；(1)山名；(2)寶劍名\n鋙\tjyu5\t鉏鋙\n鋪\tpou1\t鋪敘，鋪張，鋪陳，鋪墊，鋪蓋，鋪天蓋地，鋪眉苫眼，鋪張揚厲，鋪錦列繡，平鋪直敘\n鋪\tpou3\t鋪位，鋪面，鋪保，店鋪\n錢\tcin4\t錢幣，金錢，見錢開眼，錢財，錢莊，錢糧\n錢\tzin2\t古農具\n錯\tlaap6\t同「鑞」字，「錯」是「鑞」的簡體字\n錯\tco3\t錯誤，錯謬，錯覺\n錯\tcok3\t錯落，錯綜複雜，錯彩鏤金，交錯，雜錯\n錯\tcou3\t通「措」字\n錏\taa1\t錏鍜(保護頸項的鎧甲)\n錏\taa3\t柔剛鐵\n錘\tceoi4\t稱錘\n錘\tseoi4\t秤錘\n鍼\tzam1\t同「針」字\n鍼\tkim4\t古地名、人名\n鎘\tgaak3\t金屬元素\n鎘\tlik6\t同「鬲」字\n鎬\tgou2\t鎬頭(挖土用丁字形工具)\n鎬\thou6\t鎬京，豐鎬(周的舊都，今陝西省長安縣西南)\n鎦\tlau4\t鎦金\n鎦\tlau6\t鎦子\n鏇\tsyun4\t轆轤\n鏇\tsyun6\t(1)迴旋著切削；(2)轉軸\n鏜\ttong1\t鞳鏜\n鏜\ttong4\t鏜孔\n鐙\tdang1\t同「燈」字\n鐙\tdang3\t鐙骨，馬鐙\n鐓\tdeoi6\t同「錞」字\n鐓\tdeon1\t衝壓金屬板，使其變形\n鐃\tnaau4\t古代樂器\n鐃\tnaau6\t同「撓」字\n鑽\tzyun1\t鑽仰，鑽研，鑽營，鑽木取火，鑽冰求酥\n鑽\tzyun3\t鑽石，風鑽，電鑽\n釔\tjyut3\t金屬元素(Yttrium，Y)，原子序39。\n釔\tjyut6\t「釔jyut3」的異讀字\n釗\tciu1\t勉勵\n釗\tziu1\t「釗ciu1」的異讀字\n釘\tdeng1\t「釘ding1」的異讀字，口語讀音\n釘\tding1\t釘書機，鐵釘，斬釘截鐵，釘耙，釘問，碰釘，打補釘，螺絲釘，眼中釘\n釧\tcyun1\t「釧cyun3」的異讀字\n釧\tcyun3\t玉釧，金釧，釵釧(泛指婦女的飾物)手鐲\n鈔\tcaau1\t鈔寫，現鈔，鈔票，鈔掠，鈔邏\n鈔\tcaau3\t「鈔caau1」的異讀字，用於「鈔票」一詞\n鈞\tgwan1\t千鈞一髮，雷霆萬鈞\n鈞\tkwan1\t「鈞gwan1」的異讀字\n鈕\tnau2\t(1)同「紐」字；(2)姓氏\n鈕\tnau5\t「鈕nau2」的異讀字\n鉤\tau1\t「鉤ngau1」的異讀字\n鉤\tgau1\t「鉤ngau1」的異讀字\n鉤\tngau1\t鉤稽，秤鉤\n鈸\tbat6\t門鈸，鼓鈸，踏鈸，銅鈸，鐃鈸\n鈸\tbut6\t「鈸bat6」的異讀字\n鉍\tbei3\t金屬元素之一，符號為「Bi」\n鉍\tbit1\t「鉍bei3」的異讀字\n鉭\tdaan3\t「鉭taan2」的異讀字\n鉭\ttaan2\t一種金屬元素，符號Ta\n鈷\tgu1\t「鈷gu2」的異讀字\n鈷\tgu2\t鈷鉧\n鈾\tjau2\t「鈾jau4」的異讀字\n鈾\tjau4\t一種放射性金屬元素，符號U\n鉸\tgaau2\t鉸刀，鉸釘，鉸鏈\n鉸\tgaau3\t「鉸gaau2」的異讀字\n銜\thaam4\t銜泣，銜枚，銜恨，銜恤，銜接，銜冤，銜恩，銜華偑實，銜環結草，官銜，職銜，燕子銜泥\n銜\tham4\t「銜haam4」的異讀字\n銥\tji1\t一種金屬元素\n銥\tji2\t「銥ji1」的異讀字\n銣\tjyu4\t一種金屬元素，符號Rb\n銣\tjyu6\t「銣jyu4」的異讀字\n銬\tkaau3\t銬鐐，手銬\n銬\tkau3\t「銬kaau3」的異讀字\n銘\tming4\t銘言，銘刻，銘記，銘牌，銘感，銘肌鏤骨，刻骨銘心\n銘\tming5\t「銘ming4」的異讀字\n銨\ton1\t化學中的陽性複根之一，從銨衍生所得的正一價複根，即銨離子\n銨\tngon1\t「銨on1」的異讀字\n銖\tsyu4\t「銖zyu1」的異讀字\n銖\tzyu1\t銖鈍，五銖錢\n銍\tzat1\t「銍zat6」的異讀字\n銍\tzat6\t短鎌\n鋟\tcam2\t「鋟cim1」的異讀字\n鋟\tcim1\t鋟版\n鋟\tzim1\t「鋟cim1」的異讀字\n鋝\tlyut3\t古重量單位\n鋝\tlyut6\t「鋝lyut3」的異讀字\n鋌\tting2\t「鋌ting5」的異讀字\n鋌\tting5\t鋌而走險\n錒\taa3\t放射性元素Ac\n錒\tngaa3\t「錒aa3」的異讀字\n錒\to1\t「錒aa3」的異讀字\n錶\tbiu1\t手錶，電錶，水錶\n錶\tbiu2\t「錶biu1」的異讀字\n錠\tding2\t「錠ding3」的異讀字\n錠\tding3\t錠劑，錠子，紡錠，紗錠，銀錠\n錠\tding6\t「錠ding3」的異讀字\n鋸\tgeoi3\t鋸齒，拉鋸，電鋸\n鋸\tgoe3\t「鋸geoi3」的異讀字，口語讀音\n鋼\tgong1\t「鋼gong3」的異讀字\n鋼\tgong3\t鋼鐵，鋼琴，大煉鋼，鋼盔，鋼筋，鋼材，鋼錠\n錕\tgwan1\t「錕kwan1」的異讀字\n錕\tkwan1\t錕鋙\n錁\tfo3\t「錁gwo2」的異讀字\n錁\tgwo2\t(1)同「輠」字；(2)小塊之金銀錠\n錫\tsek3\t「錫sik3」的異讀字，作金屬元素時口語用字\n錫\tsik3\t錫杖，錫箔，錫鑞\n錚\tcaang1\t「錚zaang1」的異讀字\n錚\tzaang1\t錚鏦\n錚\tzang1\t「錚zaang1」的異讀字\n錐\tjeoi1\t「錐zeoi1」的異讀字\n錐\tzeoi1\t錐形，錐心泣血，立錐之地\n錝\tcung4\t「錝zung3」的異讀字\n錝\tzung3\t金毛\n鍇\tgaai1\t「鍇kaai2」的異讀字\n鍇\tkaai2\t精鐵\n錨\tmaau4\t錨索，起錨，拋錨\n錨\tnaau4\t「錨maau4」的異讀字\n鎪\tsau1\t(1)鏤刻；(2)蝕\n鎪\tsau2\t「鎪sau1」的異讀字\n鎪\tsuk1\t「鎪sau1」的異讀字\n鍠\tcaang4\t「鍠wong4」的異讀字\n鍠\twong4\t鍠鍠\n鍘\tzaap6\t鍘刀，鍘草\n鍘\tzaat3\t「鍘zaap6」的異讀字\n鎧\thoi2\t鎧甲，鎧馬，鎧仗\n鎧\tkoi3\t「鎧hoi2」的異讀字\n鎳\tnip1\t「鎳nip6」的異讀字\n鎳\tnip6\t一種金屬元素，符號Ni\n鏑\tdik1\t鏑矢，鏑鋒，箭鏑金屬元素Dysprosium(Dy)\n鏑\tdik6\t「鏑dik1」的異讀字，用於指謂金屬元素Dysprosium\n鏈\tlin2\t「鏈lin4」的異讀字\n鏈\tlin4\t鏈條，鏈子，鏈椎，鎖鏈\n鏈\tlin6\t「鏈lin4」的異讀字\n鏝\tmaan4\t「鏝maan6」的異讀字\n鏝\tmaan6\t塗飾牆壁的工具\n鏃\tzuk1\t「鏃zuk6」的異讀字\n鏃\tzuk6\t箭鏃\n鏷\tpok3\t「鏷buk6」的異讀字\n鏷\tbuk6\t一種放射性金屬元素，符號Pa\n鐔\ttaam4\t古代一種似劍而小的兵器\n鐔\tcam4\t「鐔taam4」的異讀字\n鐔\tjam4\t「鐔taam4」的異讀字\n鏵\twaa1\t「鏵waa4」的異讀字\n鏵\twaa4\t犁鏵\n鐎\tciu4\t「鐎ziu1」的異讀字\n鐎\tziu1\t鐎斗\n鐏\tzeon1\t「鐏zyun3」的異讀字\n鐏\tzyun3\t戈柄下端冒銅為圓錐形者\n鐸\tdok6\t木鐸，振鐸，毀鐘為鐸，司鐸，風鐸古樂器名。有柄有舌，振舌發聲，以宣布法令或示警\n鐸\tnok6\t「鐸dok6」的異讀字\n鐫\tzeon1\t「鐫zyun1」的異讀字\n鐫\tzeon3\t「鐫zyun1」的異讀字\n鐫\tsyun6\t「鐫zyun1」的異讀字\n鐫\tzyun1\t鐫刻，鐫級，鐫罰，鐫心銘骨，雕鐫\n鑉\ttaap3\t「鑉hap6」的異讀字\n鑉\thap6\t鑉鑪\n钁\tgwok3\t「钁kyut3」的異讀字\n钁\tkyut3\t大鋤\n釓\tgaa1\t金屬元素\n釓\tgaat3\t「釓gaat3」的異讀字\n釓\tkau4\t同「釚」字\n釕\tliu4\t「釕liu6」的異讀字\n釕\tliu5\t釕鈌\n釕\tliu6\t釕吊兒\n釤\tsaam1\t金屬元素\n釤\tsaam3\t「釤sin3」的異讀字\n釤\tsin3\t釤刀，釤草，釤鎌\n鈗\twan5\t古時侍臣所執的兵器\n鈗\tdeoi6\t古代矛類兵器\n鈗\tjeoi6\t「鈗wan5」的異讀字\n鈳\taa3\t同「錒」字\n鈳\tho1\t「鈳ko1」的異讀字\n鈳\tko1\t金屬元素「鈮」之舊名\n錟\ttaam4\t長矛\n錟\ttaan2\t「錟taam4」的異讀字\n錟\tcim1\t同「銛」字\n鍉\tsi4\t鑰鍉\n鍉\tdik1\t鍉針；(1)同「鏑」字，歃血器解；(2)中醫九種針法之一\n鍉\tdik6\t「鍉dik1」的異讀字\n鎞\tbai1\t釵\n鎞\tbei6\t「鎞bai1」的異讀字\n鎞\tpei1\t(1)「鎞bai1」的異讀字；(2)箭鏃形之刀\n鐋\ttong1\t鐋鑼\n鐋\ttong2\t(1)「鐋tong1」的異讀字；(2)「鐋tong3」的異讀字\n鐋\ttong3\t打磨石木的器具\n鐺\tcaang1\t瓦鐺，酒鐺\n鐺\tcing1\t「鐺caang1」的異讀字\n鐺\tdong1\t鋃鐺\n鐺\ttong1\t同「鏜」字\n鐼\tban1\t同「錛」字\n鐼\tfan3\t「鐼fan4」的異讀字\n鐼\tfan4\t(1)鐵屬；(2)飾；(3)佛教用具\n長\tcoeng4\t長生，長舌，長夜，長河，長途，長眠，長短，長處，長治久安，長風破浪，長袖善舞，長歌當哭，長繩繫日\n長\tzoeng2\t長老，長者，長雄，生長，成長，部長\n長\tzoeng6\t身無長物\n門\tmun4\t門診，門窗，門票，門市，門檻，門神，門路，門戶，門面，門牌，門鈴，門徒，門外漢，門廊，門當戶對，門生，門派\n閂\tsaan1\t上閂，門閂\n閃\tsim2\t閃避，閃爍，閃光，閃電，閃亮，閃耀\n閉\tbai3\t閉會，閉塞，閉幕，閉關，關閉\n閈\thon6\t(1)里巷的門；(2)牆垣\n閆\tjim4\t(1)同「閻」字；(2)姓氏\n閑\thaan4\t防閑，閑邪\n開\thoi1\t開始，開心，避開，開設，開朗，開會\n閏\tjeon6\t閏月，閏年，閏統\n閌\tkong3\t閌閬(高大的門戶)\n閔\tman5\t閔凶，閔勉，閔綿\n閎\twang4\t閎覽，閈閎，崇閎，閎衍，辯知閎達，；(1)巷門；(2)宏大寬闊；(3)姓氏\n閍\tpaang1\t(1)宗廟門；(2)宮中門；(3)巷門\n閐\tsam3\t覆蓋\n閘\tzaap6\t閘門，閘口，水閘\n閥\tfat6\t閥閱，門閥，官閥，軍閥，財閥\n閣\tgok3\t閣揆，閣員，閣下，閣樓\n閨\tgwai1\t閨房，閨秀，閨閣，閨女，閨怨，大家閨秀，待字閨中，香閨\n閱\tjyut6\t閱讀，閱卷，閱覽，閱兵，閱歷，閱報\n閫\tkwan2\t(1)門坎；(2)婦女居住的內室\n閶\tcoeng1\t閶風，閶闔\n閽\tfan1\t司閽，叩閽\n閹\tjim1\t閹割，閹雞，閹人，閹黨\n閻\tjim4\t閻王姓氏\n閵\tleon6\t閵鵲\n閿\tman4\t閿鄉\n闆\tbaan2\t老闆\n闊\tfut3\t闊別，闊綽，昂首闊步，闊落，遼闊，高談闊論，海闊天空\n闋\tkyut3\t樂闋\n闌\tlaan4\t闌干，闌珊，闌出，闌風\n闈\twai4\t闈場，宮闈\n闔\thap6\t闔家，闔府，捭闔\n闑\tjit6\t門中所豎短木\n闕\tkyut3\t宮闕，闕疑\n闒\ttaap3\t闒茸(微賤或愚魯的人或物)，闒懦樓上的單扇門\n闐\ttin4\t闐咽，喧闐，闐溢，和闐\n關\tgwaan1\t關係，關切，關心，關鍵，關注，關閉，關鍵，關節，關照，機關\n闢\tpik1\t闢建，闢地，闢謠，闢劃，獨闢蹊徑\n闥\ttaat3\t宮闥(王宮的門，後轉稱為宮中)，排闥，幽闥，連闥洞房門\n闤\twaan4\t闤闠\n間\tgaan1\t空間，中間，民間藝術，晚間，時間，間不容髮，天上人間\n間\tgaan3\t間接，間斷，挑撥離間，間隙，間格，間諜，間歇，反間，合作無間\n間\thaan4\t同「閒」字\n閒\tgaan1\t同「間」字，用於「空間」等詞\n閒\tgaan3\t同「間」字，用於「間隙」等詞\n閒\thaan4\t閒暇，清閒，游手好閒，閒話，閒心，閒日，閒事，閒居，閒氣，閒書，閒散，閒雅，閒置，閒愁，閒適，閒雜，閒職，空閒，農閒，閒言碎語，閒情逸致，閒雲野鶴\n閤\tgap3\t(1)姓氏；(2)小門\n閤\thap6\t同「闔」字\n閤\tgok3\t同「閣」字\n閡\that6\t隔閡\n閡\tgoi1\t同「垓」字\n閡\tngoi6\t藏塞\n閞\tfaan6\t「閞bin6」的異讀字\n閞\tbin6\t門柱上的斗拱\n閩\tman4\t「閩man5」的異讀字\n閩\tman5\t閩江，閩南\n閭\tleoi4\t閭井，閭左，閭里，閭巷，閭閻，鄉閭，三閭大夫，倚閭而望\n閭\tleoi5\t「閭leoi4」的異讀字\n閬\tlong5\t閬中(縣名)，閬苑\n閬\tlong6\t「閬long5」的異讀字\n閾\tkwik1\t「閾wik6」的異讀字\n閾\twik6\t(1)門檻；(2)界限\n闃\tgwik1\t闃然\n闃\tkwik1\t「闃gwik1」的異讀字\n闓\thoi1\t「闓hoi2」的異讀字\n闓\thoi2\t闓闡，闓懌\n闡\tcin2\t闡士，闡明，闡述，闡揚，闡發，闡微，闡緩，闡釋\n闡\tsin6\t「闡cin2」的異讀字\n闡\tzin2\t「闡cin2」的異讀字\n闠\tgwai6\t「闠kui2」的異讀字\n闠\tkui2\t闤闠\n闠\twui6\t「闠kui2」的異讀字\n閼\taat3\t夭閼\n閼\tngaat3\t「閼aat3」的異讀字\n閼\tjin1\t閼氏\n闍\tse4\t闍梨，阿闍梨\n闍\tze1\t「闍se4」的異讀字\n闍\tdou1\t城門上的臺\n闇\tam1\t諒闇；(1)守喪的屋子；(2)同「諳」字；(3)\n闇\tam2\t「闇am3」的異讀字\n闇\tam3\t闇淡，闇於知己\n闇\tngam2\t「闇am3」的異讀字\n闇\tngam3\t「闇am3」的異讀字\n闖\tcam3\t(1)伸出頭來的樣子；(2)窺視\n闖\tcong2\t闖將，闖禍，闖蕩，瞎闖\n闖\tcong3\t「闖cong2」的異讀字\n闞\thaam2\t哮闞，虓闞\n闞\thaam3\t「闞haam2」的異讀字\n闞\tham3\t姓氏\n闞\tham6\t「闞ham3」的異讀字\n陘\tjing4\t山脈中斷之處\n陝\tsim2\t陝北，陝西省\n陞\tsing1\t同「升」字\n陣\tzan6\t陣容，陣營，一陣子，陣線，陣地，陣勢，陣亡，陣痛，陣雨，陣法，陣風，陣列\n陸\tluk6\t陸續，陸軍，陸地，登陸，陸沉\n階\tgaai1\t階段，階層，階級，階梯\n陽\tjoeng4\t陽奉陰違，太陽，陽春白雪，陽光，陽台，太陽傘，陽曆，陽極，陽性反應，陽離子，陽宅，陽壽，陽間，陽世，陽具，陽痿，陽關\n際\tzai3\t際遇，際會\n隨\tceoi4\t跟隨，隨即，隨時，隨手，隨便\n險\thim2\t探險，險要，危險，冒險\n隴\tlung5\t隴山，得隴望蜀，隴斷；(1)田間高地；(2)甘肅省簡稱\n陳\tcan4\t陳述，陳設，陳腔濫調，陳酒，陳情，陳訴，陳跡，陳腐，陳舊，陳年舊事，陳規陋習，陳陳相因，敷陳，乏善可陳\n陳\tzan6\t同「陣」字\n陰\tam1\t諒陰\n陰\tjam1\t陰陽，陰天，陰暗，光陰\n陰\tjam3\t通「蔭」字\n隊\tdeoi6\t隊伍，排隊，成群結隊，隊形，隊長，隊員，隊友，部隊，團隊，領隊，列隊，離隊，掉隊，軍隊，球隊，衛隊，樂隊，團隊精神\n隊\tzeoi6\t同「墜」字\n隕\twan5\t隕石，隕星，隕落\n隕\tjyun4\t幅隕\n隱\tjan2\t隱藏，私隱，若隱若現，隱瞞，隱晦，退隱，豹隱，難言之隱，直言無隱，隱姓埋名藏匿\n隱\tjan3\t隱几而座倚靠\n隉\tnip6\t杌隉\n隉\tjit6\t「隉nip6」的異讀字\n隸\tdai6\t隸書，奴隸，隸屬，隸人，隸定，隸變，楷隸，漢隸\n隸\tlai6\t「隸dai6」的異讀字\n隸\tdoi6\t「隸dai6」的異讀字\n隻\tzek3\t隻身，雞隻，隻手遮天，隻眼，片言隻字，隻字不提，形單影隻\n雖\tseoi1\t雖然，雖則\n雞\tgai1\t雞蛋，雞毛蒜皮，雞鳴狗吠，雞鳴狗盜\n雙\tsoeng1\t雙方，雙管，雙數，雙親\n雜\tzaap6\t雜誌，夾雜，雜亂無章，雜色，雜事，雜差，雜技\n離\tlei4\t離心，離別，離奇，離恨，離宮，離情，離異，離間，離愁，離緒，離譜，離愁別緒，離經叛道\n離\tlei6\t離群索居\n難\tnaan4\t難過，困難，本性難移，難堪，難色，難受，難為，難耐，難產，難題，難免，難怪，難得，難字，難兄難弟，排難解紛，法網難逃，覆水難收，難分難解，勉為其難；(1)不容易；(2)艱辛；(3)不好\n難\tnaan6\t難民，災難，大難不死，難友，發難，難廕，逃難，遭難，責難，非難，駁難，辯難；(1)災禍；(2)叛亂；(3)質問；(4)辯駁\n難\tno4\t同「儺」字，見《詩經．小雅》\n雛\tco1\t「雛co4」的異讀字\n雛\tco4\t雛形，雛鶯乳燕，雛鳳\n雋\tzeon3\t同「俊」字\n雋\tcyun5\t「雋syun5」的異讀字\n雋\tsyun5\t雋永\n雲\twan4\t雲霧，雲霄，雲彩，雲霞，雲雨，風雲，雲淡風輕\n電\tdin6\t電話，電腦，電影，電視，電台，電器，電訊\n霣\twan5\t雷起出雨\n霧\tmou6\t煙霧，霧靄，霧水，大霧\n靆\tdoi6\t靉靆雲多而昏暗\n靈\tleng4\t口語用字，作「靈驗」解時\n靈\tling4\t靈活，靈氣，靈感，靈魂，乞靈，心靈，性靈，神靈，幽靈，輕靈，心有靈犀，生靈塗炭\n霢\tmaak6\t「霢mak6」的異讀字\n霢\tmak6\t霢霂\n霽\tcai4\t「霽cai4」的異讀字\n霽\tzai3\t霽色，光風霽月\n靂\tlik1\t「靂lik6」的異讀字\n靂\tlik6\t霹靂\n靄\toi2\t雲靄，暮靄，煙靄，瑞靄煙霧､雲氣\n靄\tngoi2\t「靄oi2」的異讀字\n靉\toi2\t靉靆，靉靉，氤氳靉靆；(1)雲多昏暗貌；(2)不明貌\n靉\toi3\t「靉oi2」的異讀字\n靉\tngoi2\t「靉oi2」的異讀字\n靉\tngoi3\t「靉oi2」的異讀字\n靜\tzing6\t靜止，靜脈，動靜皆宜，靜坐，靜態，靜電，靜觀其變，靜悄悄，靜養，靜物畫，靜修，靜穆\n靚\tleng3\t「靚zing6」的異讀字，粵語用字，意謂漂亮\n靚\tzing6\t靚女，靚衣，靚妝，豐容靚飾\n靨\tjip3\t笑靨，酒靨\n靦\tmin5\t靦腆，緬靦\n靦\ttin2\t靦顏，靦然人面，靦冒，靦面，靦臉，靦然，靦顏借命；(1)慚愧；(2)厚顏無恥\n鞀\ttou4\t兩旁有耳之小鼓\n鞏\tgung2\t鞏固\n鞦\tcau1\t鞦韆\n韁\tgoeng1\t韁繩，脫韁，信馬由韁\n韃\ttaat3\t韃靼，韃子；(1)北方異族之總稱；(2)同「撻」字\n韆\tcin1\t鞦韆\n韉\tzin1\t鞍韉馬鞍下的墊\n鞝\tsoeng5\t「鞝zoeng2」的異讀字\n鞝\tzoeng2\t補鞋之皮\n韍\tfat1\t祭服的一種\n韓\thon4\t韓國\n韙\twai5\t不韙\n韜\ttou1\t韜略，韜光養晦，文韜武略，韜光韞玉劍套\n韋\twai4\t姓氏\n韋\twai5\t「韋wai4」的異讀字\n韌\tjan6\t「韌ngan6」的異讀字\n韌\tngan6\t韌性，堅韌，韌帶，柔韌，堅韌不拔\n韝\tgau1\t臂套\n韝\tkau1\t「韝gau1」的異讀字\n韞\twan2\t韞匱，韞櫝未酤(喻懷才不用；《論語•子罕》有「韞匱而藏諸？求善賈而沽諸？」語)包藏､蘊含\n韞\twan3\t「韞wan2」的異讀字\n響\thoeng2\t響亮，響應，不同凡響，響板，響聲，響徹雲霄，山東響馬\n韻\twan5\t「韻wan6」的異讀字\n韻\twan6\t韻律，韻味，神韻，韻文，韻致，押韻，風韻，琴韻\n項\thong6\t項目，項鍊，項圈，項背，說項，弱項，事項\n須\tseoi1\t須臾，必須，須彌山，須知，終須\n順\tseon6\t順利，順序，順暢，順延，順從，順差，順應，順理成章，順其自然，順手牽羊\n頊\tjuk1\t顓頊(五帝之一)，頊頊(莊子•天下)；(1)姓氏；(2)茫然自失貌\n預\tjyu6\t預兆，參預，預算案，預備，干預，預期，預言，預防，預定\n頎\tkei4\t頎長\n頍\tkwai2\t(1)抬頭；(2)古代用以束髮固冠的髮飾\n頑\twaan4\t頑皮，頑強，頑固，頑童，頑劣，頑抗\n頸\tgeng2\t頸項，頸椎，頸動脈，頸飾\n頷\tham5\t頷首，頷下之珠，頷聯，頷頤下巴\n頤\tji4\t頤指氣使，頤養，頤和園，大快朵頤，頷頤，解頤顏面的腮頰部分\n頻\tpan4\t頻繁，頻道，頻率，頻仍，頻密\n頭\ttau4\t頭顱，鋤頭，頭頭是道，頭髮，頭巾，頭腦，頭緒，頭領，頭獎，額頭，布頭，銜頭，捕頭，彩頭，頭條新聞，百尺竿頭，白頭偕老，抱頭痛哭，豹頭環眼，頭昏眼花，頭昏腦脹\n頹\tteoi4\t頹廢，頹喪，頹然，頹壞，頹靡，頹唐，斷壁頹垣\n顅\thaan1\t長項的樣子\n顃\ttaam4\t臉長\n顒\tjung4\t顒望\n額\tngaak6\t額頭，名額，額手稱慶，額外，定額，額角崢嶸\n顏\tngaan4\t顏色，顏面，顏料，容顏，和顏悅色\n顎\tngok6\t(1)昆蟲攝食器官；(2)同「齶」字\n題\ttai4\t題材，題目，題字，題名，題詞，題簽，題解，題款\n顓\tzyun1\t顓珼，顓兵，顓門，顓蒙，顓民，顓制；(1)姓氏；(2)謹慎；(3)蒙昧；(4)通「專」\n顛\tdin1\t顛倒，塔顛，顛覆，山顛\n願\tjyun6\t願望，許願，心甘情願，願意，心願，志願，夙願，祝願，誓願，自願，天從人願，如願以償，事與願違\n類\tleoi6\t類似，同類，物以類聚，類型，類別，類推，類比，類屬，鳥類，敗類，匪類，出類拔萃，不倫不類，分門別類\n顗\tngai5\t(1)安靜；(2)莊重、謹慎；(3)用於人名，如佛教天台宗高僧智顗\n顙\tsong2\t稽顙\n顧\tgu3\t顧慮，惠顧，顧名思義，顧客，顧問，顧及，顧惜，顧忌，照顧，環顧，顧面子，顧此失彼，顧盼自豪，顧全大局，奮不顧身\n顥\thou6\t白而發光\n顫\tzin3\t顫抖，顫慄，心驚肉顫\n顯\thin2\t顯露，明顯，顯而易見，顯微鏡，顯著，顯現，顯靈，顯身手，顯赫，顯像管，顯貴，顯考，顯妣\n顰\tpan4\t顰眉，一顰一笑，東施效顰\n顱\tlou4\t顱骨，頭顱\n顴\tkyun4\t顴骨\n頃\tking1\t同「傾」字\n頃\tking2\t頃刻\n頓\tdeon6\t頓首，頓挫，頓悟，頓筆，頓號，困頓\n頓\tduk6\t冒頓\n頌\tjung4\t同「容」字\n頌\tzung6\t頌揚，歌頌\n頗\tpo1\t偏頗\n頗\tpo2\t很\n頫\ttiu3\t同「眺」字\n頫\tfu2\t頫囟(叩頭)，頫眺\n頜\tgap3\t口\n頜\thap6\t上頜，下頜\n頡\tgit3\t截取\n頡\tkit3\t頡頏，頡滑，倉頡，抗頡作用\n顆\tfo2\t顆粒，一顆心\n顆\tfo3\t土塊\n頂\tdeng2\t「頂ding2」的異讀字，口語讀音\n頂\tding2\t頂端，山頂，頂天立地，頂替，頂撞，頂嘴，頂戴，屋頂，頂禮膜拜，頂頭上司，頂風冒雨，頂門立戶\n頇\thon1\t顢頇\n頇\thon4\t「頇hon1」的異讀字\n頏\thong4\t頡頏\n頏\tkong3\t「頏hong4」的異讀字\n領\tleng5\t「領ling5」的異讀字\n領\tling5\t領土，領口，領空，領事，領受，領袖，領悟，領會，領章，領情，領教，領域，領略，領銜，領導，衣領，率領\n頦\tgoi2\t「頦hoi4」的異讀字\n頦\thoi4\t下頦，抬頦，下巴頦\n頦\thoi5\t「頦hoi4」的異讀字\n頰\tgaap3\t面頰，頰囊，兩頰緋紅，頰上添毫\n頰\thaap3\t「頰gaap3」的異讀字\n頲\tting2\t「頲ting5」的異讀字\n頲\tting5\t正直\n頵\tgwan1\t「頵wan1」的異讀字\n頵\twan1\t頵砡\n顣\tcuk1\t同「蹙」字\n顣\tzuk1\t「顣cuk1」的異讀字\n顢\tmun1\t「顢mun4」的異讀字\n顢\tmun4\t顢頇\n顳\tjip6\t「顳nip6」的異讀字\n顳\tnip6\t頭部兩側靠近耳朵方的部份\n頁\tsau2\t「頁kit3」的異讀字\n頁\tjip6\t頁碼\n頁\tkit3\t部首\n頒\tbaan1\t頒行，頒佈，頒發，頒賞，頒賜，頒獎\n頒\tpaan1\t「頒baan1」的異讀字\n頒\tfan4\t有頒其首\n颯\tsaap3\t颯颯，颯爽\n颱\ttoi4\t颱風\n颭\tzim2\t颭灩\n颳\tgwaat3\t颳風，冰前颳雪\n颶\tgeoi6\t颶風\n颺\tjoeng4\t飄颺\n颻\tjiu4\t飄颻，颻颺隨風飄動\n飄\tpiu1\t飄揚，輕飄，飄搖\n飆\tbiu1\t暴風\n飀\tlau4\t微風吹動的樣子\n飋\tsat1\t飋飋(風聲)\n風\tfung1\t風暴，作風，風聲鶴唳，風俗，風氣，風範，風釆，風味，風韻，風騷，風度，風格，風骨，風趣，風月，風水，風光，風行，風聲，風平浪靜，風雨同舟，風雲際會，風馳電掣，風燭殘年，風土人情\n風\tfung3\t同「諷」字\n颮\tpaau4\t颮颮紛紛(眾多)\n颮\tbiu1\t同「飆」字\n颾\tsau1\t同「颼」字\n颾\tsou1\t颾颾(象聲詞)\n颼\tsau1\t颼飀，冷颼颼\n颼\tsuk1\t「颼sau1」的異讀字\n颸\tci1\t「颸si1」的異讀字\n颸\tsi1\t涼風\n飛\tfei1\t飛翔，起飛，飛黃騰達，飛越，飛舞，飛機，飛船，飛碟，眉飛色舞，魂飛魄散，不翼而飛\n飣\tding3\t餖飣，鬥飣\n飢\tgei1\t飢餓，飢荒，飢民，飢渴，飢寒交迫，飢腸轆轆，飢不擇食\n飥\ttok3\t餺飥\n飫\tjyu3\t(1)飽；(2)私宴\n飽\tbaau2\t飽受，飽和，飽滿，吃飽\n飴\tji4\t飴糖\n飾\tsik1\t飾演，飾物，飾詞，飾過\n飼\tzi6\t飼養，飼料，飼主\n餃\tgaau2\t餃子，水餃\n餉\thoeng2\t軍餉，糧餉\n餌\tnei6\t魚餌，果餌，誘餌\n餑\tbut6\t餑餑，香餑餑\n餖\tdau6\t餖飣\n餘\tjyu4\t餘額，餘地，餘力，餘悸猶存，餘裕，餘興，餘燼，餘暇，餘悸，餘波蕩漾，餘韻，餘味\n餓\tngo6\t挨餓，飢餓\n餕\tzeon3\t餕餘\n館\tgun2\t館長，館子，館員，餐館，旅館\n餚\tngaau4\t佳餚\n餛\twan4\t餛飩\n餱\thau4\t乾糧\n餪\tnyun5\t餪女\n餵\twai3\t餵食，餵養，餵給，餵奶\n餭\twong4\t鋹餭\n餬\twu4\t餬口\n餺\tbok3\t餺飥\n餼\thei3\t餼牢\n饃\tmo4\t餅類食品\n饈\tsau1\t珍饈百味\n饑\tgei1\t饑餓，饑不擇食，畫餅充饑，饑荒，饑渴，饑饉，積穀防饑\n饒\tjiu4\t饒恕，饒舌，求饒\n饗\thoeng2\t饗客\n饘\tzin1\t饘粥\n饞\tcaam4\t饞嘴，解饞，饕口饞舌，貪饞，眼饞，饞涎欲滴貪吃\n饟\thoeng2\t同「餉」字\n飯\tfaan5\t以食物飼人或喂牲口\n飯\tfaan6\t飯菜，晚飯\n飲\tjam2\t飲泣，飲恨，飲食，飲酒，飲茶，飲啄，飲譽，飲水思源，飲冰茹檗，飲鴆止渴\n飲\tjam3\t飲馬，飲馬投錢給水人或畜喝\n養\tjoeng5\t養心，養生，養育，養神，養料，養病，養殖，養廉，養虎遺患，養尊處優，養精蓄銳，休養，培養\n養\tjoeng6\t供養\n餳\tcing4\t餳糖，餳眼，粥餳\n餳\ttong4\t糖漿\n餫\twan4\t餫飩(同餛飩)\n餫\twan6\t運糧\n饌\tzaan6\t陳設或準備食物\n饌\tsyun2\t古重量單位\n飭\tcik1\t飭令，整飭，飭辦，飭厲，申飭\n飭\tsik1\t「飭cik1」的異讀字\n飪\tjam5\t「飪jam6」的異讀字\n飪\tjam6\t失飪，烹飪，烹飪鼎鼐\n飩\ttan1\t「飩tan4」的異讀字\n飩\ttan4\t餛飩\n飩\ttyun4\t「飩tan4」的異讀字\n飶\tbei3\t「飶bit6」的異讀字\n飶\tbit1\t「飶bit6」的異讀字\n飶\tbit6\t食物的香氣\n餅\tbeng2\t餅乾，擲鐵餅，畫餅充饑，月餅，柿餅，燒餅，薄餅，麵餅，餡餅\n餅\tbing2\t「餅beng2」的異讀字\n餔\tbou1\t餔子，餔菜，餔時，餔啜，玉餔\n餔\tbou3\t「餔pou3」的異讀字\n餗\tcuk1\t覆餗(敗事，見《周易•鼎•九四》)鼎中食物\n餗\tsuk1\t「餗cuk1」的異讀字\n餒\tneoi5\t餒怯，凍餒，氣餒\n餒\tnoi5\t「餒neoi5」的異讀字\n餡\thaam2\t「餡haam6」的異讀字\n餡\thaam6\t餡餅，肉餡\n餞\tzin3\t餞行，蜜餞\n餞\tzin6\t「餞zin3」的異讀字\n餿\tsau1\t餿水，餿主意，餿臭\n餿\tsuk1\t「餿sau1」的異讀字\n饁\tjip3\t送飯給在田裡工作的人吃\n饁\tjip6\t「饁jip3」的異讀字\n餾\tlau4\t「餾lau6」的異讀字\n餾\tlau6\t分餾，直餾，乾餾，蒸餾水\n饉\tgan2\t年饉，饑饉\n饉\tgan6\t「饉gan2」的異讀字\n饅\tmaan4\t饅頭\n饅\tmaan6\t「饅maan4」的異讀字\n饋\tgwai3\t「饋gwai6」的異讀字\n饋\tgwai6\t饋贈，饋糧，回饋，反饋，中饋乏人\n饜\tjim1\t「饜jim3」的異讀字\n饜\tjim3\t饜足，饜飫滿足\n餧\twai3\t同「餵」字\n餧\tneoi5\t同「餒」字\n餧\tnoi5\t「餧neoi5」的異讀字\n馬\tmaa5\t馬戲，馬車，兵馬\n馭\tjyu6\t駕馭，以一馭萬，長轡遠馭，馭氣\n馳\tci4\t馳名，馳騁，驅馳\n駁\tbok3\t駁雜，班駁，辨駁，駁議，駁斥，駁倒，駁船；(1)毛色不純的馬；(2)就事理抗辯；(3)載卸貨物\n駙\tfu6\t駙馬\n駕\tgaa3\t駕駛，凌駕，駕輕就熟，駕馭，駕臨，駕到，駕崩，勞駕，擋駕，並駕齊驅，騰雲駕霧，御駕親征\n駒\tkeoi1\t千里駒\n駑\tnou4\t駑鈍，駑馬，駑才\n駟\tsi3\t駟馬難追，上駟之材，車駟，結駟連騎，高車駟馬，安車駟馬，下駟，天駟(星宿名)；(1)馬；(2)馬之量詞；(3)馬車；(4)駕馭\n駝\tto4\t駝背，駝鳥，駝峰\n駐\tzyu3\t駐守，駐軍，駐足，駐紮，進駐\n駎\tzau6\t(1)馬竟馳；(2)同「驟」字\n駰\tjan1\t色淺黑帶白的馬\n駤\tzi3\t同「騺」字\n駧\tdung6\t(1)馬快跑；(2)動，急速\n駸\tcam1\t駸駸馬行迅速的樣子\n騂\tsing1\t騂旄，騂剛(赤色的牛)\n駿\tzeon3\t駿逸，駿馬，駿駒，神采駿發\n駶\tguk1\t馬立不定\n騍\tfo3\t騍馬，騍騾，騍驢，騍駝母騾或母馬\n騏\tkei4\t騏驥\n騉\tkwan1\t駿馬\n騄\tluk6\t騄耳(周穆王八駿之一)\n騊\ttou4\t騊駼古代傳說中的一種神獸\n騅\tzeoi1\t毛色青白夾雜的馬匹\n騤\tkwai4\t騤騤\n騖\tmou6\t馳騖，外騖，好高騖遠\n騙\tpin3\t騙局，騙子，騙取，受騙，欺騙，詐騙\n騠\ttai4\t駃騠\n騜\twong4\t毛色黃白相間的馬\n騚\tcin4\t四蹄全白的馬\n騝\tkin4\t騝騝(壯建的樣子)\n騔\tgot3\t馬快跑\n騱\thai4\t前足全白的馬\n騫\thin1\t騫騰，騫舉高舉\n騵\tjyun4\t赤毛白腹的馬\n騮\tlau4\t驊騮(周穆王八駿之一)\n騸\tsin3\t騸馬(去過勢的馬，gelding)閹割牲畜、動物\n騷\tsou1\t騷擾，騷動，騷亂，騷人墨客\n騰\ttang4\t騰雲駕霧，圖騰，民怨沸騰，奔騰，翻騰，折騰，騰挪，騰空，飛黃騰達\n騭\tzat1\t評騭(評定)，陰騭(尚書•洪範)，損陰騭；(1)牡馬；(2)安排；(3)分辨\n騶\tzau1\t騶從，騶卒，騶奴\n騪\tsau1\t同「搜」字\n騴\taan3\t尾根白色的馬\n驂\tcaam1\t驂靳，驂乘，停驂，篠驂，咫角驂駒馬的別稱\n驄\tcung1\t驄馬，玉驄\n驅\tkeoi1\t驅逐，先驅，驅使，並駕齊驅\n驕\tgiu1\t驕陽，不驕不躁，驕兵必敗，驕傲，驕恣，驕縱，驕矜，天之驕子，驕奢淫逸，恃寵生驕\n驍\thiu1\t驍勇，驍將，驍騎，驍勇善戰；(1)良馬；(2)勇武剛健\n驌\tsuk1\t驌驦\n驊\twaa4\t驊騮(周穆王八駿之一，喻才華出眾的人)\n驓\tcang4\t膝下白色的馬\n驛\tjik6\t驛站，郵驛，駱驛不絕，驛道，驛使，驛馬，鄭驛留賓\n驗\tjim6\t化驗，實驗，驗證\n驨\tkwai4\t獸名\n驤\tsoeng1\t驤騰\n驦\tsoeng1\t一種良馬\n驪\tlei4\t驪歌，驪珠，盜驪(周穆王八駿之一)\n驫\tbiu1\t眾馬奔馳\n馮\tpang4\t通「憑」字\n馮\tfung4\t姓氏\n馯\thon4\t姓氏\n馯\thon6\t同「駻」字\n駃\tfaai3\t同「快」字\n駃\tkyut3\t駃騠\n駔\tcong2\t駔子(流氓)\n駔\tzong2\t駔儈\n駔\tzou2\t駿馬\n馴\tceon4\t「馴seon4」的異讀字\n馴\tseon4\t馴良，馴服，馴養，雅馴，溫馴，桀敖不馴\n馹\tjat6\t古代驛站專用的車\n馹\tjik6\t「馹jat6」的異讀字\n駛\tsai2\t駕駛\n駛\tsi2\t「駛sai2」的異讀字\n駭\thaai5\t駭突，駭異，駭人聽聞，駭然失色，驚駭，驚淘駭浪\n駭\thaai6\t「駭haai5」的異讀字\n駭\thoi4\t「駭haai5」的異讀字\n駭\thoi5\t「駭haai5」的異讀字\n駱\tlok3\t駱駝，駱馬，駱驛黑色鬃毛的白馬；姓氏\n駱\tlok6\t「駱lok3」的異讀字\n駢\tpin4\t駢文，駢四儷六，駢拇枝指，駢衍，駢比\n駢\tping4\t「駢pin4」的異讀字\n駩\tcyun1\t白馬黑唇\n駩\tcyun4\t「駩cyun1」的異讀字\n騁\tcing2\t騁目，騁足，騁能，騁望，騁騖，馳騁，游目騁懷\n騁\tping3\t「騁cing2」的異讀字\n駻\thon2\t「駻hon6」的異讀字\n駻\thon6\t駻馬凶悍不溫馴的馬\n騃\tdaai1\t「騃ngoi4」的異讀字\n騃\tngaai6\t「騃ngoi4」的異讀字\n騃\tngoi4\t騃子，痴騃，愚騃痴呆\n騧\tgwaa1\t「騧waa1」的異讀字\n騧\twaa1\t身黃嘴黑的馬\n騾\tleoi4\t「騾lo4」的異讀字\n騾\tlo4\t驢和馬交配所的雜種\n驀\tmaak6\t「驀mak6」的異讀字\n驀\tmak6\t驀地，驀然\n驁\tngou4\t(1)古樂章名；(2)駿馬\n驁\tngou6\t「驁ngou4」的異讀字\n驃\tbiu1\t「驃piu3」的異讀字\n驃\tbiu6\t「驃piu3」的異讀字\n驃\tpiu3\t驃騎，驃勇，黃驃馬\n驏\tzaan2\t驏騎\n驏\tcan2\t「驏zaan2」的異讀字\n驚\tgeng1\t「驚ging1」的異讀字\n驚\tging1\t驚慌，吃驚，驚弓之鳥，驚奇，驚恐，驚訝，驚愕，驚悸，驚異，驚怖，驚詫，驚魂，驚歎，驚醒，驚險，驚蟄，震驚，驚天動地，驚心動魄，驚惶失措，驚濤駭浪\n驙\ttaan4\t「驙zin1」的異讀字\n驙\tzin1\t(1)馬負重行難；(2)馬名\n驟\tzaau6\t「驟zau6」的異讀字\n驟\tzau6\t步驟，驟變，驟雨，驟然\n驥\tgei3\t「驥kei3」的異讀字\n驥\tkei3\t騏驥，赤驥(周穆王八駿之一)\n驢\tleoi4\t驢車，驢年馬月，黔驢技窮\n驢\tlou4\t「驢leoi4」的異讀字\n馱\tdo6\t馱子\n馱\tto4\t牲口負物，引申為背負\n馱\tto6\t「馱do6」的異讀字\n駘\tdoi6\t「駘toi5」的異讀字\n駘\ttoi4\t駑駘\n駘\ttoi5\t駘蕩\n騎\tke4\t「騎kei4」的異讀字，口語讀音\n騎\tgei6\t車騎，輕騎，鐵騎，坐騎，遊騎\n騎\tkei3\t「騎gei6」的異讀字，口語讀音\n騎\tkei4\t騎馬，騎術，騎牆派，騎縫蓋章\n髏\tlau4\t骷髏，髑髏\n髒\tzong1\t髒亂，髒話，骯髒\n體\ttai2\t體格，身體，體貼入微，體無完膚，體育，體系，體制，體會，體諒，體驗，體積，體罰，體察，體溫，體面，體魄，體統，體裁\n髖\tfun1\t髖骨\n骯\tong1\t骯髒\n骯\tkong3\t「骯ong1」的異讀字\n骯\tngong1\t「骯ong1」的異讀字\n髕\tban3\t髕骨\n髕\tpan5\t「髕ban3」的異讀字\n鬆\tsung1\t鬆懈，鬆散，鬆弛，鬆動，鬆軟，鬆脫\n鬍\twu4\t鬍子，鬍鬚\n鬚\tsou1\t鬚髯如戟，鬍鬚，巾幗鬚眉，鬚根，捋虎鬚，碧眼紫鬚\n鬢\tban3\t鬢毛，鬢髮，鬢雲，霜鬢，華鬢\n鬠\tkui3\t用五彩束髮\n鬠\tkut3\t同「髺」字\n髮\tfaat3\t頭髮，髮夾，髮髻，髮指，髮妻\n髮\tfat3\t「髮faat3」的異讀字\n鬥\tdau3\t鬥爭，奮鬥，勾心鬥角，鬥志，鬥士，鬥氣，鬥嘴，鬥趣，鬥雞眼，搏鬥，打鬥，批鬥，明爭暗鬥，單打獨鬥，兩虎相鬥，龍爭虎鬥\n鬧\tnaau6\t鬧事，鬧劇，鬧市，鬧翻，喧鬧\n鬩\thik1\t「鬩jik1」的異讀字\n鬩\tjik1\t鬩牆，盱鬩(皺眉)，兄弟鬩牆\n鬮\tgau1\t拈鬮\n鬮\tkau1\t「鬮gau1」的異讀字\n鬨\thong6\t同「巷」字\n鬨\thung3\t「鬨hung6」的異讀字\n鬨\thung6\t(1)戰鬥；(2)同「哄」字\n鬱\twat1\t鬱悶，鬱積，鬱抑，鬱結\n魎\tloeng5\t魍魎\n魘\tjim2\t夢魘\n魘\tjip3\t「魘jim2」的異讀字\n魚\tjyu4\t魚池，魚類，魚船，魚村\n魛\tdou1\t(1)一種外形如尖刀的魚；(2)帶魚的別稱\n魴\tfong4\t魚名\n魷\tjau4\t魷魚\n魯\tlou5\t魯莽，粗魯，魯鈍\n魦\tsaa1\t同「鯊」字\n魨\ttyun4\t河豚\n鮅\tbit1\t即赤眼鱒\n鮒\tfu6\t鯽魚\n鮕\tgu1\t魚名\n鮫\tgaau1\t鮫綃，鮫人(神話傳說中的人魚)\n鮭\tgwai1\t鮭魚，鮭目，鮭菜\n鮞\tji4\t魚卵\n鮤\tlit6\t鮤魚(即魛魚)\n鮯\tgap3\t魚名\n鮶\tgwan1\t黑鮶(魚名)\n鯉\tlei5\t鯉魚，鯉躍龍門\n鮸\tmin5\t魚名\n鯆\tpou1\t江豚的別名\n鯊\tsaa1\t鯊魚\n鯇\twaan5\t草魚\n鮿\tzip3\t乾魚\n鯄\tkau4\t魚名\n鮵\tdyut6\t體型較小的烏鱧\n鯧\tcoeng1\t銀鯧魚\n鯛\tdiu1\t真鯛，雀鯛\n鯡\tfei1\t鯡魚(海魚名)\n鯕\tkei4\t鯕鰍(魚名)\n鯨\tking4\t鯨魚\n鯢\tngai4\t一種兩棲動物，又名娃娃魚\n鯰\tnim4\t魚名\n鯗\tsoeng2\t白鯗，鰻鯗\n鯞\tzau2\t鱖鯞(魚名)\n鯔\tzi1\t魚名\n鯬\tlai4\t鯬鯠(即鰣魚)\n鰍\tcau1\t泥鰍\n鰈\tdip6\t魚名\n鰋\tjin2\t魚名\n鯷\ttai4\t一種群集於淺海的小型魚類\n鰉\twong4\t鰉魚\n鰆\tceon1\t魚名\n鰜\tgim1\t魚名\n鰥\tgwaan1\t鰥夫，鰥寡，鰥寡孤獨，鰥居，鰥守\n鰩\tjiu4\t魚名\n鰭\tkei4\t魚鰭，背鰭\n鰤\tsi1\t鰤魚(魚名)\n鰣\tsi4\t魚名\n鱉\tbit3\t鱉悶，鱉鳥，鱉裙，鱉爪，鱉煞，鱉燥，脾鱉，馬鱉，田鱉，尿鱉，酒鱉，石鱉，跛鱉千里，甕中之鱉\n鰹\tgin1\t魚名\n鰳\tlak6\t鰳魚\n鰱\tlin4\t鰱魚\n鰲\tngou4\t鰲頭，獨占鰲頭；(1)大魚；(2)同「鼇」字\n鱈\tsyut3\t鱈魚\n鰷\ttiu4\t鰷魚\n鰼\tzaap6\t鰼水\n鱆\tzeon1\t鱆魚(即章魚)\n鰽\tcau4\t(1)鱭魚別名；(2)同「鯦」字\n鱘\tcam4\t魚名\n鱗\tleon4\t鱗次，鱗片，鱗次櫛比，魚鱗，魚鱗圖冊\n鱔\tsin5\t鱔魚，白鱔，黃鱔\n鱟\thau6\t鱟魚\n鱧\tlai5\t魚名\n鱢\tsou1\t腥味\n鱨\tsoeng4\t魚名\n鱮\tzeoi6\t鰱魚的別名\n鱸\tlou4\t鱸魚\n鱷\tngok6\t鱷魚\n鱺\tlei4\t鰻鱺\n魟\tgung1\t魚名\n魟\thung4\t赤魟(海魚名)，白魟\n鮑\tbaau1\t(1)人名用字；(2)姓氏\n鮑\tbaau6\t鮑魚，鮑肆\n魺\tgo2\t經過加工的魚類食品\n魺\tho4\t河豚\n魽\thaam4\t蛤\n魽\tham1\t同「蚶」字\n鮮\tsin1\t鮮明，新鮮，鮮車怒馬，鮮艷，鮮活，鮮美，鮮紅，鮮奶，鮮肉，鮮花，鮮卑，海鮮，鮮衣美食\n鮮\tsin2\t鮮有，鮮為人知，屢見不鮮，寡廉鮮恥，倨傲鮮腆\n鮆\tzai1\t一種外形似刀的魚\n鮆\tci2\t魚名\n鰓\tsaai2\t憂心的樣子\n鰓\tsoi1\t曝鰓龍門，鰓蝨，鰓葉\n鱄\ttyun4\t傳說中的魚名\n鱄\tzyun1\t魚名\n鱖\tgwai3\t桂魚\n鱖\tkyut3\t鱖魚，鱖豚\n鱣\tsin5\t同「鱔」字\n鱣\tzin1\t一種無鱗的大魚\n魵\tfan4\t「魵fan5」的異讀字\n魵\tfan5\t魵魚，翔鷗輕魵\n鮐\ttoi1\t「鮐toi4」的異讀字\n鮐\ttoi4\t鮐背\n鮓\tzaa2\t鮓肉，鮓醬，魚鮓\n鮓\tzaa3\t「鮓zaa2」的異讀字\n鮦\tzau6\t「鮦tung4」的異讀字\n鮦\ttung4\t魚名\n鮪\twai5\t「鮪fui2」的異讀字\n鮪\tfui2\t魚名\n鮚\tgit3\t蚌的一種\n鮚\tgit6\t「鮚git3」的異讀字\n鯁\tgang2\t骨鯁在喉，鯁直\n鯁\tkang2\t「鯁gang2」的異讀字\n鯀\tgwan2\t(1)大魚；(2)人名，夏禹的父親\n鯀\tkwan2\t「鯀gwan2」的異讀字\n鯽\tzak1\t「鯽zik1」的異讀字\n鯽\tzik1\t鯽魚\n鯤\tgwan1\t「鯤kwan1」的異讀字\n鯤\tkwan1\t傳說中的大魚\n鯪\tleng4\t「鯪ling4」的異讀字\n鯪\tling4\t鯪鯉，土鯪魚\n鰒\tfuk1\t鮑魚\n鰒\tfuk6\t「鰒fuk1」的異讀字\n鰫\tjung4\t鰫魚(魚名)\n鰫\tsung4\t「鰫jung4」的異讀字\n鰨\ttaap3\t鰨目魚\n鰨\ttaat3\t「鰨taap3」的異讀字\n鰻\tmaan4\t鰻鱺，電鰻，泥鰻，海鰻\n鰻\tmaan6\t「鰻maan4」的異讀字\n鰾\tbiu1\t「鰾piu5」的異讀字\n鰾\tpiu5\t鰾膠，魚鰾\n鱊\twat6\t一種小魚\n鱊\tleot6\t「鱊wat6」的異讀字\n鱒\tzeon1\t「鱒zyun6」的異讀字\n鱒\tzyun1\t「鱒zyun6」的異讀字\n鱒\tzyun6\t鱒魚\n鱠\tkui2\t魚名\n鱠\tkui3\t「鱠kui2」的異讀字\n鱭\tcai4\t「鱭cai5」的異讀字\n鱭\tcai5\t刀魚\n鯖\tzaang1\t「鯖zing1」的異讀字\n鯖\tcing1\t魚名\n鯖\tzing1\t魚肉雜燴\n鯫\tzau1\t鯫生\n鯫\tzau6\t「鯫zau1」的異讀字\n鯫\tzip3\t魚乾\n鳧\tfu4\t鳧茈\n鳳\tfung6\t鳳凰，鳳梨，鳳儀，鳳毛麟角，鳳眼\n鳴\tming4\t鳴槍，鳴笛，鳴金收兵，鳴冤，鳴謝，共鳴，一鳴驚人\n鳲\tsi1\t鳲鳩\n鴇\tbou2\t鴇母，鴇鳥，老鴇開妓院的女人\n鴃\tkyut3\t鸋鴃，鴃舌\n鴆\tzam6\t鴆毒，飲鴆止渴\n鳷\tzi1\t鳷鵲\n鴅\tfun1\t傳說中的怪鳥，人面鳥喙\n鳼\tman4\t鵪鶉的幼鳥\n鴟\tci1\t鴟鴞(鳥名)\n鴔\tfuk6\t鴔鵖(即戴勝)\n鴐\tgaa1\t野鵝\n鴣\tgu1\t鷓鴣\n鴞\thiu1\t鴟鴞，見彈求鴞，榮膺鴞薦\n鴦\tjoeng1\t鴛鴦(鳥名)\n鴝\tkeoi4\t鴝鵒\n鴗\tlap6\t即翠鳥\n鴒\tling4\t鴒原\n鴕\tto4\t鴕鳥，鷸鴕\n鵁\tgaau1\t鵁鶄\n鴻\thung4\t鴻儒，鴻溝，鴻文，鴻雁\n鵂\tjau1\t鴟鵂(鳥名)，鵂鶹(鳥名)\n鴯\tji4\t鷾鴯\n鴽\tjyu4\t鵪鶉之類的小鳥\n鴰\tkut3\t鶬鴰\n鴷\tlit6\t啄木鳥\n鴮\twu1\t匏鸅(鵜鶘的別名)\n鵓\tbut6\t鵓鴿，鵓鴣，鵓角\n鵑\tgyun1\t杜鵑，啼鵑，杜鵑啼血\n鵒\tjuk6\t鴝鵒\n鵝\tngo4\t鵝蛋，鵝毛，鵝黃，天鵝\n鵜\ttai4\t鵜鶘\n鵚\ttuk1\t鵚鶖\n鵊\tgaap3\t鵯鵊(即催明鳥)\n鵰\tdiu1\t一箭雙鵰\n鶇\tdung1\t鳥名\n鵩\tfuk6\t鵩鳥(鳥名，外形酷似貓頭鷹)\n鶊\tgang1\t鶬鶊\n鶌\tgwat6\t鶌鳩，鶌鶋(鳥名)\n鵷\tjyun1\t鵷鶵\n鵡\tmou5\t鸚鵡\n鵬\tpaang4\t鵬程，鵬程萬里\n鵫\tzaau6\t白雉\n鶄\tzing1\t鵁鶄\n鵧\tpei4\t鵧鷑\n鶖\tcau1\t禿鶖，鵚鶖\n鶿\tci4\t鸕鶿\n鶒\tcik1\t鸂鶒\n鶩\tmou6\t趨之若鶩，心無旁鶩，刻鵠類鶩鳥類中的游禽類\n鶚\tngok6\t飛鳥名稱，俗稱「魚鷹」\n鶗\ttai4\t鶗鵳(即鷂)\n鶘\twu4\t鵜鶘\n鶦\twu4\t鶟鶦(即白頭翁鳥)\n鶼\tgim1\t鶼鰈，鶼鶼\n鶴\thok6\t鶴立雞群，白鶴，風聲鶴唳，鶴壽，童顏鶴髮，煮鶴焚琴\n鷁\tjik6\t鷁首，彩鷁\n鷊\tjik6\t同「鷁」字\n鶲\tjung1\t鳥類的一科\n鶹\tlau4\t鵂鶹\n鷅\tleot6\t鶹鷅(即黃鸝)\n鷈\ttai4\t鷿鷈\n鶭\tfong2\t水鳥名\n鷐\tsan4\t鷐風(鳥名)\n鷓\tze3\t鷓鴣\n鷙\tzi3\t性情凶猛的鳥\n鷴\thaan4\t白鷴(鳥名)\n鷳\thaan4\t同「鷴」字\n鷯\tliu4\t鷯哥，鷦鷯\n鷥\tsi1\t鷺鷥\n鷫\tsuk1\t鷫鷞\n鷲\tzau6\t禿鷲\n鷦\tziu1\t鷦鷯\n鷷\tzeon1\t野雞名\n鷨\twaa4\t鳥名\n鷽\thok6\t鷽鳩笑鵬\n鷹\tjing1\t鷹犬\n鸂\tkai1\t鸂鶒\n鷺\tlou6\t鷺鷥，白鷺，蒼鷺\n鷿\tpik1\t鷿鵜，鷿鷈\n鸇\tzin1\t一種猛禽\n鸏\tmung4\t紅嘴鸏(鳥名)\n鸋\tning4\t鳥名\n鸕\tlou4\t鸕鶿\n鸗\tlung4\t(1)野鴨；(2)姓氏\n鸚\tjing1\t鸚鵡，鸚哥，鸚鵡學舌\n鸛\tgun3\t鳥名\n鸝\tlei4\t黃鸝\n鸞\tlyun4\t鸞鳳和鳴，紅鸞星動，顛鸞倒鳳，乘鸞跨鳳鳳凰一類的鳥\n鳥\tdiu2\t同「屌」字\n鳥\tniu5\t鳥類，鳥兒，鳥瞰，鳥語花香，鳥籠，候鳥\n鳽\thang1\t鶺鴒\n鳽\tgin1\t(1)鵁鶄；(2)動物學中鸛形目鷺科鳥的通稱\n鳽\tzin1\t同「鸇」字\n鵠\tguk1\t鵠的，中鵠\n鵠\thuk6\t鵠立，鵠志，鵠候，鵠望，鴻鵠，鵠面鳥形\n鶬\tcoeng1\t金飾貌\n鶬\tcong1\t鶬鶊(黃鶯)，鶬鴰，鶬鶬\n鶻\tgwat1\t鶻鵃，兔起鶻落\n鶻\twat6\t鶻突，回鶻，鶻崙吞棗\n鳩\tgau1\t斑鳩\n鳩\tkau1\t「鳩gau1」的異讀字\n鳶\tjyun1\t老鷹\n鳶\tjyun4\t「鳶jyun1」的異讀字\n鴉\taa1\t鴉片，烏鴉，鴉雀無聲，寒鴉\n鴉\tngaa1\t「鴉aa1」的異讀字\n鴀\tfau2\t「鴀fau4」的異讀字\n鴀\tfau4\t鳺鴀(鵓鳩的別名)\n鴨\taap3\t鴨綠，野鴨\n鴨\tngaap3\t「鴨aap3」的異讀字\n鴛\tjin1\t「鴛jyun1」的異讀字\n鴛\tjyun1\t鴛侶，鴛鴦，鴛鴦折頸\n鴥\twat6\t疾飛的樣子\n鴥\tjyut6\t「鴥wat6」的異讀字\n鴳\taan3\t同「鷃」字\n鴳\tngaan3\t「鴳aan3」的異讀字\n鴿\tgaap3\t「鴿gap3」的異讀字\n鴿\tgap3\t鴿子，鴿派，白鴿，信鴿\n鵃\tzaau1\t「鵃zau1」的異讀字\n鵃\tzau1\t鶻鵃\n鵟\tkong4\t「鵟kwong4」的異讀字\n鵟\tkwong4\t(1)即貓頭鷹；(2)鷹科鳥類之一\n鵪\tam1\t鵪鶉\n鵪\tngam1\t「鵪am1」的異讀字\n鵯\tpat1\t鵯鶋(即寒鴉)，鵯鵊(即催明鳥)\n鵯\tbei1\t「鵯pat1」的異讀字\n鵲\tcoek3\t鵲報，鵲語，鵲噪，鵲巢鳩佔，喜鵲，聲名鵲起，鴉鵲無聲\n鵲\tzoek3\t「鵲coek3」的異讀字\n鶉\tceon1\t「鶉seon4」的異讀字\n鶉\tseon4\t鵪鶉，鶉衣\n鶪\tgwik1\t鳥名\n鶪\tkyut3\t「鶪gwik1」的異讀字\n鶡\thot3\t鶡冠(漢代武官所戴的帽子，後喻遁世隱士)，鶡冠子(書名)鳥名，指古時一種善鬥的鳥類\n鶡\thot6\t「鶡hot3」的異讀字\n鶯\tang1\t鶯花，鶯歌，鶯飛草長，鶯鶯燕燕，流鶯\n鶯\tngang1\t「鶯ang1」的異讀字\n鷂\tjiu2\t「鷂jiu6」的異讀字\n鷂\tjiu4\t「鷂jiu6」的異讀字\n鷂\tjiu6\t鷂鷹，紙鷂\n鶺\tzek3\t「鶺zik3」的異讀字\n鶺\tzik3\t鶺鴒\n鷗\tau1\t海鷗\n鷗\tngau1\t「鷗au1」的異讀字\n鷩\tbai6\t「鷩bit3」的異讀字\n鷩\tbit3\t鷩冕，鷩衣\n鷖\tai1\t「鷖ji1」的異讀字\n鷖\tngai1\t「鷖ji1」的異讀字\n鷖\tji1\t鳧鷖(野鴨之小者也，見《一切經音義》)鷗\n鷚\tlau4\t「鷚lau6」的異讀字\n鷚\tlau6\t百靈鳥\n鷸\twat6\t鷸蚌相爭，鷸鴕一種鳥類，嘴腳均長\n鷸\tleot6\t「鷸wat6」的異讀字\n鷸\tneot6\t「鷸wat6」的異讀字\n鷸\tjyut6\t「鷸wat6」的異讀字\n鷣\tjam4\t鷂的別名\n鷣\tjiu6\t「鷣jam4」的異讀字\n鷤\ttaan4\t鸛鷤(怪鳥名)\n鷤\tdai6\t「鷤tai4」的異讀字\n鷤\ttai4\t杜鵑鳥的別名\n鹵\tlou5\t鹵莽，鹵素(halogens)，粗鹵\n鹹\thaam4\t鹹魚，鹹水，鹹菜，鹹肉\n鹼\tgaan2\t鹼性，鹼液\n鹽\tjim4\t鹽水，鹽分，鹽酸，鹽湖，鹽田\n鹺\tco1\t「鹺co4」的異讀字\n鹺\tco4\t鹺使，鹺務\n麗\tlai6\t麗澤，美麗，壯麗，附麗，亮麗，高麗(韓國古稱謂之一)\n麗\tlei4\t魚麗(詩經小雅篇名)\n麩\tfu1\t麩子，麩皮\n麵\tmin6\t麵包，麵粉，麵條，麵店，麵團\n麷\tfung1\t煮麥\n麥\tmaak6\t「麥mak6」的異讀字\n麥\tmak6\t麥秋，麥浪，麥飯豆羹，麥穗兩歧，大麥，小麥，燕麥\n麴\tguk1\t「麴kuk1」的異讀字\n麴\tkuk1\t酒麴，麴車\n麼\tmaa1\t「麼mo1」的異讀字\n麼\tmo1\t那麼，甚麼，這麼\n麼\tmo5\t「麼mo1」的異讀字\n黃\twong4\t黃昏，青黃不接，信口雌黃，蛋黃，金黃，硫黃，明日黃花，面黃肌瘦，黃粱夢斷，牝牡驪黃，飛黃騰達，黃袍，直搗黃龍\n黌\twaang4\t「黌hung4」的異讀字\n黌\thung4\t黌門，黌宮\n點\tdim2\t點滴，斑點，畫龍點睛，點心，點頭，點名，點燃，點綴，點收，點歌，點化，點穴，檢點，起點，提點，點石成金\n黲\tcaam2\t黲淡，黲黷(昏暗不清)淺青黑色\n黶\tjim2\t黶子，黶翳\n黷\tduk6\t窮兵黷武，干黷(冒犯)\n黨\tdong2\t黨部，黨員，黨內，黨籍，黨政，黨派，黨務，黨羽，黨證，黨委，黨法，黨義，黨徽\n黨\ttong2\t(1)通「儻」字；(2)通「讜」字\n黴\tmei4\t黴菌\n黴\tmui4\t「黴mei4」的異讀字\n黿\tjyun4\t黿魚\n鼉\tto4\t鼉龍，蛟鼉，鼉皮鼓，鼉更爬蟲綱鼉科動物，產於長江下游､太湖一帶，或稱為鼉龍､靈鼉､豬婆龍､揚子鱷等。\n黽\tmaang5\t(1)部首；(2)一種似青蛙的動物\n黽\tman5\t黽勉(努力)，黽池(古地名)勤勉\n黽\tmin5\t「黽man5」的異讀字，用於「黽池」一詞\n鼕\tdung1\t鼓聲\n鼕\ttung4\t「鼕dung1」的異讀字\n鼴\tjin2\t鼴鼠\n齇\tzaa1\t同「皻」字\n齋\tzaai1\t齋菜，書齋，齋戒沐浴，齋醮，齋堂，齋供，打齋，齋心滌慮\n齏\tzai1\t齏粉\n齊\tzaai1\t同「齋」字\n齊\tcai4\t齊全，整齊，百花齊放，齊名，齊集，齊備，齊大非耦，齊心協力，白髮齊眉，齊頭並進，等量齊觀，並駕齊驅，良莠不齊，洪福齊天，金鼓齊鳴，見賢思齊\n齊\tzai6\t火齊珠\n齊\tzi1\t齊衰，齊盛\n齎\tzai1\t齎恨，齎發，齎志而沒\n齎\tzi1\t「齎zai1」的異讀字\n齒\tci2\t齒輪，牙齒，齒冷，齒列，齒遇，齒班，齧齒科，鋸齒，何足掛齒，馬齒徒增\n齔\tcan3\t齠齔，童齔\n齗\tngan4\t牙齗\n齣\tceot1\t齣子，齣兒，一齣戲\n齡\tling4\t年齡，芳齡\n齠\ttiu4\t齠年，齠齔\n齪\tcuk1\t齪齪，齷齪，打齪\n齬\tjyu5\t齟齬\n齯\tngai4\t齯齒\n齲\tgeoi2\t齲齒\n齶\tngok6\t齶裂，軟齶\n齾\tngaa3\t缺齾，疵齾，高城齾齾\n齴\tngaan5\t棧齴巉嶮\n齴\tjin6\t同「齞」字，意指牙齒外露\n齕\tngaat6\t「齕hat6」的異讀字\n齕\that6\t齮齕\n齙\tbaau6\t齙牙\n齙\tpaau4\t「齙baau6」的異讀字\n齟\tzeoi2\t齟齬\n齟\tzeoi6\t「齟zeoi2」的異讀字\n齧\tngaat6\t「齧jit6」的異讀字\n齧\tjit3\t「齧jit6」的異讀字\n齧\tjit6\t齧臂，蟲咬鼠齧，齧雪餐氈，齧合，齧齒動物，窮鼠齧貓；(1)啃、咬；(2)侵蝕；(3)缺口\n齧\tngit6\t「齧jit6」的異讀字\n齜\tci1\t「齜zi1」的異讀字\n齜\tzi1\t齜牙咧嘴\n齷\tak1\t齷齪\n齷\tngak1\t「齷ak1」的異讀字\n齦\than2\t咬嚙\n齦\tngan4\t牙齦，齒齦，齦齶，齦溝\n齦\thang2\t「齦han2」的異讀字\n齰\tzaa6\t齰齖(牙齒不齊合)\n齰\tzaak3\t「齰zaak6」的異讀字\n齰\tzaak6\t齰舌(咬舌)\n龍\tlung4\t龍舟，龍門，龍華，龍女，龍子，龍穴，龍船，龍爭虎鬥，龍鳳呈祥，龍吟虎嘯\n龔\tgung1\t姓氏\n龕\tham1\t神龕，壁龕，佛龕\n龐\tpong4\t龐大，龐雜，龐然大物\n龐\tlung4\t「龐pong4」的異讀字\n龑\tjim2\t人名用字\n龑\tjin2\t「龑jim2」的異讀字\n龜\tgwai1\t龜年，龜板，龜卜，龜跌，龜鑒，龜齡鶴算，龜鶴遐壽，烏龜\n龜\tgwan1\t龜裂，不龜藥，龜坼，不龜手藥\n龜\tgau1\t龜茲(古西域國名)\n龜\tkau1\t「龜gau1」的異讀字\n墻\tcoeng4\t同「牆」字\n嫺\thaan4\t嫺熟，嫺靜\n粧\tzong1\t同「妝」字\n裏\tlei5\t「裏leoi5」的異讀字\n裏\tleoi5\t表裏，裏應外合\n銹\tsau3\t同「鏽」字\n喺\thai6\t同「系」字\n\n##额外补充\n嘅\tge1\t粤语用字\n哋\tdei6\t方言，用于人称代词后，相当于“们”：我哋\n哋\tdi4\t暂无解释\n嫲\tmaa4\t古同“嬷”（a.母亲的俗称。b.老年妇女的通称）\n嚟\tlai2\t暂无解释\n嚟\tlai4\t暂无解释\n嚟\tlei4\t暂无解释\n噏\tap1\t暂无解释\n噏\tngap1\t暂无解释\n咗\tzo2\t暂无解释\n着\tzoek3\t接触，挨上：着边。上不着天，下不着地。 感受，受到：着凉。着急。着忙。着风。着迷。 使，派，用：别着手摸。 燃烧，亦指灯发光：着火。灯着了。 入睡：躺下就着。 用在动词后，表示达到目的或有了结果：打着了。没见着。 灭\n着\tzoek6\t暂无解释\n着\tzyu3\t下棋时下一子或走一步：着法。着数。一着儿好棋。 计策，办法：高着儿。没着儿了。 放，搁进去：着点儿盐。 应答声，表示同意：这话着哇！着，你说得真对！ 灭\n攞\tlo1\t暂无解释\n攞\tlo2\t暂无解释\n嗰\tgo2\t暂无解释\n嗰\tgo3\t暂无解释\n嘢\tje5\t暂无解释\n瞓\tfan3\t暂无解释\n吖\taa1\t暂无解释\n啫\tze1\t古同“嗜”\n啫\tze2\t暂无解释\n啫\tze3\t暂无解释\n啫\tzek1\t暂无解释\n啫\tzoe1\t暂无解释\n攰\tgui6\t暂无解释\n氹\ttam5\t同“凼”。\n冚\tkam2\t方言，盖：把被冚好。\n冚\tham6\t暂无解释\n冚\tgam2\t暂无解释\n啱\tngaam1\t方言，合；合适：呢种款式啱心水（这种款式合她的心意）。我讲两句，唔知啱唔啱（我说两句，不知道合适不合适）。 方言，对；行；可以：你讲得啱（你说得对）。啱啦（行，可以）。 方言，恰巧；刚好：佢啱撞到个老友（他恰巧碰到一个老朋友）。 才；刚：啱食完饭（刚吃完饭）。 方言；合得来：佢同啲同学好啱（他和同学们很合得来）。见《简明香港方言词典》。\n麽\tmo1\t暂无解释\n嘞\tlaak3\t嘞 助词，与“喽1”相似：别玩了，咱们回家嘞！\n嘞\tlak3\t暂无解释\n啲\tdi1\t暂无解释\n冧\tlam1\t方言，花蕾。 方言，哄，用好话哄孩子按大人意图行事：“或行动使小孩就范：“唔得喝，要冧嚇佢”（大声责备不行，得哄着他点）。 方言，倒塌。\n冧\tlam3\t暂无解释\n冧\tnam1\t暂无解释\n惗\tnam2\t爱,相忆。\n嗻\tsyu3\t抢白，用言语阻止别人说话。 旧时仆役对主人或宾客的应诺声，表示“是”之意。\n抦\tbing2\t古同“秉”，持，拿着。\n囖\tlo1\t暂无解释\n嗮\tsaai3\t口气字\n嘥\tsaai1\t方言，浪费；糟蹋：返一次工就嘥好多钱。又嘥咗（了）一部车。 方言，错过（机会）：咁好嘅机会嘥咗（这么好的机会给错过了）。 方言，故意贬低：嘥到佢一钱不值（把他贬得一钱不值）。\n嘥\tsaai3\t暂无解释\n乸\tnaa2\t暂无解释\n憇\thei3\t暂无解释\n唓\tce1\t传说中守庙门的鬼，东边门的称“唓”，西边门的称“嗻”。zh?）〕形容厉害；凶猛。\n甴\tgaat6\t古同“由”。\n曱\tzaat6\t暂无解释\n走\tzau2\t行：走路。走步。 往来：走亲戚。 移动：走向（延伸的方向）。走笔（很快地写）。钟表不走了。 往来运送：走信。走私。 离去：走开。刚走。出走。 经过：走账。走内线。走后门。 透漏出去，超越范围：走气（漏气）。 失去原样：走形。走样。 古代指奔跑：走马。不胫而走。 仆人，“我”的谦辞：牛马走（当牛作马的仆人，如“太史公走走走。”）。\n嚿\tgau6\t暂无解释\n嗱\tnaa4\t暂无解释\n揸\tzaa1\t暂无解释\n揸\tzaa2\t暂无解释\n實\tsat6\t暂无解释\n啩\tgwaa3\t暂无解释\n嚤\tmo1\t暂无解释\n綿\tmin4\t见“绵”。\n埗\tbou4\t暂无解释\n埗\tbou6\t暂无解释\n唞\ttau2\t方言，歇；休息：唞一阵（歇一会）。食完饭唞吓（吃了饭休息一下）。\n関\tgwaan1\t同“关”。\n爲\twai4\t暂无解释\n爲\twai6\t均见“为”。\n啉\tlam1\t古代称饮酒―巡为啉。\n漱\tsou3\t暂无解释\n漱\tsau3\t暂无解释\n餸\tsung3\t方言，下饭的菜：“白饭虽有了，餸却没有。”\n枧\tgaan2\tjiǎn 同“笕”。 栓。 棺衣。 肥皂：番枧。香枧。\n踭\tzaang1\t方言，脚跟。 使劲，用力。\n踭\tzang1\t暂无解释\n嗽\tsau2\t〔咳（ k?）嗽〕见“咳1”。\n嗽\tsau3\t暂无解释\n孜\tzi1\t暂无解释\n噍\tziu6\t吃东西，嚼：噍类（尚生存的人）。倒（d僶 ）噍（反刍，亦作“倒嚼”）。\n喐\tjuk1\tguó 形容话多。\n揞\tngam2\t用手指把药面按在伤口上：快在伤口上揞些消炎粉。 用手掩盖，藏。\n摱\tmaan1\t引。\n掹\tmaang1\t方言，拉，拽：掹掹扯扯。佢掹甩咗我只衫纽（他拽掉了我一个衣服扣子）。 方言，拔：掹草。鸭尾吔毛仲味掹干净（鸭屁股上的毛还没拔干净）。\n掹\tmang1\t暂无解释\n掹\tmang3\t暂无解释\n孭\tme1\t暂无解释\n凼\ttam5\t塘，水坑：水凼。粪凼。凼肥（中国南方一些地区把垃圾、树叶、杂草、粪尿等放在坑里沤制成的肥料）。\n馀\tjyu4\tyú 见“余” 姓。\n螆\tzi1\t古书上说的一种像龟的动物，背壳分为十余枚，相互密接，与人的掌纹相似，被称为“螆蛦掌”。亦作“兹夷”。\n绵\tmin4\tmián 蚕丝结成的片或团，供絮衣被、装墨盒等用：丝绵。绵绸。绵里藏针。 像丝绵那样柔软或薄弱：绵薄。绵软。绵力。 像丝绵那样延续不断：绵延。绵联。绵长。绵亘。连绵。 性情温和：他平时挺绵。\n实\tsat6\tshí 充满：实心。充实。虚实。 符合客观情况，真，真诚：实话。实惠。实际（真实情况）。实践（实行；履行）。实体。实情。实施。实数。实事求是。名实相符。 植物结的果：果实。开花结实。 富足：殷实。富实。 真名虚\n芪\tkei4\t暂无解释\n脷\tlei6\t暂无解释\n喼\tgep1\t暂无解释\n喼\tgip1\t暂无解释\n喼\tkep1\t暂无解释\n喼\tkip1\t暂无解释\n嫐\tnat1\t戏弄。\n氽\ttan2\t方言，漂浮：木头在水上氽。\n嚡\thaai4\t方言，涩，粗糙：条脷嚡（舌头很涩）。呢块板未刨过大嚡喇（这块木坂没刨过太糙了）。\n踎\tmau1\t方言，蹲：佢哋习惯踎往食嘅（他们习惯蹲着吃）。 方言（在某处）混日子，找生活：呢排系边度踎（这段在哪混）\n劏\ttong1\t方言，宰杀：劏猪。劏羊。劏鸭。\n嘚\tdak1\t暂无解释\n聼\tting1\t暂无解释\n噖\tjam4\t暂无解释";

/***/ }
/******/ ]);